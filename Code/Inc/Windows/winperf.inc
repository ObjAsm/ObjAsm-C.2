;Include file created by h2incX, Version B.01.01, 19/04/2018 10:49
;(C) 2018-today by Biterider, 2005-2009 by Japheth
;Source file: '\ObjAsm\Projects\h2IncX\header\winperf.h', last modified: 19/04/2018 10:43
;Creation parameters: 

include winapifamily.inc
ifndef _WINPERF_
  _WINPERF_ equ <>
  if _MSC_VER gt 1000
  endif
  if _MSC_VER ge 1200
  endif
  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
    include pshpack8.inc
    PERF_DATA_VERSION equ 1
    PERF_DATA_REVISION equ 1
    PERF_DATA_BLOCK struct
      Signature WCHAR 4 dup (?)
      LittleEndian DWORD ?
      Version DWORD ?
      Revision DWORD ?
      TotalByteLength DWORD ?
      HeaderLength DWORD ?
      NumObjectTypes DWORD ?
      DefaultObject LONG ?
      SystemTime SYSTEMTIME <>
      PerfTime LARGE_INTEGER <>
      PerfFreq LARGE_INTEGER <>
      PerfTime100nSec LARGE_INTEGER <>
      SystemNameLength DWORD ?
      SystemNameOffset DWORD ?
    PERF_DATA_BLOCK ends
    _PERF_DATA_BLOCK typedef PERF_DATA_BLOCK
    PPERF_DATA_BLOCK typedef ptr PERF_DATA_BLOCK
    
    PERF_OBJECT_TYPE struct
      TotalByteLength DWORD ?
      DefinitionLength DWORD ?
      HeaderLength DWORD ?
      ObjectNameTitleIndex DWORD ?
      ifdef _WIN64
        ObjectNameTitle DWORD ?
      else
        ObjectNameTitle LPWSTR ?
      endif
      ObjectHelpTitleIndex DWORD ?
      ifdef _WIN64
        ObjectHelpTitle DWORD ?
      else
        ObjectHelpTitle LPWSTR ?
      endif
      DetailLevel DWORD ?
      NumCounters DWORD ?
      DefaultCounter LONG ?
      NumInstances LONG ?
      CodePage DWORD ?
      PerfTime LARGE_INTEGER <>
      PerfFreq LARGE_INTEGER <>
    PERF_OBJECT_TYPE ends
    _PERF_OBJECT_TYPE typedef PERF_OBJECT_TYPE
    PPERF_OBJECT_TYPE typedef ptr PERF_OBJECT_TYPE
    
    PERF_NO_INSTANCES equ -1
    PERF_SIZE_DWORD equ 00000000h
    PERF_SIZE_LARGE equ 00000100h
    PERF_SIZE_ZERO equ 00000200h
    PERF_SIZE_VARIABLE_LEN equ 00000300h
    PERF_TYPE_NUMBER equ 00000000h
    PERF_TYPE_COUNTER equ 00000400h
    PERF_TYPE_TEXT equ 00000800h
    PERF_TYPE_ZERO equ 00000C00h
    PERF_NUMBER_HEX equ 00000000h
    PERF_NUMBER_DECIMAL equ 00010000h
    PERF_NUMBER_DEC_1000 equ 00020000h
    PERF_COUNTER_VALUE equ 00000000h
    PERF_COUNTER_RATE equ 00010000h
    PERF_COUNTER_FRACTION equ 00020000h
    PERF_COUNTER_BASE equ 00030000h
    PERF_COUNTER_ELAPSED equ 00040000h
    PERF_COUNTER_QUEUELEN equ 00050000h
    PERF_COUNTER_HISTOGRAM equ 00060000h
    PERF_COUNTER_PRECISION equ 00070000h
    PERF_TEXT_UNICODE equ 00000000h
    PERF_TEXT_ASCII equ 00010000h
    PERF_TIMER_TICK equ 00000000h
    PERF_TIMER_100NS equ 00100000h
    PERF_OBJECT_TIMER equ 00200000h
    PERF_DELTA_COUNTER equ 00400000h
    PERF_DELTA_BASE equ 00800000h
    PERF_INVERSE_COUNTER equ 01000000h
    PERF_MULTI_COUNTER equ 02000000h
    PERF_DISPLAY_NO_SUFFIX equ 00000000h
    PERF_DISPLAY_PER_SEC equ 10000000h
    PERF_DISPLAY_PERCENT equ 20000000h
    PERF_DISPLAY_SECONDS equ 30000000h
    PERF_DISPLAY_NOSHOW equ 40000000h
    PERF_COUNTER_COUNTER equ <(PERF_SIZE_DWORD or PERF_TYPE_COUNTER or PERF_COUNTER_RATE or PERF_TIMER_TICK or PERF_DELTA_COUNTER or PERF_DISPLAY_PER_SEC)>
    PERF_COUNTER_TIMER equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_RATE or PERF_TIMER_TICK or PERF_DELTA_COUNTER or PERF_DISPLAY_PERCENT)>
    PERF_COUNTER_QUEUELEN_TYPE equ <(PERF_SIZE_DWORD or PERF_TYPE_COUNTER or PERF_COUNTER_QUEUELEN or PERF_TIMER_TICK or PERF_DELTA_COUNTER or PERF_DISPLAY_NO_SUFFIX)>
    PERF_COUNTER_LARGE_QUEUELEN_TYPE equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_QUEUELEN or PERF_TIMER_TICK or PERF_DELTA_COUNTER or PERF_DISPLAY_NO_SUFFIX)>
    PERF_COUNTER_100NS_QUEUELEN_TYPE equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_QUEUELEN or PERF_TIMER_100NS or PERF_DELTA_COUNTER or PERF_DISPLAY_NO_SUFFIX)>
    PERF_COUNTER_OBJ_TIME_QUEUELEN_TYPE equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_QUEUELEN or PERF_OBJECT_TIMER or PERF_DELTA_COUNTER or PERF_DISPLAY_NO_SUFFIX)>
    PERF_COUNTER_BULK_COUNT equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_RATE or PERF_TIMER_TICK or PERF_DELTA_COUNTER or PERF_DISPLAY_PER_SEC)>
    PERF_COUNTER_TEXT equ <(PERF_SIZE_VARIABLE_LEN or PERF_TYPE_TEXT or PERF_TEXT_UNICODE or PERF_DISPLAY_NO_SUFFIX)>
    PERF_COUNTER_RAWCOUNT equ <(PERF_SIZE_DWORD or PERF_TYPE_NUMBER or PERF_NUMBER_DECIMAL or PERF_DISPLAY_NO_SUFFIX)>
    PERF_COUNTER_LARGE_RAWCOUNT equ <(PERF_SIZE_LARGE or PERF_TYPE_NUMBER or PERF_NUMBER_DECIMAL or PERF_DISPLAY_NO_SUFFIX)>
    PERF_COUNTER_RAWCOUNT_HEX equ <(PERF_SIZE_DWORD or PERF_TYPE_NUMBER or PERF_NUMBER_HEX or PERF_DISPLAY_NO_SUFFIX)>
    PERF_COUNTER_LARGE_RAWCOUNT_HEX equ <(PERF_SIZE_LARGE or PERF_TYPE_NUMBER or PERF_NUMBER_HEX or PERF_DISPLAY_NO_SUFFIX)>
    PERF_SAMPLE_FRACTION equ <(PERF_SIZE_DWORD or PERF_TYPE_COUNTER or PERF_COUNTER_FRACTION or PERF_DELTA_COUNTER or PERF_DELTA_BASE or PERF_DISPLAY_PERCENT)>
    PERF_SAMPLE_COUNTER equ <(PERF_SIZE_DWORD or PERF_TYPE_COUNTER or PERF_COUNTER_RATE or PERF_TIMER_TICK or PERF_DELTA_COUNTER or PERF_DISPLAY_NO_SUFFIX)>
    PERF_COUNTER_NODATA equ <(PERF_SIZE_ZERO or PERF_DISPLAY_NOSHOW)>
    PERF_COUNTER_TIMER_INV equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_RATE or PERF_TIMER_TICK or PERF_DELTA_COUNTER or PERF_INVERSE_COUNTER or PERF_DISPLAY_PERCENT)>
    PERF_SAMPLE_BASE equ (PERF_SIZE_DWORD or PERF_TYPE_COUNTER or PERF_COUNTER_BASE or PERF_DISPLAY_NOSHOW or 00000001h)
    PERF_AVERAGE_TIMER equ <(PERF_SIZE_DWORD or PERF_TYPE_COUNTER or PERF_COUNTER_FRACTION or PERF_DISPLAY_SECONDS)>
    PERF_AVERAGE_BASE equ (PERF_SIZE_DWORD or PERF_TYPE_COUNTER or PERF_COUNTER_BASE or PERF_DISPLAY_NOSHOW or 00000002h)
    PERF_AVERAGE_BULK equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_FRACTION or PERF_DISPLAY_NOSHOW)>
    PERF_OBJ_TIME_TIMER equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_RATE or PERF_OBJECT_TIMER or PERF_DELTA_COUNTER or PERF_DISPLAY_PERCENT)>
    PERF_100NSEC_TIMER equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_RATE or PERF_TIMER_100NS or PERF_DELTA_COUNTER or PERF_DISPLAY_PERCENT)>
    PERF_100NSEC_TIMER_INV equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_RATE or PERF_TIMER_100NS or PERF_DELTA_COUNTER or PERF_INVERSE_COUNTER or PERF_DISPLAY_PERCENT)>
    PERF_COUNTER_MULTI_TIMER equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_RATE or PERF_DELTA_COUNTER or PERF_TIMER_TICK or PERF_MULTI_COUNTER or PERF_DISPLAY_PERCENT)>
    PERF_COUNTER_MULTI_TIMER_INV equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_RATE or PERF_DELTA_COUNTER or PERF_MULTI_COUNTER or PERF_TIMER_TICK or PERF_INVERSE_COUNTER or PERF_DISPLAY_PERCENT)>
    PERF_COUNTER_MULTI_BASE equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_BASE or PERF_MULTI_COUNTER or PERF_DISPLAY_NOSHOW)>
    PERF_100NSEC_MULTI_TIMER equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_DELTA_COUNTER or PERF_COUNTER_RATE or PERF_TIMER_100NS or PERF_MULTI_COUNTER or PERF_DISPLAY_PERCENT)>
    PERF_100NSEC_MULTI_TIMER_INV equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_DELTA_COUNTER or PERF_COUNTER_RATE or PERF_TIMER_100NS or PERF_MULTI_COUNTER or PERF_INVERSE_COUNTER or PERF_DISPLAY_PERCENT)>
    PERF_RAW_FRACTION equ <(PERF_SIZE_DWORD or PERF_TYPE_COUNTER or PERF_COUNTER_FRACTION or PERF_DISPLAY_PERCENT)>
    PERF_LARGE_RAW_FRACTION equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_FRACTION or PERF_DISPLAY_PERCENT)>
    PERF_RAW_BASE equ (PERF_SIZE_DWORD or PERF_TYPE_COUNTER or PERF_COUNTER_BASE or PERF_DISPLAY_NOSHOW or 00000003h)
    PERF_LARGE_RAW_BASE equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_BASE or PERF_DISPLAY_NOSHOW)>
    PERF_ELAPSED_TIME equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_ELAPSED or PERF_OBJECT_TIMER or PERF_DISPLAY_SECONDS)>
    PERF_COUNTER_HISTOGRAM_TYPE equ 80000000h
    PERF_COUNTER_DELTA equ <(PERF_SIZE_DWORD or PERF_TYPE_COUNTER or PERF_COUNTER_VALUE or PERF_DELTA_COUNTER or PERF_DISPLAY_NO_SUFFIX)>
    PERF_COUNTER_LARGE_DELTA equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_VALUE or PERF_DELTA_COUNTER or PERF_DISPLAY_NO_SUFFIX)>
    PERF_PRECISION_SYSTEM_TIMER equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_PRECISION or PERF_TIMER_TICK or PERF_DELTA_COUNTER or PERF_DISPLAY_PERCENT)>
    PERF_PRECISION_100NS_TIMER equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_PRECISION or PERF_TIMER_100NS or PERF_DELTA_COUNTER or PERF_DISPLAY_PERCENT)>
    PERF_PRECISION_OBJECT_TIMER equ <(PERF_SIZE_LARGE or PERF_TYPE_COUNTER or PERF_COUNTER_PRECISION or PERF_OBJECT_TIMER or PERF_DELTA_COUNTER or PERF_DISPLAY_PERCENT)>
    PERF_PRECISION_TIMESTAMP equ <PERF_LARGE_RAW_BASE>
    PERF_DETAIL_NOVICE equ 100
    PERF_DETAIL_ADVANCED equ 200
    PERF_DETAIL_EXPERT equ 300
    PERF_DETAIL_WIZARD equ 400
    PERF_COUNTER_DEFINITION struct
      ByteLength DWORD ?
      CounterNameTitleIndex DWORD ?
      ifdef _WIN64
        CounterNameTitle DWORD ?
      else
        CounterNameTitle LPWSTR ?
      endif
      CounterHelpTitleIndex DWORD ?
      ifdef _WIN64
        CounterHelpTitle DWORD ?
      else
        CounterHelpTitle LPWSTR ?
      endif
      DefaultScale LONG ?
      DetailLevel DWORD ?
      CounterType DWORD ?
      CounterSize DWORD ?
      CounterOffset DWORD ?
    PERF_COUNTER_DEFINITION ends
    _PERF_COUNTER_DEFINITION typedef PERF_COUNTER_DEFINITION
    PPERF_COUNTER_DEFINITION typedef ptr PERF_COUNTER_DEFINITION
    
    PERF_NO_UNIQUE_ID equ -1
    PERF_INSTANCE_DEFINITION struct
      ByteLength DWORD ?
      ParentObjectTitleIndex DWORD ?
      ParentObjectInstance DWORD ?
      UniqueID LONG ?
      NameOffset DWORD ?
      NameLength DWORD ?
    PERF_INSTANCE_DEFINITION ends
    _PERF_INSTANCE_DEFINITION typedef PERF_INSTANCE_DEFINITION
    PPERF_INSTANCE_DEFINITION typedef ptr PERF_INSTANCE_DEFINITION
    
    PERF_COUNTER_BLOCK struct
      ByteLength DWORD ?
    PERF_COUNTER_BLOCK ends
    _PERF_COUNTER_BLOCK typedef PERF_COUNTER_BLOCK
    PPERF_COUNTER_BLOCK typedef ptr PERF_COUNTER_BLOCK
    
    PERF_QUERY_OBJECTS equ (80000000h)
    PERF_QUERY_GLOBAL equ (80000001h)
    PERF_QUERY_COSTLY equ (80000002h)
    TYPE_PM_OPEN_PROC typedef proto WIN_STD_CALL_CONV :LPWSTR
    PM_OPEN_PROC typedef ptr TYPE_PM_OPEN_PROC
    TYPE_PM_COLLECT_PROC typedef proto WIN_STD_CALL_CONV :LPWSTR, :ptr LPVOID, :LPDWORD, :LPDWORD
    PM_COLLECT_PROC typedef ptr TYPE_PM_COLLECT_PROC
    TYPE_PM_CLOSE_PROC typedef proto WIN_STD_CALL_CONV
    PM_CLOSE_PROC typedef ptr TYPE_PM_CLOSE_PROC
    TYPE_PM_QUERY_PROC typedef proto WIN_STD_CALL_CONV :LPDWORD, :ptr LPVOID, :LPDWORD, :LPDWORD
    PM_QUERY_PROC typedef ptr TYPE_PM_QUERY_PROC
    if ((Defined(_WIN32_WINDOWS) and _WIN32_WINDOWS ge 0501h) or _WIN32_WINNT ge 0501h or (Defined(NTDDI_VERSION) and NTDDI_VERSION ge NTDDI_WINXP))
      MAX_PERF_OBJECTS_IN_QUERY_FUNCTION equ 64
      WINPERF_LOG_NONE equ 0
      WINPERF_LOG_USER equ 1
      WINPERF_LOG_DEBUG equ 2
      WINPERF_LOG_VERBOSE equ 3
    else
      MAX_PERF_OBJECTS_IN_QUERY_FUNCTION equ 8
    endif
    include poppack.inc
  endif
  if _MSC_VER ge 1200
  endif
endif

