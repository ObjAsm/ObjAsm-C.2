;Include file created by h2incX, Version B.01.01, 10/09/2018 22:03
;(C) 2018-today by Biterider, 2005-2009 by Japheth
;Source file: '\ObjAsm\Projects\h2IncX\header\mcx.h', last modified: 19/04/2018 10:43
;Creation parameters: 

ifndef _MCX_H_
  _MCX_H_ equ <>
  if _MSC_VER gt 1000
  endif
  if _MSC_VER ge 1200
  endif
  MODEMDEVCAPS struct
    dwActualSize DWORD ?
    dwRequiredSize DWORD ?
    dwDevSpecificOffset DWORD ?
    dwDevSpecificSize DWORD ?
    dwModemProviderVersion DWORD ?
    dwModemManufacturerOffset DWORD ?
    dwModemManufacturerSize DWORD ?
    dwModemModelOffset DWORD ?
    dwModemModelSize DWORD ?
    dwModemVersionOffset DWORD ?
    dwModemVersionSize DWORD ?
    dwDialOptions DWORD ?
    dwCallSetupFailTimer DWORD ?
    dwInactivityTimeout DWORD ?
    dwSpeakerVolume DWORD ?
    dwSpeakerMode DWORD ?
    dwModemOptions DWORD ?
    dwMaxDTERate DWORD ?
    dwMaxDCERate DWORD ?
    abVariablePortion BYTE 1 dup (?)
  MODEMDEVCAPS ends

  _MODEMDEVCAPS typedef MODEMDEVCAPS
  PMODEMDEVCAPS typedef ptr MODEMDEVCAPS
  LPMODEMDEVCAPS typedef ptr MODEMDEVCAPS
  
  MODEMSETTINGS struct
    dwActualSize DWORD ?
    dwRequiredSize DWORD ?
    dwDevSpecificOffset DWORD ?
    dwDevSpecificSize DWORD ?
    dwCallSetupFailTimer DWORD ?
    dwInactivityTimeout DWORD ?
    dwSpeakerVolume DWORD ?
    dwSpeakerMode DWORD ?
    dwPreferredModemOptions DWORD ?
    dwNegotiatedModemOptions DWORD ?
    dwNegotiatedDCERate DWORD ?
    abVariablePortion BYTE 1 dup (?)
  MODEMSETTINGS ends

  _MODEMSETTINGS typedef MODEMSETTINGS
  PMODEMSETTINGS typedef ptr MODEMSETTINGS
  LPMODEMSETTINGS typedef ptr MODEMSETTINGS
  
  DIALOPTION_BILLING equ 00000040h
  DIALOPTION_QUIET equ 00000080h
  DIALOPTION_DIALTONE equ 00000100h
  MDMVOLFLAG_LOW equ 00000001h
  MDMVOLFLAG_MEDIUM equ 00000002h
  MDMVOLFLAG_HIGH equ 00000004h
  MDMVOL_LOW equ 00000000h
  MDMVOL_MEDIUM equ 00000001h
  MDMVOL_HIGH equ 00000002h
  MDMSPKRFLAG_OFF equ 00000001h
  MDMSPKRFLAG_DIAL equ 00000002h
  MDMSPKRFLAG_ON equ 00000004h
  MDMSPKRFLAG_CALLSETUP equ 00000008h
  MDMSPKR_OFF equ 00000000h
  MDMSPKR_DIAL equ 00000001h
  MDMSPKR_ON equ 00000002h
  MDMSPKR_CALLSETUP equ 00000003h
  MDM_COMPRESSION equ 00000001h
  MDM_ERROR_CONTROL equ 00000002h
  MDM_FORCED_EC equ 00000004h
  MDM_CELLULAR equ 00000008h
  MDM_FLOWCONTROL_HARD equ 00000010h
  MDM_FLOWCONTROL_SOFT equ 00000020h
  MDM_CCITT_OVERRIDE equ 00000040h
  MDM_SPEED_ADJUST equ 00000080h
  MDM_TONE_DIAL equ 00000100h
  MDM_BLIND_DIAL equ 00000200h
  MDM_V23_OVERRIDE equ 00000400h
  MDM_DIAGNOSTICS equ 00000800h
  MDM_MASK_BEARERMODE equ 0000f000h
  MDM_SHIFT_BEARERMODE equ 12
  MDM_MASK_PROTOCOLID equ 000f0000h
  MDM_SHIFT_PROTOCOLID equ 16
  MDM_MASK_PROTOCOLDATA equ 0ff00000h
  MDM_SHIFT_PROTOCOLDATA equ 20
  MDM_MASK_PROTOCOLINFO equ <(MDM_MASK_PROTOCOLID or MDM_MASK_PROTOCOLDATA)>
  MDM_SHIFT_PROTOCOLINFO equ <MDM_SHIFT_PROTOCOLID>
  MDM_MASK_EXTENDEDINFO equ <(MDM_MASK_BEARERMODE or MDM_MASK_PROTOCOLINFO)>
  MDM_SHIFT_EXTENDEDINFO equ <MDM_SHIFT_BEARERMODE>
  MDM_GET_BEARERMODE macro _dwOptions
    exitm <(((_dwOptions) and MDM_MASK_BEARERMODE) shr MDM_SHIFT_BEARERMODE)>
  endm
  MDM_SET_BEARERMODE macro _dwOptions, _bm
    exitm <(((_dwOptions) and not MDM_MASK_BEARERMODE), ((_dwOptions) or (((_bm) shl MDM_SHIFT_BEARERMODE) and MDM_MASK_BEARERMODE)))>
  endm
  MDM_GET_PROTOCOLID macro _dwOptions
    exitm <(((_dwOptions) and MDM_MASK_PROTOCOLID) shr MDM_SHIFT_PROTOCOLID)>
  endm
  MDM_SET_PROTOCOLID macro _dwOptions, _prot
    exitm <(((_dwOptions) and not MDM_MASK_PROTOCOLID), ((_dwOptions) or (((_prot) shl MDM_SHIFT_PROTOCOLID) and MDM_MASK_PROTOCOLID)))>
  endm
  MDM_GET_PROTOCOLDATA macro _dwOptions
    exitm <(((_dwOptions) and MDM_MASK_PROTOCOLDATA) shr MDM_SHIFT_PROTOCOLDATA)>
  endm
  MDM_SET_PROTOCOLDATA macro _dwOptions, _pd
    exitm <(((_dwOptions) and not MDM_MASK_PROTOCOLDATA), ((_dwOptions) or (((_pd) shl MDM_SHIFT_PROTOCOLDATA) and MDM_MASK_PROTOCOLDATA)))>
  endm
  MDM_GET_PROTOCOLINFO macro _dwOptions
    exitm <((_dwOptions) and MDM_MASK_PROTOCOLINFO)>
  endm
  MDM_SET_PROTOCOLINFO macro _dwOptions, _pinfo
    exitm <(((_dwOptions) and not MDM_MASK_PROTOCOLINFO), ((_dwOptions) or ((_pinfo) and MDM_MASK_PROTOCOLINFO)))>
  endm
  MDM_GEN_PROTOCOLINFO macro _pid, _pdata
    exitm <((((_pid) shl MDM_SHIFT_PROTOCOLID) and MDM_MASK_PROTOCOLID) or (((_pdata) shl MDM_SHIFT_PROTOCOLDATA) and MDM_MASK_PROTOCOLDATA))>
  endm
  MDM_GET_EXTENDEDINFO macro _dwOptions
    exitm <((_dwOptions) and MDM_MASK_EXTENDEDINFO)>
  endm
  MDM_SET_EXTENDEDINFO macro _dwOptions, _extinfo
    exitm <(((_dwOptions) and not MDM_MASK_EXTENDEDINFO), ((_dwOptions) or ((_extinfo) and MDM_MASK_EXTENDEDINFO)))>
  endm
  MDM_GEN_EXTENDEDINFO macro _bearermode, _pinfo
    exitm <(((_pinfo) and MDM_MASK_PROTOCOLINFO) or (((_bearermode) shl MDM_SHIFT_BEARERMODE) and MDM_MASK_BEARERMODE))>
  endm
  MDM_BEARERMODE_ANALOG equ 0h
  MDM_BEARERMODE_ISDN equ 1h
  MDM_BEARERMODE_GSM equ 2h
  MDM_PROTOCOLID_DEFAULT equ 0h
  MDM_PROTOCOLID_HDLCPPP equ 1h
  MDM_PROTOCOLID_V128 equ 2h
  MDM_PROTOCOLID_X75 equ 3h
  MDM_PROTOCOLID_V110 equ 4h
  MDM_PROTOCOLID_V120 equ 5h
  MDM_PROTOCOLID_AUTO equ 6h
  MDM_PROTOCOLID_ANALOG equ 7h
  MDM_PROTOCOLID_GPRS equ 8h
  MDM_PROTOCOLID_PIAFS equ 9h
  MDM_SHIFT_HDLCPPP_SPEED equ 0h
  MDM_MASK_HDLCPPP_SPEED equ 7h
  MDM_HDLCPPP_SPEED_DEFAULT equ 0h
  MDM_HDLCPPP_SPEED_64K equ 1h
  MDM_HDLCPPP_SPEED_56K equ 2h
  MDM_SHIFT_HDLCPPP_AUTH equ 3h
  MDM_MASK_HDLCPPP_AUTH equ (7h shl 3)
  MDM_HDLCPPP_AUTH_DEFAULT equ 0h
  MDM_HDLCPPP_AUTH_NONE equ 1h
  MDM_HDLCPPP_AUTH_PAP equ 2h
  MDM_HDLCPPP_AUTH_CHAP equ 3h
  MDM_HDLCPPP_AUTH_MSCHAP equ 4h
  MDM_SHIFT_HDLCPPP_ML equ 6h
  MDM_MASK_HDLCPPP_ML equ (3h shl 6)
  MDM_HDLCPPP_ML_DEFAULT equ 0h
  MDM_HDLCPPP_ML_NONE equ 1h
  MDM_HDLCPPP_ML_2 equ 2h
  MDM_GEN_HDLCPPP_PROTOCOL_DATA macro _speed, _auth, _ml
    exitm <((((_speed) shl MDM_SHIFT_HDLCPPP_SPEED) and MDM_MASK_HDLCPPP_SPEED) or (((_auth) shl MDM_SHIFT_HDLCPPP_AUTH) and MDM_MASK_HDLCPPP_AUTH) or (((_ml) shl MDM_SHIFT_HDLCPPP_ML) and MDM_MASK_HDLCPPP_ML))>
  endm
  MDM_PROTOCOL_HDLCPPP_64K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA(MDM_HDLCPPP_SPEED_64K, MDM_HDLCPPP_AUTH_DEFAULT, MDM_HDLCPPP_ML_DEFAULT))>
  MDM_PROTOCOL_HDLCPPP_56K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA(MDM_HDLCPPP_SPEED_56K, MDM_HDLCPPP_AUTH_DEFAULT, MDM_HDLCPPP_ML_DEFAULT))>
  MDM_PROTOCOL_HDLCPPP_112K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA(MDM_HDLCPPP_SPEED_56K, MDM_HDLCPPP_AUTH_DEFAULT, MDM_HDLCPPP_ML_2))>
  MDM_PROTOCOL_HDLCPPP_112K_PAP equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA(MDM_HDLCPPP_SPEED_56K, MDM_HDLCPPP_AUTH_PAP, MDM_HDLCPPP_ML_2))>
  MDM_PROTOCOL_HDLCPPP_112K_CHAP equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA(MDM_HDLCPPP_SPEED_56K, MDM_HDLCPPP_AUTH_CHAP, MDM_HDLCPPP_ML_2))>
  MDM_PROTOCOL_HDLCPPP_112K_MSCHAP equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA(MDM_HDLCPPP_SPEED_56K, MDM_HDLCPPP_AUTH_MSCHAP, MDM_HDLCPPP_ML_2))>
  MDM_PROTOCOL_HDLCPPP_128K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA(MDM_HDLCPPP_SPEED_64K, MDM_HDLCPPP_AUTH_DEFAULT, MDM_HDLCPPP_ML_2))>
  MDM_PROTOCOL_HDLCPPP_128K_PAP equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA(MDM_HDLCPPP_SPEED_64K, MDM_HDLCPPP_AUTH_PAP, MDM_HDLCPPP_ML_2))>
  MDM_PROTOCOL_HDLCPPP_128K_CHAP equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA(MDM_HDLCPPP_SPEED_64K, MDM_HDLCPPP_AUTH_CHAP, MDM_HDLCPPP_ML_2))>
  MDM_PROTOCOL_HDLCPPP_128K_MSCHAP equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP, MDM_GEN_HDLCPPP_PROTOCOL_DATA(MDM_HDLCPPP_SPEED_64K, MDM_HDLCPPP_AUTH_MSCHAP, MDM_HDLCPPP_ML_2))>
  MDM_SHIFT_V120_SPEED equ 0h
  MDM_MASK_V120_SPEED equ 7h
  MDM_V120_SPEED_DEFAULT equ 0h
  MDM_V120_SPEED_64K equ 1h
  MDM_V120_SPEED_56K equ 2h
  MDM_SHIFT_V120_ML equ 6h
  MDM_MASK_V120_ML equ (3h shl 6)
  MDM_V120_ML_DEFAULT equ 0h
  MDM_V120_ML_NONE equ 1h
  MDM_V120_ML_2 equ 2h
  MDM_GEN_V120_PROTOCOL_DATA macro _speed, _ml
    exitm <((((_speed) shl MDM_SHIFT_V120_SPEED) and MDM_MASK_V120_SPEED) or (((_ml) shl MDM_SHIFT_V120_ML) and MDM_MASK_V120_ML))>
  endm
  MDM_PROTOCOL_V120_64K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V120, MDM_GEN_V120_PROTOCOL_DATA(MDM_V120_SPEED_64K, MDM_V120_ML_NONE))>
  MDM_PROTOCOL_V120_56K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V120, MDM_GEN_V120_PROTOCOL_DATA(MDM_V120_SPEED_56K, MDM_V120_ML_NONE))>
  MDM_PROTOCOL_V120_112K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V120, MDM_GEN_V120_PROTOCOL_DATA(MDM_V120_SPEED_56K, MDM_V120_ML_2))>
  MDM_PROTOCOL_V120_128K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V120, MDM_GEN_V120_PROTOCOL_DATA(MDM_V120_SPEED_64K, MDM_V120_ML_2))>
  MDM_SHIFT_X75_DATA equ 0h
  MDM_MASK_X75_DATA equ 7h
  MDM_X75_DATA_DEFAULT equ 0h
  MDM_X75_DATA_64K equ 1h
  MDM_X75_DATA_128K equ 2h
  MDM_X75_DATA_T_70 equ 3h
  MDM_X75_DATA_BTX equ 4h
  MDM_GEN_X75_PROTOCOL_DATA macro _data
    exitm <(((_data) shl MDM_SHIFT_X75_DATA) and MDM_MASK_X75_DATA)>
  endm
  MDM_PROTOCOL_X75_64K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_X75, MDM_GEN_X75_PROTOCOL_DATA(MDM_X75_DATA_64K))>
  MDM_PROTOCOL_X75_128K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_X75, MDM_GEN_X75_PROTOCOL_DATA(MDM_X75_DATA_128K))>
  MDM_PROTOCOL_X75_T_70 equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_X75, MDM_GEN_X75_PROTOCOL_DATA(MDM_X75_DATA_T_70))>
  MDM_PROTOCOL_X75_BTX equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_X75, MDM_GEN_X75_PROTOCOL_DATA(MDM_X75_DATA_BTX))>
  MDM_SHIFT_V110_SPEED equ 0h
  MDM_MASK_V110_SPEED equ 0fh
  MDM_V110_SPEED_DEFAULT equ 0h
  MDM_V110_SPEED_1DOT2K equ 1h
  MDM_V110_SPEED_2DOT4K equ 2h
  MDM_V110_SPEED_4DOT8K equ 3h
  MDM_V110_SPEED_9DOT6K equ 4h
  MDM_V110_SPEED_12DOT0K equ 5h
  MDM_V110_SPEED_14DOT4K equ 6h
  MDM_V110_SPEED_19DOT2K equ 7h
  MDM_V110_SPEED_28DOT8K equ 8h
  MDM_V110_SPEED_38DOT4K equ 9h
  MDM_V110_SPEED_57DOT6K equ 0Ah
  MDM_GEN_V110_PROTOCOL_DATA macro _data
    exitm <(((_data) shl MDM_SHIFT_V110_SPEED) and MDM_MASK_V110_SPEED)>
  endm
  MDM_PROTOCOL_V110_1DOT2K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA(MDM_V110_SPEED_1DOT2K))>
  MDM_PROTOCOL_V110_2DOT4K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA(MDM_V110_SPEED_2DOT4K))>
  MDM_PROTOCOL_V110_4DOT8K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA(MDM_V110_SPEED_4DOT8K))>
  MDM_PROTOCOL_V110_9DOT6K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA(MDM_V110_SPEED_9DOT6K))>
  MDM_PROTOCOL_V110_12DOT0K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA(MDM_V110_SPEED_12DOT0K))>
  MDM_PROTOCOL_V110_14DOT4K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA(MDM_V110_SPEED_14DOT4K))>
  MDM_PROTOCOL_V110_19DOT2K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA(MDM_V110_SPEED_19DOT2K))>
  MDM_PROTOCOL_V110_28DOT8K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA(MDM_V110_SPEED_28DOT8K))>
  MDM_PROTOCOL_V110_38DOT4K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA(MDM_V110_SPEED_38DOT4K))>
  MDM_PROTOCOL_V110_57DOT6K equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110, MDM_GEN_V110_PROTOCOL_DATA(MDM_V110_SPEED_57DOT6K))>
  MDM_SHIFT_AUTO_SPEED equ 0h
  MDM_MASK_AUTO_SPEED equ 7h
  MDM_AUTO_SPEED_DEFAULT equ 0h
  MDM_SHIFT_AUTO_ML equ 6h
  MDM_MASK_AUTO_ML equ (3h shl 6)
  MDM_AUTO_ML_DEFAULT equ 0h
  MDM_AUTO_ML_NONE equ 1h
  MDM_AUTO_ML_2 equ 2h
  MDM_GEN_AUTO_PROTOCOL_DATA macro _speed, _ml
    exitm <((((_speed) shl MDM_SHIFT_AUTO_SPEED) and MDM_MASK_AUTO_SPEED) or (((_ml) shl MDM_SHIFT_AUTO_ML) and MDM_MASK_AUTO_ML))>
  endm
  MDM_PROTOCOL_AUTO_1CH equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_AUTO, MDM_GEN_AUTO_PROTOCOL_DATA(MDM_AUTO_SPEED_DEFAULT, MDM_AUTO_ML_NONE))>
  MDM_PROTOCOL_AUTO_2CH equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_AUTO, MDM_GEN_AUTO_PROTOCOL_DATA(MDM_AUTO_SPEED_DEFAULT, MDM_AUTO_ML_2))>
  MDM_ANALOG_RLP_ON equ 0h
  MDM_ANALOG_RLP_OFF equ 1h
  MDM_ANALOG_V34 equ 2h
  MDM_GEN_ANALOG_PROTOCOL_DATA macro _rlp
    exitm <(_rlp)>
  endm
  MDM_PROTOCOL_ANALOG_RLP equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_ANALOG, MDM_GEN_ANALOG_PROTOCOL_DATA(MDM_ANALOG_RLP_ON))>
  MDM_PROTOCOL_ANALOG_NRLP equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_ANALOG, MDM_GEN_ANALOG_PROTOCOL_DATA(MDM_ANALOG_RLP_OFF))>
  MDM_PROTOCOL_ANALOG_V34 equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_ANALOG, MDM_GEN_ANALOG_PROTOCOL_DATA(MDM_ANALOG_V34))>
  MDM_PROTOCOL_GPRS equ MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_GPRS, 0)
  MDM_PIAFS_INCOMING equ 0
  MDM_PIAFS_OUTGOING equ 1
  MDM_PROTOCOL_PIAFS_INCOMING equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_PIAFS, MDM_PIAFS_INCOMING)>
  MDM_PROTOCOL_PIAFS_OUTGOING equ <MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_PIAFS, MDM_PIAFS_OUTGOING)>
  if _MSC_VER ge 1200
  endif
endif

