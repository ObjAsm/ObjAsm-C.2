;Include file created by h2incX, Version C.01.00, 16/11/2022 19:46
;(C) 2018-today by Biterider, 2005-2009 by Japheth
;Source file: 'D:\ObjAsm\Projects\32\h2IncX - Kopie\.h\wininet.h', last modified: 11/09/2021 16:30
;Creation parameters: 

include winapifamily.inc
if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
  if  not Defined(_WININET_)
    include SpecStrings.inc
    _WININET_ equ <>
    if Defined(_WIN64)
      include pshpack8.inc
    else
      include pshpack4.inc
    endif
    if Defined(__cplusplus)
      ;[...]
    endif
    if  not Defined(_WINX32_)
      INTERNETAPI equ <EXTERN_C DECLSPEC_IMPORT HRESULT STDAPICALLTYPE>
      INTERNETAPI_ macro type_
        exitm <EXTERN_C DECLSPEC_IMPORT type_ STDAPICALLTYPE>
      endm
      INTERNETAPIX macro type_, salannotation
        exitm <EXTERN_C DECLSPEC_IMPORT salannotation type_ STDAPICALLTYPE>
      endm
      URLCACHEAPI equ <EXTERN_C DECLSPEC_IMPORT DWORD STDAPICALLTYPE>
      URLCACHEAPI_ macro type_
        exitm <EXTERN_C DECLSPEC_IMPORT type_ STDAPICALLTYPE>
      endm
    else
      INTERNETAPI equ <EXTERN_C HRESULT STDAPICALLTYPE>
      INTERNETAPI_ macro type_
        exitm <EXTERN_C type_ STDAPICALLTYPE>
      endm
      INTERNETAPIX macro type_, salannotation
        exitm <EXTERN_C salannotation type_ STDAPICALLTYPE>
      endm
      URLCACHEAPI equ <EXTERN_C DWORD STDAPICALLTYPE>
      URLCACHEAPI_ macro type_
        exitm <EXTERN_C type_ STDAPICALLTYPE>
      endm
    endif
    BOOLAPI equ INTERNETAPIX(BOOL, _Success_(return != FALSE))
    HINTERNET typedef LPVOID
    LPHINTERNET typedef ptr HINTERNET
    INTERNET_PORT typedef WORD
    LPINTERNET_PORT typedef ptr INTERNET_PORT
    INTERNET_INVALID_PORT_NUMBER equ 0
    INTERNET_DEFAULT_FTP_PORT equ 21
    INTERNET_DEFAULT_GOPHER_PORT equ 70
    INTERNET_DEFAULT_HTTP_PORT equ 80
    INTERNET_DEFAULT_HTTPS_PORT equ 443
    INTERNET_DEFAULT_SOCKS_PORT equ 1080
    INTERNET_MAX_HOST_NAME_LENGTH equ 256
    INTERNET_MAX_USER_NAME_LENGTH equ 128
    INTERNET_MAX_PASSWORD_LENGTH equ 128
    INTERNET_MAX_PORT_NUMBER_LENGTH equ 5
    INTERNET_MAX_PORT_NUMBER_VALUE equ 65535
    INTERNET_MAX_PATH_LENGTH equ 2048
    INTERNET_MAX_SCHEME_LENGTH equ 32
    INTERNET_MAX_URL_LENGTH equ <(INTERNET_MAX_SCHEME_LENGTH + sizeof("://") + INTERNET_MAX_PATH_LENGTH)>
    INTERNET_KEEP_ALIVE_UNKNOWN equ (- 1)
    INTERNET_KEEP_ALIVE_ENABLED equ 1
    INTERNET_KEEP_ALIVE_DISABLED equ 0
    INTERNET_REQFLAG_FROM_CACHE equ 00000001h
    INTERNET_REQFLAG_ASYNC equ 00000002h
    INTERNET_REQFLAG_VIA_PROXY equ 00000004h
    INTERNET_REQFLAG_NO_HEADERS equ 00000008h
    INTERNET_REQFLAG_PASSIVE equ 00000010h
    INTERNET_REQFLAG_CACHE_WRITE_DISABLED equ 00000040h
    INTERNET_REQFLAG_NET_TIMEOUT equ 00000080h
    INTERNET_FLAG_IDN_DIRECT equ 00000001h
    INTERNET_FLAG_IDN_PROXY equ 00000002h
    INTERNET_FLAG_RELOAD equ 80000000h
    INTERNET_FLAG_RAW_DATA equ 40000000h
    INTERNET_FLAG_EXISTING_CONNECT equ 20000000h
    INTERNET_FLAG_ASYNC equ 10000000h
    INTERNET_FLAG_PASSIVE equ 08000000h
    INTERNET_FLAG_NO_CACHE_WRITE equ 04000000h
    INTERNET_FLAG_DONT_CACHE equ <INTERNET_FLAG_NO_CACHE_WRITE>
    INTERNET_FLAG_MAKE_PERSISTENT equ 02000000h
    INTERNET_FLAG_FROM_CACHE equ 01000000h
    INTERNET_FLAG_OFFLINE equ <INTERNET_FLAG_FROM_CACHE>
    INTERNET_FLAG_SECURE equ 00800000h
    INTERNET_FLAG_KEEP_CONNECTION equ 00400000h
    INTERNET_FLAG_NO_AUTO_REDIRECT equ 00200000h
    INTERNET_FLAG_READ_PREFETCH equ 00100000h
    INTERNET_FLAG_NO_COOKIES equ 00080000h
    INTERNET_FLAG_NO_AUTH equ 00040000h
    INTERNET_FLAG_RESTRICTED_ZONE equ 00020000h
    INTERNET_FLAG_CACHE_IF_NET_FAIL equ 00010000h
    INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTP equ 00008000h
    INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTPS equ 00004000h
    INTERNET_FLAG_IGNORE_CERT_DATE_INVALID equ 00002000h
    INTERNET_FLAG_IGNORE_CERT_CN_INVALID equ 00001000h
    INTERNET_FLAG_RESYNCHRONIZE equ 00000800h
    INTERNET_FLAG_HYPERLINK equ 00000400h
    INTERNET_FLAG_NO_UI equ 00000200h
    INTERNET_FLAG_PRAGMA_NOCACHE equ 00000100h
    INTERNET_FLAG_CACHE_ASYNC equ 00000080h
    INTERNET_FLAG_FORMS_SUBMIT equ 00000040h
    INTERNET_FLAG_FWD_BACK equ 00000020h
    INTERNET_FLAG_NEED_FILE equ 00000010h
    INTERNET_FLAG_MUST_CACHE_REQUEST equ <INTERNET_FLAG_NEED_FILE>
    INTERNET_FLAG_TRANSFER_ASCII equ <FTP_TRANSFER_TYPE_ASCII>
    INTERNET_FLAG_TRANSFER_BINARY equ <FTP_TRANSFER_TYPE_BINARY>
    SECURITY_INTERNET_MASK equ <(INTERNET_FLAG_IGNORE_CERT_CN_INVALID or INTERNET_FLAG_IGNORE_CERT_DATE_INVALID or INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTPS or INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTP)>
    SECURITY_IGNORE_ERROR_MASK equ <(INTERNET_FLAG_IGNORE_CERT_CN_INVALID or INTERNET_FLAG_IGNORE_CERT_DATE_INVALID or SECURITY_FLAG_IGNORE_UNKNOWN_CA or SECURITY_FLAG_IGNORE_REVOCATION or SECURITY_FLAG_IGNORE_WEAK_SIGNATURE)>
    INTERNET_FLAGS_MASK equ <(INTERNET_FLAG_RELOAD or INTERNET_FLAG_RAW_DATA or INTERNET_FLAG_EXISTING_CONNECT or INTERNET_FLAG_ASYNC or INTERNET_FLAG_PASSIVE or INTERNET_FLAG_NO_CACHE_WRITE or INTERNET_FLAG_MAKE_PERSISTENT or INTERNET_FLAG_FROM_CACHE or INTERNET_FLAG_SECURE or INTERNET_FLAG_KEEP_CONNECTION or INTERNET_FLAG_NO_AUTO_REDIRECT or INTERNET_FLAG_READ_PREFETCH or INTERNET_FLAG_NO_COOKIES or INTERNET_FLAG_NO_AUTH or INTERNET_FLAG_CACHE_IF_NET_FAIL or SECURITY_INTERNET_MASK or INTERNET_FLAG_RESYNCHRONIZE or INTERNET_FLAG_HYPERLINK or INTERNET_FLAG_NO_UI or INTERNET_FLAG_PRAGMA_NOCACHE or INTERNET_FLAG_CACHE_ASYNC or INTERNET_FLAG_FORMS_SUBMIT or INTERNET_FLAG_NEED_FILE or INTERNET_FLAG_RESTRICTED_ZONE or INTERNET_FLAG_TRANSFER_BINARY or INTERNET_FLAG_TRANSFER_ASCII or INTERNET_FLAG_FWD_BACK or INTERNET_FLAG_BGUPDATE)>
    INTERNET_ERROR_MASK_INSERT_CDROM equ 1h
    INTERNET_ERROR_MASK_COMBINED_SEC_CERT equ 2h
    INTERNET_ERROR_MASK_NEED_MSN_SSPI_PKG equ 4h
    INTERNET_ERROR_MASK_LOGIN_FAILURE_DISPLAY_ENTITY_BODY equ 8h
    INTERNET_OPTIONS_MASK equ <(not INTERNET_FLAGS_MASK)>
    WININET_API_FLAG_ASYNC equ 00000001h
    WININET_API_FLAG_SYNC equ 00000004h
    WININET_API_FLAG_USE_CONTEXT equ 00000008h
    INTERNET_NO_CALLBACK equ 0
    INTERNET_SCHEME typedef SDWORD
    INTERNET_SCHEME_PARTIAL equ -2
    INTERNET_SCHEME_UNKNOWN equ -1
    INTERNET_SCHEME_DEFAULT equ 0
    INTERNET_SCHEME_FTP equ 1
    INTERNET_SCHEME_GOPHER equ 2
    INTERNET_SCHEME_HTTP equ 3
    INTERNET_SCHEME_HTTPS equ 4
    INTERNET_SCHEME_FILE equ 5
    INTERNET_SCHEME_NEWS equ 6
    INTERNET_SCHEME_MAILTO equ 7
    INTERNET_SCHEME_SOCKS equ 8
    INTERNET_SCHEME_JAVASCRIPT equ 9
    INTERNET_SCHEME_VBSCRIPT equ 10
    INTERNET_SCHEME_RES equ 11
    INTERNET_SCHEME_FIRST equ INTERNET_SCHEME_FTP
    INTERNET_SCHEME_LAST equ INTERNET_SCHEME_RES
    LPINTERNET_SCHEME typedef ptr INTERNET_SCHEME
    
    INTERNET_ASYNC_RESULT struct
      dwResult DWORD_PTR ?
      dwError DWORD ?
    INTERNET_ASYNC_RESULT ends
    LPINTERNET_ASYNC_RESULT typedef ptr INTERNET_ASYNC_RESULT
    
    INTERNET_DIAGNOSTIC_SOCKET_INFO struct
      Socket DWORD_PTR ?
      SourcePort DWORD ?
      DestPort DWORD ?
      Flags DWORD ?
    INTERNET_DIAGNOSTIC_SOCKET_INFO ends
    LPINTERNET_DIAGNOSTIC_SOCKET_INFO typedef ptr INTERNET_DIAGNOSTIC_SOCKET_INFO
    
    IDSI_FLAG_KEEP_ALIVE equ 00000001h
    IDSI_FLAG_SECURE equ 00000002h
    IDSI_FLAG_PROXY equ 00000004h
    IDSI_FLAG_TUNNEL equ 00000008h
    INTERNET_PROXY_INFO struct
      dwAccessType DWORD ?
      lpszProxy LPCTSTR ?
      lpszProxyBypass LPCTSTR ?
    INTERNET_PROXY_INFO ends
    LPINTERNET_PROXY_INFO typedef ptr INTERNET_PROXY_INFO
    
    INTERNET_PER_CONN_OPTIONA struct
      dwOption DWORD ?
      union Value
        dwValue DWORD ?
        pszValue LPSTR ?
        ftValue FILETIME <>
      ends
    INTERNET_PER_CONN_OPTIONA ends
    LPINTERNET_PER_CONN_OPTIONA typedef ptr INTERNET_PER_CONN_OPTIONA
    
    INTERNET_PER_CONN_OPTIONW struct
      dwOption DWORD ?
      union Value
        dwValue DWORD ?
        pszValue LPWSTR ?
        ftValue FILETIME <>
      ends
    INTERNET_PER_CONN_OPTIONW ends
    LPINTERNET_PER_CONN_OPTIONW typedef ptr INTERNET_PER_CONN_OPTIONW
    
    ifdef UNICODE
      INTERNET_PER_CONN_OPTION typedef INTERNET_PER_CONN_OPTIONW
      LPINTERNET_PER_CONN_OPTION typedef LPINTERNET_PER_CONN_OPTIONW
    else
      INTERNET_PER_CONN_OPTION typedef INTERNET_PER_CONN_OPTIONA
      LPINTERNET_PER_CONN_OPTION typedef LPINTERNET_PER_CONN_OPTIONA
    endif
    INTERNET_PER_CONN_OPTION_LISTA struct
      dwSize DWORD ?
      pszConnection LPSTR ?
      dwOptionCount DWORD ?
      dwOptionError DWORD ?
      pOptions LPINTERNET_PER_CONN_OPTIONA ?
    INTERNET_PER_CONN_OPTION_LISTA ends
    LPINTERNET_PER_CONN_OPTION_LISTA typedef ptr INTERNET_PER_CONN_OPTION_LISTA
    
    INTERNET_PER_CONN_OPTION_LISTW struct
      dwSize DWORD ?
      pszConnection LPWSTR ?
      dwOptionCount DWORD ?
      dwOptionError DWORD ?
      pOptions LPINTERNET_PER_CONN_OPTIONW ?
    INTERNET_PER_CONN_OPTION_LISTW ends
    LPINTERNET_PER_CONN_OPTION_LISTW typedef ptr INTERNET_PER_CONN_OPTION_LISTW
    
    ifdef UNICODE
      INTERNET_PER_CONN_OPTION_LIST typedef INTERNET_PER_CONN_OPTION_LISTW
      LPINTERNET_PER_CONN_OPTION_LIST typedef LPINTERNET_PER_CONN_OPTION_LISTW
    else
      INTERNET_PER_CONN_OPTION_LIST typedef INTERNET_PER_CONN_OPTION_LISTA
      LPINTERNET_PER_CONN_OPTION_LIST typedef LPINTERNET_PER_CONN_OPTION_LISTA
    endif
    INTERNET_PER_CONN_FLAGS equ 1
    INTERNET_PER_CONN_PROXY_SERVER equ 2
    INTERNET_PER_CONN_PROXY_BYPASS equ 3
    INTERNET_PER_CONN_AUTOCONFIG_URL equ 4
    INTERNET_PER_CONN_AUTODISCOVERY_FLAGS equ 5
    INTERNET_PER_CONN_AUTOCONFIG_SECONDARY_URL equ 6
    INTERNET_PER_CONN_AUTOCONFIG_RELOAD_DELAY_MINS equ 7
    INTERNET_PER_CONN_AUTOCONFIG_LAST_DETECT_TIME equ 8
    INTERNET_PER_CONN_AUTOCONFIG_LAST_DETECT_URL equ 9
    INTERNET_PER_CONN_FLAGS_UI equ 10
    PROXY_TYPE_DIRECT equ 00000001h
    PROXY_TYPE_PROXY equ 00000002h
    PROXY_TYPE_AUTO_PROXY_URL equ 00000004h
    PROXY_TYPE_AUTO_DETECT equ 00000008h
    AUTO_PROXY_FLAG_USER_SET equ 00000001h
    AUTO_PROXY_FLAG_ALWAYS_DETECT equ 00000002h
    AUTO_PROXY_FLAG_DETECTION_RUN equ 00000004h
    AUTO_PROXY_FLAG_MIGRATED equ 00000008h
    AUTO_PROXY_FLAG_DONT_CACHE_PROXY_RESULT equ 00000010h
    AUTO_PROXY_FLAG_CACHE_INIT_RUN equ 00000020h
    AUTO_PROXY_FLAG_DETECTION_SUSPECT equ 00000040h
    INTERNET_VERSION_INFO struct
      dwMajorVersion DWORD ?
      dwMinorVersion DWORD ?
    INTERNET_VERSION_INFO ends
    LPINTERNET_VERSION_INFO typedef ptr INTERNET_VERSION_INFO
    
    HTTP_VERSION_INFO struct
      dwMajorVersion DWORD ?
      dwMinorVersion DWORD ?
    HTTP_VERSION_INFO ends
    LPHTTP_VERSION_INFO typedef ptr HTTP_VERSION_INFO
    
    INTERNET_CONNECTED_INFO struct
      dwConnectedState DWORD ?
      dwFlags DWORD ?
    INTERNET_CONNECTED_INFO ends
    LPINTERNET_CONNECTED_INFO typedef ptr INTERNET_CONNECTED_INFO
    
    ISO_FORCE_DISCONNECTED equ 00000001h
    if _MSC_VER ge 1200
    endif
    URL_COMPONENTSA struct
      dwStructSize DWORD ?
      lpszScheme LPSTR ?
      dwSchemeLength DWORD ?
      nScheme INTERNET_SCHEME ?
      lpszHostName LPSTR ?
      dwHostNameLength DWORD ?
      nPort INTERNET_PORT ?
      lpszUserName LPSTR ?
      dwUserNameLength DWORD ?
      lpszPassword LPSTR ?
      dwPasswordLength DWORD ?
      lpszUrlPath LPSTR ?
      dwUrlPathLength DWORD ?
      lpszExtraInfo LPSTR ?
      dwExtraInfoLength DWORD ?
    URL_COMPONENTSA ends
    LPURL_COMPONENTSA typedef ptr URL_COMPONENTSA
    
    URL_COMPONENTSW struct
      dwStructSize DWORD ?
      lpszScheme LPWSTR ?
      dwSchemeLength DWORD ?
      nScheme INTERNET_SCHEME ?
      lpszHostName LPWSTR ?
      dwHostNameLength DWORD ?
      nPort INTERNET_PORT ?
      lpszUserName LPWSTR ?
      dwUserNameLength DWORD ?
      lpszPassword LPWSTR ?
      dwPasswordLength DWORD ?
      lpszUrlPath LPWSTR ?
      dwUrlPathLength DWORD ?
      lpszExtraInfo LPWSTR ?
      dwExtraInfoLength DWORD ?
    URL_COMPONENTSW ends
    LPURL_COMPONENTSW typedef ptr URL_COMPONENTSW
    
    ifdef UNICODE
      URL_COMPONENTS typedef URL_COMPONENTSW
      LPURL_COMPONENTS typedef LPURL_COMPONENTSW
    else
      URL_COMPONENTS typedef URL_COMPONENTSA
      LPURL_COMPONENTS typedef LPURL_COMPONENTSA
    endif
    if _MSC_VER ge 1200
    else
    endif
    INTERNET_CERTIFICATE_INFO struct
      ftExpiry FILETIME <>
      ftStart FILETIME <>
      lpszSubjectInfo LPTSTR ?
      lpszIssuerInfo LPTSTR ?
      lpszProtocolName LPTSTR ?
      lpszSignatureAlgName LPTSTR ?
      lpszEncryptionAlgName LPTSTR ?
      dwKeySize DWORD ?
    INTERNET_CERTIFICATE_INFO ends
    LPINTERNET_CERTIFICATE_INFO typedef ptr INTERNET_CERTIFICATE_INFO
    
    INTERNET_BUFFERSA struct
      dwStructSize DWORD ?
      Next POINTER ?
      lpcszHeader LPCSTR ?
      dwHeadersLength DWORD ?
      dwHeadersTotal DWORD ?
      lpvBuffer LPVOID ?
      dwBufferLength DWORD ?
      dwBufferTotal DWORD ?
      dwOffsetLow DWORD ?
      dwOffsetHigh DWORD ?
    INTERNET_BUFFERSA ends
    _INTERNET_BUFFERSA typedef INTERNET_BUFFERSA
    LPINTERNET_BUFFERSA typedef ptr INTERNET_BUFFERSA
    
    INTERNET_BUFFERSW struct
      dwStructSize DWORD ?
      Next POINTER ?
      lpcszHeader LPCWSTR ?
      dwHeadersLength DWORD ?
      dwHeadersTotal DWORD ?
      lpvBuffer LPVOID ?
      dwBufferLength DWORD ?
      dwBufferTotal DWORD ?
      dwOffsetLow DWORD ?
      dwOffsetHigh DWORD ?
    INTERNET_BUFFERSW ends
    _INTERNET_BUFFERSW typedef INTERNET_BUFFERSW
    LPINTERNET_BUFFERSW typedef ptr INTERNET_BUFFERSW
    
    ifdef UNICODE
      INTERNET_BUFFERS typedef INTERNET_BUFFERSW
      LPINTERNET_BUFFERS typedef LPINTERNET_BUFFERSW
    else
      INTERNET_BUFFERS typedef INTERNET_BUFFERSA
      LPINTERNET_BUFFERS typedef LPINTERNET_BUFFERSA
    endif
    InternetTimeFromSystemTimeA proto WIN_STD_CALL_CONV :ptr SYSTEMTIME, :DWORD, :LPSTR, :DWORD
    InternetTimeFromSystemTimeW proto WIN_STD_CALL_CONV :ptr SYSTEMTIME, :DWORD, :LPWSTR, :DWORD
    ifdef UNICODE
      InternetTimeFromSystemTime equ <InternetTimeFromSystemTimeW>
    else
      ifdef _WINX32_
        InternetTimeFromSystemTime equ <InternetTimeFromSystemTimeA>
      else
        InternetTimeFromSystemTime proto WIN_STD_CALL_CONV :ptr SYSTEMTIME, :DWORD, :LPSTR, :DWORD
      endif
    endif
    INTERNET_RFC1123_FORMAT equ 0
    INTERNET_RFC1123_BUFSIZE equ 30
    InternetTimeToSystemTimeA proto WIN_STD_CALL_CONV :LPCSTR, :ptr SYSTEMTIME, :DWORD
    InternetTimeToSystemTimeW proto WIN_STD_CALL_CONV :LPCWSTR, :ptr SYSTEMTIME, :DWORD
    ifdef UNICODE
      InternetTimeToSystemTime equ <InternetTimeToSystemTimeW>
    else
      ifdef _WINX32_
        InternetTimeToSystemTime equ <InternetTimeToSystemTimeA>
      else
        InternetTimeToSystemTime proto WIN_STD_CALL_CONV :LPCSTR, :ptr SYSTEMTIME, :DWORD
      endif
    endif
    InternetCrackUrlA proto WIN_STD_CALL_CONV :LPCSTR, :DWORD, :DWORD, :LPURL_COMPONENTSA
    InternetCrackUrlW proto WIN_STD_CALL_CONV :LPCWSTR, :DWORD, :DWORD, :LPURL_COMPONENTSW
    ifdef UNICODE
      InternetCrackUrl equ <InternetCrackUrlW>
    else
      InternetCrackUrl equ <InternetCrackUrlA>
    endif
    InternetCreateUrlA proto WIN_STD_CALL_CONV :LPURL_COMPONENTSA, :DWORD, :LPSTR, :LPDWORD
    InternetCreateUrlW proto WIN_STD_CALL_CONV :LPURL_COMPONENTSW, :DWORD, :LPWSTR, :LPDWORD
    ifdef UNICODE
      InternetCreateUrl equ <InternetCreateUrlW>
    else
      InternetCreateUrl equ <InternetCreateUrlA>
    endif
    InternetCanonicalizeUrlA proto WIN_STD_CALL_CONV :LPCSTR, :LPSTR, :LPDWORD, :DWORD
    InternetCanonicalizeUrlW proto WIN_STD_CALL_CONV :LPCWSTR, :LPWSTR, :LPDWORD, :DWORD
    ifdef UNICODE
      InternetCanonicalizeUrl equ <InternetCanonicalizeUrlW>
    else
      InternetCanonicalizeUrl equ <InternetCanonicalizeUrlA>
    endif
    InternetCombineUrlA proto WIN_STD_CALL_CONV :LPCSTR, :LPCSTR, :LPSTR, :LPDWORD, :DWORD
    InternetCombineUrlW proto WIN_STD_CALL_CONV :LPCWSTR, :LPCWSTR, :LPWSTR, :LPDWORD, :DWORD
    ifdef UNICODE
      InternetCombineUrl equ <InternetCombineUrlW>
    else
      InternetCombineUrl equ <InternetCombineUrlA>
    endif
    ICU_ESCAPE equ 80000000h
    ICU_USERNAME equ 40000000h
    ICU_NO_ENCODE equ 20000000h
    ICU_DECODE equ 10000000h
    ICU_NO_META equ 08000000h
    ICU_ENCODE_SPACES_ONLY equ 04000000h
    ICU_BROWSER_MODE equ 02000000h
    ICU_ENCODE_PERCENT equ 00001000h
    InternetOpenA proto WIN_STD_CALL_CONV :LPCSTR, :DWORD, :LPCSTR, :LPCSTR, :DWORD
    InternetOpenW proto WIN_STD_CALL_CONV :LPCWSTR, :DWORD, :LPCWSTR, :LPCWSTR, :DWORD
    ifdef UNICODE
      InternetOpen equ <InternetOpenW>
    else
      InternetOpen equ <InternetOpenA>
    endif
    INTERNET_OPEN_TYPE_PRECONFIG equ 0
    INTERNET_OPEN_TYPE_DIRECT equ 1
    INTERNET_OPEN_TYPE_PROXY equ 3
    INTERNET_OPEN_TYPE_PRECONFIG_WITH_NO_AUTOPROXY equ 4
    PRE_CONFIG_INTERNET_ACCESS equ <INTERNET_OPEN_TYPE_PRECONFIG>
    LOCAL_INTERNET_ACCESS equ <INTERNET_OPEN_TYPE_DIRECT>
    CERN_PROXY_INTERNET_ACCESS equ <INTERNET_OPEN_TYPE_PROXY>
    InternetCloseHandle proto WIN_STD_CALL_CONV :HINTERNET
    InternetConnectA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR, :INTERNET_PORT, :LPCSTR, :LPCSTR, :DWORD, :DWORD, :DWORD_PTR
    InternetConnectW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR, :INTERNET_PORT, :LPCWSTR, :LPCWSTR, :DWORD, :DWORD, :DWORD_PTR
    ifdef UNICODE
      InternetConnect equ <InternetConnectW>
    else
      InternetConnect equ <InternetConnectA>
    endif
    INTERNET_SERVICE_FTP equ 1
    INTERNET_SERVICE_GOPHER equ 2
    INTERNET_SERVICE_HTTP equ 3
    InternetOpenUrlA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR, :LPCSTR, :DWORD, :DWORD, :DWORD_PTR
    InternetOpenUrlW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR, :LPCWSTR, :DWORD, :DWORD, :DWORD_PTR
    ifdef UNICODE
      InternetOpenUrl equ <InternetOpenUrlW>
    else
      InternetOpenUrl equ <InternetOpenUrlA>
    endif
    InternetReadFile proto WIN_STD_CALL_CONV :HINTERNET, :LPVOID, :DWORD, :LPDWORD
    InternetReadFileExA proto WIN_STD_CALL_CONV :HINTERNET, :LPINTERNET_BUFFERSA, :DWORD, :DWORD_PTR
    InternetReadFileExW proto WIN_STD_CALL_CONV :HINTERNET, :LPINTERNET_BUFFERSW, :DWORD, :DWORD_PTR
    ifdef UNICODE
      InternetReadFileEx equ <InternetReadFileExW>
    else
      InternetReadFileEx equ <InternetReadFileExA>
    endif
    IRF_ASYNC equ <WININET_API_FLAG_ASYNC>
    IRF_SYNC equ <WININET_API_FLAG_SYNC>
    IRF_USE_CONTEXT equ <WININET_API_FLAG_USE_CONTEXT>
    IRF_NO_WAIT equ 00000008h
    InternetSetFilePointer proto WIN_STD_CALL_CONV :HINTERNET, :LONG, :PLONG, :DWORD, :DWORD_PTR
    InternetWriteFile proto WIN_STD_CALL_CONV :HINTERNET, :LPCVOID, :DWORD, :LPDWORD
    InternetQueryDataAvailable proto WIN_STD_CALL_CONV :HINTERNET, :LPDWORD, :DWORD, :DWORD_PTR
    InternetFindNextFileA proto WIN_STD_CALL_CONV :HINTERNET, :LPVOID
    InternetFindNextFileW proto WIN_STD_CALL_CONV :HINTERNET, :LPVOID
    ifdef UNICODE
      InternetFindNextFile equ <InternetFindNextFileW>
    else
      InternetFindNextFile equ <InternetFindNextFileA>
    endif
    InternetQueryOptionA proto WIN_STD_CALL_CONV :HINTERNET, :DWORD, :LPVOID, :LPDWORD
    InternetQueryOptionW proto WIN_STD_CALL_CONV :HINTERNET, :DWORD, :LPVOID, :LPDWORD
    ifdef UNICODE
      InternetQueryOption equ <InternetQueryOptionW>
    else
      InternetQueryOption equ <InternetQueryOptionA>
    endif
    InternetSetOptionA proto WIN_STD_CALL_CONV :HINTERNET, :DWORD, :LPVOID, :DWORD
    InternetSetOptionW proto WIN_STD_CALL_CONV :HINTERNET, :DWORD, :LPVOID, :DWORD
    ifdef UNICODE
      InternetSetOption equ <InternetSetOptionW>
    else
      InternetSetOption equ <InternetSetOptionA>
    endif
    InternetSetOptionExA proto WIN_STD_CALL_CONV :HINTERNET, :DWORD, :LPVOID, :DWORD, :DWORD
    InternetSetOptionExW proto WIN_STD_CALL_CONV :HINTERNET, :DWORD, :LPVOID, :DWORD, :DWORD
    ifdef UNICODE
      InternetSetOptionEx equ <InternetSetOptionExW>
    else
      InternetSetOptionEx equ <InternetSetOptionExA>
    endif
    InternetLockRequestFile proto WIN_STD_CALL_CONV :HINTERNET, :ptr HANDLE
    InternetUnlockRequestFile proto WIN_STD_CALL_CONV :HANDLE
    ISO_GLOBAL equ 00000001h
    ISO_REGISTRY equ 00000002h
    ISO_VALID_FLAGS equ <(ISO_GLOBAL or ISO_REGISTRY)>
    INTERNET_OPTION_CALLBACK equ 1
    INTERNET_OPTION_CONNECT_TIMEOUT equ 2
    INTERNET_OPTION_CONNECT_RETRIES equ 3
    INTERNET_OPTION_CONNECT_BACKOFF equ 4
    INTERNET_OPTION_SEND_TIMEOUT equ 5
    INTERNET_OPTION_CONTROL_SEND_TIMEOUT equ <INTERNET_OPTION_SEND_TIMEOUT>
    INTERNET_OPTION_RECEIVE_TIMEOUT equ 6
    INTERNET_OPTION_CONTROL_RECEIVE_TIMEOUT equ <INTERNET_OPTION_RECEIVE_TIMEOUT>
    INTERNET_OPTION_DATA_SEND_TIMEOUT equ 7
    INTERNET_OPTION_DATA_RECEIVE_TIMEOUT equ 8
    INTERNET_OPTION_HANDLE_TYPE equ 9
    INTERNET_OPTION_LISTEN_TIMEOUT equ 11
    INTERNET_OPTION_READ_BUFFER_SIZE equ 12
    INTERNET_OPTION_WRITE_BUFFER_SIZE equ 13
    INTERNET_OPTION_ASYNC_ID equ 15
    INTERNET_OPTION_ASYNC_PRIORITY equ 16
    INTERNET_OPTION_PARENT_HANDLE equ 21
    INTERNET_OPTION_KEEP_CONNECTION equ 22
    INTERNET_OPTION_REQUEST_FLAGS equ 23
    INTERNET_OPTION_EXTENDED_ERROR equ 24
    INTERNET_OPTION_OFFLINE_MODE equ 26
    INTERNET_OPTION_CACHE_STREAM_HANDLE equ 27
    INTERNET_OPTION_USERNAME equ 28
    INTERNET_OPTION_PASSWORD equ 29
    INTERNET_OPTION_ASYNC equ 30
    INTERNET_OPTION_SECURITY_FLAGS equ 31
    INTERNET_OPTION_SECURITY_CERTIFICATE_STRUCT equ 32
    INTERNET_OPTION_DATAFILE_NAME equ 33
    INTERNET_OPTION_URL equ 34
    INTERNET_OPTION_SECURITY_CERTIFICATE equ 35
    INTERNET_OPTION_SECURITY_KEY_BITNESS equ 36
    INTERNET_OPTION_REFRESH equ 37
    INTERNET_OPTION_PROXY equ 38
    INTERNET_OPTION_SETTINGS_CHANGED equ 39
    INTERNET_OPTION_VERSION equ 40
    INTERNET_OPTION_USER_AGENT equ 41
    INTERNET_OPTION_END_BROWSER_SESSION equ 42
    INTERNET_OPTION_PROXY_USERNAME equ 43
    INTERNET_OPTION_PROXY_PASSWORD equ 44
    INTERNET_OPTION_CONTEXT_VALUE equ 45
    INTERNET_OPTION_CONNECT_LIMIT equ 46
    INTERNET_OPTION_SECURITY_SELECT_CLIENT_CERT equ 47
    INTERNET_OPTION_POLICY equ 48
    INTERNET_OPTION_DISCONNECTED_TIMEOUT equ 49
    INTERNET_OPTION_CONNECTED_STATE equ 50
    INTERNET_OPTION_IDLE_STATE equ 51
    INTERNET_OPTION_OFFLINE_SEMANTICS equ 52
    INTERNET_OPTION_SECONDARY_CACHE_KEY equ 53
    INTERNET_OPTION_CALLBACK_FILTER equ 54
    INTERNET_OPTION_CONNECT_TIME equ 55
    INTERNET_OPTION_SEND_THROUGHPUT equ 56
    INTERNET_OPTION_RECEIVE_THROUGHPUT equ 57
    INTERNET_OPTION_REQUEST_PRIORITY equ 58
    INTERNET_OPTION_HTTP_VERSION equ 59
    INTERNET_OPTION_RESET_URLCACHE_SESSION equ 60
    INTERNET_OPTION_ERROR_MASK equ 62
    INTERNET_OPTION_FROM_CACHE_TIMEOUT equ 63
    INTERNET_OPTION_BYPASS_EDITED_ENTRY equ 64
    INTERNET_OPTION_HTTP_DECODING equ 65
    INTERNET_OPTION_DIAGNOSTIC_SOCKET_INFO equ 67
    INTERNET_OPTION_CODEPAGE equ 68
    INTERNET_OPTION_CACHE_TIMESTAMPS equ 69
    INTERNET_OPTION_DISABLE_AUTODIAL equ 70
    INTERNET_OPTION_MAX_CONNS_PER_SERVER equ 73
    INTERNET_OPTION_MAX_CONNS_PER_1_0_SERVER equ 74
    INTERNET_OPTION_PER_CONNECTION_OPTION equ 75
    INTERNET_OPTION_DIGEST_AUTH_UNLOAD equ 76
    INTERNET_OPTION_IGNORE_OFFLINE equ 77
    INTERNET_OPTION_IDENTITY equ 78
    INTERNET_OPTION_REMOVE_IDENTITY equ 79
    INTERNET_OPTION_ALTER_IDENTITY equ 80
    INTERNET_OPTION_SUPPRESS_BEHAVIOR equ 81
    INTERNET_OPTION_AUTODIAL_MODE equ 82
    INTERNET_OPTION_AUTODIAL_CONNECTION equ 83
    INTERNET_OPTION_CLIENT_CERT_CONTEXT equ 84
    INTERNET_OPTION_AUTH_FLAGS equ 85
    INTERNET_OPTION_COOKIES_3RD_PARTY equ 86
    INTERNET_OPTION_DISABLE_PASSPORT_AUTH equ 87
    INTERNET_OPTION_SEND_UTF8_SERVERNAME_TO_PROXY equ 88
    INTERNET_OPTION_EXEMPT_CONNECTION_LIMIT equ 89
    INTERNET_OPTION_ENABLE_PASSPORT_AUTH equ 90
    INTERNET_OPTION_HIBERNATE_INACTIVE_WORKER_THREADS equ 91
    INTERNET_OPTION_ACTIVATE_WORKER_THREADS equ 92
    INTERNET_OPTION_RESTORE_WORKER_THREAD_DEFAULTS equ 93
    INTERNET_OPTION_SOCKET_SEND_BUFFER_LENGTH equ 94
    INTERNET_OPTION_PROXY_SETTINGS_CHANGED equ 95
    INTERNET_OPTION_DATAFILE_EXT equ 96
    INTERNET_OPTION_CODEPAGE_PATH equ 100
    INTERNET_OPTION_CODEPAGE_EXTRA equ 101
    INTERNET_OPTION_IDN equ 102
    INTERNET_OPTION_MAX_CONNS_PER_PROXY equ 103
    INTERNET_OPTION_SUPPRESS_SERVER_AUTH equ 104
    INTERNET_OPTION_SERVER_CERT_CHAIN_CONTEXT equ 105
    INTERNET_OPTION_ENABLE_REDIRECT_CACHE_READ equ 122
    INTERNET_OPTION_COMPRESSED_CONTENT_LENGTH equ 147
    INTERNET_OPTION_ENABLE_HTTP_PROTOCOL equ 148
    INTERNET_OPTION_HTTP_PROTOCOL_USED equ 149
    INTERNET_OPTION_ENCODE_EXTRA equ 155
    INTERNET_OPTION_HSTS equ 157
    INTERNET_OPTION_ENTERPRISE_CONTEXT equ 159
    INTERNET_OPTION_CONNECTION_FILTER equ 162
    INTERNET_OPTION_REFERER_TOKEN_BINDING_HOSTNAME equ 163
    INTERNET_OPTION_TOKEN_BINDING_PUBLIC_KEY equ 181
    INTERNET_OPTION_COOKIES_SAME_SITE_LEVEL equ 187
    INTERNET_FIRST_OPTION equ <INTERNET_OPTION_CALLBACK>
    INTERNET_LAST_OPTION equ <INTERNET_OPTION_COOKIES_SAME_SITE_LEVEL>
    INTERNET_PRIORITY_FOREGROUND equ 1000
    HTTP_COOKIES_SAME_SITE_LEVEL_UNKNOWN equ 0h
    HTTP_COOKIES_SAME_SITE_LEVEL_SAME_SITE equ 1h
    HTTP_COOKIES_SAME_SITE_LEVEL_CROSS_SITE_LAX equ 2h
    HTTP_COOKIES_SAME_SITE_LEVEL_CROSS_SITE equ 3h
    HTTP_COOKIES_SAME_SITE_LEVEL_MAX equ <HTTP_COOKIES_SAME_SITE_LEVEL_CROSS_SITE>
    HTTP_PROTOCOL_FLAG_HTTP2 equ 2h
    HTTP_PROTOCOL_MASK equ <(HTTP_PROTOCOL_FLAG_HTTP2)>
    INTERNET_HANDLE_TYPE_INTERNET equ 1
    INTERNET_HANDLE_TYPE_CONNECT_FTP equ 2
    INTERNET_HANDLE_TYPE_CONNECT_GOPHER equ 3
    INTERNET_HANDLE_TYPE_CONNECT_HTTP equ 4
    INTERNET_HANDLE_TYPE_FTP_FIND equ 5
    INTERNET_HANDLE_TYPE_FTP_FIND_HTML equ 6
    INTERNET_HANDLE_TYPE_FTP_FILE equ 7
    INTERNET_HANDLE_TYPE_FTP_FILE_HTML equ 8
    INTERNET_HANDLE_TYPE_GOPHER_FIND equ 9
    INTERNET_HANDLE_TYPE_GOPHER_FIND_HTML equ 10
    INTERNET_HANDLE_TYPE_GOPHER_FILE equ 11
    INTERNET_HANDLE_TYPE_GOPHER_FILE_HTML equ 12
    INTERNET_HANDLE_TYPE_HTTP_REQUEST equ 13
    INTERNET_HANDLE_TYPE_FILE_REQUEST equ 14
    AUTH_FLAG_DISABLE_NEGOTIATE equ 00000001h
    AUTH_FLAG_ENABLE_NEGOTIATE equ 00000002h
    AUTH_FLAG_DISABLE_BASIC_CLEARCHANNEL equ 00000004h
    AUTH_FLAG_DISABLE_SERVER_AUTH equ 00000008h
    SECURITY_FLAG_SECURE equ 00000001h
    SECURITY_FLAG_STRENGTH_WEAK equ 10000000h
    SECURITY_FLAG_STRENGTH_MEDIUM equ 40000000h
    SECURITY_FLAG_STRENGTH_STRONG equ 20000000h
    SECURITY_FLAG_UNKNOWNBIT equ 80000000h
    SECURITY_FLAG_FORTEZZA equ 08000000h
    SECURITY_FLAG_NORMALBITNESS equ <SECURITY_FLAG_STRENGTH_WEAK>
    SECURITY_FLAG_SSL equ 00000002h
    SECURITY_FLAG_SSL3 equ 00000004h
    SECURITY_FLAG_PCT equ 00000008h
    SECURITY_FLAG_PCT4 equ 00000010h
    SECURITY_FLAG_IETFSSL4 equ 00000020h
    SECURITY_FLAG_40BIT equ <SECURITY_FLAG_STRENGTH_WEAK>
    SECURITY_FLAG_128BIT equ <SECURITY_FLAG_STRENGTH_STRONG>
    SECURITY_FLAG_56BIT equ <SECURITY_FLAG_STRENGTH_MEDIUM>
    SECURITY_FLAG_IGNORE_REVOCATION equ 00000080h
    SECURITY_FLAG_IGNORE_UNKNOWN_CA equ 00000100h
    SECURITY_FLAG_IGNORE_WRONG_USAGE equ 00000200h
    SECURITY_FLAG_IGNORE_WEAK_SIGNATURE equ 00010000h
    SECURITY_FLAG_IGNORE_CERT_CN_INVALID equ <INTERNET_FLAG_IGNORE_CERT_CN_INVALID>
    SECURITY_FLAG_IGNORE_CERT_DATE_INVALID equ <INTERNET_FLAG_IGNORE_CERT_DATE_INVALID>
    SECURITY_FLAG_IGNORE_REDIRECT_TO_HTTPS equ <INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTPS>
    SECURITY_FLAG_IGNORE_REDIRECT_TO_HTTP equ <INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTP>
    SECURITY_SET_MASK equ <(SECURITY_FLAG_IGNORE_REVOCATION or SECURITY_FLAG_IGNORE_UNKNOWN_CA or SECURITY_FLAG_IGNORE_CERT_CN_INVALID or SECURITY_FLAG_IGNORE_CERT_DATE_INVALID or SECURITY_FLAG_IGNORE_WRONG_USAGE or SECURITY_FLAG_IGNORE_WEAK_SIGNATURE)>
    SECURITY_FLAG_OPT_IN_WEAK_SIGNATURE equ 00020000h
    AUTODIAL_MODE_NEVER equ 1
    AUTODIAL_MODE_ALWAYS equ 2
    AUTODIAL_MODE_NO_NETWORK_PRESENT equ 4
    InternetGetLastResponseInfoA proto WIN_STD_CALL_CONV :LPDWORD, :LPSTR, :LPDWORD
    InternetGetLastResponseInfoW proto WIN_STD_CALL_CONV :LPDWORD, :LPWSTR, :LPDWORD
    ifdef UNICODE
      InternetGetLastResponseInfo equ <InternetGetLastResponseInfoW>
    else
      InternetGetLastResponseInfo equ <InternetGetLastResponseInfoA>
    endif
    TYPE_INTERNET_STATUS_CALLBACK typedef proto WIN_STD_CALL_CONV :HINTERNET, :DWORD_PTR, :DWORD, :LPVOID, :DWORD
    INTERNET_STATUS_CALLBACK typedef ptr TYPE_INTERNET_STATUS_CALLBACK
    LPINTERNET_STATUS_CALLBACK typedef ptr INTERNET_STATUS_CALLBACK
    InternetSetStatusCallbackA proto WIN_STD_CALL_CONV :HINTERNET, :INTERNET_STATUS_CALLBACK
    InternetSetStatusCallbackW proto WIN_STD_CALL_CONV :HINTERNET, :INTERNET_STATUS_CALLBACK
    ifdef UNICODE
      InternetSetStatusCallback equ <InternetSetStatusCallbackW>
    else
      ifdef _WINX32_
        InternetSetStatusCallback equ <InternetSetStatusCallbackA>
      else
            InternetSetStatusCallback proto WIN_STD_CALL_CONV :HINTERNET, :INTERNET_STATUS_CALLBACK
      endif
    endif
    INTERNET_STATUS_RESOLVING_NAME equ 10
    INTERNET_STATUS_NAME_RESOLVED equ 11
    INTERNET_STATUS_CONNECTING_TO_SERVER equ 20
    INTERNET_STATUS_CONNECTED_TO_SERVER equ 21
    INTERNET_STATUS_SENDING_REQUEST equ 30
    INTERNET_STATUS_REQUEST_SENT equ 31
    INTERNET_STATUS_RECEIVING_RESPONSE equ 40
    INTERNET_STATUS_RESPONSE_RECEIVED equ 41
    INTERNET_STATUS_CTL_RESPONSE_RECEIVED equ 42
    INTERNET_STATUS_PREFETCH equ 43
    INTERNET_STATUS_CLOSING_CONNECTION equ 50
    INTERNET_STATUS_CONNECTION_CLOSED equ 51
    INTERNET_STATUS_HANDLE_CREATED equ 60
    INTERNET_STATUS_HANDLE_CLOSING equ 70
    INTERNET_STATUS_DETECTING_PROXY equ 80
    INTERNET_STATUS_REQUEST_COMPLETE equ 100
    INTERNET_STATUS_REDIRECT equ 110
    INTERNET_STATUS_INTERMEDIATE_RESPONSE equ 120
    INTERNET_STATUS_USER_INPUT_REQUIRED equ 140
    INTERNET_STATUS_STATE_CHANGE equ 200
    INTERNET_STATUS_COOKIE_SENT equ 320
    INTERNET_STATUS_COOKIE_RECEIVED equ 321
    INTERNET_STATUS_PRIVACY_IMPACTED equ 324
    INTERNET_STATUS_P3P_HEADER equ 325
    INTERNET_STATUS_P3P_POLICYREF equ 326
    INTERNET_STATUS_COOKIE_HISTORY equ 327
    INTERNET_STATE_CONNECTED equ 00000001h
    INTERNET_STATE_DISCONNECTED equ 00000002h
    INTERNET_STATE_DISCONNECTED_BY_USER equ 00000010h
    INTERNET_STATE_IDLE equ 00000100h
    INTERNET_STATE_BUSY equ 00000200h
    InternetCookieState typedef SDWORD
    COOKIE_STATE_UNKNOWN equ 0h
    COOKIE_STATE_ACCEPT equ 1h
    COOKIE_STATE_PROMPT equ 2h
    COOKIE_STATE_LEASH equ 3h
    COOKIE_STATE_DOWNGRADE equ 4h
    COOKIE_STATE_REJECT equ 5h
    COOKIE_STATE_MAX equ COOKIE_STATE_REJECT
    
    IncomingCookieState struct
      cSession SDWORD ?
      cPersistent SDWORD ?
      cAccepted SDWORD ?
      cLeashed SDWORD ?
      cDowngraded SDWORD ?
      cBlocked SDWORD ?
      pszLocation POINTER ?
    IncomingCookieState ends
    OutgoingCookieState struct
      cSent SDWORD ?
      cSuppressed SDWORD ?
      pszLocation POINTER ?
    OutgoingCookieState ends
    InternetCookieHistory struct
      fAccepted BOOL ?
      fLeashed BOOL ?
      fDowngraded BOOL ?
      fRejected BOOL ?
    InternetCookieHistory ends
    CookieDecision struct
      dwCookieState DWORD ?
      fAllowSession BOOL ?
    CookieDecision ends
    INTERNET_INVALID_STATUS_CALLBACK equ ((INTERNET_STATUS_CALLBACK) - 1)
    FTP_TRANSFER_TYPE_UNKNOWN equ 00000000h
    FTP_TRANSFER_TYPE_ASCII equ 00000001h
    FTP_TRANSFER_TYPE_BINARY equ 00000002h
    FTP_TRANSFER_TYPE_MASK equ <(FTP_TRANSFER_TYPE_ASCII or FTP_TRANSFER_TYPE_BINARY)>
    FtpFindFirstFileA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR, :LPWIN32_FIND_DATAA, :DWORD, :DWORD_PTR
    FtpFindFirstFileW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR, :LPWIN32_FIND_DATAW, :DWORD, :DWORD_PTR
    ifdef UNICODE
      FtpFindFirstFile equ <FtpFindFirstFileW>
    else
      FtpFindFirstFile equ <FtpFindFirstFileA>
    endif
    FtpGetFileA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR, :LPCSTR, :BOOL, :DWORD, :DWORD, :DWORD_PTR
    FtpGetFileW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR, :LPCWSTR, :BOOL, :DWORD, :DWORD, :DWORD_PTR
    ifdef UNICODE
      FtpGetFile equ <FtpGetFileW>
    else
      FtpGetFile equ <FtpGetFileA>
    endif
    FtpPutFileA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR, :LPCSTR, :DWORD, :DWORD_PTR
    FtpPutFileW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR, :LPCWSTR, :DWORD, :DWORD_PTR
    ifdef UNICODE
      FtpPutFile equ <FtpPutFileW>
    else
      FtpPutFile equ <FtpPutFileA>
    endif
    FtpGetFileEx proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR, :LPCWSTR, :BOOL, :DWORD, :DWORD, :DWORD_PTR
    FtpPutFileEx proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR, :LPCSTR, :DWORD, :DWORD_PTR
    FtpDeleteFileA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR
    FtpDeleteFileW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR
    ifdef UNICODE
      FtpDeleteFile equ <FtpDeleteFileW>
    else
      FtpDeleteFile equ <FtpDeleteFileA>
    endif
    FtpRenameFileA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR, :LPCSTR
    FtpRenameFileW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR, :LPCWSTR
    ifdef UNICODE
      FtpRenameFile equ <FtpRenameFileW>
    else
      FtpRenameFile equ <FtpRenameFileA>
    endif
    FtpOpenFileA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR, :DWORD, :DWORD, :DWORD_PTR
    FtpOpenFileW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR, :DWORD, :DWORD, :DWORD_PTR
    ifdef UNICODE
      FtpOpenFile equ <FtpOpenFileW>
    else
      FtpOpenFile equ <FtpOpenFileA>
    endif
    FtpCreateDirectoryA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR
    FtpCreateDirectoryW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR
    ifdef UNICODE
      FtpCreateDirectory equ <FtpCreateDirectoryW>
    else
      FtpCreateDirectory equ <FtpCreateDirectoryA>
    endif
    FtpRemoveDirectoryA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR
    FtpRemoveDirectoryW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR
    ifdef UNICODE
      FtpRemoveDirectory equ <FtpRemoveDirectoryW>
    else
      FtpRemoveDirectory equ <FtpRemoveDirectoryA>
    endif
    FtpSetCurrentDirectoryA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR
    FtpSetCurrentDirectoryW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR
    ifdef UNICODE
      FtpSetCurrentDirectory equ <FtpSetCurrentDirectoryW>
    else
      FtpSetCurrentDirectory equ <FtpSetCurrentDirectoryA>
    endif
    FtpGetCurrentDirectoryA proto WIN_STD_CALL_CONV :HINTERNET, :LPSTR, :LPDWORD
    FtpGetCurrentDirectoryW proto WIN_STD_CALL_CONV :HINTERNET, :LPWSTR, :LPDWORD
    ifdef UNICODE
      FtpGetCurrentDirectory equ <FtpGetCurrentDirectoryW>
    else
      FtpGetCurrentDirectory equ <FtpGetCurrentDirectoryA>
    endif
    FtpCommandA proto WIN_STD_CALL_CONV :HINTERNET, :BOOL, :DWORD, :LPCSTR, :DWORD_PTR, :ptr HINTERNET
    FtpCommandW proto WIN_STD_CALL_CONV :HINTERNET, :BOOL, :DWORD, :LPCWSTR, :DWORD_PTR, :ptr HINTERNET
    ifdef UNICODE
      FtpCommand equ <FtpCommandW>
    else
      FtpCommand equ <FtpCommandA>
    endif
    FtpGetFileSize proto WIN_STD_CALL_CONV :HINTERNET, :LPDWORD
    MAX_GOPHER_DISPLAY_TEXT equ 128
    MAX_GOPHER_SELECTOR_TEXT equ 256
    MAX_GOPHER_HOST_NAME equ <INTERNET_MAX_HOST_NAME_LENGTH>
    MAX_GOPHER_LOCATOR_LENGTH equ (1 + MAX_GOPHER_DISPLAY_TEXT + 1 + MAX_GOPHER_SELECTOR_TEXT + 1 + MAX_GOPHER_HOST_NAME + 1 + INTERNET_MAX_PORT_NUMBER_LENGTH + 1 + 1 + 2)
    GOPHER_FIND_DATAA struct
      DisplayString CHAR MAX_GOPHER_DISPLAY_TEXT + 1 dup (?)
      GopherType DWORD ?
      SizeLow DWORD ?
      SizeHigh DWORD ?
      LastModificationTime FILETIME <>
      Locator CHAR MAX_GOPHER_LOCATOR_LENGTH + 1 dup (?)
    GOPHER_FIND_DATAA ends
    LPGOPHER_FIND_DATAA typedef ptr GOPHER_FIND_DATAA
    
    GOPHER_FIND_DATAW struct
      DisplayString WCHAR MAX_GOPHER_DISPLAY_TEXT + 1 dup (?)
      GopherType DWORD ?
      SizeLow DWORD ?
      SizeHigh DWORD ?
      LastModificationTime FILETIME <>
      Locator WCHAR MAX_GOPHER_LOCATOR_LENGTH + 1 dup (?)
    GOPHER_FIND_DATAW ends
    LPGOPHER_FIND_DATAW typedef ptr GOPHER_FIND_DATAW
    
    ifdef UNICODE
      GOPHER_FIND_DATA typedef GOPHER_FIND_DATAW
      LPGOPHER_FIND_DATA typedef LPGOPHER_FIND_DATAW
    else
      GOPHER_FIND_DATA typedef GOPHER_FIND_DATAA
      LPGOPHER_FIND_DATA typedef LPGOPHER_FIND_DATAA
    endif
    GOPHER_TYPE_TEXT_FILE equ 00000001h
    GOPHER_TYPE_DIRECTORY equ 00000002h
    GOPHER_TYPE_CSO equ 00000004h
    GOPHER_TYPE_ERROR equ 00000008h
    GOPHER_TYPE_MAC_BINHEX equ 00000010h
    GOPHER_TYPE_DOS_ARCHIVE equ 00000020h
    GOPHER_TYPE_UNIX_UUENCODED equ 00000040h
    GOPHER_TYPE_INDEX_SERVER equ 00000080h
    GOPHER_TYPE_TELNET equ 00000100h
    GOPHER_TYPE_BINARY equ 00000200h
    GOPHER_TYPE_REDUNDANT equ 00000400h
    GOPHER_TYPE_TN3270 equ 00000800h
    GOPHER_TYPE_GIF equ 00001000h
    GOPHER_TYPE_IMAGE equ 00002000h
    GOPHER_TYPE_BITMAP equ 00004000h
    GOPHER_TYPE_MOVIE equ 00008000h
    GOPHER_TYPE_SOUND equ 00010000h
    GOPHER_TYPE_HTML equ 00020000h
    GOPHER_TYPE_PDF equ 00040000h
    GOPHER_TYPE_CALENDAR equ 00080000h
    GOPHER_TYPE_INLINE equ 00100000h
    GOPHER_TYPE_UNKNOWN equ 20000000h
    GOPHER_TYPE_ASK equ 40000000h
    GOPHER_TYPE_GOPHER_PLUS equ 80000000h
    IS_GOPHER_FILE macro type_
      exitm <(((type_) and GOPHER_TYPE_FILE_MASK) ? TRUE : FALSE)>
    endm
    IS_GOPHER_DIRECTORY macro type_
      exitm <(((type_) and GOPHER_TYPE_DIRECTORY) ? TRUE : FALSE)>
    endm
    IS_GOPHER_PHONE_SERVER macro type_
      exitm <(((type_) and GOPHER_TYPE_CSO) ? TRUE : FALSE)>
    endm
    IS_GOPHER_ERROR macro type_
      exitm <(((type_) and GOPHER_TYPE_ERROR) ? TRUE : FALSE)>
    endm
    IS_GOPHER_INDEX_SERVER macro type_
      exitm <(((type_) and GOPHER_TYPE_INDEX_SERVER) ? TRUE : FALSE)>
    endm
    IS_GOPHER_TELNET_SESSION macro type_
      exitm <(((type_) and GOPHER_TYPE_TELNET) ? TRUE : FALSE)>
    endm
    IS_GOPHER_BACKUP_SERVER macro type_
      exitm <(((type_) and GOPHER_TYPE_REDUNDANT) ? TRUE : FALSE)>
    endm
    IS_GOPHER_TN3270_SESSION macro type_
      exitm <(((type_) and GOPHER_TYPE_TN3270) ? TRUE : FALSE)>
    endm
    IS_GOPHER_ASK macro type_
      exitm <(((type_) and GOPHER_TYPE_ASK) ? TRUE : FALSE)>
    endm
    IS_GOPHER_PLUS macro type_
      exitm <(((type_) and GOPHER_TYPE_GOPHER_PLUS) ? TRUE : FALSE)>
    endm
    IS_GOPHER_TYPE_KNOWN macro type_
      exitm <(((type_) and GOPHER_TYPE_UNKNOWN) ? FALSE : TRUE)>
    endm
    GOPHER_TYPE_FILE_MASK equ <(GOPHER_TYPE_TEXT_FILE or GOPHER_TYPE_MAC_BINHEX or GOPHER_TYPE_DOS_ARCHIVE or GOPHER_TYPE_UNIX_UUENCODED or GOPHER_TYPE_BINARY or GOPHER_TYPE_GIF or GOPHER_TYPE_IMAGE or GOPHER_TYPE_BITMAP or GOPHER_TYPE_MOVIE or GOPHER_TYPE_SOUND or GOPHER_TYPE_HTML or GOPHER_TYPE_PDF or GOPHER_TYPE_CALENDAR or GOPHER_TYPE_INLINE)>
    GOPHER_ADMIN_ATTRIBUTE_TYPE struct
      Comment_ LPCTSTR ?
      EmailAddress LPCTSTR ?
    GOPHER_ADMIN_ATTRIBUTE_TYPE ends
    LPGOPHER_ADMIN_ATTRIBUTE_TYPE typedef ptr GOPHER_ADMIN_ATTRIBUTE_TYPE
    
    GOPHER_MOD_DATE_ATTRIBUTE_TYPE struct
      DateAndTime FILETIME <>
    GOPHER_MOD_DATE_ATTRIBUTE_TYPE ends
    LPGOPHER_MOD_DATE_ATTRIBUTE_TYPE typedef ptr GOPHER_MOD_DATE_ATTRIBUTE_TYPE
    
    GOPHER_TTL_ATTRIBUTE_TYPE struct
      Ttl DWORD ?
    GOPHER_TTL_ATTRIBUTE_TYPE ends
    LPGOPHER_TTL_ATTRIBUTE_TYPE typedef ptr GOPHER_TTL_ATTRIBUTE_TYPE
    
    GOPHER_SCORE_ATTRIBUTE_TYPE struct
      Score INT_ ?
    GOPHER_SCORE_ATTRIBUTE_TYPE ends
    LPGOPHER_SCORE_ATTRIBUTE_TYPE typedef ptr GOPHER_SCORE_ATTRIBUTE_TYPE
    
    GOPHER_SCORE_RANGE_ATTRIBUTE_TYPE struct
      LowerBound INT_ ?
      UpperBound INT_ ?
    GOPHER_SCORE_RANGE_ATTRIBUTE_TYPE ends
    LPGOPHER_SCORE_RANGE_ATTRIBUTE_TYPE typedef ptr GOPHER_SCORE_RANGE_ATTRIBUTE_TYPE
    
    GOPHER_SITE_ATTRIBUTE_TYPE struct
      Site LPCTSTR ?
    GOPHER_SITE_ATTRIBUTE_TYPE ends
    LPGOPHER_SITE_ATTRIBUTE_TYPE typedef ptr GOPHER_SITE_ATTRIBUTE_TYPE
    
    GOPHER_ORGANIZATION_ATTRIBUTE_TYPE struct
      Organization LPCTSTR ?
    GOPHER_ORGANIZATION_ATTRIBUTE_TYPE ends
    LPGOPHER_ORGANIZATION_ATTRIBUTE_TYPE typedef ptr GOPHER_ORGANIZATION_ATTRIBUTE_TYPE
    
    GOPHER_LOCATION_ATTRIBUTE_TYPE struct
      Location LPCTSTR ?
    GOPHER_LOCATION_ATTRIBUTE_TYPE ends
    LPGOPHER_LOCATION_ATTRIBUTE_TYPE typedef ptr GOPHER_LOCATION_ATTRIBUTE_TYPE
    
    GOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE struct
      DegreesNorth INT_ ?
      MinutesNorth INT_ ?
      SecondsNorth INT_ ?
      DegreesEast INT_ ?
      MinutesEast INT_ ?
      SecondsEast INT_ ?
    GOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE ends
    LPGOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE typedef ptr GOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE
    
    GOPHER_TIMEZONE_ATTRIBUTE_TYPE struct
      Zone INT_ ?
    GOPHER_TIMEZONE_ATTRIBUTE_TYPE ends
    LPGOPHER_TIMEZONE_ATTRIBUTE_TYPE typedef ptr GOPHER_TIMEZONE_ATTRIBUTE_TYPE
    
    GOPHER_PROVIDER_ATTRIBUTE_TYPE struct
      Provider LPCTSTR ?
    GOPHER_PROVIDER_ATTRIBUTE_TYPE ends
    LPGOPHER_PROVIDER_ATTRIBUTE_TYPE typedef ptr GOPHER_PROVIDER_ATTRIBUTE_TYPE
    
    GOPHER_VERSION_ATTRIBUTE_TYPE struct
      Version LPCTSTR ?
    GOPHER_VERSION_ATTRIBUTE_TYPE ends
    LPGOPHER_VERSION_ATTRIBUTE_TYPE typedef ptr GOPHER_VERSION_ATTRIBUTE_TYPE
    
    GOPHER_ABSTRACT_ATTRIBUTE_TYPE struct
      ShortAbstract LPCTSTR ?
      AbstractFile LPCTSTR ?
    GOPHER_ABSTRACT_ATTRIBUTE_TYPE ends
    LPGOPHER_ABSTRACT_ATTRIBUTE_TYPE typedef ptr GOPHER_ABSTRACT_ATTRIBUTE_TYPE
    
    GOPHER_VIEW_ATTRIBUTE_TYPE struct
      ContentType LPCTSTR ?
      Language_ LPCTSTR ?
      Size_ DWORD ?
    GOPHER_VIEW_ATTRIBUTE_TYPE ends
    LPGOPHER_VIEW_ATTRIBUTE_TYPE typedef ptr GOPHER_VIEW_ATTRIBUTE_TYPE
    
    GOPHER_VERONICA_ATTRIBUTE_TYPE struct
      TreeWalk BOOL ?
    GOPHER_VERONICA_ATTRIBUTE_TYPE ends
    LPGOPHER_VERONICA_ATTRIBUTE_TYPE typedef ptr GOPHER_VERONICA_ATTRIBUTE_TYPE
    
    GOPHER_ASK_ATTRIBUTE_TYPE struct
      QuestionType LPCTSTR ?
      QuestionText LPCTSTR ?
    GOPHER_ASK_ATTRIBUTE_TYPE ends
    LPGOPHER_ASK_ATTRIBUTE_TYPE typedef ptr GOPHER_ASK_ATTRIBUTE_TYPE
    
    GOPHER_UNKNOWN_ATTRIBUTE_TYPE struct
      Text LPCTSTR ?
    GOPHER_UNKNOWN_ATTRIBUTE_TYPE ends
    LPGOPHER_UNKNOWN_ATTRIBUTE_TYPE typedef ptr GOPHER_UNKNOWN_ATTRIBUTE_TYPE
    
    GOPHER_ATTRIBUTE_TYPE struct
      CategoryId DWORD ?
      AttributeId DWORD ?
      union AttributeType
        Admin GOPHER_ADMIN_ATTRIBUTE_TYPE <>
        ModDate GOPHER_MOD_DATE_ATTRIBUTE_TYPE <>
        Ttl GOPHER_TTL_ATTRIBUTE_TYPE <>
        Score GOPHER_SCORE_ATTRIBUTE_TYPE <>
        ScoreRange GOPHER_SCORE_RANGE_ATTRIBUTE_TYPE <>
        Site GOPHER_SITE_ATTRIBUTE_TYPE <>
        Organization GOPHER_ORGANIZATION_ATTRIBUTE_TYPE <>
        Location GOPHER_LOCATION_ATTRIBUTE_TYPE <>
        GeographicalLocation GOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE <>
        TimeZone GOPHER_TIMEZONE_ATTRIBUTE_TYPE <>
        Provider GOPHER_PROVIDER_ATTRIBUTE_TYPE <>
        Version GOPHER_VERSION_ATTRIBUTE_TYPE <>
        Abstract GOPHER_ABSTRACT_ATTRIBUTE_TYPE <>
        View GOPHER_VIEW_ATTRIBUTE_TYPE <>
        Veronica GOPHER_VERONICA_ATTRIBUTE_TYPE <>
        Ask GOPHER_ASK_ATTRIBUTE_TYPE <>
        Unknown GOPHER_UNKNOWN_ATTRIBUTE_TYPE <>
      ends
    GOPHER_ATTRIBUTE_TYPE ends
    LPGOPHER_ATTRIBUTE_TYPE typedef ptr GOPHER_ATTRIBUTE_TYPE
    
    MAX_GOPHER_CATEGORY_NAME equ 128
    MAX_GOPHER_ATTRIBUTE_NAME equ 128
    MIN_GOPHER_ATTRIBUTE_LENGTH equ 256
    GOPHER_INFO_CATEGORY equ <TEXT("+INFO")>
    GOPHER_ADMIN_CATEGORY equ <TEXT("+ADMIN")>
    GOPHER_VIEWS_CATEGORY equ <TEXT("+VIEWS")>
    GOPHER_ABSTRACT_CATEGORY equ <TEXT("+ABSTRACT")>
    GOPHER_VERONICA_CATEGORY equ <TEXT("+VERONICA")>
    GOPHER_ADMIN_ATTRIBUTE equ <TEXT("Admin")>
    GOPHER_MOD_DATE_ATTRIBUTE equ <TEXT("Mod-Date")>
    GOPHER_TTL_ATTRIBUTE equ <TEXT("TTL")>
    GOPHER_SCORE_ATTRIBUTE equ <TEXT("Score")>
    GOPHER_RANGE_ATTRIBUTE equ <TEXT("Score-range")>
    GOPHER_SITE_ATTRIBUTE equ <TEXT("Site")>
    GOPHER_ORG_ATTRIBUTE equ <TEXT("Org")>
    GOPHER_LOCATION_ATTRIBUTE equ <TEXT("Loc")>
    GOPHER_GEOG_ATTRIBUTE equ <TEXT("Geog")>
    GOPHER_TIMEZONE_ATTRIBUTE equ <TEXT("TZ")>
    GOPHER_PROVIDER_ATTRIBUTE equ <TEXT("Provider")>
    GOPHER_VERSION_ATTRIBUTE equ <TEXT("Version")>
    GOPHER_ABSTRACT_ATTRIBUTE equ <TEXT("Abstract")>
    GOPHER_VIEW_ATTRIBUTE equ <TEXT("View")>
    GOPHER_TREEWALK_ATTRIBUTE equ <TEXT("treewalk")>
    GOPHER_ATTRIBUTE_ID_BASE equ 0abcccc00h
    GOPHER_CATEGORY_ID_ALL equ (GOPHER_ATTRIBUTE_ID_BASE + 1)
    GOPHER_CATEGORY_ID_INFO equ (GOPHER_ATTRIBUTE_ID_BASE + 2)
    GOPHER_CATEGORY_ID_ADMIN equ (GOPHER_ATTRIBUTE_ID_BASE + 3)
    GOPHER_CATEGORY_ID_VIEWS equ (GOPHER_ATTRIBUTE_ID_BASE + 4)
    GOPHER_CATEGORY_ID_ABSTRACT equ (GOPHER_ATTRIBUTE_ID_BASE + 5)
    GOPHER_CATEGORY_ID_VERONICA equ (GOPHER_ATTRIBUTE_ID_BASE + 6)
    GOPHER_CATEGORY_ID_ASK equ (GOPHER_ATTRIBUTE_ID_BASE + 7)
    GOPHER_CATEGORY_ID_UNKNOWN equ (GOPHER_ATTRIBUTE_ID_BASE + 8)
    GOPHER_ATTRIBUTE_ID_ALL equ (GOPHER_ATTRIBUTE_ID_BASE + 9)
    GOPHER_ATTRIBUTE_ID_ADMIN equ (GOPHER_ATTRIBUTE_ID_BASE + 10)
    GOPHER_ATTRIBUTE_ID_MOD_DATE equ (GOPHER_ATTRIBUTE_ID_BASE + 11)
    GOPHER_ATTRIBUTE_ID_TTL equ (GOPHER_ATTRIBUTE_ID_BASE + 12)
    GOPHER_ATTRIBUTE_ID_SCORE equ (GOPHER_ATTRIBUTE_ID_BASE + 13)
    GOPHER_ATTRIBUTE_ID_RANGE equ (GOPHER_ATTRIBUTE_ID_BASE + 14)
    GOPHER_ATTRIBUTE_ID_SITE equ (GOPHER_ATTRIBUTE_ID_BASE + 15)
    GOPHER_ATTRIBUTE_ID_ORG equ (GOPHER_ATTRIBUTE_ID_BASE + 16)
    GOPHER_ATTRIBUTE_ID_LOCATION equ (GOPHER_ATTRIBUTE_ID_BASE + 17)
    GOPHER_ATTRIBUTE_ID_GEOG equ (GOPHER_ATTRIBUTE_ID_BASE + 18)
    GOPHER_ATTRIBUTE_ID_TIMEZONE equ (GOPHER_ATTRIBUTE_ID_BASE + 19)
    GOPHER_ATTRIBUTE_ID_PROVIDER equ (GOPHER_ATTRIBUTE_ID_BASE + 20)
    GOPHER_ATTRIBUTE_ID_VERSION equ (GOPHER_ATTRIBUTE_ID_BASE + 21)
    GOPHER_ATTRIBUTE_ID_ABSTRACT equ (GOPHER_ATTRIBUTE_ID_BASE + 22)
    GOPHER_ATTRIBUTE_ID_VIEW equ (GOPHER_ATTRIBUTE_ID_BASE + 23)
    GOPHER_ATTRIBUTE_ID_TREEWALK equ (GOPHER_ATTRIBUTE_ID_BASE + 24)
    GOPHER_ATTRIBUTE_ID_UNKNOWN equ (GOPHER_ATTRIBUTE_ID_BASE + 25)
    GopherCreateLocatorA proto WIN_STD_CALL_CONV :LPCSTR, :INTERNET_PORT, :LPCSTR, :LPCSTR, :DWORD, :LPSTR, :LPDWORD
    GopherCreateLocatorW proto WIN_STD_CALL_CONV :LPCWSTR, :INTERNET_PORT, :LPCWSTR, :LPCWSTR, :DWORD, :LPWSTR, :LPDWORD
    ifdef UNICODE
      GopherCreateLocator equ <GopherCreateLocatorW>
    else
      GopherCreateLocator equ <GopherCreateLocatorA>
    endif
    GopherGetLocatorTypeA proto WIN_STD_CALL_CONV :LPCSTR, :LPDWORD
    GopherGetLocatorTypeW proto WIN_STD_CALL_CONV :LPCWSTR, :LPDWORD
    ifdef UNICODE
      GopherGetLocatorType equ <GopherGetLocatorTypeW>
    else
      GopherGetLocatorType equ <GopherGetLocatorTypeA>
    endif
    GopherFindFirstFileA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR, :LPCSTR, :LPGOPHER_FIND_DATAA, :DWORD, :DWORD_PTR
    GopherFindFirstFileW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR, :LPCWSTR, :LPGOPHER_FIND_DATAW, :DWORD, :DWORD_PTR
    ifdef UNICODE
      GopherFindFirstFile equ <GopherFindFirstFileW>
    else
      GopherFindFirstFile equ <GopherFindFirstFileA>
    endif
    GopherOpenFileA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR, :LPCSTR, :DWORD, :DWORD_PTR
    GopherOpenFileW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR, :LPCWSTR, :DWORD, :DWORD_PTR
    ifdef UNICODE
      GopherOpenFile equ <GopherOpenFileW>
    else
      GopherOpenFile equ <GopherOpenFileA>
    endif
    TYPE_GOPHER_ATTRIBUTE_ENUMERATOR typedef proto WIN_STD_CALL_CONV :LPGOPHER_ATTRIBUTE_TYPE, :DWORD
    GOPHER_ATTRIBUTE_ENUMERATOR typedef ptr TYPE_GOPHER_ATTRIBUTE_ENUMERATOR
    GopherGetAttributeA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR, :LPCSTR, :LPBYTE, :DWORD, :LPDWORD, :GOPHER_ATTRIBUTE_ENUMERATOR, :DWORD_PTR
    GopherGetAttributeW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR, :LPCWSTR, :LPBYTE, :DWORD, :LPDWORD, :GOPHER_ATTRIBUTE_ENUMERATOR, :DWORD_PTR
    ifdef UNICODE
      GopherGetAttribute equ <GopherGetAttributeW>
    else
      GopherGetAttribute equ <GopherGetAttributeA>
    endif
    HTTP_MAJOR_VERSION equ 1
    HTTP_MINOR_VERSION equ 0
    HTTP_VERSIONA equ <"HTTP/1.0">
    HTTP_VERSIONW equ <L("HTTP/1.0")>
    ifdef UNICODE
      HTTP_VERSION equ <HTTP_VERSIONW>
    else
      HTTP_VERSION equ <HTTP_VERSIONA>
    endif
    HTTP_QUERY_MIME_VERSION equ 0
    HTTP_QUERY_CONTENT_TYPE equ 1
    HTTP_QUERY_CONTENT_TRANSFER_ENCODING equ 2
    HTTP_QUERY_CONTENT_ID equ 3
    HTTP_QUERY_CONTENT_DESCRIPTION equ 4
    HTTP_QUERY_CONTENT_LENGTH equ 5
    HTTP_QUERY_CONTENT_LANGUAGE equ 6
    HTTP_QUERY_ALLOW equ 7
    HTTP_QUERY_PUBLIC equ 8
    HTTP_QUERY_DATE equ 9
    HTTP_QUERY_EXPIRES equ 10
    HTTP_QUERY_LAST_MODIFIED equ 11
    HTTP_QUERY_MESSAGE_ID equ 12
    HTTP_QUERY_URI equ 13
    HTTP_QUERY_DERIVED_FROM equ 14
    HTTP_QUERY_COST equ 15
    HTTP_QUERY_LINK equ 16
    HTTP_QUERY_PRAGMA equ 17
    HTTP_QUERY_VERSION equ 18
    HTTP_QUERY_STATUS_CODE equ 19
    HTTP_QUERY_STATUS_TEXT equ 20
    HTTP_QUERY_RAW_HEADERS equ 21
    HTTP_QUERY_RAW_HEADERS_CRLF equ 22
    HTTP_QUERY_CONNECTION equ 23
    HTTP_QUERY_ACCEPT equ 24
    HTTP_QUERY_ACCEPT_CHARSET equ 25
    HTTP_QUERY_ACCEPT_ENCODING equ 26
    HTTP_QUERY_ACCEPT_LANGUAGE equ 27
    HTTP_QUERY_AUTHORIZATION equ 28
    HTTP_QUERY_CONTENT_ENCODING equ 29
    HTTP_QUERY_FORWARDED equ 30
    HTTP_QUERY_FROM equ 31
    HTTP_QUERY_IF_MODIFIED_SINCE equ 32
    HTTP_QUERY_LOCATION equ 33
    HTTP_QUERY_ORIG_URI equ 34
    HTTP_QUERY_REFERER equ 35
    HTTP_QUERY_RETRY_AFTER equ 36
    HTTP_QUERY_SERVER equ 37
    HTTP_QUERY_TITLE equ 38
    HTTP_QUERY_USER_AGENT equ 39
    HTTP_QUERY_WWW_AUTHENTICATE equ 40
    HTTP_QUERY_PROXY_AUTHENTICATE equ 41
    HTTP_QUERY_ACCEPT_RANGES equ 42
    HTTP_QUERY_SET_COOKIE equ 43
    HTTP_QUERY_COOKIE equ 44
    HTTP_QUERY_REQUEST_METHOD equ 45
    HTTP_QUERY_REFRESH equ 46
    HTTP_QUERY_CONTENT_DISPOSITION equ 47
    HTTP_QUERY_AGE equ 48
    HTTP_QUERY_CACHE_CONTROL equ 49
    HTTP_QUERY_CONTENT_BASE equ 50
    HTTP_QUERY_CONTENT_LOCATION equ 51
    HTTP_QUERY_CONTENT_MD5 equ 52
    HTTP_QUERY_CONTENT_RANGE equ 53
    HTTP_QUERY_ETAG equ 54
    HTTP_QUERY_HOST equ 55
    HTTP_QUERY_IF_MATCH equ 56
    HTTP_QUERY_IF_NONE_MATCH equ 57
    HTTP_QUERY_IF_RANGE equ 58
    HTTP_QUERY_IF_UNMODIFIED_SINCE equ 59
    HTTP_QUERY_MAX_FORWARDS equ 60
    HTTP_QUERY_PROXY_AUTHORIZATION equ 61
    HTTP_QUERY_RANGE equ 62
    HTTP_QUERY_TRANSFER_ENCODING equ 63
    HTTP_QUERY_UPGRADE equ 64
    HTTP_QUERY_VARY equ 65
    HTTP_QUERY_VIA equ 66
    HTTP_QUERY_WARNING equ 67
    HTTP_QUERY_EXPECT equ 68
    HTTP_QUERY_PROXY_CONNECTION equ 69
    HTTP_QUERY_UNLESS_MODIFIED_SINCE equ 70
    HTTP_QUERY_ECHO_REQUEST equ 71
    HTTP_QUERY_ECHO_REPLY equ 72
    HTTP_QUERY_ECHO_HEADERS equ 73
    HTTP_QUERY_ECHO_HEADERS_CRLF equ 74
    HTTP_QUERY_PROXY_SUPPORT equ 75
    HTTP_QUERY_AUTHENTICATION_INFO equ 76
    HTTP_QUERY_PASSPORT_URLS equ 77
    HTTP_QUERY_PASSPORT_CONFIG equ 78
    HTTP_QUERY_X_CONTENT_TYPE_OPTIONS equ 79
    HTTP_QUERY_P3P equ 80
    HTTP_QUERY_X_P2P_PEERDIST equ 81
    HTTP_QUERY_TRANSLATE equ 82
    HTTP_QUERY_X_UA_COMPATIBLE equ 83
    HTTP_QUERY_DEFAULT_STYLE equ 84
    HTTP_QUERY_X_FRAME_OPTIONS equ 85
    HTTP_QUERY_X_XSS_PROTECTION equ 86
    HTTP_QUERY_SET_COOKIE2 equ 87
    HTTP_QUERY_DO_NOT_TRACK equ 88
    HTTP_QUERY_KEEP_ALIVE equ 89
    HTTP_QUERY_HTTP2_SETTINGS equ 90
    HTTP_QUERY_STRICT_TRANSPORT_SECURITY equ 91
    HTTP_QUERY_TOKEN_BINDING equ 92
    HTTP_QUERY_INCLUDE_REFERRED_TOKEN_BINDING_ID equ 93
    HTTP_QUERY_INCLUDE_REFERER_TOKEN_BINDING_ID equ <HTTP_QUERY_INCLUDE_REFERRED_TOKEN_BINDING_ID>
    HTTP_QUERY_PUBLIC_KEY_PINS equ 94
    HTTP_QUERY_PUBLIC_KEY_PINS_REPORT_ONLY equ 95
    HTTP_QUERY_MAX equ 95
    HTTP_QUERY_CUSTOM equ 65535
    HTTP_QUERY_FLAG_REQUEST_HEADERS equ 80000000h
    HTTP_QUERY_FLAG_SYSTEMTIME equ 40000000h
    HTTP_QUERY_FLAG_NUMBER equ 20000000h
    HTTP_QUERY_FLAG_COALESCE equ 10000000h
    HTTP_QUERY_FLAG_NUMBER64 equ 08000000h
    HTTP_QUERY_FLAG_COALESCE_WITH_COMMA equ 04000000h
    HTTP_QUERY_MODIFIER_FLAGS_MASK equ <(HTTP_QUERY_FLAG_REQUEST_HEADERS or HTTP_QUERY_FLAG_SYSTEMTIME or HTTP_QUERY_FLAG_NUMBER or HTTP_QUERY_FLAG_COALESCE or HTTP_QUERY_FLAG_NUMBER64 or HTTP_QUERY_FLAG_COALESCE_WITH_COMMA)>
    HTTP_QUERY_HEADER_MASK equ <(not HTTP_QUERY_MODIFIER_FLAGS_MASK)>
    HTTP_STATUS_CONTINUE equ 100
    HTTP_STATUS_SWITCH_PROTOCOLS equ 101
    HTTP_STATUS_OK equ 200
    HTTP_STATUS_CREATED equ 201
    HTTP_STATUS_ACCEPTED equ 202
    HTTP_STATUS_PARTIAL equ 203
    HTTP_STATUS_NO_CONTENT equ 204
    HTTP_STATUS_RESET_CONTENT equ 205
    HTTP_STATUS_PARTIAL_CONTENT equ 206
    HTTP_STATUS_AMBIGUOUS equ 300
    HTTP_STATUS_MOVED equ 301
    HTTP_STATUS_REDIRECT equ 302
    HTTP_STATUS_REDIRECT_METHOD equ 303
    HTTP_STATUS_NOT_MODIFIED equ 304
    HTTP_STATUS_USE_PROXY equ 305
    HTTP_STATUS_REDIRECT_KEEP_VERB equ 307
    HTTP_STATUS_PERMANENT_REDIRECT equ 308
    HTTP_STATUS_BAD_REQUEST equ 400
    HTTP_STATUS_DENIED equ 401
    HTTP_STATUS_PAYMENT_REQ equ 402
    HTTP_STATUS_FORBIDDEN equ 403
    HTTP_STATUS_NOT_FOUND equ 404
    HTTP_STATUS_BAD_METHOD equ 405
    HTTP_STATUS_NONE_ACCEPTABLE equ 406
    HTTP_STATUS_PROXY_AUTH_REQ equ 407
    HTTP_STATUS_REQUEST_TIMEOUT equ 408
    HTTP_STATUS_CONFLICT equ 409
    HTTP_STATUS_GONE equ 410
    HTTP_STATUS_LENGTH_REQUIRED equ 411
    HTTP_STATUS_PRECOND_FAILED equ 412
    HTTP_STATUS_REQUEST_TOO_LARGE equ 413
    HTTP_STATUS_URI_TOO_LONG equ 414
    HTTP_STATUS_UNSUPPORTED_MEDIA equ 415
    HTTP_STATUS_MISDIRECTED_REQUEST equ 421
    HTTP_STATUS_RETRY_WITH equ 449
    HTTP_STATUS_SERVER_ERROR equ 500
    HTTP_STATUS_NOT_SUPPORTED equ 501
    HTTP_STATUS_BAD_GATEWAY equ 502
    HTTP_STATUS_SERVICE_UNAVAIL equ 503
    HTTP_STATUS_GATEWAY_TIMEOUT equ 504
    HTTP_STATUS_VERSION_NOT_SUP equ 505
    HTTP_STATUS_FIRST equ <HTTP_STATUS_CONTINUE>
    HTTP_STATUS_LAST equ <HTTP_STATUS_VERSION_NOT_SUP>
    HttpOpenRequestA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR, :LPCSTR, :LPCSTR, :LPCSTR, :ptr LPCSTR, :DWORD, :DWORD_PTR
    HttpOpenRequestW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR, :LPCWSTR, :LPCWSTR, :LPCWSTR, :ptr LPCWSTR, :DWORD, :DWORD_PTR
    ifdef UNICODE
      HttpOpenRequest equ <HttpOpenRequestW>
    else
      HttpOpenRequest equ <HttpOpenRequestA>
    endif
    HttpAddRequestHeadersA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR, :DWORD, :DWORD
    HttpAddRequestHeadersW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR, :DWORD, :DWORD
    ifdef UNICODE
      HttpAddRequestHeaders equ <HttpAddRequestHeadersW>
    else
      HttpAddRequestHeaders equ <HttpAddRequestHeadersA>
    endif
    HTTP_ADDREQ_INDEX_MASK equ 0000FFFFh
    HTTP_ADDREQ_FLAGS_MASK equ 0FFFF0000h
    HTTP_ADDREQ_FLAG_ADD_IF_NEW equ 10000000h
    HTTP_ADDREQ_FLAG_ADD equ 20000000h
    HTTP_ADDREQ_FLAG_COALESCE_WITH_COMMA equ 40000000h
    HTTP_ADDREQ_FLAG_COALESCE_WITH_SEMICOLON equ 01000000h
    HTTP_ADDREQ_FLAG_COALESCE equ <HTTP_ADDREQ_FLAG_COALESCE_WITH_COMMA>
    HTTP_ADDREQ_FLAG_REPLACE equ 80000000h
    HttpSendRequestA proto WIN_STD_CALL_CONV :HINTERNET, :LPCSTR, :DWORD, :LPVOID, :DWORD
    HttpSendRequestW proto WIN_STD_CALL_CONV :HINTERNET, :LPCWSTR, :DWORD, :LPVOID, :DWORD
    ifdef UNICODE
      HttpSendRequest equ <HttpSendRequestW>
    else
      HttpSendRequest equ <HttpSendRequestA>
    endif
    HttpSendRequestExA proto WIN_STD_CALL_CONV :HINTERNET, :LPINTERNET_BUFFERSA, :LPINTERNET_BUFFERSA, :DWORD, :DWORD_PTR
    HttpSendRequestExW proto WIN_STD_CALL_CONV :HINTERNET, :LPINTERNET_BUFFERSW, :LPINTERNET_BUFFERSW, :DWORD, :DWORD_PTR
    ifdef UNICODE
      HttpSendRequestEx equ <HttpSendRequestExW>
    else
      HttpSendRequestEx equ <HttpSendRequestExA>
    endif
    HSR_ASYNC equ <WININET_API_FLAG_ASYNC>
    HSR_SYNC equ <WININET_API_FLAG_SYNC>
    HSR_USE_CONTEXT equ <WININET_API_FLAG_USE_CONTEXT>
    HSR_INITIATE equ 00000008h
    HSR_DOWNLOAD equ 00000010h
    HSR_CHUNKED equ 00000020h
    HttpEndRequestA proto WIN_STD_CALL_CONV :HINTERNET, :LPINTERNET_BUFFERSA, :DWORD, :DWORD_PTR
    HttpEndRequestW proto WIN_STD_CALL_CONV :HINTERNET, :LPINTERNET_BUFFERSW, :DWORD, :DWORD_PTR
    ifdef UNICODE
      HttpEndRequest equ <HttpEndRequestW>
    else
      HttpEndRequest equ <HttpEndRequestA>
    endif
    HttpQueryInfoA proto WIN_STD_CALL_CONV :HINTERNET, :DWORD, :LPVOID, :LPDWORD, :LPDWORD
    HttpQueryInfoW proto WIN_STD_CALL_CONV :HINTERNET, :DWORD, :LPVOID, :LPDWORD, :LPDWORD
    ifdef UNICODE
      HttpQueryInfo equ <HttpQueryInfoW>
    else
      HttpQueryInfo equ <HttpQueryInfoA>
    endif
    INTERNET_COOKIE2 struct
      pwszName PWSTR ?
      pwszValue PWSTR ?
      pwszDomain PWSTR ?
      pwszPath PWSTR ?
      dwFlags DWORD ?
      ftExpires FILETIME <>
      fExpiresSet BOOL ?
    INTERNET_COOKIE2 ends
    INTERNET_COOKIE_IS_SECURE equ 00000001h
    INTERNET_COOKIE_IS_SESSION equ 00000002h
    INTERNET_COOKIE_THIRD_PARTY equ 00000010h
    INTERNET_COOKIE_PROMPT_REQUIRED equ 00000020h
    INTERNET_COOKIE_EVALUATE_P3P equ 00000040h
    INTERNET_COOKIE_APPLY_P3P equ 00000080h
    INTERNET_COOKIE_P3P_ENABLED equ 00000100h
    INTERNET_COOKIE_IS_RESTRICTED equ 00000200h
    INTERNET_COOKIE_IE6 equ 00000400h
    INTERNET_COOKIE_IS_LEGACY equ 00000800h
    INTERNET_COOKIE_NON_SCRIPT equ 00001000h
    INTERNET_COOKIE_HTTPONLY equ 00002000h
    INTERNET_COOKIE_HOST_ONLY equ 00004000h
    INTERNET_COOKIE_APPLY_HOST_ONLY equ 00008000h
    INTERNET_COOKIE_HOST_ONLY_APPLIED equ 00080000h
    INTERNET_COOKIE_SAME_SITE_STRICT equ 00100000h
    INTERNET_COOKIE_SAME_SITE_LAX equ 00200000h
    INTERNET_COOKIE_SAME_SITE_LEVEL_CROSS_SITE equ 00400000h
    InternetSetCookieA proto WIN_STD_CALL_CONV :LPCSTR, :LPCSTR, :LPCSTR
    InternetSetCookieW proto WIN_STD_CALL_CONV :LPCWSTR, :LPCWSTR, :LPCWSTR
    ifdef UNICODE
      InternetSetCookie equ <InternetSetCookieW>
    else
      InternetSetCookie equ <InternetSetCookieA>
    endif
    InternetGetCookieA proto WIN_STD_CALL_CONV :LPCSTR, :LPCSTR, :LPSTR, :LPDWORD
    InternetGetCookieW proto WIN_STD_CALL_CONV :LPCWSTR, :LPCWSTR, :LPWSTR, :LPDWORD
    ifdef UNICODE
      InternetGetCookie equ <InternetGetCookieW>
    else
      InternetGetCookie equ <InternetGetCookieA>
    endif
    InternetSetCookieExA proto WIN_STD_CALL_CONV :LPCSTR, :LPCSTR, :LPCSTR, :DWORD, :DWORD_PTR
    InternetSetCookieExW proto WIN_STD_CALL_CONV :LPCWSTR, :LPCWSTR, :LPCWSTR, :DWORD, :DWORD_PTR
    ifdef UNICODE
      InternetSetCookieEx equ <InternetSetCookieExW>
    else
      InternetSetCookieEx equ <InternetSetCookieExA>
    endif
    InternetGetCookieExA proto WIN_STD_CALL_CONV :LPCSTR, :LPCSTR, :LPSTR, :LPDWORD, :DWORD, :LPVOID
    InternetGetCookieExW proto WIN_STD_CALL_CONV :LPCWSTR, :LPCWSTR, :LPWSTR, :LPDWORD, :DWORD, :LPVOID
    ifdef UNICODE
      InternetGetCookieEx equ <InternetGetCookieExW>
    else
      InternetGetCookieEx equ <InternetGetCookieExA>
    endif
    InternetFreeCookies proto WIN_STD_CALL_CONV :ptr INTERNET_COOKIE2, :DWORD
    InternetGetCookieEx2 proto WIN_STD_CALL_CONV :PCWSTR, :PCWSTR, :DWORD, :ptr ptr INTERNET_COOKIE2, :PDWORD
    InternetSetCookieEx2 proto WIN_STD_CALL_CONV :PCWSTR, :ptr INTERNET_COOKIE2, :PCWSTR, :DWORD, :PDWORD
    InternetAttemptConnect proto WIN_STD_CALL_CONV :DWORD
    InternetCheckConnectionA proto WIN_STD_CALL_CONV :LPCSTR, :DWORD, :DWORD
    InternetCheckConnectionW proto WIN_STD_CALL_CONV :LPCWSTR, :DWORD, :DWORD
    ifdef UNICODE
      InternetCheckConnection equ <InternetCheckConnectionW>
    else
      InternetCheckConnection equ <InternetCheckConnectionA>
    endif
    FLAG_ICC_FORCE_CONNECTION equ 00000001h
    FLAGS_ERROR_UI_FILTER_FOR_ERRORS equ 01h
    FLAGS_ERROR_UI_FLAGS_CHANGE_OPTIONS equ 02h
    FLAGS_ERROR_UI_FLAGS_GENERATE_DATA equ 04h
    FLAGS_ERROR_UI_FLAGS_NO_UI equ 08h
    FLAGS_ERROR_UI_SERIALIZE_DIALOGS equ 10h
    InternetAuthNotifyCallback proto WIN_STD_CALL_CONV :DWORD_PTR, :DWORD, :LPVOID
    TYPE_PFN_AUTH_NOTIFY typedef proto WIN_STD_CALL_CONV :DWORD_PTR, :DWORD, :LPVOID
    PFN_AUTH_NOTIFY typedef ptr TYPE_PFN_AUTH_NOTIFY
    INTERNET_AUTH_NOTIFY_DATA struct
      cbStruct DWORD ?
      dwOptions DWORD ?
      pfnNotify PFN_AUTH_NOTIFY ?
      dwContext DWORD_PTR ?
    INTERNET_AUTH_NOTIFY_DATA ends
    ResumeSuspendedDownload proto WIN_STD_CALL_CONV :HINTERNET, :DWORD
    InternetErrorDlg proto WIN_STD_CALL_CONV :HWND, :HINTERNET, :DWORD, :DWORD, :ptr LPVOID
    InternetConfirmZoneCrossingA proto WIN_STD_CALL_CONV :HWND, :LPSTR, :LPSTR, :BOOL
    InternetConfirmZoneCrossingW proto WIN_STD_CALL_CONV :HWND, :LPWSTR, :LPWSTR, :BOOL
    ifdef UNICODE
      InternetConfirmZoneCrossing equ <InternetConfirmZoneCrossingW>
    else
      ifdef _WINX32_
        InternetConfirmZoneCrossing equ <InternetConfirmZoneCrossingA>
      else
            InternetConfirmZoneCrossing proto WIN_STD_CALL_CONV :HWND, :LPSTR, :LPSTR, :BOOL
      endif
    endif
    INTERNET_ERROR_BASE equ 12000
    ERROR_INTERNET_OUT_OF_HANDLES equ (INTERNET_ERROR_BASE + 1)
    ERROR_INTERNET_TIMEOUT equ (INTERNET_ERROR_BASE + 2)
    ERROR_INTERNET_EXTENDED_ERROR equ (INTERNET_ERROR_BASE + 3)
    ERROR_INTERNET_INTERNAL_ERROR equ (INTERNET_ERROR_BASE + 4)
    ERROR_INTERNET_INVALID_URL equ (INTERNET_ERROR_BASE + 5)
    ERROR_INTERNET_UNRECOGNIZED_SCHEME equ (INTERNET_ERROR_BASE + 6)
    ERROR_INTERNET_NAME_NOT_RESOLVED equ (INTERNET_ERROR_BASE + 7)
    ERROR_INTERNET_PROTOCOL_NOT_FOUND equ (INTERNET_ERROR_BASE + 8)
    ERROR_INTERNET_INVALID_OPTION equ (INTERNET_ERROR_BASE + 9)
    ERROR_INTERNET_BAD_OPTION_LENGTH equ (INTERNET_ERROR_BASE + 10)
    ERROR_INTERNET_OPTION_NOT_SETTABLE equ (INTERNET_ERROR_BASE + 11)
    ERROR_INTERNET_SHUTDOWN equ (INTERNET_ERROR_BASE + 12)
    ERROR_INTERNET_INCORRECT_USER_NAME equ (INTERNET_ERROR_BASE + 13)
    ERROR_INTERNET_INCORRECT_PASSWORD equ (INTERNET_ERROR_BASE + 14)
    ERROR_INTERNET_LOGIN_FAILURE equ (INTERNET_ERROR_BASE + 15)
    ERROR_INTERNET_INVALID_OPERATION equ (INTERNET_ERROR_BASE + 16)
    ERROR_INTERNET_OPERATION_CANCELLED equ (INTERNET_ERROR_BASE + 17)
    ERROR_INTERNET_INCORRECT_HANDLE_TYPE equ (INTERNET_ERROR_BASE + 18)
    ERROR_INTERNET_INCORRECT_HANDLE_STATE equ (INTERNET_ERROR_BASE + 19)
    ERROR_INTERNET_NOT_PROXY_REQUEST equ (INTERNET_ERROR_BASE + 20)
    ERROR_INTERNET_REGISTRY_VALUE_NOT_FOUND equ (INTERNET_ERROR_BASE + 21)
    ERROR_INTERNET_BAD_REGISTRY_PARAMETER equ (INTERNET_ERROR_BASE + 22)
    ERROR_INTERNET_NO_DIRECT_ACCESS equ (INTERNET_ERROR_BASE + 23)
    ERROR_INTERNET_NO_CONTEXT equ (INTERNET_ERROR_BASE + 24)
    ERROR_INTERNET_NO_CALLBACK equ (INTERNET_ERROR_BASE + 25)
    ERROR_INTERNET_REQUEST_PENDING equ (INTERNET_ERROR_BASE + 26)
    ERROR_INTERNET_INCORRECT_FORMAT equ (INTERNET_ERROR_BASE + 27)
    ERROR_INTERNET_ITEM_NOT_FOUND equ (INTERNET_ERROR_BASE + 28)
    ERROR_INTERNET_CANNOT_CONNECT equ (INTERNET_ERROR_BASE + 29)
    ERROR_INTERNET_CONNECTION_ABORTED equ (INTERNET_ERROR_BASE + 30)
    ERROR_INTERNET_CONNECTION_RESET equ (INTERNET_ERROR_BASE + 31)
    ERROR_INTERNET_FORCE_RETRY equ (INTERNET_ERROR_BASE + 32)
    ERROR_INTERNET_INVALID_PROXY_REQUEST equ (INTERNET_ERROR_BASE + 33)
    ERROR_INTERNET_NEED_UI equ (INTERNET_ERROR_BASE + 34)
    ERROR_INTERNET_HANDLE_EXISTS equ (INTERNET_ERROR_BASE + 36)
    ERROR_INTERNET_SEC_CERT_DATE_INVALID equ (INTERNET_ERROR_BASE + 37)
    ERROR_INTERNET_SEC_CERT_CN_INVALID equ (INTERNET_ERROR_BASE + 38)
    ERROR_INTERNET_HTTP_TO_HTTPS_ON_REDIR equ (INTERNET_ERROR_BASE + 39)
    ERROR_INTERNET_HTTPS_TO_HTTP_ON_REDIR equ (INTERNET_ERROR_BASE + 40)
    ERROR_INTERNET_MIXED_SECURITY equ (INTERNET_ERROR_BASE + 41)
    ERROR_INTERNET_CHG_POST_IS_NON_SECURE equ (INTERNET_ERROR_BASE + 42)
    ERROR_INTERNET_POST_IS_NON_SECURE equ (INTERNET_ERROR_BASE + 43)
    ERROR_INTERNET_CLIENT_AUTH_CERT_NEEDED equ (INTERNET_ERROR_BASE + 44)
    ERROR_INTERNET_INVALID_CA equ (INTERNET_ERROR_BASE + 45)
    ERROR_INTERNET_CLIENT_AUTH_NOT_SETUP equ (INTERNET_ERROR_BASE + 46)
    ERROR_INTERNET_ASYNC_THREAD_FAILED equ (INTERNET_ERROR_BASE + 47)
    ERROR_INTERNET_REDIRECT_SCHEME_CHANGE equ (INTERNET_ERROR_BASE + 48)
    ERROR_INTERNET_DIALOG_PENDING equ (INTERNET_ERROR_BASE + 49)
    ERROR_INTERNET_RETRY_DIALOG equ (INTERNET_ERROR_BASE + 50)
    ERROR_INTERNET_HTTPS_HTTP_SUBMIT_REDIR equ (INTERNET_ERROR_BASE + 52)
    ERROR_INTERNET_INSERT_CDROM equ (INTERNET_ERROR_BASE + 53)
    ERROR_INTERNET_FORTEZZA_LOGIN_NEEDED equ (INTERNET_ERROR_BASE + 54)
    ERROR_INTERNET_SEC_CERT_ERRORS equ (INTERNET_ERROR_BASE + 55)
    ERROR_INTERNET_SEC_CERT_NO_REV equ (INTERNET_ERROR_BASE + 56)
    ERROR_INTERNET_SEC_CERT_REV_FAILED equ (INTERNET_ERROR_BASE + 57)
    ERROR_HTTP_HSTS_REDIRECT_REQUIRED equ (INTERNET_ERROR_BASE + 60)
    ERROR_INTERNET_SEC_CERT_WEAK_SIGNATURE equ (INTERNET_ERROR_BASE + 62)
    ERROR_FTP_TRANSFER_IN_PROGRESS equ (INTERNET_ERROR_BASE + 110)
    ERROR_FTP_DROPPED equ (INTERNET_ERROR_BASE + 111)
    ERROR_FTP_NO_PASSIVE_MODE equ (INTERNET_ERROR_BASE + 112)
    ERROR_GOPHER_PROTOCOL_ERROR equ (INTERNET_ERROR_BASE + 130)
    ERROR_GOPHER_NOT_FILE equ (INTERNET_ERROR_BASE + 131)
    ERROR_GOPHER_DATA_ERROR equ (INTERNET_ERROR_BASE + 132)
    ERROR_GOPHER_END_OF_DATA equ (INTERNET_ERROR_BASE + 133)
    ERROR_GOPHER_INVALID_LOCATOR equ (INTERNET_ERROR_BASE + 134)
    ERROR_GOPHER_INCORRECT_LOCATOR_TYPE equ (INTERNET_ERROR_BASE + 135)
    ERROR_GOPHER_NOT_GOPHER_PLUS equ (INTERNET_ERROR_BASE + 136)
    ERROR_GOPHER_ATTRIBUTE_NOT_FOUND equ (INTERNET_ERROR_BASE + 137)
    ERROR_GOPHER_UNKNOWN_LOCATOR equ (INTERNET_ERROR_BASE + 138)
    ERROR_HTTP_HEADER_NOT_FOUND equ (INTERNET_ERROR_BASE + 150)
    ERROR_HTTP_DOWNLEVEL_SERVER equ (INTERNET_ERROR_BASE + 151)
    ERROR_HTTP_INVALID_SERVER_RESPONSE equ (INTERNET_ERROR_BASE + 152)
    ERROR_HTTP_INVALID_HEADER equ (INTERNET_ERROR_BASE + 153)
    ERROR_HTTP_INVALID_QUERY_REQUEST equ (INTERNET_ERROR_BASE + 154)
    ERROR_HTTP_HEADER_ALREADY_EXISTS equ (INTERNET_ERROR_BASE + 155)
    ERROR_HTTP_REDIRECT_FAILED equ (INTERNET_ERROR_BASE + 156)
    ERROR_HTTP_NOT_REDIRECTED equ (INTERNET_ERROR_BASE + 160)
    ERROR_HTTP_COOKIE_NEEDS_CONFIRMATION equ (INTERNET_ERROR_BASE + 161)
    ERROR_HTTP_COOKIE_DECLINED equ (INTERNET_ERROR_BASE + 162)
    ERROR_HTTP_REDIRECT_NEEDS_CONFIRMATION equ (INTERNET_ERROR_BASE + 168)
    ERROR_INTERNET_SECURITY_CHANNEL_ERROR equ (INTERNET_ERROR_BASE + 157)
    ERROR_INTERNET_UNABLE_TO_CACHE_FILE equ (INTERNET_ERROR_BASE + 158)
    ERROR_INTERNET_TCPIP_NOT_INSTALLED equ (INTERNET_ERROR_BASE + 159)
    ERROR_INTERNET_DISCONNECTED equ (INTERNET_ERROR_BASE + 163)
    ERROR_INTERNET_SERVER_UNREACHABLE equ (INTERNET_ERROR_BASE + 164)
    ERROR_INTERNET_PROXY_SERVER_UNREACHABLE equ (INTERNET_ERROR_BASE + 165)
    ERROR_INTERNET_BAD_AUTO_PROXY_SCRIPT equ (INTERNET_ERROR_BASE + 166)
    ERROR_INTERNET_UNABLE_TO_DOWNLOAD_SCRIPT equ (INTERNET_ERROR_BASE + 167)
    ERROR_INTERNET_SEC_INVALID_CERT equ (INTERNET_ERROR_BASE + 169)
    ERROR_INTERNET_SEC_CERT_REVOKED equ (INTERNET_ERROR_BASE + 170)
    ERROR_INTERNET_FAILED_DUETOSECURITYCHECK equ (INTERNET_ERROR_BASE + 171)
    ERROR_INTERNET_NOT_INITIALIZED equ (INTERNET_ERROR_BASE + 172)
    ERROR_INTERNET_NEED_MSN_SSPI_PKG equ (INTERNET_ERROR_BASE + 173)
    ERROR_INTERNET_LOGIN_FAILURE_DISPLAY_ENTITY_BODY equ (INTERNET_ERROR_BASE + 174)
    ERROR_INTERNET_DECODING_FAILED equ (INTERNET_ERROR_BASE + 175)
    ERROR_INTERNET_CLIENT_AUTH_CERT_NEEDED_PROXY equ (INTERNET_ERROR_BASE + 187)
    ERROR_INTERNET_SECURE_FAILURE_PROXY equ (INTERNET_ERROR_BASE + 188)
    ERROR_INTERNET_HTTP_PROTOCOL_MISMATCH equ (INTERNET_ERROR_BASE + 190)
    ERROR_INTERNET_GLOBAL_CALLBACK_FAILED equ (INTERNET_ERROR_BASE + 191)
    ERROR_INTERNET_FEATURE_DISABLED equ (INTERNET_ERROR_BASE + 192)
    INTERNET_ERROR_LAST equ (INTERNET_ERROR_BASE + 192)
    NORMAL_CACHE_ENTRY equ 00000001h
    STICKY_CACHE_ENTRY equ 00000004h
    EDITED_CACHE_ENTRY equ 00000008h
    TRACK_OFFLINE_CACHE_ENTRY equ 00000010h
    TRACK_ONLINE_CACHE_ENTRY equ 00000020h
    SPARSE_CACHE_ENTRY equ 00010000h
    COOKIE_CACHE_ENTRY equ 00100000h
    URLHISTORY_CACHE_ENTRY equ 00200000h
    URLCACHE_FIND_DEFAULT_FILTER equ <NORMAL_CACHE_ENTRY or COOKIE_CACHE_ENTRY or URLHISTORY_CACHE_ENTRY or TRACK_OFFLINE_CACHE_ENTRY or TRACK_ONLINE_CACHE_ENTRY or STICKY_CACHE_ENTRY>
    if _MSC_VER ge 1200
    endif
    INTERNET_CACHE_ENTRY_INFOA struct
      dwStructSize DWORD ?
      lpszSourceUrlName LPSTR ?
      lpszLocalFileName LPSTR ?
      CacheEntryType DWORD ?
      dwUseCount DWORD ?
      dwHitRate DWORD ?
      dwSizeLow DWORD ?
      dwSizeHigh DWORD ?
      LastModifiedTime FILETIME <>
      ExpireTime FILETIME <>
      LastAccessTime FILETIME <>
      LastSyncTime FILETIME <>
      lpHeaderInfo LPSTR ?
      dwHeaderInfoSize DWORD ?
      lpszFileExtension LPSTR ?
      union
        dwReserved DWORD ?
        dwExemptDelta DWORD ?
      ends
    INTERNET_CACHE_ENTRY_INFOA ends
    _INTERNET_CACHE_ENTRY_INFOA typedef INTERNET_CACHE_ENTRY_INFOA
    LPINTERNET_CACHE_ENTRY_INFOA typedef ptr INTERNET_CACHE_ENTRY_INFOA
    
    INTERNET_CACHE_ENTRY_INFOW struct
      dwStructSize DWORD ?
      lpszSourceUrlName LPWSTR ?
      lpszLocalFileName LPWSTR ?
      CacheEntryType DWORD ?
      dwUseCount DWORD ?
      dwHitRate DWORD ?
      dwSizeLow DWORD ?
      dwSizeHigh DWORD ?
      LastModifiedTime FILETIME <>
      ExpireTime FILETIME <>
      LastAccessTime FILETIME <>
      LastSyncTime FILETIME <>
      lpHeaderInfo LPWSTR ?
      dwHeaderInfoSize DWORD ?
      lpszFileExtension LPWSTR ?
      union
        dwReserved DWORD ?
        dwExemptDelta DWORD ?
      ends
    INTERNET_CACHE_ENTRY_INFOW ends
    _INTERNET_CACHE_ENTRY_INFOW typedef INTERNET_CACHE_ENTRY_INFOW
    LPINTERNET_CACHE_ENTRY_INFOW typedef ptr INTERNET_CACHE_ENTRY_INFOW
    
    ifdef UNICODE
      INTERNET_CACHE_ENTRY_INFO typedef INTERNET_CACHE_ENTRY_INFOW
      LPINTERNET_CACHE_ENTRY_INFO typedef LPINTERNET_CACHE_ENTRY_INFOW
    else
      INTERNET_CACHE_ENTRY_INFO typedef INTERNET_CACHE_ENTRY_INFOA
      LPINTERNET_CACHE_ENTRY_INFO typedef LPINTERNET_CACHE_ENTRY_INFOA
    endif
    if _MSC_VER ge 1200
    else
    endif
    INTERNET_CACHE_TIMESTAMPS struct
      ftExpires FILETIME <>
      ftLastModified FILETIME <>
    INTERNET_CACHE_TIMESTAMPS ends
    _INTERNET_CACHE_TIMESTAMPS typedef INTERNET_CACHE_TIMESTAMPS
    LPINTERNET_CACHE_TIMESTAMPS typedef ptr INTERNET_CACHE_TIMESTAMPS
    
    GROUPID typedef LONGLONG
    CACHEGROUP_ATTRIBUTE_GET_ALL equ 0ffffffffh
    CACHEGROUP_ATTRIBUTE_BASIC equ 00000001h
    CACHEGROUP_ATTRIBUTE_FLAG equ 00000002h
    CACHEGROUP_ATTRIBUTE_TYPE equ 00000004h
    CACHEGROUP_ATTRIBUTE_QUOTA equ 00000008h
    CACHEGROUP_ATTRIBUTE_GROUPNAME equ 00000010h
    CACHEGROUP_ATTRIBUTE_STORAGE equ 00000020h
    CACHEGROUP_FLAG_NONPURGEABLE equ 00000001h
    CACHEGROUP_FLAG_GIDONLY equ 00000004h
    CACHEGROUP_FLAG_FLUSHURL_ONDELETE equ 00000002h
    CACHEGROUP_SEARCH_ALL equ 00000000h
    CACHEGROUP_SEARCH_BYURL equ 00000001h
    CACHEGROUP_TYPE_INVALID equ 00000001h
    CACHEGROUP_READWRITE_MASK equ <CACHEGROUP_ATTRIBUTE_TYPE or CACHEGROUP_ATTRIBUTE_QUOTA or CACHEGROUP_ATTRIBUTE_GROUPNAME or CACHEGROUP_ATTRIBUTE_STORAGE>
    GROUPNAME_MAX_LENGTH equ 120
    GROUP_OWNER_STORAGE_SIZE equ 4
    INTERNET_CACHE_GROUP_INFOA struct
      dwGroupSize DWORD ?
      dwGroupFlags DWORD ?
      dwGroupType DWORD ?
      dwDiskUsage DWORD ?
      dwDiskQuota DWORD ?
      dwOwnerStorage DWORD GROUP_OWNER_STORAGE_SIZE dup (?)
      szGroupName CHAR GROUPNAME_MAX_LENGTH dup (?)
    INTERNET_CACHE_GROUP_INFOA ends
    _INTERNET_CACHE_GROUP_INFOA typedef INTERNET_CACHE_GROUP_INFOA
    LPINTERNET_CACHE_GROUP_INFOA typedef ptr INTERNET_CACHE_GROUP_INFOA
    
    INTERNET_CACHE_GROUP_INFOW struct
      dwGroupSize DWORD ?
      dwGroupFlags DWORD ?
      dwGroupType DWORD ?
      dwDiskUsage DWORD ?
      dwDiskQuota DWORD ?
      dwOwnerStorage DWORD GROUP_OWNER_STORAGE_SIZE dup (?)
      szGroupName WCHAR GROUPNAME_MAX_LENGTH dup (?)
    INTERNET_CACHE_GROUP_INFOW ends
    _INTERNET_CACHE_GROUP_INFOW typedef INTERNET_CACHE_GROUP_INFOW
    LPINTERNET_CACHE_GROUP_INFOW typedef ptr INTERNET_CACHE_GROUP_INFOW
    
    ifdef UNICODE
      INTERNET_CACHE_GROUP_INFO typedef INTERNET_CACHE_GROUP_INFOW
      LPINTERNET_CACHE_GROUP_INFO typedef LPINTERNET_CACHE_GROUP_INFOW
    else
      INTERNET_CACHE_GROUP_INFO typedef INTERNET_CACHE_GROUP_INFOA
      LPINTERNET_CACHE_GROUP_INFO typedef LPINTERNET_CACHE_GROUP_INFOA
    endif
    CreateUrlCacheEntryA proto WIN_STD_CALL_CONV :LPCSTR, :DWORD, :LPCSTR, :LPSTR, :DWORD
    CreateUrlCacheEntryW proto WIN_STD_CALL_CONV :LPCWSTR, :DWORD, :LPCWSTR, :LPWSTR, :DWORD
    ifdef UNICODE
      CreateUrlCacheEntry equ <CreateUrlCacheEntryW>
    else
      CreateUrlCacheEntry equ <CreateUrlCacheEntryA>
    endif
    CommitUrlCacheEntryA proto WIN_STD_CALL_CONV :LPCSTR, :LPCSTR, :FILETIME, :FILETIME, :DWORD, :LPBYTE, :DWORD, :LPCSTR, :LPCSTR
    CommitUrlCacheEntryW proto WIN_STD_CALL_CONV :LPCWSTR, :LPCWSTR, :FILETIME, :FILETIME, :DWORD, :LPWSTR, :DWORD, :LPCWSTR, :LPCWSTR
    ifdef UNICODE
      CommitUrlCacheEntry equ <CommitUrlCacheEntryW>
    else
      CommitUrlCacheEntry equ <CommitUrlCacheEntryA>
    endif
    RetrieveUrlCacheEntryFileA proto WIN_STD_CALL_CONV :LPCSTR, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD, :DWORD
    RetrieveUrlCacheEntryFileW proto WIN_STD_CALL_CONV :LPCWSTR, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD, :DWORD
    ifdef UNICODE
      RetrieveUrlCacheEntryFile equ <RetrieveUrlCacheEntryFileW>
    else
      RetrieveUrlCacheEntryFile equ <RetrieveUrlCacheEntryFileA>
    endif
    UnlockUrlCacheEntryFileA proto WIN_STD_CALL_CONV :LPCSTR, :DWORD
    UnlockUrlCacheEntryFileW proto WIN_STD_CALL_CONV :LPCWSTR, :DWORD
    ifdef UNICODE
      UnlockUrlCacheEntryFile equ <UnlockUrlCacheEntryFileW>
    else
      ifdef _WINX32_
        UnlockUrlCacheEntryFile equ <UnlockUrlCacheEntryFileA>
      else
        UnlockUrlCacheEntryFile proto WIN_STD_CALL_CONV :LPCSTR, :DWORD
      endif
    endif
    RetrieveUrlCacheEntryStreamA proto WIN_STD_CALL_CONV :LPCSTR, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD, :BOOL, :DWORD
    RetrieveUrlCacheEntryStreamW proto WIN_STD_CALL_CONV :LPCWSTR, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD, :BOOL, :DWORD
    ifdef UNICODE
      RetrieveUrlCacheEntryStream equ <RetrieveUrlCacheEntryStreamW>
    else
      RetrieveUrlCacheEntryStream equ <RetrieveUrlCacheEntryStreamA>
    endif
    ReadUrlCacheEntryStream proto WIN_STD_CALL_CONV :HANDLE, :DWORD, :LPVOID, :LPDWORD, :DWORD
    ReadUrlCacheEntryStreamEx proto WIN_STD_CALL_CONV :HANDLE, :DWORDLONG, :LPVOID, :LPDWORD
    UnlockUrlCacheEntryStream proto WIN_STD_CALL_CONV :HANDLE, :DWORD
    GetUrlCacheEntryInfoA proto WIN_STD_CALL_CONV :LPCSTR, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD
    GetUrlCacheEntryInfoW proto WIN_STD_CALL_CONV :LPCWSTR, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD
    ifdef UNICODE
      GetUrlCacheEntryInfo equ <GetUrlCacheEntryInfoW>
    else
      GetUrlCacheEntryInfo equ <GetUrlCacheEntryInfoA>
    endif
    FindFirstUrlCacheGroup proto WIN_STD_CALL_CONV :DWORD, :DWORD, :LPVOID, :DWORD, :ptr GROUPID, :LPVOID
    FindNextUrlCacheGroup proto WIN_STD_CALL_CONV :HANDLE, :ptr GROUPID, :LPVOID
    GetUrlCacheGroupAttributeA proto WIN_STD_CALL_CONV :GROUPID, :DWORD, :DWORD, :LPINTERNET_CACHE_GROUP_INFOA, :LPDWORD, :LPVOID
    GetUrlCacheGroupAttributeW proto WIN_STD_CALL_CONV :GROUPID, :DWORD, :DWORD, :LPINTERNET_CACHE_GROUP_INFOW, :LPDWORD, :LPVOID
    ifdef UNICODE
      GetUrlCacheGroupAttribute equ <GetUrlCacheGroupAttributeW>
    else
      GetUrlCacheGroupAttribute equ <GetUrlCacheGroupAttributeA>
    endif
    SetUrlCacheGroupAttributeA proto WIN_STD_CALL_CONV :GROUPID, :DWORD, :DWORD, :LPINTERNET_CACHE_GROUP_INFOA, :LPVOID
    SetUrlCacheGroupAttributeW proto WIN_STD_CALL_CONV :GROUPID, :DWORD, :DWORD, :LPINTERNET_CACHE_GROUP_INFOW, :LPVOID
    ifdef UNICODE
      SetUrlCacheGroupAttribute equ <SetUrlCacheGroupAttributeW>
    else
      SetUrlCacheGroupAttribute equ <SetUrlCacheGroupAttributeA>
    endif
    GetUrlCacheEntryInfoExA proto WIN_STD_CALL_CONV :LPCSTR, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD, :LPSTR, :LPDWORD, :LPVOID, :DWORD
    GetUrlCacheEntryInfoExW proto WIN_STD_CALL_CONV :LPCWSTR, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD, :LPWSTR, :LPDWORD, :LPVOID, :DWORD
    ifdef UNICODE
      GetUrlCacheEntryInfoEx equ <GetUrlCacheEntryInfoExW>
    else
      GetUrlCacheEntryInfoEx equ <GetUrlCacheEntryInfoExA>
    endif
    CACHE_ENTRY_ATTRIBUTE_FC equ 00000004h
    CACHE_ENTRY_HITRATE_FC equ 00000010h
    CACHE_ENTRY_MODTIME_FC equ 00000040h
    CACHE_ENTRY_EXPTIME_FC equ 00000080h
    CACHE_ENTRY_ACCTIME_FC equ 00000100h
    CACHE_ENTRY_SYNCTIME_FC equ 00000200h
    CACHE_ENTRY_HEADERINFO_FC equ 00000400h
    CACHE_ENTRY_EXEMPT_DELTA_FC equ 00000800h
    SetUrlCacheEntryInfoA proto WIN_STD_CALL_CONV :LPCSTR, :LPINTERNET_CACHE_ENTRY_INFOA, :DWORD
    SetUrlCacheEntryInfoW proto WIN_STD_CALL_CONV :LPCWSTR, :LPINTERNET_CACHE_ENTRY_INFOW, :DWORD
    ifdef UNICODE
      SetUrlCacheEntryInfo equ <SetUrlCacheEntryInfoW>
    else
      SetUrlCacheEntryInfo equ <SetUrlCacheEntryInfoA>
    endif
    CreateUrlCacheGroup proto WIN_STD_CALL_CONV :DWORD, :LPVOID
    DeleteUrlCacheGroup proto WIN_STD_CALL_CONV :GROUPID, :DWORD, :LPVOID
    INTERNET_CACHE_GROUP_ADD equ 0
    INTERNET_CACHE_GROUP_REMOVE equ 1
    SetUrlCacheEntryGroupA proto WIN_STD_CALL_CONV :LPCSTR, :DWORD, :GROUPID, :LPBYTE, :DWORD, :LPVOID
    SetUrlCacheEntryGroupW proto WIN_STD_CALL_CONV :LPCWSTR, :DWORD, :GROUPID, :LPBYTE, :DWORD, :LPVOID
    ifdef UNICODE
      SetUrlCacheEntryGroup equ <SetUrlCacheEntryGroupW>
    else
      ifdef _WINX32_
        SetUrlCacheEntryGroup equ <SetUrlCacheEntryGroupA>
      else
        SetUrlCacheEntryGroup proto WIN_STD_CALL_CONV :LPCSTR, :DWORD, :GROUPID, :LPBYTE, :DWORD, :LPVOID
      endif
    endif
    FindFirstUrlCacheEntryExA proto WIN_STD_CALL_CONV :LPCSTR, :DWORD, :DWORD, :GROUPID, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD, :LPVOID, :LPDWORD, :LPVOID
    FindFirstUrlCacheEntryExW proto WIN_STD_CALL_CONV :LPCWSTR, :DWORD, :DWORD, :GROUPID, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD, :LPVOID, :LPDWORD, :LPVOID
    ifdef UNICODE
      FindFirstUrlCacheEntryEx equ <FindFirstUrlCacheEntryExW>
    else
      FindFirstUrlCacheEntryEx equ <FindFirstUrlCacheEntryExA>
    endif
    FindNextUrlCacheEntryExA proto WIN_STD_CALL_CONV :HANDLE, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD, :LPVOID, :LPDWORD, :LPVOID
    FindNextUrlCacheEntryExW proto WIN_STD_CALL_CONV :HANDLE, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD, :LPVOID, :LPDWORD, :LPVOID
    ifdef UNICODE
      FindNextUrlCacheEntryEx equ <FindNextUrlCacheEntryExW>
    else
      FindNextUrlCacheEntryEx equ <FindNextUrlCacheEntryExA>
    endif
    FindFirstUrlCacheEntryA proto WIN_STD_CALL_CONV :LPCSTR, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD
    FindFirstUrlCacheEntryW proto WIN_STD_CALL_CONV :LPCWSTR, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD
    ifdef UNICODE
      FindFirstUrlCacheEntry equ <FindFirstUrlCacheEntryW>
    else
      FindFirstUrlCacheEntry equ <FindFirstUrlCacheEntryA>
    endif
    FindNextUrlCacheEntryA proto WIN_STD_CALL_CONV :HANDLE, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD
    FindNextUrlCacheEntryW proto WIN_STD_CALL_CONV :HANDLE, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD
    ifdef UNICODE
      FindNextUrlCacheEntry equ <FindNextUrlCacheEntryW>
    else
      FindNextUrlCacheEntry equ <FindNextUrlCacheEntryA>
    endif
    FindCloseUrlCache proto WIN_STD_CALL_CONV :HANDLE
    DeleteUrlCacheEntryA proto WIN_STD_CALL_CONV :LPCSTR
    DeleteUrlCacheEntryW proto WIN_STD_CALL_CONV :LPCWSTR
    ifdef UNICODE
      DeleteUrlCacheEntry equ <DeleteUrlCacheEntryW>
    else
      ifdef _WINX32_
        DeleteUrlCacheEntry equ <DeleteUrlCacheEntryA>
      else
        DeleteUrlCacheEntry proto WIN_STD_CALL_CONV :LPCSTR
      endif
    endif
    InternetDialA proto WIN_STD_CALL_CONV :HWND, :LPSTR, :DWORD, :ptr DWORD_PTR, :DWORD
    InternetDialW proto WIN_STD_CALL_CONV :HWND, :LPWSTR, :DWORD, :ptr DWORD_PTR, :DWORD
    ifdef UNICODE
      InternetDial equ <InternetDialW>
    else
      ifdef _WINX32_
        InternetDial equ <InternetDialA>
      else
            InternetDial proto WIN_STD_CALL_CONV :HWND, :LPSTR, :DWORD, :LPDWORD, :DWORD
      endif
    endif
    INTERNET_DIAL_FORCE_PROMPT equ 2000h
    INTERNET_DIAL_SHOW_OFFLINE equ 4000h
    INTERNET_DIAL_UNATTENDED equ 8000h
    InternetHangUp proto WIN_STD_CALL_CONV :DWORD_PTR, :DWORD
    INTERENT_GOONLINE_REFRESH equ 00000001h
    INTERENT_GOONLINE_NOPROMPT equ 00000002h
    INTERENT_GOONLINE_MASK equ 00000003h
    InternetGoOnlineA proto WIN_STD_CALL_CONV :LPCSTR, :HWND, :DWORD
    InternetGoOnlineW proto WIN_STD_CALL_CONV :LPCWSTR, :HWND, :DWORD
    ifdef UNICODE
      InternetGoOnline equ <InternetGoOnlineW>
    else
      ifdef _WINX32_
        InternetGoOnline equ <InternetGoOnlineA>
      else
        InternetGoOnline proto WIN_STD_CALL_CONV :LPSTR, :HWND, :DWORD
      endif
    endif
    InternetAutodial proto WIN_STD_CALL_CONV :DWORD, :HWND
    INTERNET_AUTODIAL_FORCE_ONLINE equ 1
    INTERNET_AUTODIAL_FORCE_UNATTENDED equ 2
    INTERNET_AUTODIAL_FAILIFSECURITYCHECK equ 4
    INTERNET_AUTODIAL_OVERRIDE_NET_PRESENT equ 8
    INTERNET_AUTODIAL_FLAGS_MASK equ <(INTERNET_AUTODIAL_FORCE_ONLINE or INTERNET_AUTODIAL_FORCE_UNATTENDED or INTERNET_AUTODIAL_FAILIFSECURITYCHECK or INTERNET_AUTODIAL_OVERRIDE_NET_PRESENT)>
    InternetAutodialHangup proto WIN_STD_CALL_CONV :DWORD
    InternetGetConnectedState proto WIN_STD_CALL_CONV :LPDWORD, :DWORD
    InternetGetConnectedStateExA proto WIN_STD_CALL_CONV :LPDWORD, :LPSTR, :DWORD, :DWORD
    InternetGetConnectedStateExW proto WIN_STD_CALL_CONV :LPDWORD, :LPWSTR, :DWORD, :DWORD
    PROXY_AUTO_DETECT_TYPE_DHCP equ 1
    PROXY_AUTO_DETECT_TYPE_DNS_A equ 2
    AutoProxyHelperVtbl struct
      TYPE_IsResolvable typedef proto WIN_STD_CALL_CONV :LPSTR
      IsResolvable typedef ptr TYPE_IsResolvable
      TYPE_GetIPAddress typedef proto WIN_STD_CALL_CONV :LPSTR, :LPDWORD
      GetIPAddress typedef ptr TYPE_GetIPAddress
      TYPE_ResolveHostName typedef proto WIN_STD_CALL_CONV :LPSTR, :LPSTR, :LPDWORD
      ResolveHostName typedef ptr TYPE_ResolveHostName
      TYPE_IsInNet typedef proto WIN_STD_CALL_CONV :LPSTR, :LPSTR, :LPSTR
      IsInNet typedef ptr TYPE_IsInNet
      TYPE_IsResolvableEx typedef proto WIN_STD_CALL_CONV :LPSTR
      IsResolvableEx typedef ptr TYPE_IsResolvableEx
      TYPE_GetIPAddressEx typedef proto WIN_STD_CALL_CONV :LPSTR, :LPDWORD
      GetIPAddressEx typedef ptr TYPE_GetIPAddressEx
      TYPE_ResolveHostNameEx typedef proto WIN_STD_CALL_CONV :LPSTR, :LPSTR, :LPDWORD
      ResolveHostNameEx typedef ptr TYPE_ResolveHostNameEx
      TYPE_IsInNetEx typedef proto WIN_STD_CALL_CONV :LPSTR, :LPSTR
      IsInNetEx typedef ptr TYPE_IsInNetEx
      TYPE_SortIpList typedef proto WIN_STD_CALL_CONV :LPSTR, :LPSTR, :LPDWORD
      SortIpList typedef ptr TYPE_SortIpList
    AutoProxyHelperVtbl ends
    AUTO_PROXY_SCRIPT_BUFFER struct
      dwStructSize DWORD ?
      lpszScriptBuffer LPSTR ?
      dwScriptBufferSize DWORD ?
    AUTO_PROXY_SCRIPT_BUFFER ends
    LPAUTO_PROXY_SCRIPT_BUFFER typedef ptr AUTO_PROXY_SCRIPT_BUFFER
    
    AutoProxyHelperFunctions struct
      lpVtbl POINTER ?
    AutoProxyHelperFunctions ends
    TYPE_pfnInternetInitializeAutoProxyDll typedef proto WIN_STD_CALL_CONV :DWORD, :LPSTR, :LPSTR, :ptr AutoProxyHelperFunctions, :LPAUTO_PROXY_SCRIPT_BUFFER
    pfnInternetInitializeAutoProxyDll typedef ptr TYPE_pfnInternetInitializeAutoProxyDll
    TYPE_pfnInternetDeInitializeAutoProxyDll typedef proto WIN_STD_CALL_CONV :LPSTR, :DWORD
    pfnInternetDeInitializeAutoProxyDll typedef ptr TYPE_pfnInternetDeInitializeAutoProxyDll
    TYPE_pfnInternetGetProxyInfo typedef proto WIN_STD_CALL_CONV :LPCSTR, :DWORD, :LPSTR, :DWORD, :ptr LPSTR, :LPDWORD
    pfnInternetGetProxyInfo typedef ptr TYPE_pfnInternetGetProxyInfo
    WPAD_CACHE_DELETE typedef SDWORD
    WPAD_CACHE_DELETE_CURRENT equ 0h
    WPAD_CACHE_DELETE_ALL equ 1h
    
    DeleteWpadCacheForNetworks proto WIN_STD_CALL_CONV :WPAD_CACHE_DELETE
    InternetInitializeAutoProxyDll proto WIN_STD_CALL_CONV :DWORD
    DetectAutoProxyUrl proto WIN_STD_CALL_CONV :PSTR, :DWORD, :DWORD
    CreateMD5SSOHash proto WIN_STD_CALL_CONV :PWSTR, :PWSTR, :PWSTR, :PBYTE
    ifdef UNICODE
      InternetGetConnectedStateEx equ <InternetGetConnectedStateExW>
    else
      ifdef _WINX32_
        InternetGetConnectedStateEx equ <InternetGetConnectedStateExA>
      else
        InternetGetConnectedStateEx proto WIN_STD_CALL_CONV :LPDWORD, :LPSTR, :DWORD, :DWORD
      endif
    endif
    INTERNET_CONNECTION_MODEM equ 01h
    INTERNET_CONNECTION_LAN equ 02h
    INTERNET_CONNECTION_PROXY equ 04h
    INTERNET_CONNECTION_MODEM_BUSY equ 08h
    INTERNET_RAS_INSTALLED equ 10h
    INTERNET_CONNECTION_OFFLINE equ 20h
    INTERNET_CONNECTION_CONFIGURED equ 40h
    TYPE_PFN_DIAL_HANDLER typedef proto WIN_STD_CALL_CONV :HWND, :LPCSTR, :DWORD, :LPDWORD
    PFN_DIAL_HANDLER typedef ptr TYPE_PFN_DIAL_HANDLER
    INTERNET_CUSTOMDIAL_CONNECT equ 0
    INTERNET_CUSTOMDIAL_UNATTENDED equ 1
    INTERNET_CUSTOMDIAL_DISCONNECT equ 2
    INTERNET_CUSTOMDIAL_SHOWOFFLINE equ 4
    INTERNET_CUSTOMDIAL_SAFE_FOR_UNATTENDED equ 1
    INTERNET_CUSTOMDIAL_WILL_SUPPLY_STATE equ 2
    INTERNET_CUSTOMDIAL_CAN_HANGUP equ 4
    InternetSetDialStateA proto WIN_STD_CALL_CONV :LPCSTR, :DWORD, :DWORD
    InternetSetDialStateW proto WIN_STD_CALL_CONV :LPCWSTR, :DWORD, :DWORD
    ifdef UNICODE
      InternetSetDialState equ <InternetSetDialStateW>
    else
      ifdef _WINX32_
        InternetSetDialState equ <InternetSetDialStateA>
      else
        InternetSetDialState proto WIN_STD_CALL_CONV :LPCSTR, :DWORD, :DWORD
      endif
    endif
    INTERNET_DIALSTATE_DISCONNECTED equ 1
    InternetSetPerSiteCookieDecisionA proto WIN_STD_CALL_CONV :LPCSTR, :DWORD
    InternetSetPerSiteCookieDecisionW proto WIN_STD_CALL_CONV :LPCWSTR, :DWORD
    ifdef UNICODE
      InternetSetPerSiteCookieDecision equ <InternetSetPerSiteCookieDecisionW>
    else
      InternetSetPerSiteCookieDecision equ <InternetSetPerSiteCookieDecisionA>
    endif
    InternetGetPerSiteCookieDecisionA proto WIN_STD_CALL_CONV :LPCSTR, :ptr DWORD
    InternetGetPerSiteCookieDecisionW proto WIN_STD_CALL_CONV :LPCWSTR, :ptr DWORD
    ifdef UNICODE
      InternetGetPerSiteCookieDecision equ <InternetGetPerSiteCookieDecisionW>
    else
      InternetGetPerSiteCookieDecision equ <InternetGetPerSiteCookieDecisionA>
    endif
    InternetClearAllPerSiteCookieDecisions proto WIN_STD_CALL_CONV
    InternetEnumPerSiteCookieDecisionA proto WIN_STD_CALL_CONV :LPSTR, :ptr DWORD, :ptr DWORD, :DWORD
    InternetEnumPerSiteCookieDecisionW proto WIN_STD_CALL_CONV :LPWSTR, :ptr DWORD, :ptr DWORD, :DWORD
    ifdef UNICODE
      InternetEnumPerSiteCookieDecision equ <InternetEnumPerSiteCookieDecisionW>
    else
      InternetEnumPerSiteCookieDecision equ <InternetEnumPerSiteCookieDecisionA>
    endif
    INTERNET_IDENTITY_FLAG_PRIVATE_CACHE equ 01h
    INTERNET_IDENTITY_FLAG_SHARED_CACHE equ 02h
    INTERNET_IDENTITY_FLAG_CLEAR_DATA equ 04h
    INTERNET_IDENTITY_FLAG_CLEAR_COOKIES equ 08h
    INTERNET_IDENTITY_FLAG_CLEAR_HISTORY equ 10h
    INTERNET_IDENTITY_FLAG_CLEAR_CONTENT equ 20h
    INTERNET_SUPPRESS_RESET_ALL equ 00h
    INTERNET_SUPPRESS_COOKIE_POLICY equ 01h
    INTERNET_SUPPRESS_COOKIE_POLICY_RESET equ 02h
    PRIVACY_TEMPLATE_NO_COOKIES equ 0
    PRIVACY_TEMPLATE_HIGH equ 1
    PRIVACY_TEMPLATE_MEDIUM_HIGH equ 2
    PRIVACY_TEMPLATE_MEDIUM equ 3
    PRIVACY_TEMPLATE_MEDIUM_LOW equ 4
    PRIVACY_TEMPLATE_LOW equ 5
    PRIVACY_TEMPLATE_CUSTOM equ 100
    PRIVACY_TEMPLATE_ADVANCED equ 101
    PRIVACY_TEMPLATE_MAX equ <PRIVACY_TEMPLATE_LOW>
    PRIVACY_TYPE_FIRST_PARTY equ 0
    PRIVACY_TYPE_THIRD_PARTY equ 1
    PrivacySetZonePreferenceW proto WIN_STD_CALL_CONV :DWORD, :DWORD, :DWORD, :LPCWSTR
    PrivacyGetZonePreferenceW proto WIN_STD_CALL_CONV :DWORD, :DWORD, :LPDWORD, :LPWSTR, :LPDWORD
    HttpIsHostHstsEnabled proto WIN_STD_CALL_CONV :PCWSTR, :PBOOL
    include poppack.inc
  endif
endif
 