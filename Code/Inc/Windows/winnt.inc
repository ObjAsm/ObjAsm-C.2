;Include file created by h2incX, Version B.01.02, 22/09/2018 21:43
;(C) 2018-today by Biterider, 2005-2009 by Japheth
;Source file: '\ObjAsm\Projects\h2IncX\header\winnt.h', last modified: 22/09/2018 17:04
;Creation parameters:

ifndef _WINNT_
  _WINNT_ equ <>
  if _MSC_VER ge 1200
  endif
  ifdef __cplusplus
    ;[...]
  endif
  include ctype.inc
  include winapifamily.inc
  ANYSIZE_ARRAY equ 1
  ifndef DUMMYUNIONNAME
    if Defined(NONAMELESSUNION) or  not Defined(_MSC_EXTENSIONS)
      DUMMYUNIONNAME equ <u>
      DUMMYUNIONNAME2 equ <u2>
      DUMMYUNIONNAME3 equ <u3>
      DUMMYUNIONNAME4 equ <u4>
      DUMMYUNIONNAME5 equ <u5>
      DUMMYUNIONNAME6 equ <u6>
      DUMMYUNIONNAME7 equ <u7>
      DUMMYUNIONNAME8 equ <u8>
      DUMMYUNIONNAME9 equ <u9>
    else
      DUMMYUNIONNAME equ <>
      DUMMYUNIONNAME2 equ <>
      DUMMYUNIONNAME3 equ <>
      DUMMYUNIONNAME4 equ <>
      DUMMYUNIONNAME5 equ <>
      DUMMYUNIONNAME6 equ <>
      DUMMYUNIONNAME7 equ <>
      DUMMYUNIONNAME8 equ <>
      DUMMYUNIONNAME9 equ <>
    endif
  endif
  ifndef DUMMYSTRUCTNAME
    if Defined(NONAMELESSUNION) or  not Defined(_MSC_EXTENSIONS)
      DUMMYSTRUCTNAME equ <s>
      DUMMYSTRUCTNAME2 equ <s2>
      DUMMYSTRUCTNAME3 equ <s3>
      DUMMYSTRUCTNAME4 equ <s4>
      DUMMYSTRUCTNAME5 equ <s5>
      DUMMYSTRUCTNAME6 equ <s6>
    else
      DUMMYSTRUCTNAME equ <>
      DUMMYSTRUCTNAME2 equ <>
      DUMMYSTRUCTNAME3 equ <>
      DUMMYSTRUCTNAME4 equ <>
      DUMMYSTRUCTNAME5 equ <>
      DUMMYSTRUCTNAME6 equ <>
    endif
  endif
  include specstrings.inc
  include kernelspecs.inc
  if Defined(STRICT_GS_ENABLED)
    ;[...]
  endif
  if Defined(_M_MRX000) and  not (Defined(MIDL_PASS) or Defined(RC_INVOKED)) and Defined(ENABLE_RESTRICTED)
    ;[...]
  else
    RESTRICTED_POINTER equ <>
  endif
  if Defined(_M_MRX000) or Defined(_M_ALPHA) or Defined(_M_PPC) or Defined(_M_IA64) or Defined(_M_AMD64) or Defined(_M_ARM) or Defined(_M_ARM64)
    ALIGNMENT_MACHINE equ <>
    UNALIGNED equ <__unaligned>
    if Defined(_WIN64)
      UNALIGNED64 equ <__unaligned>
    else
      UNALIGNED64 equ <>
    endif
  else
    UNALIGNED equ <>
    UNALIGNED64 equ <>
  endif
  if Defined(_WIN64) or Defined(_M_ALPHA)
    MAX_NATURAL_ALIGNMENT equ <sizeof(ULONGLONG)>
    MEMORY_ALLOCATION_ALIGNMENT equ 16
  else
    MAX_NATURAL_ALIGNMENT equ <sizeof(DWORD)>
    MEMORY_ALLOCATION_ALIGNMENT equ 8
  endif
  ifdef __cplusplus
    ;[...]
  else
    TYPE_ALIGNMENT macro t
      exitm <FIELD_OFFSET(struct { char x ; t test ; }, test)>
    endm
  endif
  if Defined(_AMD64_) or Defined(_X86_)
    PROBE_ALIGNMENT macro _s
      exitm <TYPE_ALIGNMENT(DWORD)>
    endm
  elseif Defined(_IA64_) or Defined(_ARM_) or Defined(_ARM64_)
    PROBE_ALIGNMENT macro _s
      exitm <TYPE_ALIGNMENT(DWORD)>
    endm
  elseif  not Defined(RC_INVOKED)
    .err <"No Target Architecture">
  endif
  PROBE_ALIGNMENT32 macro _s
    exitm <TYPE_ALIGNMENT(DWORD)>
  endm
  ifndef SORTPP_PASS
    C_ASSERT macro e
      exitm <typedef char __C_ASSERT__ [ (e) ?1 : - 1 ]>
    endm
  else
    C_ASSERT macro e
      exitm <>
    endm
  endif
  include basetsd.inc
  ifndef DECLSPEC_IMPORT
    if (Defined(_M_IX86) or Defined(_M_IA64) or Defined(_M_AMD64) or Defined(_M_ARM) or Defined(_M_ARM64)) and  not Defined(MIDL_PASS)
      DECLSPEC_IMPORT equ <__declspec(dllimport)>
    else
      DECLSPEC_IMPORT equ <>
    endif
  endif
  ifndef DECLSPEC_NORETURN
    if (_MSC_VER ge 1200) and  not Defined(MIDL_PASS)
      DECLSPEC_NORETURN equ <__declspec(noreturn)>
    else
      DECLSPEC_NORETURN equ <>
    endif
  endif
  ifndef DECLSPEC_NOTHROW
    if (_MSC_VER ge 1200) and  not Defined(MIDL_PASS)
      DECLSPEC_NOTHROW equ <__declspec(nothrow)>
    else
      DECLSPEC_NOTHROW equ <>
    endif
  endif
  ifndef DECLSPEC_ALIGN
    if (_MSC_VER ge 1300) and  not Defined(MIDL_PASS)
      DECLSPEC_ALIGN macro x
        exitm <__declspec(align(x))>
      endm
    else
      DECLSPEC_ALIGN macro x
        exitm <>
      endm
    endif
  endif
  ifndef SYSTEM_CACHE_ALIGNMENT_SIZE
    if Defined(_AMD64_) or Defined(_X86_)
      SYSTEM_CACHE_ALIGNMENT_SIZE equ 64
    else
      SYSTEM_CACHE_ALIGNMENT_SIZE equ 128
    endif
  endif
  ifndef DECLSPEC_CACHEALIGN
    DECLSPEC_CACHEALIGN equ <DECLSPEC_ALIGN(SYSTEM_CACHE_ALIGNMENT_SIZE)>
  endif
  ifndef DECLSPEC_UUID
    if (_MSC_VER ge 1100) and Defined(__cplusplus)
      ;[...]
    else
      DECLSPEC_UUID macro x
        exitm <>
      endm
    endif
  endif
  ifndef DECLSPEC_NOVTABLE
    if (_MSC_VER ge 1100) and Defined(__cplusplus)
      ;[...]
    else
      DECLSPEC_NOVTABLE equ <>
    endif
  endif
  ifndef DECLSPEC_SELECTANY
    if (_MSC_VER ge 1100)
      DECLSPEC_SELECTANY equ <__declspec(selectany)>
    else
      DECLSPEC_SELECTANY equ <>
    endif
  endif
  ifndef NOP_FUNCTION
    if (_MSC_VER ge 1210)
      NOP_FUNCTION equ <__noop>
    else
      NOP_FUNCTION equ 0
    endif
  endif
  ifndef DECLSPEC_ADDRSAFE
    if (_MSC_VER ge 1200) and (Defined(_M_ALPHA) or Defined(_M_AXP64))
      ;[...]
    else
      DECLSPEC_ADDRSAFE equ <>
    endif
  endif
  ifndef DECLSPEC_SAFEBUFFERS
    if (_MSC_VER ge 1600)
      DECLSPEC_SAFEBUFFERS equ <__declspec(safebuffers)>
    else
      DECLSPEC_SAFEBUFFERS equ <>
    endif
  endif
  ifndef DECLSPEC_NOINLINE
    if (_MSC_VER ge 1300)
      DECLSPEC_NOINLINE equ <__declspec(noinline)>
    else
      DECLSPEC_NOINLINE equ <>
    endif
  endif
  ifndef DECLSPEC_SAFEBUFFERS
    if (_MSC_VER ge 1300)
      DECLSPEC_SAFEBUFFERS equ <__declspec(safebuffers)>
    else
      DECLSPEC_SAFEBUFFERS equ <>
    endif
  endif
  ifndef DECLSPEC_GUARDNOCF
    if (_MSC_FULL_VER ge 170065501) or Defined(_D1VERSIONLKG171_)
      DECLSPEC_GUARDNOCF equ <__declspec(guard (nocf))>
    else
      DECLSPEC_GUARDNOCF equ <>
    endif
  endif
  ifndef DECLSPEC_GUARD_SUPPRESS
    if (_MSC_FULL_VER ge 181040116) or Defined(_D1VERSIONLKG171_)
      DECLSPEC_GUARD_SUPPRESS equ <__declspec(guard (suppress))>
    else
      DECLSPEC_GUARD_SUPPRESS equ <>
    endif
  endif
  ifndef DECLSPEC_CHPE_GUEST
    if _M_HYBRID
      DECLSPEC_CHPE_GUEST equ <__declspec(hybrid_guest)>
    else
      DECLSPEC_CHPE_GUEST equ <>
    endif
  endif
  ifndef DECLSPEC_CHPE_PATCHABLE
    if _M_HYBRID
      DECLSPEC_CHPE_PATCHABLE equ <__declspec(hybrid_patchable)>
    else
      DECLSPEC_CHPE_PATCHABLE equ <>
    endif
  endif
  ifndef FORCEINLINE
    if (_MSC_VER ge 1200)
      FORCEINLINE equ <__forceinline>
    else
      FORCEINLINE equ <__inline>
    endif
  endif
  CFORCEINLINE equ <FORCEINLINE>
  STKFORCEINLINE equ <FORCEINLINE>
  ifndef PFORCEINLINE
    PFORCEINLINE equ <FORCEINLINE>
  endif
  ifndef DECLSPEC_DEPRECATED
    if (_MSC_VER ge 1300) and  not Defined(MIDL_PASS)
      DECLSPEC_DEPRECATED equ <__declspec(deprecated)>
      DEPRECATE_SUPPORTED equ <>
    else
      DECLSPEC_DEPRECATED equ <>
    endif
  endif
  ifdef DEPRECATE_DDK_FUNCTIONS
    ifdef _NTDDK_
      DECLSPEC_DEPRECATED_DDK equ <DECLSPEC_DEPRECATED>
      ifdef DEPRECATE_SUPPORTED
        PRAGMA_DEPRECATED_DDK equ 1
      endif
    else
      DECLSPEC_DEPRECATED_DDK equ <>
      PRAGMA_DEPRECATED_DDK equ 1
    endif
  else
    DECLSPEC_DEPRECATED_DDK equ <>
    PRAGMA_DEPRECATED_DDK equ 0
  endif
  PVOID typedef ptr
  PVOID64 typedef ptr
  if (_MSC_VER ge 800) or Defined(_STDCALL_SUPPORTED)
    NTAPI equ <__stdcall>
  else
    _cdecl equ <>
    __cdecl equ <>
    NTAPI equ <>
  endif
  if  not Defined(_M_CEE_PURE)
    NTAPI_INLINE equ <NTAPI>
  else
    ;[...]
  endif
  if  not Defined(_NTSYSTEM_)
    NTSYSAPI equ <DECLSPEC_IMPORT>
    NTSYSCALLAPI equ <DECLSPEC_IMPORT>
  else
    NTSYSAPI equ <>
    if Defined(_NTDLLBUILD_)
      NTSYSCALLAPI equ <>
    else
      NTSYSCALLAPI equ <DECLSPEC_ADDRSAFE>
    endif
  endif
  ifndef VOID
    VOID equ <>
    CHAR typedef SBYTE
    SHORT_ typedef SWORD
    LONG typedef SDWORD
    if  not Defined(MIDL_PASS)
      INT_ typedef SDWORD
    endif
  endif
  ifndef _MAC
    WCHAR typedef wchar_t
  else
    ;[...]
  endif
  PWCHAR typedef ptr WCHAR
  LPWCH typedef ptr WCHAR
  PWCH typedef ptr WCHAR
  LPCWCH typedef ptr WCHAR
  PCWCH typedef ptr WCHAR
  NWPSTR typedef ptr WCHAR
  LPWSTR typedef ptr WCHAR
  PWSTR typedef ptr WCHAR
  PZPWSTR typedef ptr PWSTR
  PCZPWSTR typedef ptr PWSTR
  LPUWSTR typedef ptr WCHAR
  PUWSTR typedef ptr WCHAR
  LPCWSTR typedef ptr WCHAR
  PCWSTR typedef ptr WCHAR
  PZPCWSTR typedef ptr PCWSTR
  PCZPCWSTR typedef ptr PCWSTR
  LPCUWSTR typedef ptr WCHAR
  PCUWSTR typedef ptr WCHAR
  PZZWSTR typedef ptr WCHAR
  PCZZWSTR typedef ptr WCHAR
  PUZZWSTR typedef ptr WCHAR
  PCUZZWSTR typedef ptr WCHAR
  PNZWCH typedef ptr WCHAR
  PCNZWCH typedef ptr WCHAR
  PUNZWCH typedef ptr WCHAR
  PCUNZWCH typedef ptr WCHAR
  if _WIN32_WINNT ge 0600h or (Defined(__cplusplus) and Defined(WINDOWS_ENABLE_CPLUSPLUS))
    LPCWCHAR typedef ptr WCHAR
    PCWCHAR typedef ptr WCHAR
    LPCUWCHAR typedef ptr WCHAR
    PCUWCHAR typedef ptr WCHAR
    UCSCHAR typedef DWORD
    UCSCHAR_INVALID_CHARACTER equ 0ffffffffh
    MIN_UCSCHAR equ 0
    MAX_UCSCHAR equ 0010FFFFh
    PUCSCHAR typedef ptr UCSCHAR
    PCUCSCHAR typedef ptr UCSCHAR
    PUCSSTR typedef ptr UCSCHAR
    PUUCSSTR typedef ptr UCSCHAR
    PCUCSSTR typedef ptr UCSCHAR
    PCUUCSSTR typedef ptr UCSCHAR
    PUUCSCHAR typedef ptr UCSCHAR
    PCUUCSCHAR typedef ptr UCSCHAR
  endif
  PCHAR typedef ptr CHAR
  LPCH typedef ptr CHAR
  PCH typedef ptr CHAR
  LPCCH typedef ptr CHAR
  PCCH typedef ptr CHAR
  NPSTR typedef ptr CHAR
  LPSTR typedef ptr CHAR
  PSTR typedef ptr CHAR
  PZPSTR typedef ptr PSTR
  PCZPSTR typedef ptr PSTR
  LPCSTR typedef ptr CHAR
  PCSTR typedef ptr CHAR
  PZPCSTR typedef ptr PCSTR
  PCZPCSTR typedef ptr PCSTR
  PZZSTR typedef ptr CHAR
  PCZZSTR typedef ptr CHAR
  PNZCH typedef ptr CHAR
  PCNZCH typedef ptr CHAR
  ifdef UNICODE
    ifndef _TCHAR_DEFINED
      TCHAR typedef WCHAR
      PTCHAR typedef ptr WCHAR
      TBYTE_ typedef WCHAR
      PTBYTE typedef ptr WCHAR
      _TCHAR_DEFINED equ <>
    endif
    LPTCH typedef LPWCH
    PTCH typedef LPWCH
    LPCTCH typedef LPCWCH
    PCTCH typedef LPCWCH
    PTSTR typedef LPWSTR
    LPTSTR typedef LPWSTR
    PCTSTR typedef LPCWSTR
    LPCTSTR typedef LPCWSTR
    PUTSTR typedef LPUWSTR
    LPUTSTR typedef LPUWSTR
    PCUTSTR typedef LPCUWSTR
    LPCUTSTR typedef LPCUWSTR
    LP typedef LPWSTR
    PZZTSTR typedef PZZWSTR
    PCZZTSTR typedef PCZZWSTR
    PUZZTSTR typedef PUZZWSTR
    PCUZZTSTR typedef PCUZZWSTR
    PZPTSTR typedef PZPWSTR
    PNZTCH typedef PNZWCH
    PCNZTCH typedef PCNZWCH
    PUNZTCH typedef PUNZWCH
    PCUNZTCH typedef PCUNZWCH
    __TEXT macro quote
      exitm <L ## quote>
    endm
  else
    ifndef _TCHAR_DEFINED
      TCHAR typedef SBYTE
      PTCHAR typedef ptr SBYTE
      TBYTE_ typedef BYTE
      PTBYTE typedef ptr BYTE
      _TCHAR_DEFINED equ <>
    endif
    LPTCH typedef LPCH
    PTCH typedef LPCH
    LPCTCH typedef LPCCH
    PCTCH typedef LPCCH
    PTSTR typedef LPSTR
    LPTSTR typedef LPSTR
    PUTSTR typedef LPSTR
    LPUTSTR typedef LPSTR
    PCTSTR typedef LPCSTR
    LPCTSTR typedef LPCSTR
    PCUTSTR typedef LPCSTR
    LPCUTSTR typedef LPCSTR
    PZZTSTR typedef PZZSTR
    PUZZTSTR typedef PZZSTR
    PCZZTSTR typedef PCZZSTR
    PCUZZTSTR typedef PCZZSTR
    PZPTSTR typedef PZPSTR
    PNZTCH typedef PNZCH
    PUNZTCH typedef PNZCH
    PCNZTCH typedef PCNZCH
    PCUNZTCH typedef PCNZCH
    __TEXT macro quote
      exitm <quote>
    endm
  endif
  TEXT macro quote
    exitm <__TEXT(quote)>
  endm
  PSHORT typedef ptr SHORT_
  PLONG typedef ptr LONG
  ALL_PROCESSOR_GROUPS equ 0ffffh
  PROCESSOR_NUMBER struct
    Group_ WORD ?
    Number BYTE ?
    Reserved BYTE ?
  PROCESSOR_NUMBER ends
  _PROCESSOR_NUMBER typedef PROCESSOR_NUMBER
  PPROCESSOR_NUMBER typedef ptr PROCESSOR_NUMBER
  GROUP_AFFINITY struct
    Mask_ KAFFINITY ?
    Group_ WORD ?
    Reserved WORD 3 dup (?)
  GROUP_AFFINITY ends
  _GROUP_AFFINITY typedef GROUP_AFFINITY
  PGROUP_AFFINITY typedef ptr GROUP_AFFINITY
  if Defined(_WIN64)
    MAXIMUM_PROC_PER_GROUP equ 64
  else
    MAXIMUM_PROC_PER_GROUP equ 32
  endif
  MAXIMUM_PROCESSORS equ <MAXIMUM_PROC_PER_GROUP>
  ifdef STRICT
    HANDLE typedef ptr
    if 0 and (_MSC_VER gt 1000)
      ;[...]
    else
      DECLARE_HANDLE macro name_
        name_ typedef HANDLE
      endm
    endif
  else
    HANDLE typedef PVOID
    DECLARE_HANDLE macro name_
      name_ typedef HANDLE
    endm
  endif
  PHANDLE typedef ptr HANDLE
  FCHAR typedef BYTE
  FSHORT typedef WORD
  FLONG typedef DWORD
  ifndef _HRESULT_DEFINED
    _HRESULT_DEFINED equ <>
    ifdef __midl
      ;[...]
    else
      HRESULT typedef SDWORD
    endif
  endif
  ifdef __cplusplus
    ;[...]
  else
    EXTERN_C equ <extern>
    EXTERN_C_START equ <>
    EXTERN_C_END equ <>
  endif
  if Defined(_WIN32) or Defined(_MPPC_)
    ifdef _68K_
      ;[...]
    else
      STDMETHODCALLTYPE equ <__stdcall>
    endif
    STDMETHODVCALLTYPE equ <__cdecl>
    STDAPICALLTYPE equ <__stdcall>
    STDAPIVCALLTYPE equ <__cdecl>
  else
    ;[...]
  endif
  STDAPI equ <EXTERN_C HRESULT STDAPICALLTYPE>
  STDAPI_ macro type_
    exitm <EXTERN_C type_ STDAPICALLTYPE>
  endm
  STDMETHODIMP equ <HRESULT STDMETHODCALLTYPE>
  STDMETHODIMP_ macro type_
    exitm <type_ STDMETHODCALLTYPE>
  endm
  STDOVERRIDEMETHODIMP equ <__override STDMETHODIMP>
  STDOVERRIDEMETHODIMP_ macro type_
    exitm <__override STDMETHODIMP_(type_)>
  endm
  IFACEMETHODIMP equ <__override STDMETHODIMP>
  IFACEMETHODIMP_ macro type_
    exitm <__override STDMETHODIMP_(type_)>
  endm
  STDAPIV equ <EXTERN_C HRESULT STDAPIVCALLTYPE>
  STDAPIV_ macro type_
    exitm <EXTERN_C type_ STDAPIVCALLTYPE>
  endm
  STDMETHODIMPV equ <HRESULT STDMETHODVCALLTYPE>
  STDMETHODIMPV_ macro type_
    exitm <type_ STDMETHODVCALLTYPE>
  endm
  STDOVERRIDEMETHODIMPV equ <__override STDMETHODIMPV>
  STDOVERRIDEMETHODIMPV_ macro type_
    exitm <__override STDMETHODIMPV_(type_)>
  endm
  IFACEMETHODIMPV equ <__override STDMETHODIMPV>
  IFACEMETHODIMPV_ macro type_
    exitm <__override STDMETHODIMPV_(type_)>
  endm
  CCHAR typedef SBYTE
  LCID typedef DWORD
  PLCID typedef PDWORD
  LANGID typedef WORD
  ifndef __COMPARTMENT_ID_DEFINED__
    __COMPARTMENT_ID_DEFINED__ equ <>
    COMPARTMENT_ID typedef SDWORD
    UNSPECIFIED_COMPARTMENT_ID equ 0
    DEFAULT_COMPARTMENT_ID equ 1
    PCOMPARTMENT_ID typedef ptr COMPARTMENT_ID
  endif
  APPLICATION_ERROR_MASK equ 20000000h
  ERROR_SEVERITY_SUCCESS equ 00000000h
  ERROR_SEVERITY_INFORMATIONAL equ 40000000h
  ERROR_SEVERITY_WARNING equ 80000000h
  ERROR_SEVERITY_ERROR equ 0C0000000h
  if Defined(_M_IA64) and  not Defined(MIDL_PASS)
  endif
  FLOAT128 struct 16
    LowPart SQWORD ?
    HighPart SQWORD ?
  FLOAT128 ends
  _FLOAT128 typedef FLOAT128
  PFLOAT128 typedef ptr FLOAT128
  _ULONGLONG_ equ <>
  if ( not Defined(_MAC) and ( not Defined(MIDL_PASS) or Defined(__midl)) and ( not Defined(_M_IX86) or (Defined(_INTEGRAL_MAX_BITS) and _INTEGRAL_MAX_BITS ge 64)))
    LONGLONG typedef SQWORD
    ULONGLONG typedef QWORD
    MAXLONGLONG equ 7fffffffffffffffh
  else
    if Defined(_MAC) and Defined(_MAC_INT_64)
      ;[...]
    else
      LONGLONG typedef REAL8
      ULONGLONG typedef REAL8
    endif
  endif
  PLONGLONG typedef ptr LONGLONG
  PULONGLONG typedef ptr ULONGLONG
  USN typedef LONGLONG
  if Defined(MIDL_PASS)
    ;[...]
  else
    LARGE_INTEGER union
      struct
        LowPart DWORD ?
        HighPart LONG ?
      ends
      struct u
        LowPart DWORD ?
        HighPart LONG ?
      ends
      QuadPart LONGLONG ?
    LARGE_INTEGER ends
    _LARGE_INTEGER typedef LARGE_INTEGER
  endif
  PLARGE_INTEGER typedef ptr LARGE_INTEGER
  if Defined(MIDL_PASS)
    ;[...]
  else
    ULARGE_INTEGER union
      struct
        LowPart DWORD ?
        HighPart DWORD ?
      ends
      struct u
        LowPart DWORD ?
        HighPart DWORD ?
      ends
      QuadPart ULONGLONG ?
    ULARGE_INTEGER ends
    _ULARGE_INTEGER typedef ULARGE_INTEGER
  endif
  PULARGE_INTEGER typedef ptr ULARGE_INTEGER
  RTL_REFERENCE_COUNT typedef LONG_PTR
  PRTL_REFERENCE_COUNT typedef ptr LONG_PTR
  RTL_REFERENCE_COUNT32 typedef LONG
  PRTL_REFERENCE_COUNT32 typedef ptr LONG
  LUID struct
    LowPart DWORD ?
    HighPart LONG ?
  LUID ends
  _LUID typedef LUID
  PLUID typedef ptr LUID
  _DWORDLONG_ equ <>
  DWORDLONG typedef ULONGLONG
  PDWORDLONG typedef ptr DWORDLONG
  if Defined(MIDL_PASS) or Defined(RC_INVOKED) or Defined(_M_CEE_PURE) or Defined(_68K_) or Defined(_MPPC_) or Defined(_M_IA64) or Defined(_M_AMD64) or Defined(_M_ARM) or Defined(_M_ARM64) or Defined(_M_HYBRID_X86_ARM64)
    Int32x32To64 macro a, b
      exitm <((((a))) * (((b))))>
    endm
    UInt32x32To64 macro a, b
      exitm <((((a))) * (((b))))>
    endm
    Int64ShllMod32 macro a, b
      exitm <(((a)) shl (b))>
    endm
    Int64ShraMod32 macro a, b
      exitm <(((a)) shr (b))>
    endm
    Int64ShrlMod32 macro a, b
      exitm <(((a)) shr (b))>
    endm
  elseif Defined(_M_IX86)
    Int32x32To64 macro a, b
      exitm <(((((a))) * ((b))))>
    endm
    UInt32x32To64 macro a, b
      exitm <(((((a))) * ((b))))>
    endm
    Int64ShllMod32 proto WIN_STD_CALL_CONV :ULONGLONG, :DWORD
    Int64ShraMod32 proto WIN_STD_CALL_CONV :LONGLONG, :DWORD
    Int64ShrlMod32 proto WIN_STD_CALL_CONV :ULONGLONG, :DWORD
    if _MSC_VER ge 1200
    endif
    if _MSC_VER ge 1200
    else
    endif
  else
    .err <Must define a target architecture.>
  endif
  ifdef __cplusplus
    ;[...]
  endif
  if Defined(_M_AMD64)
    RotateLeft8 equ <_rotl8>
    RotateLeft16 equ <_rotl16>
    RotateRight8 equ <_rotr8>
    RotateRight16 equ <_rotr16>
    _rotl8 proto c :BYTE, :BYTE
    _rotl16 proto c :WORD, :BYTE
    _rotr8 proto c :BYTE, :BYTE
    _rotr16 proto c :WORD, :BYTE
  endif
  if _MSC_VER ge 1300
    RotateLeft32 equ <_rotl>
    RotateLeft64 equ <_rotl64>
    RotateRight32 equ <_rotr>
    RotateRight64 equ <_rotr64>
    _rotl proto c :DWORD, :SDWORD
    _rotl64 proto c :QWORD, :SDWORD
    _rotr proto c :DWORD, :SDWORD
    _rotr64 proto c :QWORD, :SDWORD
  endif
  ifdef __cplusplus
    ;[...]
  endif
  ANSI_NULL equ (0)
  UNICODE_NULL equ (0)
  UNICODE_STRING_MAX_BYTES equ (65534)
  UNICODE_STRING_MAX_CHARS equ 32767
  BOOLEAN typedef BYTE
  PBOOLEAN typedef ptr BOOLEAN
  LIST_ENTRY struct
    Flink POINTER ?
    Blink POINTER ?
  LIST_ENTRY ends
  _LIST_ENTRY typedef LIST_ENTRY
  PLIST_ENTRY typedef ptr LIST_ENTRY
  PRLIST_ENTRY typedef ptr LIST_ENTRY
  SINGLE_LIST_ENTRY struct
    Next POINTER ?
  SINGLE_LIST_ENTRY ends
  _SINGLE_LIST_ENTRY typedef SINGLE_LIST_ENTRY
  PSINGLE_LIST_ENTRY typedef ptr SINGLE_LIST_ENTRY
  LIST_ENTRY32 struct
    Flink DWORD ?
    Blink DWORD ?
  LIST_ENTRY32 ends
  PLIST_ENTRY32 typedef ptr LIST_ENTRY32
  LIST_ENTRY64 struct
    Flink ULONGLONG ?
    Blink ULONGLONG ?
  LIST_ENTRY64 ends
  PLIST_ENTRY64 typedef ptr LIST_ENTRY64
  include guiddef.inc
  ifndef __OBJECTID_DEFINED
    __OBJECTID_DEFINED equ <>
    OBJECTID struct
      Lineage GUID <>
      Uniquifier DWORD ?
    OBJECTID ends
    _OBJECTID typedef OBJECTID
  endif
  MINCHAR equ 80h
  MAXCHAR equ 7fh
  MINSHORT equ 8000h
  MAXSHORT equ 7fffh
  MINLONG equ 80000000h
  MAXLONG equ 7fffffffh
  MAXBYTE equ 0ffh
  MAXWORD equ 0ffffh
  MAXDWORD equ 0ffffffffh
  FIELD_OFFSET macro type_, field
    exitm <(and (((type_ *) 0) - field))>
  endm
  UFIELD_OFFSET macro type_, field
    exitm <(and (((type_ *) 0) - field))>
  endm
  RTL_FIELD_SIZE macro type_, field
    exitm <(sizeof(((type_ *) 0) - field))>
  endm
  RTL_SIZEOF_THROUGH_FIELD macro type_, field
    exitm <(FIELD_OFFSET(type_, field) + RTL_FIELD_SIZE(type_, field))>
  endm
  RTL_CONTAINS_FIELD macro Struct_, Size_, Field
    exitm <((((and (Struct_) - Field)) + sizeof((Struct_) - Field)) <= (((Struct_)) + (Size_)))>
  endm
  RTL_NUMBER_OF_V1 macro A
    exitm <(sizeof(A) / sizeof((A) [ 0 ]))>
  endm
  if Defined(__cplusplus) and  not Defined(MIDL_PASS) and  not Defined(RC_INVOKED) and  not Defined(_PREFAST_) and (_MSC_FULL_VER ge 13009466) and  not Defined(SORTPP_PASS)
    ;[...]
  else
    RTL_NUMBER_OF_V2 macro A
      exitm <RTL_NUMBER_OF_V1(A)>
    endm
  endif
  ifdef ENABLE_RTL_NUMBER_OF_V2
    RTL_NUMBER_OF macro A
      exitm <RTL_NUMBER_OF_V2(A)>
    endm
  else
    RTL_NUMBER_OF macro A
      exitm <RTL_NUMBER_OF_V1(A)>
    endm
  endif
  ARRAYSIZE macro A
    exitm <RTL_NUMBER_OF_V2(A)>
  endm
  _ARRAYSIZE macro A
    exitm <RTL_NUMBER_OF_V1(A)>
  endm
  RTL_FIELD_TYPE macro type_, field
    exitm <(((type_ *) 0) - field)>
  endm
  RTL_NUMBER_OF_FIELD macro type_, field
    exitm <(RTL_NUMBER_OF(RTL_FIELD_TYPE(type_, field)))>
  endm
  RTL_PADDING_BETWEEN_FIELDS macro T, F1, F2
    exitm <((FIELD_OFFSET(T, F2) > FIELD_OFFSET(T, F1)) ? (FIELD_OFFSET(T, F2) - FIELD_OFFSET(T, F1) - RTL_FIELD_SIZE(T, F1)) : (FIELD_OFFSET(T, F1) - FIELD_OFFSET(T, F2) - RTL_FIELD_SIZE(T, F2)))>
  endm
  if Defined(__cplusplus)
    ;[...]
  else
    RTL_CONST_CAST macro type_
      exitm <(type_)>
    endm
  endif
  RTL_BITS_OF macro sizeOfArg
    exitm <(sizeof(sizeOfArg) * 8)>
  endm
  RTL_BITS_OF_FIELD macro type_, field
    exitm <(RTL_BITS_OF(RTL_FIELD_TYPE(type_, field)))>
  endm
  CONTAINING_RECORD macro address, type_, field
    exitm <((type_ *) ((address) - (and ((type_ *) 0) - field)))>
  endm
  include excpt.inc
  EXCEPTION_ROUTINE typedef proto :ptr _EXCEPTION_RECORD, :PVOID, :ptr _CONTEXT, :PVOID
  PEXCEPTION_ROUTINE typedef ptr EXCEPTION_ROUTINE
  VER_SERVER_NT equ 80000000h
  VER_WORKSTATION_NT equ 40000000h
  VER_SUITE_SMALLBUSINESS equ 00000001h
  VER_SUITE_ENTERPRISE equ 00000002h
  VER_SUITE_BACKOFFICE equ 00000004h
  VER_SUITE_COMMUNICATIONS equ 00000008h
  VER_SUITE_TERMINAL equ 00000010h
  VER_SUITE_SMALLBUSINESS_RESTRICTED equ 00000020h
  VER_SUITE_EMBEDDEDNT equ 00000040h
  VER_SUITE_DATACENTER equ 00000080h
  VER_SUITE_SINGLEUSERTS equ 00000100h
  VER_SUITE_PERSONAL equ 00000200h
  VER_SUITE_BLADE equ 00000400h
  VER_SUITE_EMBEDDED_RESTRICTED equ 00000800h
  VER_SUITE_SECURITY_APPLIANCE equ 00001000h
  VER_SUITE_STORAGE_SERVER equ 00002000h
  VER_SUITE_COMPUTE_SERVER equ 00004000h
  VER_SUITE_WH_SERVER equ 00008000h
  VER_SUITE_MULTIUSERTS equ 00020000h
  PRODUCT_UNDEFINED equ 00000000h
  PRODUCT_ULTIMATE equ 00000001h
  PRODUCT_HOME_BASIC equ 00000002h
  PRODUCT_HOME_PREMIUM equ 00000003h
  PRODUCT_ENTERPRISE equ 00000004h
  PRODUCT_HOME_BASIC_N equ 00000005h
  PRODUCT_BUSINESS equ 00000006h
  PRODUCT_STANDARD_SERVER equ 00000007h
  PRODUCT_DATACENTER_SERVER equ 00000008h
  PRODUCT_SMALLBUSINESS_SERVER equ 00000009h
  PRODUCT_ENTERPRISE_SERVER equ 0000000Ah
  PRODUCT_STARTER equ 0000000Bh
  PRODUCT_DATACENTER_SERVER_CORE equ 0000000Ch
  PRODUCT_STANDARD_SERVER_CORE equ 0000000Dh
  PRODUCT_ENTERPRISE_SERVER_CORE equ 0000000Eh
  PRODUCT_ENTERPRISE_SERVER_IA64 equ 0000000Fh
  PRODUCT_BUSINESS_N equ 00000010h
  PRODUCT_WEB_SERVER equ 00000011h
  PRODUCT_CLUSTER_SERVER equ 00000012h
  PRODUCT_HOME_SERVER equ 00000013h
  PRODUCT_STORAGE_EXPRESS_SERVER equ 00000014h
  PRODUCT_STORAGE_STANDARD_SERVER equ 00000015h
  PRODUCT_STORAGE_WORKGROUP_SERVER equ 00000016h
  PRODUCT_STORAGE_ENTERPRISE_SERVER equ 00000017h
  PRODUCT_SERVER_FOR_SMALLBUSINESS equ 00000018h
  PRODUCT_SMALLBUSINESS_SERVER_PREMIUM equ 00000019h
  PRODUCT_HOME_PREMIUM_N equ 0000001Ah
  PRODUCT_ENTERPRISE_N equ 0000001Bh
  PRODUCT_ULTIMATE_N equ 0000001Ch
  PRODUCT_WEB_SERVER_CORE equ 0000001Dh
  PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT equ 0000001Eh
  PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY equ 0000001Fh
  PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING equ 00000020h
  PRODUCT_SERVER_FOUNDATION equ 00000021h
  PRODUCT_HOME_PREMIUM_SERVER equ 00000022h
  PRODUCT_SERVER_FOR_SMALLBUSINESS_V equ 00000023h
  PRODUCT_STANDARD_SERVER_V equ 00000024h
  PRODUCT_DATACENTER_SERVER_V equ 00000025h
  PRODUCT_ENTERPRISE_SERVER_V equ 00000026h
  PRODUCT_DATACENTER_SERVER_CORE_V equ 00000027h
  PRODUCT_STANDARD_SERVER_CORE_V equ 00000028h
  PRODUCT_ENTERPRISE_SERVER_CORE_V equ 00000029h
  PRODUCT_HYPERV equ 0000002Ah
  PRODUCT_STORAGE_EXPRESS_SERVER_CORE equ 0000002Bh
  PRODUCT_STORAGE_STANDARD_SERVER_CORE equ 0000002Ch
  PRODUCT_STORAGE_WORKGROUP_SERVER_CORE equ 0000002Dh
  PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE equ 0000002Eh
  PRODUCT_STARTER_N equ 0000002Fh
  PRODUCT_PROFESSIONAL equ 00000030h
  PRODUCT_PROFESSIONAL_N equ 00000031h
  PRODUCT_SB_SOLUTION_SERVER equ 00000032h
  PRODUCT_SERVER_FOR_SB_SOLUTIONS equ 00000033h
  PRODUCT_STANDARD_SERVER_SOLUTIONS equ 00000034h
  PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE equ 00000035h
  PRODUCT_SB_SOLUTION_SERVER_EM equ 00000036h
  PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM equ 00000037h
  PRODUCT_SOLUTION_EMBEDDEDSERVER equ 00000038h
  PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE equ 00000039h
  PRODUCT_PROFESSIONAL_EMBEDDED equ 0000003Ah
  PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT equ 0000003Bh
  PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL equ 0000003Ch
  PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC equ 0000003Dh
  PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC equ 0000003Eh
  PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE equ 0000003Fh
  PRODUCT_CLUSTER_SERVER_V equ 00000040h
  PRODUCT_EMBEDDED equ 00000041h
  PRODUCT_STARTER_E equ 00000042h
  PRODUCT_HOME_BASIC_E equ 00000043h
  PRODUCT_HOME_PREMIUM_E equ 00000044h
  PRODUCT_PROFESSIONAL_E equ 00000045h
  PRODUCT_ENTERPRISE_E equ 00000046h
  PRODUCT_ULTIMATE_E equ 00000047h
  PRODUCT_ENTERPRISE_EVALUATION equ 00000048h
  PRODUCT_MULTIPOINT_STANDARD_SERVER equ 0000004Ch
  PRODUCT_MULTIPOINT_PREMIUM_SERVER equ 0000004Dh
  PRODUCT_STANDARD_EVALUATION_SERVER equ 0000004Fh
  PRODUCT_DATACENTER_EVALUATION_SERVER equ 00000050h
  PRODUCT_ENTERPRISE_N_EVALUATION equ 00000054h
  PRODUCT_EMBEDDED_AUTOMOTIVE equ 00000055h
  PRODUCT_EMBEDDED_INDUSTRY_A equ 00000056h
  PRODUCT_THINPC equ 00000057h
  PRODUCT_EMBEDDED_A equ 00000058h
  PRODUCT_EMBEDDED_INDUSTRY equ 00000059h
  PRODUCT_EMBEDDED_E equ 0000005Ah
  PRODUCT_EMBEDDED_INDUSTRY_E equ 0000005Bh
  PRODUCT_EMBEDDED_INDUSTRY_A_E equ 0000005Ch
  PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER equ 0000005Fh
  PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER equ 00000060h
  PRODUCT_CORE_ARM equ 00000061h
  PRODUCT_CORE_N equ 00000062h
  PRODUCT_CORE_COUNTRYSPECIFIC equ 00000063h
  PRODUCT_CORE_SINGLELANGUAGE equ 00000064h
  PRODUCT_CORE equ 00000065h
  PRODUCT_PROFESSIONAL_WMC equ 00000067h
  PRODUCT_EMBEDDED_INDUSTRY_EVAL equ 00000069h
  PRODUCT_EMBEDDED_INDUSTRY_E_EVAL equ 0000006Ah
  PRODUCT_EMBEDDED_EVAL equ 0000006Bh
  PRODUCT_EMBEDDED_E_EVAL equ 0000006Ch
  PRODUCT_NANO_SERVER equ 0000006Dh
  PRODUCT_CLOUD_STORAGE_SERVER equ 0000006Eh
  PRODUCT_CORE_CONNECTED equ 0000006Fh
  PRODUCT_PROFESSIONAL_STUDENT equ 00000070h
  PRODUCT_CORE_CONNECTED_N equ 00000071h
  PRODUCT_PROFESSIONAL_STUDENT_N equ 00000072h
  PRODUCT_CORE_CONNECTED_SINGLELANGUAGE equ 00000073h
  PRODUCT_CORE_CONNECTED_COUNTRYSPECIFIC equ 00000074h
  PRODUCT_CONNECTED_CAR equ 00000075h
  PRODUCT_INDUSTRY_HANDHELD equ 00000076h
  PRODUCT_PPI_PRO equ 00000077h
  PRODUCT_ARM64_SERVER equ 00000078h
  PRODUCT_EDUCATION equ 00000079h
  PRODUCT_EDUCATION_N equ 0000007Ah
  PRODUCT_IOTUAP equ 0000007Bh
  PRODUCT_CLOUD_HOST_INFRASTRUCTURE_SERVER equ 0000007Ch
  PRODUCT_ENTERPRISE_S equ 0000007Dh
  PRODUCT_ENTERPRISE_S_N equ 0000007Eh
  PRODUCT_PROFESSIONAL_S equ 0000007Fh
  PRODUCT_PROFESSIONAL_S_N equ 00000080h
  PRODUCT_ENTERPRISE_S_EVALUATION equ 00000081h
  PRODUCT_ENTERPRISE_S_N_EVALUATION equ 00000082h
  PRODUCT_HOLOGRAPHIC equ 00000087h
  PRODUCT_PRO_SINGLE_LANGUAGE equ 0000008Ah
  PRODUCT_PRO_CHINA equ 0000008Bh
  PRODUCT_ENTERPRISE_SUBSCRIPTION equ 0000008Ch
  PRODUCT_ENTERPRISE_SUBSCRIPTION_N equ 0000008Dh
  PRODUCT_DATACENTER_NANO_SERVER equ 0000008Fh
  PRODUCT_STANDARD_NANO_SERVER equ 00000090h
  PRODUCT_DATACENTER_A_SERVER_CORE equ 00000091h
  PRODUCT_STANDARD_A_SERVER_CORE equ 00000092h
  PRODUCT_DATACENTER_WS_SERVER_CORE equ 00000093h
  PRODUCT_STANDARD_WS_SERVER_CORE equ 00000094h
  PRODUCT_UTILITY_VM equ 00000095h
  PRODUCT_DATACENTER_EVALUATION_SERVER_CORE equ 0000009Fh
  PRODUCT_STANDARD_EVALUATION_SERVER_CORE equ 000000A0h
  PRODUCT_PRO_WORKSTATION equ 000000A1h
  PRODUCT_PRO_WORKSTATION_N equ 000000A2h
  PRODUCT_PRO_FOR_EDUCATION equ 000000A4h
  PRODUCT_PRO_FOR_EDUCATION_N equ 000000A5h
  PRODUCT_AZURE_SERVER_CORE equ 000000A8h
  PRODUCT_AZURE_NANO_SERVER equ 000000A9h
  PRODUCT_ENTERPRISEG equ 000000ABh
  PRODUCT_ENTERPRISEGN equ 000000ACh
  PRODUCT_SERVERRDSH equ 000000AFh
  PRODUCT_CLOUD equ 000000B2h
  PRODUCT_CLOUDN equ 000000B3h
  PRODUCT_HUBOS equ 000000B4h
  PRODUCT_ONECOREUPDATEOS equ 000000B6h
  PRODUCT_ANDROMEDA equ 000000B8h
  PRODUCT_UNLICENSED equ 0ABCDABCDh
  include sdkddkver.inc
  LANG_NEUTRAL equ 00h
  LANG_INVARIANT equ 7fh
  LANG_AFRIKAANS equ 36h
  LANG_ALBANIAN equ 1ch
  LANG_ALSATIAN equ 84h
  LANG_AMHARIC equ 5eh
  LANG_ARABIC equ 01h
  LANG_ARMENIAN equ 2bh
  LANG_ASSAMESE equ 4dh
  LANG_AZERI equ 2ch
  LANG_AZERBAIJANI equ 2ch
  LANG_BANGLA equ 45h
  LANG_BASHKIR equ 6dh
  LANG_BASQUE equ 2dh
  LANG_BELARUSIAN equ 23h
  LANG_BENGALI equ 45h
  LANG_BRETON equ 7eh
  LANG_BOSNIAN equ 1ah
  LANG_BOSNIAN_NEUTRAL equ 781ah
  LANG_BULGARIAN equ 02h
  LANG_CATALAN equ 03h
  LANG_CENTRAL_KURDISH equ 92h
  LANG_CHEROKEE equ 5ch
  LANG_CHINESE equ 04h
  LANG_CHINESE_SIMPLIFIED equ 04h
  LANG_CHINESE_TRADITIONAL equ 7c04h
  LANG_CORSICAN equ 83h
  LANG_CROATIAN equ 1ah
  LANG_CZECH equ 05h
  LANG_DANISH equ 06h
  LANG_DARI equ 8ch
  LANG_DIVEHI equ 65h
  LANG_DUTCH equ 13h
  LANG_ENGLISH equ 09h
  LANG_ESTONIAN equ 25h
  LANG_FAEROESE equ 38h
  LANG_FARSI equ 29h
  LANG_FILIPINO equ 64h
  LANG_FINNISH equ 0bh
  LANG_FRENCH equ 0ch
  LANG_FRISIAN equ 62h
  LANG_FULAH equ 67h
  LANG_GALICIAN equ 56h
  LANG_GEORGIAN equ 37h
  LANG_GERMAN equ 07h
  LANG_GREEK equ 08h
  LANG_GREENLANDIC equ 6fh
  LANG_GUJARATI equ 47h
  LANG_HAUSA equ 68h
  LANG_HAWAIIAN equ 75h
  LANG_HEBREW equ 0dh
  LANG_HINDI equ 39h
  LANG_HUNGARIAN equ 0eh
  LANG_ICELANDIC equ 0fh
  LANG_IGBO equ 70h
  LANG_INDONESIAN equ 21h
  LANG_INUKTITUT equ 5dh
  LANG_IRISH equ 3ch
  LANG_ITALIAN equ 10h
  LANG_JAPANESE equ 11h
  LANG_KANNADA equ 4bh
  LANG_KASHMIRI equ 60h
  LANG_KAZAK equ 3fh
  LANG_KHMER equ 53h
  LANG_KICHE equ 86h
  LANG_KINYARWANDA equ 87h
  LANG_KONKANI equ 57h
  LANG_KOREAN equ 12h
  LANG_KYRGYZ equ 40h
  LANG_LAO equ 54h
  LANG_LATVIAN equ 26h
  LANG_LITHUANIAN equ 27h
  LANG_LOWER_SORBIAN equ 2eh
  LANG_LUXEMBOURGISH equ 6eh
  LANG_MACEDONIAN equ 2fh
  LANG_MALAY equ 3eh
  LANG_MALAYALAM equ 4ch
  LANG_MALTESE equ 3ah
  LANG_MANIPURI equ 58h
  LANG_MAORI equ 81h
  LANG_MAPUDUNGUN equ 7ah
  LANG_MARATHI equ 4eh
  LANG_MOHAWK equ 7ch
  LANG_MONGOLIAN equ 50h
  LANG_NEPALI equ 61h
  LANG_NORWEGIAN equ 14h
  LANG_OCCITAN equ 82h
  LANG_ODIA equ 48h
  LANG_ORIYA equ 48h
  LANG_PASHTO equ 63h
  LANG_PERSIAN equ 29h
  LANG_POLISH equ 15h
  LANG_PORTUGUESE equ 16h
  LANG_PULAR equ 67h
  LANG_PUNJABI equ 46h
  LANG_QUECHUA equ 6bh
  LANG_ROMANIAN equ 18h
  LANG_ROMANSH equ 17h
  LANG_RUSSIAN equ 19h
  LANG_SAKHA equ 85h
  LANG_SAMI equ 3bh
  LANG_SANSKRIT equ 4fh
  LANG_SCOTTISH_GAELIC equ 91h
  LANG_SERBIAN equ 1ah
  LANG_SERBIAN_NEUTRAL equ 7c1ah
  LANG_SINDHI equ 59h
  LANG_SINHALESE equ 5bh
  LANG_SLOVAK equ 1bh
  LANG_SLOVENIAN equ 24h
  LANG_SOTHO equ 6ch
  LANG_SPANISH equ 0ah
  LANG_SWAHILI equ 41h
  LANG_SWEDISH equ 1dh
  LANG_SYRIAC equ 5ah
  LANG_TAJIK equ 28h
  LANG_TAMAZIGHT equ 5fh
  LANG_TAMIL equ 49h
  LANG_TATAR equ 44h
  LANG_TELUGU equ 4ah
  LANG_THAI equ 1eh
  LANG_TIBETAN equ 51h
  LANG_TIGRIGNA equ 73h
  LANG_TIGRINYA equ 73h
  LANG_TSWANA equ 32h
  LANG_TURKISH equ 1fh
  LANG_TURKMEN equ 42h
  LANG_UIGHUR equ 80h
  LANG_UKRAINIAN equ 22h
  LANG_UPPER_SORBIAN equ 2eh
  LANG_URDU equ 20h
  LANG_UZBEK equ 43h
  LANG_VALENCIAN equ 03h
  LANG_VIETNAMESE equ 2ah
  LANG_WELSH equ 52h
  LANG_WOLOF equ 88h
  LANG_XHOSA equ 34h
  LANG_YAKUT equ 85h
  LANG_YI equ 78h
  LANG_YORUBA equ 6ah
  LANG_ZULU equ 35h
  SUBLANG_NEUTRAL equ 00h
  SUBLANG_DEFAULT equ 01h
  SUBLANG_SYS_DEFAULT equ 02h
  SUBLANG_CUSTOM_DEFAULT equ 03h
  SUBLANG_CUSTOM_UNSPECIFIED equ 04h
  SUBLANG_UI_CUSTOM_DEFAULT equ 05h
  SUBLANG_AFRIKAANS_SOUTH_AFRICA equ 01h
  SUBLANG_ALBANIAN_ALBANIA equ 01h
  SUBLANG_ALSATIAN_FRANCE equ 01h
  SUBLANG_AMHARIC_ETHIOPIA equ 01h
  SUBLANG_ARABIC_SAUDI_ARABIA equ 01h
  SUBLANG_ARABIC_IRAQ equ 02h
  SUBLANG_ARABIC_EGYPT equ 03h
  SUBLANG_ARABIC_LIBYA equ 04h
  SUBLANG_ARABIC_ALGERIA equ 05h
  SUBLANG_ARABIC_MOROCCO equ 06h
  SUBLANG_ARABIC_TUNISIA equ 07h
  SUBLANG_ARABIC_OMAN equ 08h
  SUBLANG_ARABIC_YEMEN equ 09h
  SUBLANG_ARABIC_SYRIA equ 0ah
  SUBLANG_ARABIC_JORDAN equ 0bh
  SUBLANG_ARABIC_LEBANON equ 0ch
  SUBLANG_ARABIC_KUWAIT equ 0dh
  SUBLANG_ARABIC_UAE equ 0eh
  SUBLANG_ARABIC_BAHRAIN equ 0fh
  SUBLANG_ARABIC_QATAR equ 10h
  SUBLANG_ARMENIAN_ARMENIA equ 01h
  SUBLANG_ASSAMESE_INDIA equ 01h
  SUBLANG_AZERI_LATIN equ 01h
  SUBLANG_AZERI_CYRILLIC equ 02h
  SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN equ 01h
  SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC equ 02h
  SUBLANG_BANGLA_INDIA equ 01h
  SUBLANG_BANGLA_BANGLADESH equ 02h
  SUBLANG_BASHKIR_RUSSIA equ 01h
  SUBLANG_BASQUE_BASQUE equ 01h
  SUBLANG_BELARUSIAN_BELARUS equ 01h
  SUBLANG_BENGALI_INDIA equ 01h
  SUBLANG_BENGALI_BANGLADESH equ 02h
  SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN equ 05h
  SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC equ 08h
  SUBLANG_BRETON_FRANCE equ 01h
  SUBLANG_BULGARIAN_BULGARIA equ 01h
  SUBLANG_CATALAN_CATALAN equ 01h
  SUBLANG_CENTRAL_KURDISH_IRAQ equ 01h
  SUBLANG_CHEROKEE_CHEROKEE equ 01h
  SUBLANG_CHINESE_TRADITIONAL equ 01h
  SUBLANG_CHINESE_SIMPLIFIED equ 02h
  SUBLANG_CHINESE_HONGKONG equ 03h
  SUBLANG_CHINESE_SINGAPORE equ 04h
  SUBLANG_CHINESE_MACAU equ 05h
  SUBLANG_CORSICAN_FRANCE equ 01h
  SUBLANG_CZECH_CZECH_REPUBLIC equ 01h
  SUBLANG_CROATIAN_CROATIA equ 01h
  SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN equ 04h
  SUBLANG_DANISH_DENMARK equ 01h
  SUBLANG_DARI_AFGHANISTAN equ 01h
  SUBLANG_DIVEHI_MALDIVES equ 01h
  SUBLANG_DUTCH equ 01h
  SUBLANG_DUTCH_BELGIAN equ 02h
  SUBLANG_ENGLISH_US equ 01h
  SUBLANG_ENGLISH_UK equ 02h
  SUBLANG_ENGLISH_AUS equ 03h
  SUBLANG_ENGLISH_CAN equ 04h
  SUBLANG_ENGLISH_NZ equ 05h
  SUBLANG_ENGLISH_EIRE equ 06h
  SUBLANG_ENGLISH_SOUTH_AFRICA equ 07h
  SUBLANG_ENGLISH_JAMAICA equ 08h
  SUBLANG_ENGLISH_CARIBBEAN equ 09h
  SUBLANG_ENGLISH_BELIZE equ 0ah
  SUBLANG_ENGLISH_TRINIDAD equ 0bh
  SUBLANG_ENGLISH_ZIMBABWE equ 0ch
  SUBLANG_ENGLISH_PHILIPPINES equ 0dh
  SUBLANG_ENGLISH_INDIA equ 10h
  SUBLANG_ENGLISH_MALAYSIA equ 11h
  SUBLANG_ENGLISH_SINGAPORE equ 12h
  SUBLANG_ESTONIAN_ESTONIA equ 01h
  SUBLANG_FAEROESE_FAROE_ISLANDS equ 01h
  SUBLANG_FILIPINO_PHILIPPINES equ 01h
  SUBLANG_FINNISH_FINLAND equ 01h
  SUBLANG_FRENCH equ 01h
  SUBLANG_FRENCH_BELGIAN equ 02h
  SUBLANG_FRENCH_CANADIAN equ 03h
  SUBLANG_FRENCH_SWISS equ 04h
  SUBLANG_FRENCH_LUXEMBOURG equ 05h
  SUBLANG_FRENCH_MONACO equ 06h
  SUBLANG_FRISIAN_NETHERLANDS equ 01h
  SUBLANG_FULAH_SENEGAL equ 02h
  SUBLANG_GALICIAN_GALICIAN equ 01h
  SUBLANG_GEORGIAN_GEORGIA equ 01h
  SUBLANG_GERMAN equ 01h
  SUBLANG_GERMAN_SWISS equ 02h
  SUBLANG_GERMAN_AUSTRIAN equ 03h
  SUBLANG_GERMAN_LUXEMBOURG equ 04h
  SUBLANG_GERMAN_LIECHTENSTEIN equ 05h
  SUBLANG_GREEK_GREECE equ 01h
  SUBLANG_GREENLANDIC_GREENLAND equ 01h
  SUBLANG_GUJARATI_INDIA equ 01h
  SUBLANG_HAUSA_NIGERIA_LATIN equ 01h
  SUBLANG_HAWAIIAN_US equ 01h
  SUBLANG_HEBREW_ISRAEL equ 01h
  SUBLANG_HINDI_INDIA equ 01h
  SUBLANG_HUNGARIAN_HUNGARY equ 01h
  SUBLANG_ICELANDIC_ICELAND equ 01h
  SUBLANG_IGBO_NIGERIA equ 01h
  SUBLANG_INDONESIAN_INDONESIA equ 01h
  SUBLANG_INUKTITUT_CANADA equ 01h
  SUBLANG_INUKTITUT_CANADA_LATIN equ 02h
  SUBLANG_IRISH_IRELAND equ 02h
  SUBLANG_ITALIAN equ 01h
  SUBLANG_ITALIAN_SWISS equ 02h
  SUBLANG_JAPANESE_JAPAN equ 01h
  SUBLANG_KANNADA_INDIA equ 01h
  SUBLANG_KASHMIRI_SASIA equ 02h
  SUBLANG_KASHMIRI_INDIA equ 02h
  SUBLANG_KAZAK_KAZAKHSTAN equ 01h
  SUBLANG_KHMER_CAMBODIA equ 01h
  SUBLANG_KICHE_GUATEMALA equ 01h
  SUBLANG_KINYARWANDA_RWANDA equ 01h
  SUBLANG_KONKANI_INDIA equ 01h
  SUBLANG_KOREAN equ 01h
  SUBLANG_KYRGYZ_KYRGYZSTAN equ 01h
  SUBLANG_LAO_LAO equ 01h
  SUBLANG_LATVIAN_LATVIA equ 01h
  SUBLANG_LITHUANIAN equ 01h
  SUBLANG_LOWER_SORBIAN_GERMANY equ 02h
  SUBLANG_LUXEMBOURGISH_LUXEMBOURG equ 01h
  SUBLANG_MACEDONIAN_MACEDONIA equ 01h
  SUBLANG_MALAY_MALAYSIA equ 01h
  SUBLANG_MALAY_BRUNEI_DARUSSALAM equ 02h
  SUBLANG_MALAYALAM_INDIA equ 01h
  SUBLANG_MALTESE_MALTA equ 01h
  SUBLANG_MAORI_NEW_ZEALAND equ 01h
  SUBLANG_MAPUDUNGUN_CHILE equ 01h
  SUBLANG_MARATHI_INDIA equ 01h
  SUBLANG_MOHAWK_MOHAWK equ 01h
  SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA equ 01h
  SUBLANG_MONGOLIAN_PRC equ 02h
  SUBLANG_NEPALI_INDIA equ 02h
  SUBLANG_NEPALI_NEPAL equ 01h
  SUBLANG_NORWEGIAN_BOKMAL equ 01h
  SUBLANG_NORWEGIAN_NYNORSK equ 02h
  SUBLANG_OCCITAN_FRANCE equ 01h
  SUBLANG_ODIA_INDIA equ 01h
  SUBLANG_ORIYA_INDIA equ 01h
  SUBLANG_PASHTO_AFGHANISTAN equ 01h
  SUBLANG_PERSIAN_IRAN equ 01h
  SUBLANG_POLISH_POLAND equ 01h
  SUBLANG_PORTUGUESE equ 02h
  SUBLANG_PORTUGUESE_BRAZILIAN equ 01h
  SUBLANG_PULAR_SENEGAL equ 02h
  SUBLANG_PUNJABI_INDIA equ 01h
  SUBLANG_PUNJABI_PAKISTAN equ 02h
  SUBLANG_QUECHUA_BOLIVIA equ 01h
  SUBLANG_QUECHUA_ECUADOR equ 02h
  SUBLANG_QUECHUA_PERU equ 03h
  SUBLANG_ROMANIAN_ROMANIA equ 01h
  SUBLANG_ROMANSH_SWITZERLAND equ 01h
  SUBLANG_RUSSIAN_RUSSIA equ 01h
  SUBLANG_SAKHA_RUSSIA equ 01h
  SUBLANG_SAMI_NORTHERN_NORWAY equ 01h
  SUBLANG_SAMI_NORTHERN_SWEDEN equ 02h
  SUBLANG_SAMI_NORTHERN_FINLAND equ 03h
  SUBLANG_SAMI_LULE_NORWAY equ 04h
  SUBLANG_SAMI_LULE_SWEDEN equ 05h
  SUBLANG_SAMI_SOUTHERN_NORWAY equ 06h
  SUBLANG_SAMI_SOUTHERN_SWEDEN equ 07h
  SUBLANG_SAMI_SKOLT_FINLAND equ 08h
  SUBLANG_SAMI_INARI_FINLAND equ 09h
  SUBLANG_SANSKRIT_INDIA equ 01h
  SUBLANG_SCOTTISH_GAELIC equ 01h
  SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN equ 06h
  SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC equ 07h
  SUBLANG_SERBIAN_MONTENEGRO_LATIN equ 0bh
  SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC equ 0ch
  SUBLANG_SERBIAN_SERBIA_LATIN equ 09h
  SUBLANG_SERBIAN_SERBIA_CYRILLIC equ 0ah
  SUBLANG_SERBIAN_CROATIA equ 01h
  SUBLANG_SERBIAN_LATIN equ 02h
  SUBLANG_SERBIAN_CYRILLIC equ 03h
  SUBLANG_SINDHI_INDIA equ 01h
  SUBLANG_SINDHI_PAKISTAN equ 02h
  SUBLANG_SINDHI_AFGHANISTAN equ 02h
  SUBLANG_SINHALESE_SRI_LANKA equ 01h
  SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA equ 01h
  SUBLANG_SLOVAK_SLOVAKIA equ 01h
  SUBLANG_SLOVENIAN_SLOVENIA equ 01h
  SUBLANG_SPANISH equ 01h
  SUBLANG_SPANISH_MEXICAN equ 02h
  SUBLANG_SPANISH_MODERN equ 03h
  SUBLANG_SPANISH_GUATEMALA equ 04h
  SUBLANG_SPANISH_COSTA_RICA equ 05h
  SUBLANG_SPANISH_PANAMA equ 06h
  SUBLANG_SPANISH_DOMINICAN_REPUBLIC equ 07h
  SUBLANG_SPANISH_VENEZUELA equ 08h
  SUBLANG_SPANISH_COLOMBIA equ 09h
  SUBLANG_SPANISH_PERU equ 0ah
  SUBLANG_SPANISH_ARGENTINA equ 0bh
  SUBLANG_SPANISH_ECUADOR equ 0ch
  SUBLANG_SPANISH_CHILE equ 0dh
  SUBLANG_SPANISH_URUGUAY equ 0eh
  SUBLANG_SPANISH_PARAGUAY equ 0fh
  SUBLANG_SPANISH_BOLIVIA equ 10h
  SUBLANG_SPANISH_EL_SALVADOR equ 11h
  SUBLANG_SPANISH_HONDURAS equ 12h
  SUBLANG_SPANISH_NICARAGUA equ 13h
  SUBLANG_SPANISH_PUERTO_RICO equ 14h
  SUBLANG_SPANISH_US equ 15h
  SUBLANG_SWAHILI_KENYA equ 01h
  SUBLANG_SWEDISH equ 01h
  SUBLANG_SWEDISH_FINLAND equ 02h
  SUBLANG_SYRIAC_SYRIA equ 01h
  SUBLANG_TAJIK_TAJIKISTAN equ 01h
  SUBLANG_TAMAZIGHT_ALGERIA_LATIN equ 02h
  SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH equ 04h
  SUBLANG_TAMIL_INDIA equ 01h
  SUBLANG_TAMIL_SRI_LANKA equ 02h
  SUBLANG_TATAR_RUSSIA equ 01h
  SUBLANG_TELUGU_INDIA equ 01h
  SUBLANG_THAI_THAILAND equ 01h
  SUBLANG_TIBETAN_PRC equ 01h
  SUBLANG_TIGRIGNA_ERITREA equ 02h
  SUBLANG_TIGRINYA_ERITREA equ 02h
  SUBLANG_TIGRINYA_ETHIOPIA equ 01h
  SUBLANG_TSWANA_BOTSWANA equ 02h
  SUBLANG_TSWANA_SOUTH_AFRICA equ 01h
  SUBLANG_TURKISH_TURKEY equ 01h
  SUBLANG_TURKMEN_TURKMENISTAN equ 01h
  SUBLANG_UIGHUR_PRC equ 01h
  SUBLANG_UKRAINIAN_UKRAINE equ 01h
  SUBLANG_UPPER_SORBIAN_GERMANY equ 01h
  SUBLANG_URDU_PAKISTAN equ 01h
  SUBLANG_URDU_INDIA equ 02h
  SUBLANG_UZBEK_LATIN equ 01h
  SUBLANG_UZBEK_CYRILLIC equ 02h
  SUBLANG_VALENCIAN_VALENCIA equ 02h
  SUBLANG_VIETNAMESE_VIETNAM equ 01h
  SUBLANG_WELSH_UNITED_KINGDOM equ 01h
  SUBLANG_WOLOF_SENEGAL equ 01h
  SUBLANG_XHOSA_SOUTH_AFRICA equ 01h
  SUBLANG_YAKUT_RUSSIA equ 01h
  SUBLANG_YI_PRC equ 01h
  SUBLANG_YORUBA_NIGERIA equ 01h
  SUBLANG_ZULU_SOUTH_AFRICA equ 01h
  SORT_DEFAULT equ 0h
  SORT_INVARIANT_MATH equ 1h
  SORT_JAPANESE_XJIS equ 0h
  SORT_JAPANESE_UNICODE equ 1h
  SORT_JAPANESE_RADICALSTROKE equ 4h
  SORT_CHINESE_BIG5 equ 0h
  SORT_CHINESE_PRCP equ 0h
  SORT_CHINESE_UNICODE equ 1h
  SORT_CHINESE_PRC equ 2h
  SORT_CHINESE_BOPOMOFO equ 3h
  SORT_CHINESE_RADICALSTROKE equ 4h
  SORT_KOREAN_KSC equ 0h
  SORT_KOREAN_UNICODE equ 1h
  SORT_GERMAN_PHONE_BOOK equ 1h
  SORT_HUNGARIAN_DEFAULT equ 0h
  SORT_HUNGARIAN_TECHNICAL equ 1h
  SORT_GEORGIAN_TRADITIONAL equ 0h
  SORT_GEORGIAN_MODERN equ 1h
  MAKELANGID macro p, s
    exitm <((((s)) shl 10) or (p))>
  endm
  PRIMARYLANGID macro lgid
    exitm <((lgid) and 3ffh)>
  endm
  SUBLANGID macro lgid
    exitm <((lgid) shr 10)>
  endm
  NLS_VALID_LOCALE_MASK equ 000fffffh
  MAKELCID macro lgid, srtid
    exitm <((((((srtid))) shl 16) or (((lgid)))))>
  endm
  MAKESORTLCID macro lgid, srtid, ver
    exitm <(((MAKELCID(lgid, srtid)) or ((((ver))) shl 20)))>
  endm
  LANGIDFROMLCID macro lcid
    exitm <((lcid))>
  endm
  SORTIDFROMLCID macro lcid
    exitm <(((((lcid)) shr 16) and 0fh))>
  endm
  SORTVERSIONFROMLCID macro lcid
    exitm <(((((lcid)) shr 20) and 0fh))>
  endm
  LOCALE_NAME_MAX_LENGTH equ 85
  LANG_SYSTEM_DEFAULT equ <(MAKELANGID(LANG_NEUTRAL, SUBLANG_SYS_DEFAULT))>
  LANG_USER_DEFAULT equ <(MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT))>
  LOCALE_SYSTEM_DEFAULT equ <(MAKELCID(LANG_SYSTEM_DEFAULT, SORT_DEFAULT))>
  LOCALE_USER_DEFAULT equ <(MAKELCID(LANG_USER_DEFAULT, SORT_DEFAULT))>
  LOCALE_CUSTOM_DEFAULT equ <(MAKELCID(MAKELANGID(LANG_NEUTRAL, SUBLANG_CUSTOM_DEFAULT), SORT_DEFAULT))>
  LOCALE_CUSTOM_UNSPECIFIED equ <(MAKELCID(MAKELANGID(LANG_NEUTRAL, SUBLANG_CUSTOM_UNSPECIFIED), SORT_DEFAULT))>
  LOCALE_CUSTOM_UI_DEFAULT equ <(MAKELCID(MAKELANGID(LANG_NEUTRAL, SUBLANG_UI_CUSTOM_DEFAULT), SORT_DEFAULT))>
  LOCALE_NEUTRAL equ <(MAKELCID(MAKELANGID(LANG_NEUTRAL, SUBLANG_NEUTRAL), SORT_DEFAULT))>
  LOCALE_INVARIANT equ <(MAKELCID(MAKELANGID(LANG_INVARIANT, SUBLANG_NEUTRAL), SORT_DEFAULT))>
  LOCALE_TRANSIENT_KEYBOARD1 equ 2000h
  LOCALE_TRANSIENT_KEYBOARD2 equ 2400h
  LOCALE_TRANSIENT_KEYBOARD3 equ 2800h
  LOCALE_TRANSIENT_KEYBOARD4 equ 2c00h
  LOCALE_UNASSIGNED_LCID equ <LOCALE_CUSTOM_UNSPECIFIED>
  if  not Defined(lint)
    ifdef _PREFAST_
      ;[...]
    else
      UNREFERENCED_PARAMETER macro P
        exitm <(P)>
      endm
      DBG_UNREFERENCED_PARAMETER macro P
        exitm <(P)>
      endm
      DBG_UNREFERENCED_LOCAL_VARIABLE macro V
        exitm <(V)>
      endm
    endif
  else
    UNREFERENCED_PARAMETER macro P
      exitm <{ (P) = (P) ; }>
    endm
    DBG_UNREFERENCED_PARAMETER macro P
      exitm <{ (P) = (P) ; }>
    endm
    DBG_UNREFERENCED_LOCAL_VARIABLE macro V
      exitm <{ (V) = (V) ; }>
    endm
  endif
  if (_MSC_VER gt 1200)
    DEFAULT_UNREACHABLE equ default : __assume (0)
  else
    DEFAULT_UNREACHABLE equ <>
  endif
  ifdef __cplusplus
    ;[...]
  else
    DEFINE_ENUM_FLAG_OPERATORS macro ENUMTYPE
      exitm <>
    endm
  endif
  COMPILETIME_OR_2FLAGS macro a, b
    exitm <((a) or (b))>
  endm
  COMPILETIME_OR_3FLAGS macro a, b, c_
    exitm <((a) or (b) or (c_))>
  endm
  COMPILETIME_OR_4FLAGS macro a, b, c_, d
    exitm <((a) or (b) or (c_) or (d))>
  endm
  COMPILETIME_OR_5FLAGS macro a, b, c_, d, e
    exitm <((a) or (b) or (c_) or (d) or (e))>
  endm
  COMPILETIME_OR_6FLAGS macro a, b, c_, d, e, f
    exitm <((a) or (b) or (c_) or (d) or (e) or (f))>
  endm
  ifndef UMDF_USING_NTSTATUS
    ifndef WIN32_NO_STATUS
      STATUS_WAIT_0 equ (00000000h)
      STATUS_ABANDONED_WAIT_0 equ (00000080h)
      STATUS_USER_APC equ (000000C0h)
      STATUS_TIMEOUT equ (00000102h)
      STATUS_PENDING equ (00000103h)
      DBG_EXCEPTION_HANDLED equ (00010001h)
      DBG_CONTINUE equ (00010002h)
      STATUS_SEGMENT_NOTIFICATION equ (40000005h)
      STATUS_FATAL_APP_EXIT equ (40000015h)
      DBG_REPLY_LATER equ (40010001h)
      DBG_TERMINATE_THREAD equ (40010003h)
      DBG_TERMINATE_PROCESS equ (40010004h)
      DBG_CONTROL_C equ (40010005h)
      DBG_PRINTEXCEPTION_C equ (40010006h)
      DBG_RIPEXCEPTION equ (40010007h)
      DBG_CONTROL_BREAK equ (40010008h)
      DBG_COMMAND_EXCEPTION equ (40010009h)
      DBG_PRINTEXCEPTION_WIDE_C equ (4001000Ah)
      STATUS_GUARD_PAGE_VIOLATION equ (80000001h)
      STATUS_DATATYPE_MISALIGNMENT equ (80000002h)
      STATUS_BREAKPOINT equ (80000003h)
      STATUS_SINGLE_STEP equ (80000004h)
      STATUS_LONGJUMP equ (80000026h)
      STATUS_UNWIND_CONSOLIDATE equ (80000029h)
      DBG_EXCEPTION_NOT_HANDLED equ (80010001h)
      STATUS_ACCESS_VIOLATION equ (0C0000005h)
      STATUS_IN_PAGE_ERROR equ (0C0000006h)
      STATUS_INVALID_HANDLE equ (0C0000008h)
      STATUS_INVALID_PARAMETER equ (0C000000Dh)
      STATUS_NO_MEMORY equ (0C0000017h)
      STATUS_ILLEGAL_INSTRUCTION equ (0C000001Dh)
      STATUS_NONCONTINUABLE_EXCEPTION equ (0C0000025h)
      STATUS_INVALID_DISPOSITION equ (0C0000026h)
      STATUS_ARRAY_BOUNDS_EXCEEDED equ (0C000008Ch)
      STATUS_FLOAT_DENORMAL_OPERAND equ (0C000008Dh)
      STATUS_FLOAT_DIVIDE_BY_ZERO equ (0C000008Eh)
      STATUS_FLOAT_INEXACT_RESULT equ (0C000008Fh)
      STATUS_FLOAT_INVALID_OPERATION equ (0C0000090h)
      STATUS_FLOAT_OVERFLOW equ (0C0000091h)
      STATUS_FLOAT_STACK_CHECK equ (0C0000092h)
      STATUS_FLOAT_UNDERFLOW equ (0C0000093h)
      STATUS_INTEGER_DIVIDE_BY_ZERO equ (0C0000094h)
      STATUS_INTEGER_OVERFLOW equ (0C0000095h)
      STATUS_PRIVILEGED_INSTRUCTION equ (0C0000096h)
      STATUS_STACK_OVERFLOW equ (0C00000FDh)
      STATUS_DLL_NOT_FOUND equ (0C0000135h)
      STATUS_ORDINAL_NOT_FOUND equ (0C0000138h)
      STATUS_ENTRYPOINT_NOT_FOUND equ (0C0000139h)
      STATUS_CONTROL_C_EXIT equ (0C000013Ah)
      STATUS_DLL_INIT_FAILED equ (0C0000142h)
      STATUS_FLOAT_MULTIPLE_FAULTS equ (0C00002B4h)
      STATUS_FLOAT_MULTIPLE_TRAPS equ (0C00002B5h)
      STATUS_REG_NAT_CONSUMPTION equ (0C00002C9h)
      STATUS_HEAP_CORRUPTION equ (0C0000374h)
      STATUS_STACK_BUFFER_OVERRUN equ (0C0000409h)
      STATUS_INVALID_CRUNTIME_PARAMETER equ (0C0000417h)
      STATUS_ASSERTION_FAILURE equ (0C0000420h)
      STATUS_ENCLAVE_VIOLATION equ (0C00004A2h)
      if Defined(STATUS_SUCCESS) or (_WIN32_WINNT gt 0500h) or (_WIN32_FUSION ge 0100h)
        STATUS_SXS_EARLY_DEACTIVATION equ (0C015000Fh)
        STATUS_SXS_INVALID_DEACTIVATION equ (0C0150010h)
      endif
    endif
  endif
  MAXIMUM_WAIT_OBJECTS equ 64
  MAXIMUM_SUSPEND_COUNT equ <MAXCHAR>
  KSPIN_LOCK typedef ULONG_PTR
  PKSPIN_LOCK typedef ptr KSPIN_LOCK
  M128A struct
    Low_ ULONGLONG ?
    High_ LONGLONG ?
  M128A ends
  _M128A typedef M128A
  PM128A typedef ptr M128A
  XSAVE_FORMAT struct
    ControlWord WORD ?
    StatusWord WORD ?
    TagWord BYTE ?
    Reserved1 BYTE ?
    ErrorOpcode WORD ?
    ErrorOffset DWORD ?
    ErrorSelector WORD ?
    Reserved2 WORD ?
    DataOffset DWORD ?
    DataSelector WORD ?
    Reserved3 WORD ?
    MxCsr DWORD ?
    MxCsr_Mask DWORD ?
    FloatRegisters M128A 8 dup (<>)
    if Defined(_WIN64)
      XmmRegisters M128A 16 dup (<>)
      Reserved4 BYTE 96 dup (?)
    else
      XmmRegisters M128A 8 dup (<>)
      Reserved4 BYTE 224 dup (?)
    endif
  XSAVE_FORMAT ends
  _XSAVE_FORMAT typedef XSAVE_FORMAT
  PXSAVE_FORMAT typedef ptr XSAVE_FORMAT
  XSAVE_AREA_HEADER struct
    Mask_ DWORD64 ?
    CompactionMask DWORD64 ?
    Reserved2 DWORD64 6 dup (?)
  XSAVE_AREA_HEADER ends
  _XSAVE_AREA_HEADER typedef XSAVE_AREA_HEADER
  PXSAVE_AREA_HEADER typedef ptr XSAVE_AREA_HEADER
  XSAVE_AREA struct
    LegacyState XSAVE_FORMAT <>
    Header XSAVE_AREA_HEADER <>
  XSAVE_AREA ends
  _XSAVE_AREA typedef XSAVE_AREA
  PXSAVE_AREA typedef ptr XSAVE_AREA
  XSTATE_CONTEXT struct
    Mask_ DWORD64 ?
    Length_ DWORD ?
    Reserved1 DWORD ?
    Area PXSAVE_AREA ?
    if Defined(_X86_)
      Reserved2 DWORD ?
    endif
    Buffer PVOID ?
    if Defined(_X86_)
      Reserved3 DWORD ?
    endif
  XSTATE_CONTEXT ends
  _XSTATE_CONTEXT typedef XSTATE_CONTEXT
  PXSTATE_CONTEXT typedef ptr XSTATE_CONTEXT
  SCOPE_TABLE_AMD64 struct
    Count DWORD ?
    struct ScopeRecord
      BeginAddress DWORD ?
      EndAddress DWORD ?
      HandlerAddress DWORD ?
      JumpTarget DWORD ?
    ends
  SCOPE_TABLE_AMD64 ends
  _SCOPE_TABLE_AMD64 typedef SCOPE_TABLE_AMD64
  PSCOPE_TABLE_AMD64 typedef ptr SCOPE_TABLE_AMD64
  ifdef _AMD64_
    if Defined(_M_AMD64) and  not Defined(RC_INVOKED) and  not Defined(MIDL_PASS)
      ifdef __cplusplus
        ;[...]
      endif
      BitTest equ <_bittest>
      BitTestAndComplement equ <_bittestandcomplement>
      BitTestAndSet equ <_bittestandset>
      BitTestAndReset equ <_bittestandreset>
      InterlockedBitTestAndSet equ <_interlockedbittestandset>
      InterlockedBitTestAndSetAcquire equ <_interlockedbittestandset>
      InterlockedBitTestAndSetRelease equ <_interlockedbittestandset>
      InterlockedBitTestAndSetNoFence equ <_interlockedbittestandset>
      InterlockedBitTestAndReset equ <_interlockedbittestandreset>
      InterlockedBitTestAndResetAcquire equ <_interlockedbittestandreset>
      InterlockedBitTestAndResetRelease equ <_interlockedbittestandreset>
      InterlockedBitTestAndResetNoFence equ <_interlockedbittestandreset>
      BitTest64 equ <_bittest64>
      BitTestAndComplement64 equ <_bittestandcomplement64>
      BitTestAndSet64 equ <_bittestandset64>
      BitTestAndReset64 equ <_bittestandreset64>
      InterlockedBitTestAndSet64 equ <_interlockedbittestandset64>
      InterlockedBitTestAndSet64Acquire equ <_interlockedbittestandset64>
      InterlockedBitTestAndSet64Release equ <_interlockedbittestandset64>
      InterlockedBitTestAndSet64NoFence equ <_interlockedbittestandset64>
      InterlockedBitTestAndReset64 equ <_interlockedbittestandreset64>
      InterlockedBitTestAndReset64Acquire equ <_interlockedbittestandreset64>
      InterlockedBitTestAndReset64Release equ <_interlockedbittestandreset64>
      InterlockedBitTestAndReset64NoFence equ <_interlockedbittestandreset64>
      _bittest proto WIN_STD_CALL_CONV :ptr LONG, :LONG
      _bittestandcomplement proto WIN_STD_CALL_CONV :ptr LONG, :LONG
      _bittestandset proto WIN_STD_CALL_CONV :ptr LONG, :LONG
      _bittestandreset proto WIN_STD_CALL_CONV :ptr LONG, :LONG
      _interlockedbittestandset proto WIN_STD_CALL_CONV :ptr LONG, :LONG
      _interlockedbittestandreset proto WIN_STD_CALL_CONV :ptr LONG, :LONG
      _bittest64 proto WIN_STD_CALL_CONV :ptr LONG64, :LONG64
      _bittestandcomplement64 proto WIN_STD_CALL_CONV :ptr LONG64, :LONG64
      _bittestandset64 proto WIN_STD_CALL_CONV :ptr LONG64, :LONG64
      _bittestandreset64 proto WIN_STD_CALL_CONV :ptr LONG64, :LONG64
      _interlockedbittestandset64 proto WIN_STD_CALL_CONV :ptr LONG64, :LONG64
      _interlockedbittestandreset64 proto WIN_STD_CALL_CONV :ptr LONG64, :LONG64
      BitScanForward equ <_BitScanForward>
      BitScanReverse equ <_BitScanReverse>
      BitScanForward64 equ <_BitScanForward64>
      BitScanReverse64 equ <_BitScanReverse64>
      _BitScanForward proto WIN_STD_CALL_CONV :ptr DWORD, :DWORD
      _BitScanReverse proto WIN_STD_CALL_CONV :ptr DWORD, :DWORD
      _BitScanForward64 proto WIN_STD_CALL_CONV :ptr DWORD, :DWORD64
      _BitScanReverse64 proto WIN_STD_CALL_CONV :ptr DWORD, :DWORD64
      InterlockedIncrement16 equ <_InterlockedIncrement16>
      InterlockedIncrementAcquire16 equ <_InterlockedIncrement16>
      InterlockedIncrementRelease16 equ <_InterlockedIncrement16>
      InterlockedIncrementNoFence16 equ <_InterlockedIncrement16>
      InterlockedDecrement16 equ <_InterlockedDecrement16>
      InterlockedDecrementAcquire16 equ <_InterlockedDecrement16>
      InterlockedDecrementRelease16 equ <_InterlockedDecrement16>
      InterlockedDecrementNoFence16 equ <_InterlockedDecrement16>
      InterlockedCompareExchange16 equ <_InterlockedCompareExchange16>
      InterlockedCompareExchangeAcquire16 equ <_InterlockedCompareExchange16>
      InterlockedCompareExchangeRelease16 equ <_InterlockedCompareExchange16>
      InterlockedCompareExchangeNoFence16 equ <_InterlockedCompareExchange16>
      InterlockedAnd equ <_InterlockedAnd>
      InterlockedAndAcquire equ <_InterlockedAnd>
      InterlockedAndRelease equ <_InterlockedAnd>
      InterlockedAndNoFence equ <_InterlockedAnd>
      InterlockedOr equ <_InterlockedOr>
      InterlockedOrAcquire equ <_InterlockedOr>
      InterlockedOrRelease equ <_InterlockedOr>
      InterlockedOrNoFence equ <_InterlockedOr>
      InterlockedXor equ <_InterlockedXor>
      InterlockedXorAcquire equ <_InterlockedXor>
      InterlockedXorRelease equ <_InterlockedXor>
      InterlockedXorNoFence equ <_InterlockedXor>
      InterlockedIncrement equ <_InterlockedIncrement>
      InterlockedIncrementAcquire equ <_InterlockedIncrement>
      InterlockedIncrementRelease equ <_InterlockedIncrement>
      InterlockedIncrementNoFence equ <_InterlockedIncrement>
      InterlockedDecrement equ <_InterlockedDecrement>
      InterlockedDecrementAcquire equ <_InterlockedDecrement>
      InterlockedDecrementRelease equ <_InterlockedDecrement>
      InterlockedDecrementNoFence equ <_InterlockedDecrement>
      InterlockedAdd equ <_InlineInterlockedAdd>
      InterlockedAddAcquire equ <_InlineInterlockedAdd>
      InterlockedAddRelease equ <_InlineInterlockedAdd>
      InterlockedAddNoFence equ <_InlineInterlockedAdd>
      InterlockedExchange equ <_InterlockedExchange>
      InterlockedExchangeAcquire equ <_InterlockedExchange>
      InterlockedExchangeNoFence equ <_InterlockedExchange>
      InterlockedExchangeAdd equ <_InterlockedExchangeAdd>
      InterlockedExchangeAddAcquire equ <_InterlockedExchangeAdd>
      InterlockedExchangeAddRelease equ <_InterlockedExchangeAdd>
      InterlockedExchangeAddNoFence equ <_InterlockedExchangeAdd>
      InterlockedCompareExchange equ <_InterlockedCompareExchange>
      InterlockedCompareExchangeAcquire equ <_InterlockedCompareExchange>
      InterlockedCompareExchangeRelease equ <_InterlockedCompareExchange>
      InterlockedCompareExchangeNoFence equ <_InterlockedCompareExchange>
      InterlockedAnd64 equ <_InterlockedAnd64>
      InterlockedAnd64Acquire equ <_InterlockedAnd64>
      InterlockedAnd64Release equ <_InterlockedAnd64>
      InterlockedAnd64NoFence equ <_InterlockedAnd64>
      InterlockedAndAffinity equ <InterlockedAnd64>
      InterlockedOr64 equ <_InterlockedOr64>
      InterlockedOr64Acquire equ <_InterlockedOr64>
      InterlockedOr64Release equ <_InterlockedOr64>
      InterlockedOr64NoFence equ <_InterlockedOr64>
      InterlockedOrAffinity equ <InterlockedOr64>
      InterlockedXor64 equ <_InterlockedXor64>
      InterlockedXor64Acquire equ <_InterlockedXor64>
      InterlockedXor64Release equ <_InterlockedXor64>
      InterlockedXor64NoFence equ <_InterlockedXor64>
      InterlockedIncrement64 equ <_InterlockedIncrement64>
      InterlockedIncrementAcquire64 equ <_InterlockedIncrement64>
      InterlockedIncrementRelease64 equ <_InterlockedIncrement64>
      InterlockedIncrementNoFence64 equ <_InterlockedIncrement64>
      InterlockedDecrement64 equ <_InterlockedDecrement64>
      InterlockedDecrementAcquire64 equ <_InterlockedDecrement64>
      InterlockedDecrementRelease64 equ <_InterlockedDecrement64>
      InterlockedDecrementNoFence64 equ <_InterlockedDecrement64>
      InterlockedAdd64 equ <_InlineInterlockedAdd64>
      InterlockedAddAcquire64 equ <_InlineInterlockedAdd64>
      InterlockedAddRelease64 equ <_InlineInterlockedAdd64>
      InterlockedAddNoFence64 equ <_InlineInterlockedAdd64>
      InterlockedExchange64 equ <_InterlockedExchange64>
      InterlockedExchangeAcquire64 equ <InterlockedExchange64>
      InterlockedExchangeNoFence64 equ <InterlockedExchange64>
      InterlockedExchangeAdd64 equ <_InterlockedExchangeAdd64>
      InterlockedExchangeAddAcquire64 equ <_InterlockedExchangeAdd64>
      InterlockedExchangeAddRelease64 equ <_InterlockedExchangeAdd64>
      InterlockedExchangeAddNoFence64 equ <_InterlockedExchangeAdd64>
      InterlockedCompareExchange64 equ <_InterlockedCompareExchange64>
      InterlockedCompareExchangeAcquire64 equ <InterlockedCompareExchange64>
      InterlockedCompareExchangeRelease64 equ <InterlockedCompareExchange64>
      InterlockedCompareExchangeNoFence64 equ <InterlockedCompareExchange64>
      InterlockedCompareExchange128 equ <_InterlockedCompareExchange128>
      InterlockedExchangePointer equ <_InterlockedExchangePointer>
      InterlockedExchangePointerNoFence equ <_InterlockedExchangePointer>
      InterlockedExchangePointerAcquire equ <_InterlockedExchangePointer>
      InterlockedCompareExchangePointer equ <_InterlockedCompareExchangePointer>
      InterlockedCompareExchangePointerAcquire equ <_InterlockedCompareExchangePointer>
      InterlockedCompareExchangePointerRelease equ <_InterlockedCompareExchangePointer>
      InterlockedCompareExchangePointerNoFence equ <_InterlockedCompareExchangePointer>
      InterlockedExchangeAddSizeT macro a, b
        exitm <InterlockedExchangeAdd64 (a, b)>
      endm
      InterlockedExchangeAddSizeTAcquire macro a, b
        exitm <InterlockedExchangeAdd64 (a, b)>
      endm
      InterlockedExchangeAddSizeTNoFence macro a, b
        exitm <InterlockedExchangeAdd64 (a, b)>
      endm
      InterlockedIncrementSizeT macro a
        exitm <InterlockedIncrement64 (a)>
      endm
      InterlockedIncrementSizeTNoFence macro a
        exitm <InterlockedIncrement64 (a)>
      endm
      InterlockedDecrementSizeT macro a
        exitm <InterlockedDecrement64 (a)>
      endm
      InterlockedDecrementSizeTNoFence macro a
        exitm <InterlockedDecrement64 (a)>
      endm
      if  not Defined(_X86AMD64_)
      endif
      if  not Defined(_X86AMD64_)
      endif
      if _MSC_VER ge 1500
      endif
      if (_MSC_VER ge 1600)
        InterlockedExchange8 equ <_InterlockedExchange8>
        InterlockedExchange16 equ <_InterlockedExchange16>
      endif
      if _MSC_FULL_VER ge 140041204
        InterlockedExchangeAdd8 equ <_InterlockedExchangeAdd8>
        InterlockedAnd8 equ <_InterlockedAnd8>
        InterlockedOr8 equ <_InterlockedOr8>
        InterlockedXor8 equ <_InterlockedXor8>
        InterlockedAnd16 equ <_InterlockedAnd16>
        InterlockedOr16 equ <_InterlockedOr16>
        InterlockedXor16 equ <_InterlockedXor16>
      endif
      CpuIdEx equ <__cpuidex>
      __cpuidex proto WIN_STD_CALL_CONV :ptr SDWORD, :SDWORD, :SDWORD
      CacheLineFlush macro Address
        exitm <_mm_clflush (Address)>
      endm
      _mm_clflush proto WIN_STD_CALL_CONV :ptr VOID
      _ReadWriteBarrier proto WIN_STD_CALL_CONV
      FastFence equ <__faststorefence>
      LoadFence equ <_mm_lfence>
      MemoryFence equ <_mm_mfence>
      StoreFence equ <_mm_sfence>
      __faststorefence proto WIN_STD_CALL_CONV
      _mm_lfence proto WIN_STD_CALL_CONV
      _mm_mfence proto WIN_STD_CALL_CONV
      _mm_sfence proto WIN_STD_CALL_CONV
      _mm_pause proto WIN_STD_CALL_CONV
      _mm_prefetch proto WIN_STD_CALL_CONV :ptr CHAR, :SDWORD
      _m_prefetchw proto WIN_STD_CALL_CONV :ptr VOID
      _MM_HINT_T0 equ 1
      _MM_HINT_T1 equ 2
      _MM_HINT_T2 equ 3
      _MM_HINT_NTA equ 0
      YieldProcessor equ <_mm_pause>
      MemoryBarrier equ <__faststorefence>
      PreFetchCacheLine macro l, a
        exitm <_mm_prefetch ((CHAR CONST *) a, l)>
      endm
      PrefetchForWrite macro p
        exitm <_m_prefetchw (p)>
      endm
      ReadForWriteAccess macro p
        exitm <(_m_prefetchw (p), * (p))>
      endm
      PF_TEMPORAL_LEVEL_1 equ <_MM_HINT_T0>
      PF_TEMPORAL_LEVEL_2 equ <_MM_HINT_T1>
      PF_TEMPORAL_LEVEL_3 equ <_MM_HINT_T2>
      PF_NON_TEMPORAL_LEVEL_ALL equ <_MM_HINT_NTA>
      ReadMxCsr equ <_mm_getcsr>
      WriteMxCsr equ <_mm_setcsr>
      _mm_getcsr proto WIN_STD_CALL_CONV
      _mm_setcsr proto WIN_STD_CALL_CONV :DWORD
      GetCallersEflags macro
        exitm <__getcallerseflags ()>
      endm
      __getcallerseflags proto WIN_STD_CALL_CONV
      GetSegmentLimit equ <__segmentlimit>
      __segmentlimit proto WIN_STD_CALL_CONV :DWORD
      ReadPMC equ <__readpmc>
      __readpmc proto WIN_STD_CALL_CONV :DWORD
      ReadTimeStampCounter macro
        exitm <__rdtsc ()>
      endm
      __rdtsc proto WIN_STD_CALL_CONV
      __movsb proto WIN_STD_CALL_CONV :PBYTE, :ptr BYTE, :SIZE_T
      __movsw proto WIN_STD_CALL_CONV :PWORD, :ptr WORD, :SIZE_T
      __movsd proto WIN_STD_CALL_CONV :PDWORD, :ptr DWORD, :SIZE_T
      __movsq proto WIN_STD_CALL_CONV :PDWORD64, :ptr DWORD64, :SIZE_T
      __stosb proto WIN_STD_CALL_CONV :PBYTE, :BYTE, :SIZE_T
      __stosw proto WIN_STD_CALL_CONV :PWORD, :WORD, :SIZE_T
      __stosd proto WIN_STD_CALL_CONV :PDWORD, :DWORD, :SIZE_T
      __stosq proto WIN_STD_CALL_CONV :PDWORD64, :DWORD64, :SIZE_T
      MultiplyHigh equ <__mulh>
      UnsignedMultiplyHigh equ <__umulh>
      PopulationCount64 equ <__popcnt64>
      if _MSC_VER ge 1500
      endif
      ShiftLeft128 equ <__shiftleft128>
      ShiftRight128 equ <__shiftright128>
      Multiply128 equ <_mul128>
      ifndef UnsignedMultiply128
        UnsignedMultiply128 equ <_umul128>
      endif
      __readgsbyte proto WIN_STD_CALL_CONV :DWORD
      __readgsword proto WIN_STD_CALL_CONV :DWORD
      __readgsdword proto WIN_STD_CALL_CONV :DWORD
      __readgsqword proto WIN_STD_CALL_CONV :DWORD
      __writegsbyte proto WIN_STD_CALL_CONV :DWORD, :BYTE
      __writegsword proto WIN_STD_CALL_CONV :DWORD, :WORD
      __writegsdword proto WIN_STD_CALL_CONV :DWORD, :DWORD
      __writegsqword proto WIN_STD_CALL_CONV :DWORD, :DWORD64
      if  not Defined(_MANAGED)
        __incgsbyte proto WIN_STD_CALL_CONV :DWORD
        __addgsbyte proto WIN_STD_CALL_CONV :DWORD, :BYTE
        __incgsword proto WIN_STD_CALL_CONV :DWORD
        __addgsword proto WIN_STD_CALL_CONV :DWORD, :WORD
        __incgsdword proto WIN_STD_CALL_CONV :DWORD
        __addgsdword proto WIN_STD_CALL_CONV :DWORD, :DWORD
        __incgsqword proto WIN_STD_CALL_CONV :DWORD
        __addgsqword proto WIN_STD_CALL_CONV :DWORD, :DWORD64
        if 0
          ;[...]
        endif
      endif
      ifdef __cplusplus
        ;[...]
      endif
    endif
    EXCEPTION_READ_FAULT equ 0
    EXCEPTION_WRITE_FAULT equ 1
    EXCEPTION_EXECUTE_FAULT equ 8
    if  not Defined(RC_INVOKED)
      CONTEXT_AMD64 equ 00100000h
      CONTEXT_CONTROL equ (CONTEXT_AMD64 or 00000001h)
      CONTEXT_INTEGER equ (CONTEXT_AMD64 or 00000002h)
      CONTEXT_SEGMENTS equ (CONTEXT_AMD64 or 00000004h)
      CONTEXT_FLOATING_POINT equ (CONTEXT_AMD64 or 00000008h)
      CONTEXT_DEBUG_REGISTERS equ (CONTEXT_AMD64 or 00000010h)
      CONTEXT_FULL equ <(CONTEXT_CONTROL or CONTEXT_INTEGER or CONTEXT_FLOATING_POINT)>
      CONTEXT_ALL equ <(CONTEXT_CONTROL or CONTEXT_INTEGER or CONTEXT_SEGMENTS or CONTEXT_FLOATING_POINT or CONTEXT_DEBUG_REGISTERS)>
      CONTEXT_XSTATE equ (CONTEXT_AMD64 or 00000040h)
      if Defined(XBOX_SYSTEMOS)
        CONTEXT_KERNEL_DEBUGGER equ 04000000h
      endif
      CONTEXT_EXCEPTION_ACTIVE equ 08000000h
      CONTEXT_SERVICE_ACTIVE equ 10000000h
      CONTEXT_EXCEPTION_REQUEST equ 40000000h
      CONTEXT_EXCEPTION_REPORTING equ 80000000h
    endif
    INITIAL_MXCSR equ 1f80h
    INITIAL_FPCSR equ 027fh
    XMM_SAVE_AREA32 typedef XSAVE_FORMAT
    PXMM_SAVE_AREA32 typedef ptr XSAVE_FORMAT
    CONTEXT struct
      P1Home DWORD64 ?
      P2Home DWORD64 ?
      P3Home DWORD64 ?
      P4Home DWORD64 ?
      P5Home DWORD64 ?
      P6Home DWORD64 ?
      ContextFlags DWORD ?
      MxCsr DWORD ?
      SegCs WORD ?
      SegDs WORD ?
      SegEs WORD ?
      SegFs WORD ?
      SegGs WORD ?
      SegSs WORD ?
      EFlags_ DWORD ?
      Dr0_ DWORD64 ?
      Dr1_ DWORD64 ?
      Dr2_ DWORD64 ?
      Dr3_ DWORD64 ?
      Dr6_ DWORD64 ?
      Dr7_ DWORD64 ?
      Rax_ DWORD64 ?
      Rcx_ DWORD64 ?
      Rdx_ DWORD64 ?
      Rbx_ DWORD64 ?
      Rsp_ DWORD64 ?
      Rbp_ DWORD64 ?
      Rsi_ DWORD64 ?
      Rdi_ DWORD64 ?
      R8_ DWORD64 ?
      R9_ DWORD64 ?
      R10_ DWORD64 ?
      R11_ DWORD64 ?
      R12_ DWORD64 ?
      R13_ DWORD64 ?
      R14_ DWORD64 ?
      R15_ DWORD64 ?
      Rip_ DWORD64 ?
      union
        FltSave XMM_SAVE_AREA32 <>
        struct
          Header M128A 2 dup (<>)
          Legacy M128A 8 dup (<>)
          Xmm0_ M128A <>
          Xmm1_ M128A <>
          Xmm2_ M128A <>
          Xmm3_ M128A <>
          Xmm4_ M128A <>
          Xmm5_ M128A <>
          Xmm6_ M128A <>
          Xmm7_ M128A <>
          Xmm8_ M128A <>
          Xmm9_ M128A <>
          Xmm10_ M128A <>
          Xmm11_ M128A <>
          Xmm12_ M128A <>
          Xmm13_ M128A <>
          Xmm14_ M128A <>
          Xmm15_ M128A <>
        ends
      ends
      VectorRegister M128A 26 dup (<>)
      VectorControl DWORD64 ?
      DebugControl DWORD64 ?
      LastBranchToRip DWORD64 ?
      LastBranchFromRip DWORD64 ?
      LastExceptionToRip DWORD64 ?
      LastExceptionFromRip DWORD64 ?
    CONTEXT ends
    _CONTEXT typedef CONTEXT
    PCONTEXT typedef ptr CONTEXT

    SCOPE_TABLE typedef SCOPE_TABLE_AMD64
    PSCOPE_TABLE typedef ptr SCOPE_TABLE_AMD64
    RUNTIME_FUNCTION_INDIRECT equ 1h
    UNW_FLAG_NHANDLER equ 0h
    UNW_FLAG_EHANDLER equ 1h
    UNW_FLAG_UHANDLER equ 2h
    UNW_FLAG_CHAININFO equ 4h
    UNW_FLAG_NO_EPILOGUE equ 80000000h
    UNWIND_HISTORY_TABLE_SIZE equ 12
    UNWIND_HISTORY_TABLE_ENTRY struct
      ImageBase DWORD64 ?
      FunctionEntry POINTER ?
    UNWIND_HISTORY_TABLE_ENTRY ends
    _UNWIND_HISTORY_TABLE_ENTRY typedef UNWIND_HISTORY_TABLE_ENTRY
    PUNWIND_HISTORY_TABLE_ENTRY typedef ptr UNWIND_HISTORY_TABLE_ENTRY
    UNWIND_HISTORY_TABLE struct
      Count DWORD ?
      LocalHint BYTE ?
      GlobalHint BYTE ?
      Search BYTE ?
      Once BYTE ?
      LowAddress DWORD64 ?
      HighAddress DWORD64 ?
      Entry UNWIND_HISTORY_TABLE_ENTRY UNWIND_HISTORY_TABLE_SIZE dup (<>)
    UNWIND_HISTORY_TABLE ends
    _UNWIND_HISTORY_TABLE typedef UNWIND_HISTORY_TABLE
    PUNWIND_HISTORY_TABLE typedef ptr UNWIND_HISTORY_TABLE
    GET_RUNTIME_FUNCTION_CALLBACK typedef proto :DWORD64, :PVOID
    PGET_RUNTIME_FUNCTION_CALLBACK typedef ptr GET_RUNTIME_FUNCTION_CALLBACK
    OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK typedef proto :HANDLE, :PVOID, :PDWORD, :ptr PRUNTIME_FUNCTION
    POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK typedef ptr OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK
    OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_EXPORT_NAME equ <"OutOfProcessFunctionTableCallback">
    DISPATCHER_CONTEXT struct
      ControlPc DWORD64 ?
      ImageBase DWORD64 ?
      FunctionEntry POINTER ?
      EstablisherFrame DWORD64 ?
      TargetIp DWORD64 ?
      ContextRecord PCONTEXT ?
      LanguageHandler PEXCEPTION_ROUTINE ?
      HandlerData PVOID ?
      HistoryTable PUNWIND_HISTORY_TABLE ?
      ScopeIndex DWORD ?
      Fill0 DWORD ?
    DISPATCHER_CONTEXT ends
    _DISPATCHER_CONTEXT typedef DISPATCHER_CONTEXT
    PDISPATCHER_CONTEXT typedef ptr DISPATCHER_CONTEXT
    TYPE_EXCEPTION_FILTER typedef proto WIN_STD_CALL_CONV :ptr _EXCEPTION_POINTERS, :PVOID
    PEXCEPTION_FILTER typedef ptr TYPE_EXCEPTION_FILTER
    TYPE_TERMINATION_HANDLER typedef proto WIN_STD_CALL_CONV :BOOLEAN, :PVOID
    PTERMINATION_HANDLER typedef ptr TYPE_TERMINATION_HANDLER
    KNONVOLATILE_CONTEXT_POINTERS struct
      union
        FloatingContext PM128A 16 dup (?)
        struct
          Xmm0_ PM128A ?
          Xmm1_ PM128A ?
          Xmm2_ PM128A ?
          Xmm3_ PM128A ?
          Xmm4_ PM128A ?
          Xmm5_ PM128A ?
          Xmm6_ PM128A ?
          Xmm7_ PM128A ?
          Xmm8_ PM128A ?
          Xmm9_ PM128A ?
          Xmm10_ PM128A ?
          Xmm11_ PM128A ?
          Xmm12_ PM128A ?
          Xmm13_ PM128A ?
          Xmm14_ PM128A ?
          Xmm15_ PM128A ?
        ends
      ends
      union DUMMYUNIONNAME2
        IntegerContext PDWORD64 16 dup (?)
        struct
          Rax_ PDWORD64 ?
          Rcx_ PDWORD64 ?
          Rdx_ PDWORD64 ?
          Rbx_ PDWORD64 ?
          Rsp_ PDWORD64 ?
          Rbp_ PDWORD64 ?
          Rsi_ PDWORD64 ?
          Rdi_ PDWORD64 ?
          R8_ PDWORD64 ?
          R9_ PDWORD64 ?
          R10_ PDWORD64 ?
          R11_ PDWORD64 ?
          R12_ PDWORD64 ?
          R13_ PDWORD64 ?
          R14_ PDWORD64 ?
          R15_ PDWORD64 ?
        ends
      ends
    KNONVOLATILE_CONTEXT_POINTERS ends
    _KNONVOLATILE_CONTEXT_POINTERS typedef KNONVOLATILE_CONTEXT_POINTERS
    PKNONVOLATILE_CONTEXT_POINTERS typedef ptr KNONVOLATILE_CONTEXT_POINTERS
  endif
  SCOPE_TABLE_ARM struct
    Count DWORD ?
    struct ScopeRecord
      BeginAddress DWORD ?
      EndAddress DWORD ?
      HandlerAddress DWORD ?
      JumpTarget DWORD ?
    ends
  SCOPE_TABLE_ARM ends
  _SCOPE_TABLE_ARM typedef SCOPE_TABLE_ARM
  PSCOPE_TABLE_ARM typedef ptr SCOPE_TABLE_ARM
  ifdef _ARM_
    ;[...]
  endif
  SCOPE_TABLE_ARM64 struct
    Count DWORD ?
    struct ScopeRecord
      BeginAddress DWORD ?
      EndAddress DWORD ?
      HandlerAddress DWORD ?
      JumpTarget DWORD ?
    ends
  SCOPE_TABLE_ARM64 ends
  _SCOPE_TABLE_ARM64 typedef SCOPE_TABLE_ARM64
  PSCOPE_TABLE_ARM64 typedef ptr SCOPE_TABLE_ARM64
  if Defined(_ARM64_) or Defined(_CHPE_X86_ARM64_)
    ;[...]
  endif
  KNONVOLATILE_CONTEXT_POINTERS_ARM64 struct
    X19 PDWORD64 ?
    X20 PDWORD64 ?
    X21 PDWORD64 ?
    X22 PDWORD64 ?
    X23 PDWORD64 ?
    X24 PDWORD64 ?
    X25 PDWORD64 ?
    X26 PDWORD64 ?
    X27 PDWORD64 ?
    X28 PDWORD64 ?
    Fp PDWORD64 ?
    Lr PDWORD64 ?
    D8 PDWORD64 ?
    D9 PDWORD64 ?
    D10 PDWORD64 ?
    D11 PDWORD64 ?
    D12 PDWORD64 ?
    D13 PDWORD64 ?
    D14 PDWORD64 ?
    D15 PDWORD64 ?
  KNONVOLATILE_CONTEXT_POINTERS_ARM64 ends
  _KNONVOLATILE_CONTEXT_POINTERS_ARM64 typedef KNONVOLATILE_CONTEXT_POINTERS_ARM64
  PKNONVOLATILE_CONTEXT_POINTERS_ARM64 typedef ptr KNONVOLATILE_CONTEXT_POINTERS_ARM64
  if Defined(_ARM64_)
    ;[...]
  endif
  if Defined(_CHPE_X86_ARM64_)
    ;[...]
  endif
  ifdef __cplusplus
    ;[...]
  endif
  if  not Defined(_DBGRAISEASSERTIONFAILURE_) and  not Defined(RC_INVOKED) and  not Defined(MIDL_PASS)
    _DBGRAISEASSERTIONFAILURE_ equ <>
    if Defined(_PREFAST_)
      ;[...]
    endif
    if Defined(_AMD64_)
      if Defined(_M_AMD64)
        __int2c proto WIN_STD_CALL_CONV
        if  not Defined(_PREFAST_)
          DbgRaiseAssertionFailure macro
            exitm <__int2c ()>
          endm
        endif
      endif
    elseif Defined(_X86_) and  not Defined(_M_HYBRID_X86_ARM64)
      if Defined(_M_IX86) and  not Defined(_M_HYBRID_X86_ARM64)
        if _MSC_FULL_VER ge 140030222
          __int2c proto WIN_STD_CALL_CONV
          if  not Defined(_PREFAST_)
            DbgRaiseAssertionFailure macro
              exitm <__int2c ()>
            endm
          endif
        else
          if  not Defined(_PREFAST_)
          endif
        endif
      endif
    elseif Defined(_IA64_)
      if Defined(_M_IA64)
        __break proto WIN_STD_CALL_CONV :SDWORD
        BREAK_DEBUG_BASE equ 080000h
        ASSERT_BREAKPOINT equ (BREAK_DEBUG_BASE + 3)
        if  not Defined(_PREFAST_)
          DbgRaiseAssertionFailure macro
            exitm <__break (ASSERT_BREAKPOINT)>
          endm
        endif
      endif
    elseif Defined(_ARM64_) or Defined(_CHPE_X86_ARM64_)
      ;[...]
    elseif Defined(_ARM_)
      ;[...]
    endif
  endif
  ifdef __cplusplus
    ;[...]
  endif
  ifdef _X86_
    if Defined(_M_CEE_PURE)
      ;[...]
    else
      CDECL_NON_WVMPURE equ <__cdecl>
    endif
    if  not Defined(MIDL_PASS)
      if  not Defined(RC_INVOKED)
        if _MSC_VER ge 1200
        endif
        if _MSC_VER ge 1200
        else
        endif
      endif
    endif
    if Defined(_M_IX86) and  not Defined(RC_INVOKED) and  not Defined(MIDL_PASS)
      ifdef __cplusplus
        ;[...]
      endif
      if  not Defined(_MANAGED)
        BitTest equ <_bittest>
        BitTestAndComplement equ <_bittestandcomplement>
        BitTestAndSet equ <_bittestandset>
        BitTestAndReset equ <_bittestandreset>
        InterlockedBitTestAndSet equ <_interlockedbittestandset>
        InterlockedBitTestAndSetAcquire equ <_interlockedbittestandset>
        InterlockedBitTestAndSetRelease equ <_interlockedbittestandset>
        InterlockedBitTestAndSetNoFence equ <_interlockedbittestandset>
        InterlockedBitTestAndReset equ <_interlockedbittestandreset>
        InterlockedBitTestAndResetAcquire equ <_interlockedbittestandreset>
        InterlockedBitTestAndResetRelease equ <_interlockedbittestandreset>
        InterlockedBitTestAndResetNoFence equ <_interlockedbittestandreset>
        _bittest proto WIN_STD_CALL_CONV :ptr LONG, :LONG
        _bittestandcomplement proto WIN_STD_CALL_CONV :ptr LONG, :LONG
        _bittestandset proto WIN_STD_CALL_CONV :ptr LONG, :LONG
        _bittestandreset proto WIN_STD_CALL_CONV :ptr LONG, :LONG
        _interlockedbittestandset proto WIN_STD_CALL_CONV :ptr LONG, :LONG
        _interlockedbittestandreset proto WIN_STD_CALL_CONV :ptr LONG, :LONG
        BitScanForward equ <_BitScanForward>
        BitScanReverse equ <_BitScanReverse>
        _BitScanForward proto WIN_STD_CALL_CONV :ptr DWORD, :DWORD
        _BitScanReverse proto WIN_STD_CALL_CONV :ptr DWORD, :DWORD
        BitScanForward64 equ <_InlineBitScanForward64>
        BitScanReverse64 equ <_InlineBitScanReverse64>
      endif
      if  not Defined(_MANAGED)
        InterlockedIncrement16 equ <_InterlockedIncrement16>
        InterlockedIncrementAcquire16 equ <_InterlockedIncrement16>
        InterlockedIncrementRelease16 equ <_InterlockedIncrement16>
        InterlockedIncrementNoFence16 equ <_InterlockedIncrement16>
        InterlockedDecrement16 equ <_InterlockedDecrement16>
        InterlockedDecrementAcquire16 equ <_InterlockedDecrement16>
        InterlockedDecrementRelease16 equ <_InterlockedDecrement16>
        InterlockedDecrementNoFence16 equ <_InterlockedDecrement16>
        InterlockedCompareExchange16 equ <_InterlockedCompareExchange16>
        InterlockedCompareExchangeAcquire16 equ <_InterlockedCompareExchange16>
        InterlockedCompareExchangeRelease16 equ <_InterlockedCompareExchange16>
        InterlockedCompareExchangeNoFence16 equ <_InterlockedCompareExchange16>
        InterlockedCompareExchange64 equ <_InterlockedCompareExchange64>
        InterlockedCompareExchangeAcquire64 equ <_InterlockedCompareExchange64>
        InterlockedCompareExchangeRelease64 equ <_InterlockedCompareExchange64>
        InterlockedCompareExchangeNoFence64 equ <_InterlockedCompareExchange64>
      endif
      InterlockedAnd equ <_InterlockedAnd>
      InterlockedAndAcquire equ <_InterlockedAnd>
      InterlockedAndRelease equ <_InterlockedAnd>
      InterlockedAndNoFence equ <_InterlockedAnd>
      InterlockedOr equ <_InterlockedOr>
      InterlockedOrAcquire equ <_InterlockedOr>
      InterlockedOrRelease equ <_InterlockedOr>
      InterlockedOrNoFence equ <_InterlockedOr>
      InterlockedXor equ <_InterlockedXor>
      InterlockedXorAcquire equ <_InterlockedXor>
      InterlockedXorRelease equ <_InterlockedXor>
      InterlockedXorNoFence equ <_InterlockedXor>
      InterlockedIncrement equ <_InterlockedIncrement>
      InterlockedIncrementAcquire equ <_InterlockedIncrement>
      InterlockedIncrementRelease equ <_InterlockedIncrement>
      InterlockedIncrementNoFence equ <_InterlockedIncrement>
      InterlockedDecrement equ <_InterlockedDecrement>
      InterlockedDecrementAcquire equ <_InterlockedDecrement>
      InterlockedDecrementRelease equ <_InterlockedDecrement>
      InterlockedDecrementNoFence equ <_InterlockedDecrement>
      InterlockedAdd equ <_InlineInterlockedAdd>
      InterlockedAddAcquire equ <_InlineInterlockedAdd>
      InterlockedAddRelease equ <_InlineInterlockedAdd>
      InterlockedAddNoFence equ <_InlineInterlockedAdd>
      InterlockedAddNoFence64 equ <_InlineInterlockedAdd64>
      InterlockedExchange equ <_InterlockedExchange>
      InterlockedExchangeAcquire equ <_InterlockedExchange>
      InterlockedExchangeNoFence equ <_InterlockedExchange>
      InterlockedExchangeAdd equ <_InterlockedExchangeAdd>
      InterlockedExchangeAddAcquire equ <_InterlockedExchangeAdd>
      InterlockedExchangeAddRelease equ <_InterlockedExchangeAdd>
      InterlockedExchangeAddNoFence equ <_InterlockedExchangeAdd>
      InterlockedCompareExchange equ <_InterlockedCompareExchange>
      InterlockedCompareExchangeAcquire equ <_InterlockedCompareExchange>
      InterlockedCompareExchangeRelease equ <_InterlockedCompareExchange>
      InterlockedCompareExchangeNoFence equ <_InterlockedCompareExchange>
      InterlockedExchange16 equ <_InterlockedExchange16>
      InterlockedExchangePointer equ <_InlineInterlockedExchangePointer>
      InterlockedExchangePointerAcquire equ <_InlineInterlockedExchangePointer>
      InterlockedExchangePointerRelease equ <_InlineInterlockedExchangePointer>
      InterlockedExchangePointerNoFence equ <_InlineInterlockedExchangePointer>
      InterlockedCompareExchangePointer equ <_InlineInterlockedCompareExchangePointer>
      InterlockedCompareExchangePointerAcquire equ <_InlineInterlockedCompareExchangePointer>
      InterlockedCompareExchangePointerRelease equ <_InlineInterlockedCompareExchangePointer>
      InterlockedCompareExchangePointerNoFence equ <_InlineInterlockedCompareExchangePointer>
      if  not Defined(_MANAGED)
        if (_MSC_VER ge 1600)
          InterlockedExchange8 equ <_InterlockedExchange8>
          InterlockedExchange16 equ <_InterlockedExchange16>
        endif
        if _MSC_FULL_VER ge 140041204
          InterlockedExchangeAdd8 equ <_InterlockedExchangeAdd8>
          InterlockedAnd8 equ <_InterlockedAnd8>
          InterlockedOr8 equ <_InterlockedOr8>
          InterlockedXor8 equ <_InterlockedXor8>
          InterlockedAnd16 equ <_InterlockedAnd16>
          InterlockedOr16 equ <_InterlockedOr16>
          InterlockedXor16 equ <_InterlockedXor16>
          InterlockedCompareExchange16 equ <_InterlockedCompareExchange16>
          InterlockedIncrement16 equ <_InterlockedIncrement16>
          InterlockedDecrement16 equ <_InterlockedDecrement16>
          _InterlockedAnd16 proto c :ptr SHORT_, :SHORT_
          _InterlockedCompareExchange16 proto WIN_STD_CALL_CONV :ptr SHORT_, :SHORT_, :SHORT_
          _InterlockedOr16 proto WIN_STD_CALL_CONV :ptr SHORT_, :SHORT_
          _InterlockedIncrement16 proto WIN_STD_CALL_CONV :ptr SHORT_
          _InterlockedDecrement16 proto WIN_STD_CALL_CONV :ptr SHORT_
        endif
        InterlockedCompareExchange64 equ <_InterlockedCompareExchange64>
        InterlockedAnd64 equ <_InlineInterlockedAnd64>
        InterlockedAnd64Acquire equ <_InlineInterlockedAnd64>
        InterlockedAnd64Release equ <_InlineInterlockedAnd64>
        InterlockedAnd64NoFence equ <_InlineInterlockedAnd64>
        InterlockedAdd64 equ <_InlineInterlockedAdd64>
        InterlockedAddAcquire64 equ <_InlineInterlockedAdd64>
        InterlockedAddRelease64 equ <_InlineInterlockedAdd64>
        InterlockedAddNoFence64 equ <_InlineInterlockedAdd64>
      endif
      InterlockedExchangeAddSizeT macro a, b
        exitm <InterlockedExchangeAdd (a, b)>
      endm
      InterlockedExchangeAddSizeTAcquire macro a, b
        exitm <InterlockedExchangeAdd (a, b)>
      endm
      InterlockedExchangeAddSizeTNoFence macro a, b
        exitm <InterlockedExchangeAdd (a, b)>
      endm
      InterlockedIncrementSizeT macro a
        exitm <InterlockedIncrement (a)>
      endm
      InterlockedIncrementSizeTNoFence macro a
        exitm <InterlockedIncrement (a)>
      endm
      InterlockedDecrementSizeT macro a
        exitm <InterlockedDecrement (a)>
      endm
      InterlockedDecrementSizeTNoFence macro a
        exitm <InterlockedDecrement (a)>
      endm
      _InterlockedXor proto WIN_STD_CALL_CONV :ptr LONG, :LONG
      InterlockedXor equ <_InterlockedXor>
      if  not Defined(_MANAGED)
        InterlockedOr64 equ <_InlineInterlockedOr64>
        InterlockedXor64 equ <_InlineInterlockedXor64>
        InterlockedIncrement64 equ <_InlineInterlockedIncrement64>
        InterlockedIncrementAcquire64 equ <InterlockedIncrement64>
        InterlockedIncrementRelease64 equ <InterlockedIncrement64>
        InterlockedIncrementNoFence64 equ <InterlockedIncrement64>
        InterlockedDecrement64 equ <_InlineInterlockedDecrement64>
        InterlockedDecrementAcquire64 equ <InterlockedDecrement64>
        InterlockedDecrementRelease64 equ <InterlockedDecrement64>
        InterlockedDecrementNoFence64 equ <InterlockedDecrement64>
        InterlockedExchange64 equ <_InlineInterlockedExchange64>
        InterlockedExchangeAcquire64 equ <InterlockedExchange64>
        InterlockedExchangeNoFence64 equ <_InlineInterlockedExchange64>
        InterlockedExchangeAdd64 equ <_InlineInterlockedExchangeAdd64>
        InterlockedExchangeAddNoFence64 equ <_InlineInterlockedExchangeAdd64>
        __incfsbyte proto WIN_STD_CALL_CONV :DWORD
        __addfsbyte proto WIN_STD_CALL_CONV :DWORD, :BYTE
        __incfsword proto WIN_STD_CALL_CONV :DWORD
        __addfsword proto WIN_STD_CALL_CONV :DWORD, :WORD
        __incfsdword proto WIN_STD_CALL_CONV :DWORD
        __addfsdword proto WIN_STD_CALL_CONV :DWORD, :DWORD
      endif
      if  not Defined(_M_CEE_PURE)
        if _MSC_VER ge 1500
          CpuIdEx equ <__cpuidex>
          __cpuidex proto WIN_STD_CALL_CONV :ptr SDWORD, :SDWORD, :SDWORD
        endif
        __readfsbyte proto WIN_STD_CALL_CONV :DWORD
        __readfsword proto WIN_STD_CALL_CONV :DWORD
        __readfsdword proto WIN_STD_CALL_CONV :DWORD
        __writefsbyte proto WIN_STD_CALL_CONV :DWORD, :BYTE
        __writefsword proto WIN_STD_CALL_CONV :DWORD, :WORD
        __writefsdword proto WIN_STD_CALL_CONV :DWORD, :DWORD
      endif
      if  not Defined(_MANAGED) and  not Defined(_M_HYBRID_X86_ARM64)
        _mm_pause proto WIN_STD_CALL_CONV
        YieldProcessor equ <_mm_pause>
      endif
      ifdef __cplusplus
        ;[...]
      endif
    endif
    if  not Defined(MIDL_PASS) and Defined(_M_IX86)
      if  not Defined(_M_CEE_PURE) and  not Defined(_M_HYBRID_X86_ARM64)
      endif
      if  not Defined(_M_HYBRID_X86_ARM64)
        _MM_HINT_T0 equ 1
        _MM_HINT_T1 equ 2
        _MM_HINT_T2 equ 3
        _MM_HINT_NTA equ 0
        _mm_prefetch proto WIN_STD_CALL_CONV :ptr CHAR, :SDWORD
        PF_TEMPORAL_LEVEL_1 equ <_MM_HINT_T0>
        PF_TEMPORAL_LEVEL_2 equ <_MM_HINT_T1>
        PF_TEMPORAL_LEVEL_3 equ <_MM_HINT_T2>
        PF_NON_TEMPORAL_LEVEL_ALL equ <_MM_HINT_NTA>
        PreFetchCacheLine macro l, a
          exitm <_mm_prefetch ((CHAR CONST *) a, l)>
        endm
        PrefetchForWrite macro p
          exitm <>
        endm
        ReadForWriteAccess macro p
          exitm <(* (p))>
        endm
        if  not Defined(_MANAGED)
          ReadPMC equ <__readpmc>
          __readpmc proto WIN_STD_CALL_CONV :DWORD
          ReadTimeStampCounter macro
            exitm <__rdtsc ()>
          endm
          __rdtsc proto WIN_STD_CALL_CONV
        endif
      endif
      if  not Defined(_MANAGED)
      endif
    endif
    EXCEPTION_READ_FAULT equ 0
    EXCEPTION_WRITE_FAULT equ 1
    EXCEPTION_EXECUTE_FAULT equ 8
    SIZE_OF_80387_REGISTERS equ 80
    if  not Defined(RC_INVOKED)
      CONTEXT_i386 equ 00010000h
      CONTEXT_i486 equ 00010000h
      CONTEXT_CONTROL equ (CONTEXT_i386 or 00000001h)
      CONTEXT_INTEGER equ (CONTEXT_i386 or 00000002h)
      CONTEXT_SEGMENTS equ (CONTEXT_i386 or 00000004h)
      CONTEXT_FLOATING_POINT equ (CONTEXT_i386 or 00000008h)
      CONTEXT_DEBUG_REGISTERS equ (CONTEXT_i386 or 00000010h)
      CONTEXT_EXTENDED_REGISTERS equ (CONTEXT_i386 or 00000020h)
      CONTEXT_FULL equ <(CONTEXT_CONTROL or CONTEXT_INTEGER or CONTEXT_SEGMENTS)>
      CONTEXT_ALL equ <(CONTEXT_CONTROL or CONTEXT_INTEGER or CONTEXT_SEGMENTS or CONTEXT_FLOATING_POINT or CONTEXT_DEBUG_REGISTERS or CONTEXT_EXTENDED_REGISTERS)>
      CONTEXT_XSTATE equ (CONTEXT_i386 or 00000040h)
      CONTEXT_EXCEPTION_ACTIVE equ 08000000h
      CONTEXT_SERVICE_ACTIVE equ 10000000h
      CONTEXT_EXCEPTION_REQUEST equ 40000000h
      CONTEXT_EXCEPTION_REPORTING equ 80000000h
    endif
    FLOATING_SAVE_AREA struct
      ControlWord DWORD ?
      StatusWord DWORD ?
      TagWord DWORD ?
      ErrorOffset DWORD ?
      ErrorSelector DWORD ?
      DataOffset DWORD ?
      DataSelector DWORD ?
      RegisterArea BYTE SIZE_OF_80387_REGISTERS dup (?)
      Spare0 DWORD ?
    FLOATING_SAVE_AREA ends
    _FLOATING_SAVE_AREA typedef FLOATING_SAVE_AREA
    PFLOATING_SAVE_AREA typedef ptr FLOATING_SAVE_AREA
    MAXIMUM_SUPPORTED_EXTENSION equ 512
    if  not Defined(__midl) and  not Defined(MIDL_PASS)
    endif
    include pshpack4.inc
    CONTEXT struct
      ContextFlags DWORD ?
      Dr0_ DWORD ?
      Dr1_ DWORD ?
      Dr2_ DWORD ?
      Dr3_ DWORD ?
      Dr6_ DWORD ?
      Dr7_ DWORD ?
      FloatSave FLOATING_SAVE_AREA <>
      SegGs DWORD ?
      SegFs DWORD ?
      SegEs DWORD ?
      SegDs DWORD ?
      Edi_ DWORD ?
      Esi_ DWORD ?
      Ebx_ DWORD ?
      Edx_ DWORD ?
      Ecx_ DWORD ?
      Eax_ DWORD ?
      Ebp_ DWORD ?
      Eip_ DWORD ?
      SegCs DWORD ?
      EFlags_ DWORD ?
      Esp_ DWORD ?
      SegSs DWORD ?
      ExtendedRegisters BYTE MAXIMUM_SUPPORTED_EXTENSION dup (?)
    CONTEXT ends

;    _CONTEXT typedef CONTEXT
    PCONTEXT typedef ptr CONTEXT
    include poppack.inc
  endif
  ifndef _LDT_ENTRY_DEFINED
    _LDT_ENTRY_DEFINED equ <>
    LDT_ENTRY struct
      LimitLow WORD ?
      BaseLow WORD ?
      union HighWord_
        struct Bytes
          BaseMid BYTE ?
          Flags1 BYTE ?
          Flags2 BYTE ?
          BaseHi BYTE ?
        ends
        struct Bits
          Bits_??0 record BaseMid_??0:8, Type_??0:5, Dpl_??0:2, Pres_??0:1, LimitHi_??0:4, Sys_??0:1, Reserved_0_??0:1, Default_Big_??0:1, Granularity_??0:1, BaseHi_??0:8
          Bits_??0 <>
        ends
      ends
    LDT_ENTRY ends
    _LDT_ENTRY typedef LDT_ENTRY
    PLDT_ENTRY typedef ptr LDT_ENTRY
  endif
  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
    if  not Defined(RC_INVOKED) and  not Defined(MIDL_PASS)
      if ((Defined(_M_AMD64) or Defined(_M_IX86)) and  not Defined(_M_HYBRID_X86_ARM64)) or Defined(_M_CEE_PURE)
        ifdef __cplusplus
          ;[...]
        endif
        ifdef __cplusplus
          ;[...]
        endif
      endif
      ReadSizeTAcquire equ <ReadULongPtrAcquire>
      ReadSizeTNoFence equ <ReadULongPtrNoFence>
      ReadSizeTRaw equ <ReadULongPtrRaw>
      WriteSizeTRelease equ <WriteULongPtrRelease>
      WriteSizeTNoFence equ <WriteULongPtrNoFence>
      WriteSizeTRaw equ <WriteULongPtrRaw>
      if  not Defined(_WIN64)
        ReadLongPtrAcquire equ <ReadAcquire>
        ReadLongPtrNoFence equ <ReadNoFence>
        ReadLongPtrRaw equ <ReadRaw>
        WriteLongPtrRelease equ <WriteRelease>
        WriteLongPtrNoFence equ <WriteNoFence>
        WriteLongPtrRaw equ <WriteRaw>
        ReadULongPtrAcquire equ <ReadULongAcquire>
        ReadULongPtrNoFence equ <ReadULongNoFence>
        ReadULongPtrRaw equ <ReadULongRaw>
        WriteULongPtrRelease equ <WriteULongRelease>
        WriteULongPtrNoFence equ <WriteULongNoFence>
        WriteULongPtrRaw equ <WriteULongRaw>
      else
        ReadLongPtrAcquire equ <ReadAcquire64>
        ReadLongPtrNoFence equ <ReadNoFence64>
        ReadLongPtrRaw equ <ReadRaw64>
        WriteLongPtrRelease equ <WriteRelease64>
        WriteLongPtrNoFence equ <WriteNoFence64>
        WriteLongPtrRaw equ <WriteRaw64>
        ReadULongPtrAcquire equ <ReadULong64Acquire>
        ReadULongPtrNoFence equ <ReadULong64NoFence>
        ReadULongPtrRaw equ <ReadULong64Raw>
        WriteULongPtrRelease equ <WriteULong64Release>
        WriteULongPtrNoFence equ <WriteULong64NoFence>
        WriteULongPtrRaw equ <WriteULong64Raw>
      endif
    endif
  endif
  if  not Defined(RC_INVOKED)
    WOW64_CONTEXT_i386 equ 00010000h
    WOW64_CONTEXT_i486 equ 00010000h
    WOW64_CONTEXT_CONTROL equ (WOW64_CONTEXT_i386 or 00000001h)
    WOW64_CONTEXT_INTEGER equ (WOW64_CONTEXT_i386 or 00000002h)
    WOW64_CONTEXT_SEGMENTS equ (WOW64_CONTEXT_i386 or 00000004h)
    WOW64_CONTEXT_FLOATING_POINT equ (WOW64_CONTEXT_i386 or 00000008h)
    WOW64_CONTEXT_DEBUG_REGISTERS equ (WOW64_CONTEXT_i386 or 00000010h)
    WOW64_CONTEXT_EXTENDED_REGISTERS equ (WOW64_CONTEXT_i386 or 00000020h)
    WOW64_CONTEXT_FULL equ <(WOW64_CONTEXT_CONTROL or WOW64_CONTEXT_INTEGER or WOW64_CONTEXT_SEGMENTS)>
    WOW64_CONTEXT_ALL equ <(WOW64_CONTEXT_CONTROL or WOW64_CONTEXT_INTEGER or WOW64_CONTEXT_SEGMENTS or WOW64_CONTEXT_FLOATING_POINT or WOW64_CONTEXT_DEBUG_REGISTERS or WOW64_CONTEXT_EXTENDED_REGISTERS)>
    WOW64_CONTEXT_XSTATE equ (WOW64_CONTEXT_i386 or 00000040h)
    WOW64_CONTEXT_EXCEPTION_ACTIVE equ 08000000h
    WOW64_CONTEXT_SERVICE_ACTIVE equ 10000000h
    WOW64_CONTEXT_EXCEPTION_REQUEST equ 40000000h
    WOW64_CONTEXT_EXCEPTION_REPORTING equ 80000000h
  endif
  WOW64_SIZE_OF_80387_REGISTERS equ 80
  WOW64_MAXIMUM_SUPPORTED_EXTENSION equ 512
  WOW64_FLOATING_SAVE_AREA struct
    ControlWord DWORD ?
    StatusWord DWORD ?
    TagWord DWORD ?
    ErrorOffset DWORD ?
    ErrorSelector DWORD ?
    DataOffset DWORD ?
    DataSelector DWORD ?
    RegisterArea BYTE WOW64_SIZE_OF_80387_REGISTERS dup (?)
    Cr0NpxState DWORD ?
  WOW64_FLOATING_SAVE_AREA ends
  _WOW64_FLOATING_SAVE_AREA typedef WOW64_FLOATING_SAVE_AREA
  PWOW64_FLOATING_SAVE_AREA typedef ptr WOW64_FLOATING_SAVE_AREA
  include pshpack4.inc
  WOW64_CONTEXT struct
    ContextFlags DWORD ?
    Dr0_ DWORD ?
    Dr1_ DWORD ?
    Dr2_ DWORD ?
    Dr3_ DWORD ?
    Dr6_ DWORD ?
    Dr7_ DWORD ?
    FloatSave WOW64_FLOATING_SAVE_AREA <>
    SegGs DWORD ?
    SegFs DWORD ?
    SegEs DWORD ?
    SegDs DWORD ?
    Edi_ DWORD ?
    Esi_ DWORD ?
    Ebx_ DWORD ?
    Edx_ DWORD ?
    Ecx_ DWORD ?
    Eax_ DWORD ?
    Ebp_ DWORD ?
    Eip_ DWORD ?
    SegCs DWORD ?
    EFlags_ DWORD ?
    Esp_ DWORD ?
    SegSs DWORD ?
    ExtendedRegisters BYTE WOW64_MAXIMUM_SUPPORTED_EXTENSION dup (?)
  WOW64_CONTEXT ends
  _WOW64_CONTEXT typedef WOW64_CONTEXT
  PWOW64_CONTEXT typedef ptr WOW64_CONTEXT
  include poppack.inc
  WOW64_LDT_ENTRY struct
    LimitLow WORD ?
    BaseLow WORD ?
    union HighWord_
      struct Bytes
        BaseMid BYTE ?
        Flags1 BYTE ?
        Flags2 BYTE ?
        BaseHi BYTE ?
      ends
      struct Bits
        Bits_??1 record BaseMid_??1:8, Type_??1:5, Dpl_??1:2, Pres_??1:1, LimitHi_??1:4, Sys_??1:1, Reserved_0_??1:1, Default_Big_??1:1, Granularity_??1:1, BaseHi_??1:8
        Bits_??1 <>
      ends
    ends
  WOW64_LDT_ENTRY ends
  _WOW64_LDT_ENTRY typedef WOW64_LDT_ENTRY
  PWOW64_LDT_ENTRY typedef ptr WOW64_LDT_ENTRY
  WOW64_DESCRIPTOR_TABLE_ENTRY struct
    Selector DWORD ?
    Descriptor WOW64_LDT_ENTRY <>
  WOW64_DESCRIPTOR_TABLE_ENTRY ends
  _WOW64_DESCRIPTOR_TABLE_ENTRY typedef WOW64_DESCRIPTOR_TABLE_ENTRY
  PWOW64_DESCRIPTOR_TABLE_ENTRY typedef ptr WOW64_DESCRIPTOR_TABLE_ENTRY
  EXCEPTION_NONCONTINUABLE equ 1h
  EXCEPTION_UNWINDING equ 2h
  EXCEPTION_EXIT_UNWIND equ 4h
  EXCEPTION_STACK_INVALID equ 8h
  EXCEPTION_NESTED_CALL equ 10h
  EXCEPTION_TARGET_UNWIND equ 20h
  EXCEPTION_COLLIDED_UNWIND equ 40h
  EXCEPTION_UNWIND equ <(EXCEPTION_UNWINDING or EXCEPTION_EXIT_UNWIND or EXCEPTION_TARGET_UNWIND or EXCEPTION_COLLIDED_UNWIND)>
  IS_UNWINDING macro Flag
    exitm <((Flag and EXCEPTION_UNWIND) != 0)>
  endm
  IS_DISPATCHING macro Flag
    exitm <((Flag and EXCEPTION_UNWIND) == 0)>
  endm
  IS_TARGET_UNWIND macro Flag
    exitm <(Flag and EXCEPTION_TARGET_UNWIND)>
  endm
  EXCEPTION_MAXIMUM_PARAMETERS equ 15
  EXCEPTION_RECORD struct
    ExceptionCode DWORD ?
    ExceptionFlags DWORD ?
    ExceptionRecord POINTER ?
    ExceptionAddress PVOID ?
    NumberParameters DWORD ?
    ExceptionInformation ULONG_PTR EXCEPTION_MAXIMUM_PARAMETERS dup (?)
  EXCEPTION_RECORD ends

;  _EXCEPTION_RECORD typedef EXCEPTION_RECORD
  PEXCEPTION_RECORD typedef ptr EXCEPTION_RECORD
  EXCEPTION_RECORD32 struct
    ExceptionCode DWORD ?
    ExceptionFlags DWORD ?
    ExceptionRecord DWORD ?
    ExceptionAddress DWORD ?
    NumberParameters DWORD ?
    ExceptionInformation DWORD EXCEPTION_MAXIMUM_PARAMETERS dup (?)
  EXCEPTION_RECORD32 ends
  _EXCEPTION_RECORD32 typedef EXCEPTION_RECORD32
  PEXCEPTION_RECORD32 typedef ptr EXCEPTION_RECORD32
  EXCEPTION_RECORD64 struct
    ExceptionCode DWORD ?
    ExceptionFlags DWORD ?
    ExceptionRecord DWORD64 ?
    ExceptionAddress DWORD64 ?
    NumberParameters DWORD ?
    __unusedAlignment DWORD ?
    ExceptionInformation DWORD64 EXCEPTION_MAXIMUM_PARAMETERS dup (?)
  EXCEPTION_RECORD64 ends
  _EXCEPTION_RECORD64 typedef EXCEPTION_RECORD64
  PEXCEPTION_RECORD64 typedef ptr EXCEPTION_RECORD64
  EXCEPTION_POINTERS struct
    ExceptionRecord PEXCEPTION_RECORD ?
    ContextRecord PCONTEXT ?
  EXCEPTION_POINTERS ends
  _EXCEPTION_POINTERS typedef EXCEPTION_POINTERS
  PEXCEPTION_POINTERS typedef ptr EXCEPTION_POINTERS
  if Defined(_IA64_)
    @DefProto DllImport, RtlUnwind2, WIN_STD_CALL_CONV,, <:FRAME_POINTERS, :PVOID, :PEXCEPTION_RECORD, :PVOID, :PCONTEXT>, 20
  endif
  PACCESS_TOKEN typedef PVOID
  PSECURITY_DESCRIPTOR typedef PVOID
  PSID typedef PVOID
  PCLAIMS_BLOB typedef PVOID
  ACCESS_MASK typedef DWORD
  PACCESS_MASK typedef ptr ACCESS_MASK
  DELETE equ 00010000h
  READ_CONTROL equ 00020000h
  WRITE_DAC equ 00040000h
  WRITE_OWNER equ 00080000h
  SYNCHRONIZE equ 00100000h
  STANDARD_RIGHTS_REQUIRED equ 000F0000h
  STANDARD_RIGHTS_READ equ <(READ_CONTROL)>
  STANDARD_RIGHTS_WRITE equ <(READ_CONTROL)>
  STANDARD_RIGHTS_EXECUTE equ <(READ_CONTROL)>
  STANDARD_RIGHTS_ALL equ 001F0000h
  SPECIFIC_RIGHTS_ALL equ 0000FFFFh
  ACCESS_SYSTEM_SECURITY equ 01000000h
  MAXIMUM_ALLOWED equ 02000000h
  GENERIC_READ equ 80000000h
  GENERIC_WRITE equ 40000000h
  GENERIC_EXECUTE equ 20000000h
  GENERIC_ALL equ 10000000h
  GENERIC_MAPPING struct
    GenericRead ACCESS_MASK ?
    GenericWrite ACCESS_MASK ?
    GenericExecute ACCESS_MASK ?
    GenericAll ACCESS_MASK ?
  GENERIC_MAPPING ends
  _GENERIC_MAPPING typedef GENERIC_MAPPING
  PGENERIC_MAPPING typedef ptr GENERIC_MAPPING
  include pshpack4.inc
  LUID_AND_ATTRIBUTES struct
    Luid LUID <>
    Attributes DWORD ?
  LUID_AND_ATTRIBUTES ends
  _LUID_AND_ATTRIBUTES typedef LUID_AND_ATTRIBUTES
  PLUID_AND_ATTRIBUTES typedef ptr LUID_AND_ATTRIBUTES
  LUID_AND_ATTRIBUTES_ARRAY struct
    LUID_AND_ATTRIBUTES ANYSIZE_ARRAY dup (<>)
  LUID_AND_ATTRIBUTES_ARRAY ends
  PLUID_AND_ATTRIBUTES_ARRAY typedef ptr LUID_AND_ATTRIBUTES_ARRAY
  include poppack.inc
  ifndef SID_IDENTIFIER_AUTHORITY_DEFINED
    SID_IDENTIFIER_AUTHORITY_DEFINED equ <>
    SID_IDENTIFIER_AUTHORITY struct
      Value BYTE 6 dup (?)
    SID_IDENTIFIER_AUTHORITY ends
    _SID_IDENTIFIER_AUTHORITY typedef SID_IDENTIFIER_AUTHORITY
    PSID_IDENTIFIER_AUTHORITY typedef ptr SID_IDENTIFIER_AUTHORITY
  endif
  ifndef SID_DEFINED
    SID_DEFINED equ <>
    SID struct
      Revision BYTE ?
      SubAuthorityCount BYTE ?
      IdentifierAuthority SID_IDENTIFIER_AUTHORITY <>
      ifdef MIDL_PASS
        ;[...]
      else
        SubAuthority DWORD ANYSIZE_ARRAY dup (?)
      endif
    SID ends
    _SID typedef SID
    PISID typedef ptr SID
  endif
  SID_REVISION equ 1
  SID_MAX_SUB_AUTHORITIES equ 15
  SID_RECOMMENDED_SUB_AUTHORITIES equ 1
  ifndef MIDL_PASS
    SECURITY_MAX_SID_SIZE equ <(sizeof(SID) - sizeof(DWORD) + (SID_MAX_SUB_AUTHORITIES * sizeof(DWORD)))>
    SECURITY_SID_SIZE macro SubAuthorityCount_
      exitm <(sizeof(SID) - sizeof(DWORD) + (SubAuthorityCount_) * sizeof(DWORD))>
    endm
    SECURITY_MAX_SID_STRING_CHARACTERS equ (2 + 4 + 15 + (11 * SID_MAX_SUB_AUTHORITIES) + 1)
    SE_SID union
      Sid SID <>
      Buffer BYTE SECURITY_MAX_SID_SIZE dup (?)
    SE_SID ends
    _SE_SID typedef SE_SID
    PSE_SID typedef ptr SE_SID
  endif
  SID_NAME_USE typedef SDWORD
  SidTypeUser equ 1
  SidTypeGroup equ 2
  SidTypeDomain equ 3
  SidTypeAlias equ 4
  SidTypeWellKnownGroup equ 5
  SidTypeDeletedAccount equ 6
  SidTypeInvalid equ 7
  SidTypeUnknown equ 8
  SidTypeComputer equ 9
  SidTypeLabel equ 10
  SidTypeLogonSession equ 11
  _SID_NAME_USE typedef SID_NAME_USE
  PSID_NAME_USE typedef ptr SID_NAME_USE
  SID_AND_ATTRIBUTES struct
    ifdef MIDL_PASS
      ;[...]
    else
      Sid PSID ?
    endif
    Attributes DWORD ?
  SID_AND_ATTRIBUTES ends
  _SID_AND_ATTRIBUTES typedef SID_AND_ATTRIBUTES
  PSID_AND_ATTRIBUTES typedef ptr SID_AND_ATTRIBUTES
  SID_AND_ATTRIBUTES_ARRAY struct
    SID_AND_ATTRIBUTES ANYSIZE_ARRAY dup (<>)
  SID_AND_ATTRIBUTES_ARRAY ends
  PSID_AND_ATTRIBUTES_ARRAY typedef ptr SID_AND_ATTRIBUTES_ARRAY
  SID_HASH_SIZE equ 32
  SID_HASH_ENTRY typedef ULONG_PTR
  PSID_HASH_ENTRY typedef ptr ULONG_PTR
  SID_AND_ATTRIBUTES_HASH struct
    SidCount DWORD ?
    SidAttr PSID_AND_ATTRIBUTES ?
    Hash SID_HASH_ENTRY SID_HASH_SIZE dup (?)
  SID_AND_ATTRIBUTES_HASH ends
  _SID_AND_ATTRIBUTES_HASH typedef SID_AND_ATTRIBUTES_HASH
  PSID_AND_ATTRIBUTES_HASH typedef ptr SID_AND_ATTRIBUTES_HASH
  SECURITY_NULL_SID_AUTHORITY equ { 0, 0, 0, 0, 0, 0 }
  SECURITY_WORLD_SID_AUTHORITY equ { 0, 0, 0, 0, 0, 1 }
  SECURITY_LOCAL_SID_AUTHORITY equ { 0, 0, 0, 0, 0, 2 }
  SECURITY_CREATOR_SID_AUTHORITY equ { 0, 0, 0, 0, 0, 3 }
  SECURITY_NON_UNIQUE_AUTHORITY equ { 0, 0, 0, 0, 0, 4 }
  SECURITY_RESOURCE_MANAGER_AUTHORITY equ { 0, 0, 0, 0, 0, 9 }
  SECURITY_NULL_RID equ 00000000h
  SECURITY_WORLD_RID equ 00000000h
  SECURITY_LOCAL_RID equ 00000000h
  SECURITY_LOCAL_LOGON_RID equ 00000001h
  SECURITY_CREATOR_OWNER_RID equ 00000000h
  SECURITY_CREATOR_GROUP_RID equ 00000001h
  SECURITY_CREATOR_OWNER_SERVER_RID equ 00000002h
  SECURITY_CREATOR_GROUP_SERVER_RID equ 00000003h
  SECURITY_CREATOR_OWNER_RIGHTS_RID equ 00000004h
  SECURITY_NT_AUTHORITY equ { 0, 0, 0, 0, 0, 5 }
  SECURITY_DIALUP_RID equ 00000001h
  SECURITY_NETWORK_RID equ 00000002h
  SECURITY_BATCH_RID equ 00000003h
  SECURITY_INTERACTIVE_RID equ 00000004h
  SECURITY_LOGON_IDS_RID equ 00000005h
  SECURITY_LOGON_IDS_RID_COUNT equ 3
  SECURITY_SERVICE_RID equ 00000006h
  SECURITY_ANONYMOUS_LOGON_RID equ 00000007h
  SECURITY_PROXY_RID equ 00000008h
  SECURITY_ENTERPRISE_CONTROLLERS_RID equ 00000009h
  SECURITY_SERVER_LOGON_RID equ <SECURITY_ENTERPRISE_CONTROLLERS_RID>
  SECURITY_PRINCIPAL_SELF_RID equ 0000000Ah
  SECURITY_AUTHENTICATED_USER_RID equ 0000000Bh
  SECURITY_RESTRICTED_CODE_RID equ 0000000Ch
  SECURITY_TERMINAL_SERVER_RID equ 0000000Dh
  SECURITY_REMOTE_LOGON_RID equ 0000000Eh
  SECURITY_THIS_ORGANIZATION_RID equ 0000000Fh
  SECURITY_IUSER_RID equ 00000011h
  SECURITY_LOCAL_SYSTEM_RID equ 00000012h
  SECURITY_LOCAL_SERVICE_RID equ 00000013h
  SECURITY_NETWORK_SERVICE_RID equ 00000014h
  SECURITY_NT_NON_UNIQUE equ 00000015h
  SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT equ 3
  SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID equ 00000016h
  SECURITY_BUILTIN_DOMAIN_RID equ 00000020h
  SECURITY_WRITE_RESTRICTED_CODE_RID equ 00000021h
  SECURITY_PACKAGE_BASE_RID equ 00000040h
  SECURITY_PACKAGE_RID_COUNT equ 2
  SECURITY_PACKAGE_NTLM_RID equ 0000000Ah
  SECURITY_PACKAGE_SCHANNEL_RID equ 0000000Eh
  SECURITY_PACKAGE_DIGEST_RID equ 00000015h
  SECURITY_CRED_TYPE_BASE_RID equ 00000041h
  SECURITY_CRED_TYPE_RID_COUNT equ 2
  SECURITY_CRED_TYPE_THIS_ORG_CERT_RID equ 00000001h
  SECURITY_MIN_BASE_RID equ 00000050h
  SECURITY_SERVICE_ID_BASE_RID equ 00000050h
  SECURITY_SERVICE_ID_RID_COUNT equ 6
  SECURITY_RESERVED_ID_BASE_RID equ 00000051h
  SECURITY_APPPOOL_ID_BASE_RID equ 00000052h
  SECURITY_APPPOOL_ID_RID_COUNT equ 6
  SECURITY_VIRTUALSERVER_ID_BASE_RID equ 00000053h
  SECURITY_VIRTUALSERVER_ID_RID_COUNT equ 6
  SECURITY_USERMODEDRIVERHOST_ID_BASE_RID equ 00000054h
  SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT equ 6
  SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID equ 00000055h
  SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT equ 6
  SECURITY_WMIHOST_ID_BASE_RID equ 00000056h
  SECURITY_WMIHOST_ID_RID_COUNT equ 6
  SECURITY_TASK_ID_BASE_RID equ 00000057h
  SECURITY_NFS_ID_BASE_RID equ 00000058h
  SECURITY_COM_ID_BASE_RID equ 00000059h
  SECURITY_WINDOW_MANAGER_BASE_RID equ 0000005Ah
  SECURITY_RDV_GFX_BASE_RID equ 0000005Bh
  SECURITY_DASHOST_ID_BASE_RID equ 0000005Ch
  SECURITY_DASHOST_ID_RID_COUNT equ 6
  SECURITY_USERMANAGER_ID_BASE_RID equ 0000005Dh
  SECURITY_USERMANAGER_ID_RID_COUNT equ 6
  SECURITY_WINRM_ID_BASE_RID equ 0000005Eh
  SECURITY_WINRM_ID_RID_COUNT equ 6
  SECURITY_CCG_ID_BASE_RID equ 0000005Fh
  SECURITY_UMFD_BASE_RID equ 00000060h
  SECURITY_VIRTUALACCOUNT_ID_RID_COUNT equ 6
  SECURITY_MAX_BASE_RID equ 0000006Fh
  SECURITY_MAX_ALWAYS_FILTERED equ 000003E7h
  SECURITY_MIN_NEVER_FILTERED equ 000003E8h
  SECURITY_OTHER_ORGANIZATION_RID equ 000003E8h
  SECURITY_WINDOWSMOBILE_ID_BASE_RID equ 00000070h
  SECURITY_INSTALLER_GROUP_CAPABILITY_BASE equ 20h
  SECURITY_INSTALLER_GROUP_CAPABILITY_RID_COUNT equ 9
  SECURITY_INSTALLER_CAPABILITY_RID_COUNT equ 10
  SECURITY_LOCAL_ACCOUNT_RID equ 00000071h
  SECURITY_LOCAL_ACCOUNT_AND_ADMIN_RID equ 00000072h
  DOMAIN_GROUP_RID_AUTHORIZATION_DATA_IS_COMPOUNDED equ 000001F0h
  DOMAIN_GROUP_RID_AUTHORIZATION_DATA_CONTAINS_CLAIMS equ 000001F1h
  DOMAIN_GROUP_RID_ENTERPRISE_READONLY_DOMAIN_CONTROLLERS equ 000001F2h
  FOREST_USER_RID_MAX equ 000001F3h
  DOMAIN_USER_RID_ADMIN equ 000001F4h
  DOMAIN_USER_RID_GUEST equ 000001F5h
  DOMAIN_USER_RID_KRBTGT equ 000001F6h
  DOMAIN_USER_RID_DEFAULT_ACCOUNT equ 000001F7h
  DOMAIN_USER_RID_WDAG_ACCOUNT equ 000001F8h
  DOMAIN_USER_RID_MAX equ 000003E7h
  DOMAIN_GROUP_RID_ADMINS equ 00000200h
  DOMAIN_GROUP_RID_USERS equ 00000201h
  DOMAIN_GROUP_RID_GUESTS equ 00000202h
  DOMAIN_GROUP_RID_COMPUTERS equ 00000203h
  DOMAIN_GROUP_RID_CONTROLLERS equ 00000204h
  DOMAIN_GROUP_RID_CERT_ADMINS equ 00000205h
  DOMAIN_GROUP_RID_SCHEMA_ADMINS equ 00000206h
  DOMAIN_GROUP_RID_ENTERPRISE_ADMINS equ 00000207h
  DOMAIN_GROUP_RID_POLICY_ADMINS equ 00000208h
  DOMAIN_GROUP_RID_READONLY_CONTROLLERS equ 00000209h
  DOMAIN_GROUP_RID_CLONEABLE_CONTROLLERS equ 0000020Ah
  DOMAIN_GROUP_RID_CDC_RESERVED equ 0000020Ch
  DOMAIN_GROUP_RID_PROTECTED_USERS equ 0000020Dh
  DOMAIN_GROUP_RID_KEY_ADMINS equ 0000020Eh
  DOMAIN_GROUP_RID_ENTERPRISE_KEY_ADMINS equ 0000020Fh
  DOMAIN_ALIAS_RID_ADMINS equ 00000220h
  DOMAIN_ALIAS_RID_USERS equ 00000221h
  DOMAIN_ALIAS_RID_GUESTS equ 00000222h
  DOMAIN_ALIAS_RID_POWER_USERS equ 00000223h
  DOMAIN_ALIAS_RID_ACCOUNT_OPS equ 00000224h
  DOMAIN_ALIAS_RID_SYSTEM_OPS equ 00000225h
  DOMAIN_ALIAS_RID_PRINT_OPS equ 00000226h
  DOMAIN_ALIAS_RID_BACKUP_OPS equ 00000227h
  DOMAIN_ALIAS_RID_REPLICATOR equ 00000228h
  DOMAIN_ALIAS_RID_RAS_SERVERS equ 00000229h
  DOMAIN_ALIAS_RID_PREW2KCOMPACCESS equ 0000022Ah
  DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS equ 0000022Bh
  DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS equ 0000022Ch
  DOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS equ 0000022Dh
  DOMAIN_ALIAS_RID_MONITORING_USERS equ 0000022Eh
  DOMAIN_ALIAS_RID_LOGGING_USERS equ 0000022Fh
  DOMAIN_ALIAS_RID_AUTHORIZATIONACCESS equ 00000230h
  DOMAIN_ALIAS_RID_TS_LICENSE_SERVERS equ 00000231h
  DOMAIN_ALIAS_RID_DCOM_USERS equ 00000232h
  DOMAIN_ALIAS_RID_IUSERS equ 00000238h
  DOMAIN_ALIAS_RID_CRYPTO_OPERATORS equ 00000239h
  DOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP equ 0000023Bh
  DOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP equ 0000023Ch
  DOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP equ 0000023Dh
  DOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP equ 0000023Eh
  DOMAIN_ALIAS_RID_RDS_REMOTE_ACCESS_SERVERS equ 0000023Fh
  DOMAIN_ALIAS_RID_RDS_ENDPOINT_SERVERS equ 00000240h
  DOMAIN_ALIAS_RID_RDS_MANAGEMENT_SERVERS equ 00000241h
  DOMAIN_ALIAS_RID_HYPER_V_ADMINS equ 00000242h
  DOMAIN_ALIAS_RID_ACCESS_CONTROL_ASSISTANCE_OPS equ 00000243h
  DOMAIN_ALIAS_RID_REMOTE_MANAGEMENT_USERS equ 00000244h
  DOMAIN_ALIAS_RID_DEFAULT_ACCOUNT equ 00000245h
  DOMAIN_ALIAS_RID_STORAGE_REPLICA_ADMINS equ 00000246h
  DOMAIN_ALIAS_RID_DEVICE_OWNERS equ 00000247h
  SECURITY_APP_PACKAGE_AUTHORITY equ { 0, 0, 0, 0, 0, 15 }
  SECURITY_APP_PACKAGE_BASE_RID equ 00000002h
  SECURITY_BUILTIN_APP_PACKAGE_RID_COUNT equ 2
  SECURITY_APP_PACKAGE_RID_COUNT equ 8
  SECURITY_CAPABILITY_BASE_RID equ 00000003h
  SECURITY_CAPABILITY_APP_RID equ 000000400h
  SECURITY_BUILTIN_CAPABILITY_RID_COUNT equ 2
  SECURITY_CAPABILITY_RID_COUNT equ 5
  SECURITY_PARENT_PACKAGE_RID_COUNT equ <(SECURITY_APP_PACKAGE_RID_COUNT)>
  SECURITY_CHILD_PACKAGE_RID_COUNT equ 12
  SECURITY_BUILTIN_PACKAGE_ANY_PACKAGE equ 00000001h
  SECURITY_BUILTIN_PACKAGE_ANY_RESTRICTED_PACKAGE equ 00000002h
  SECURITY_CAPABILITY_INTERNET_CLIENT equ 00000001h
  SECURITY_CAPABILITY_INTERNET_CLIENT_SERVER equ 00000002h
  SECURITY_CAPABILITY_PRIVATE_NETWORK_CLIENT_SERVER equ 00000003h
  SECURITY_CAPABILITY_PICTURES_LIBRARY equ 00000004h
  SECURITY_CAPABILITY_VIDEOS_LIBRARY equ 00000005h
  SECURITY_CAPABILITY_MUSIC_LIBRARY equ 00000006h
  SECURITY_CAPABILITY_DOCUMENTS_LIBRARY equ 00000007h
  SECURITY_CAPABILITY_ENTERPRISE_AUTHENTICATION equ 00000008h
  SECURITY_CAPABILITY_SHARED_USER_CERTIFICATES equ 00000009h
  SECURITY_CAPABILITY_REMOVABLE_STORAGE equ 0000000Ah
  SECURITY_CAPABILITY_APPOINTMENTS equ 0000000Bh
  SECURITY_CAPABILITY_CONTACTS equ 0000000Ch
  SECURITY_CAPABILITY_INTERNET_EXPLORER equ 00001000h
  SECURITY_MANDATORY_LABEL_AUTHORITY equ { 0, 0, 0, 0, 0, 16 }
  SECURITY_MANDATORY_UNTRUSTED_RID equ 00000000h
  SECURITY_MANDATORY_LOW_RID equ 00001000h
  SECURITY_MANDATORY_MEDIUM_RID equ 00002000h
  SECURITY_MANDATORY_MEDIUM_PLUS_RID equ (SECURITY_MANDATORY_MEDIUM_RID + 100h)
  SECURITY_MANDATORY_HIGH_RID equ 00003000h
  SECURITY_MANDATORY_SYSTEM_RID equ 00004000h
  SECURITY_MANDATORY_PROTECTED_PROCESS_RID equ 00005000h
  SECURITY_MANDATORY_MAXIMUM_USER_RID equ <SECURITY_MANDATORY_SYSTEM_RID>
  MANDATORY_LEVEL_TO_MANDATORY_RID macro IL
    exitm <(IL * 1000h)>
  endm
  SECURITY_SCOPED_POLICY_ID_AUTHORITY equ { 0, 0, 0, 0, 0, 17 }
  SECURITY_AUTHENTICATION_AUTHORITY equ { 0, 0, 0, 0, 0, 18 }
  SECURITY_AUTHENTICATION_AUTHORITY_RID_COUNT equ 1
  SECURITY_AUTHENTICATION_AUTHORITY_ASSERTED_RID equ 00000001h
  SECURITY_AUTHENTICATION_SERVICE_ASSERTED_RID equ 00000002h
  SECURITY_AUTHENTICATION_FRESH_KEY_AUTH_RID equ 00000003h
  SECURITY_AUTHENTICATION_KEY_TRUST_RID equ 00000004h
  SECURITY_AUTHENTICATION_KEY_PROPERTY_MFA_RID equ 00000005h
  SECURITY_AUTHENTICATION_KEY_PROPERTY_ATTESTATION_RID equ 00000006h
  SECURITY_PROCESS_TRUST_AUTHORITY equ { 0, 0, 0, 0, 0, 19 }
  SECURITY_PROCESS_TRUST_AUTHORITY_RID_COUNT equ 2
  SECURITY_PROCESS_PROTECTION_TYPE_FULL_RID equ 00000400h
  SECURITY_PROCESS_PROTECTION_TYPE_LITE_RID equ 00000200h
  SECURITY_PROCESS_PROTECTION_TYPE_NONE_RID equ 00000000h
  SECURITY_PROCESS_PROTECTION_LEVEL_WINTCB_RID equ 00002000h
  SECURITY_PROCESS_PROTECTION_LEVEL_WINDOWS_RID equ 00001000h
  SECURITY_PROCESS_PROTECTION_LEVEL_APP_RID equ 00000800h
  SECURITY_PROCESS_PROTECTION_LEVEL_ANTIMALWARE_RID equ 00000600h
  SECURITY_PROCESS_PROTECTION_LEVEL_AUTHENTICODE_RID equ 00000400h
  SECURITY_PROCESS_PROTECTION_LEVEL_NONE_RID equ 00000000h
  SECURITY_TRUSTED_INSTALLER_RID1 equ 956008885
  SECURITY_TRUSTED_INSTALLER_RID2 equ 3418522649
  SECURITY_TRUSTED_INSTALLER_RID3 equ 1831038044
  SECURITY_TRUSTED_INSTALLER_RID4 equ 1853292631
  SECURITY_TRUSTED_INSTALLER_RID5 equ 2271478464
  WELL_KNOWN_SID_TYPE typedef SDWORD
  WinNullSid equ 0
  WinWorldSid equ 1
  WinLocalSid equ 2
  WinCreatorOwnerSid equ 3
  WinCreatorGroupSid equ 4
  WinCreatorOwnerServerSid equ 5
  WinCreatorGroupServerSid equ 6
  WinNtAuthoritySid equ 7
  WinDialupSid equ 8
  WinNetworkSid equ 9
  WinBatchSid equ 10
  WinInteractiveSid equ 11
  WinServiceSid equ 12
  WinAnonymousSid equ 13
  WinProxySid equ 14
  WinEnterpriseControllersSid equ 15
  WinSelfSid equ 16
  WinAuthenticatedUserSid equ 17
  WinRestrictedCodeSid equ 18
  WinTerminalServerSid equ 19
  WinRemoteLogonIdSid equ 20
  WinLogonIdsSid equ 21
  WinLocalSystemSid equ 22
  WinLocalServiceSid equ 23
  WinNetworkServiceSid equ 24
  WinBuiltinDomainSid equ 25
  WinBuiltinAdministratorsSid equ 26
  WinBuiltinUsersSid equ 27
  WinBuiltinGuestsSid equ 28
  WinBuiltinPowerUsersSid equ 29
  WinBuiltinAccountOperatorsSid equ 30
  WinBuiltinSystemOperatorsSid equ 31
  WinBuiltinPrintOperatorsSid equ 32
  WinBuiltinBackupOperatorsSid equ 33
  WinBuiltinReplicatorSid equ 34
  WinBuiltinPreWindows2000CompatibleAccessSid equ 35
  WinBuiltinRemoteDesktopUsersSid equ 36
  WinBuiltinNetworkConfigurationOperatorsSid equ 37
  WinAccountAdministratorSid equ 38
  WinAccountGuestSid equ 39
  WinAccountKrbtgtSid equ 40
  WinAccountDomainAdminsSid equ 41
  WinAccountDomainUsersSid equ 42
  WinAccountDomainGuestsSid equ 43
  WinAccountComputersSid equ 44
  WinAccountControllersSid equ 45
  WinAccountCertAdminsSid equ 46
  WinAccountSchemaAdminsSid equ 47
  WinAccountEnterpriseAdminsSid equ 48
  WinAccountPolicyAdminsSid equ 49
  WinAccountRasAndIasServersSid equ 50
  WinNTLMAuthenticationSid equ 51
  WinDigestAuthenticationSid equ 52
  WinSChannelAuthenticationSid equ 53
  WinThisOrganizationSid equ 54
  WinOtherOrganizationSid equ 55
  WinBuiltinIncomingForestTrustBuildersSid equ 56
  WinBuiltinPerfMonitoringUsersSid equ 57
  WinBuiltinPerfLoggingUsersSid equ 58
  WinBuiltinAuthorizationAccessSid equ 59
  WinBuiltinTerminalServerLicenseServersSid equ 60
  WinBuiltinDCOMUsersSid equ 61
  WinBuiltinIUsersSid equ 62
  WinIUserSid equ 63
  WinBuiltinCryptoOperatorsSid equ 64
  WinUntrustedLabelSid equ 65
  WinLowLabelSid equ 66
  WinMediumLabelSid equ 67
  WinHighLabelSid equ 68
  WinSystemLabelSid equ 69
  WinWriteRestrictedCodeSid equ 70
  WinCreatorOwnerRightsSid equ 71
  WinCacheablePrincipalsGroupSid equ 72
  WinNonCacheablePrincipalsGroupSid equ 73
  WinEnterpriseReadonlyControllersSid equ 74
  WinAccountReadonlyControllersSid equ 75
  WinBuiltinEventLogReadersGroup equ 76
  WinNewEnterpriseReadonlyControllersSid equ 77
  WinBuiltinCertSvcDComAccessGroup equ 78
  WinMediumPlusLabelSid equ 79
  WinLocalLogonSid equ 80
  WinConsoleLogonSid equ 81
  WinThisOrganizationCertificateSid equ 82
  WinApplicationPackageAuthoritySid equ 83
  WinBuiltinAnyPackageSid equ 84
  WinCapabilityInternetClientSid equ 85
  WinCapabilityInternetClientServerSid equ 86
  WinCapabilityPrivateNetworkClientServerSid equ 87
  WinCapabilityPicturesLibrarySid equ 88
  WinCapabilityVideosLibrarySid equ 89
  WinCapabilityMusicLibrarySid equ 90
  WinCapabilityDocumentsLibrarySid equ 91
  WinCapabilitySharedUserCertificatesSid equ 92
  WinCapabilityEnterpriseAuthenticationSid equ 93
  WinCapabilityRemovableStorageSid equ 94
  WinBuiltinRDSRemoteAccessServersSid equ 95
  WinBuiltinRDSEndpointServersSid equ 96
  WinBuiltinRDSManagementServersSid equ 97
  WinUserModeDriversSid equ 98
  WinBuiltinHyperVAdminsSid equ 99
  WinAccountCloneableControllersSid equ 100
  WinBuiltinAccessControlAssistanceOperatorsSid equ 101
  WinBuiltinRemoteManagementUsersSid equ 102
  WinAuthenticationAuthorityAssertedSid equ 103
  WinAuthenticationServiceAssertedSid equ 104
  WinLocalAccountSid equ 105
  WinLocalAccountAndAdministratorSid equ 106
  WinAccountProtectedUsersSid equ 107
  WinCapabilityAppointmentsSid equ 108
  WinCapabilityContactsSid equ 109
  WinAccountDefaultSystemManagedSid equ 110
  WinBuiltinDefaultSystemManagedGroupSid equ 111
  WinBuiltinStorageReplicaAdminsSid equ 112
  WinAccountKeyAdminsSid equ 113
  WinAccountEnterpriseKeyAdminsSid equ 114
  WinAuthenticationKeyTrustSid equ 115
  WinAuthenticationKeyPropertyMFASid equ 116
  WinAuthenticationKeyPropertyAttestationSid equ 117
  WinAuthenticationFreshKeyAuthSid equ 118
  WinBuiltinDeviceOwnersSid equ 119
  SYSTEM_LUID equ { 3e7h, 0h }
  ANONYMOUS_LOGON_LUID equ { 3e6h, 0h }
  LOCALSERVICE_LUID equ { 3e5h, 0h }
  NETWORKSERVICE_LUID equ { 3e4h, 0h }
  IUSER_LUID equ { 3e3h, 0h }
  SE_GROUP_MANDATORY equ 00000001h
  SE_GROUP_ENABLED_BY_DEFAULT equ 00000002h
  SE_GROUP_ENABLED equ 00000004h
  SE_GROUP_OWNER equ 00000008h
  SE_GROUP_USE_FOR_DENY_ONLY equ 00000010h
  SE_GROUP_INTEGRITY equ 00000020h
  SE_GROUP_INTEGRITY_ENABLED equ 00000040h
  SE_GROUP_LOGON_ID equ 0C0000000h
  SE_GROUP_RESOURCE equ 20000000h
  SE_GROUP_VALID_ATTRIBUTES equ <(SE_GROUP_MANDATORY or SE_GROUP_ENABLED_BY_DEFAULT or SE_GROUP_ENABLED or SE_GROUP_OWNER or SE_GROUP_USE_FOR_DENY_ONLY or SE_GROUP_LOGON_ID or SE_GROUP_RESOURCE or SE_GROUP_INTEGRITY or SE_GROUP_INTEGRITY_ENABLED)>
  ACL_REVISION equ 2
  ACL_REVISION_DS equ 4
  ACL_REVISION1 equ 1
  MIN_ACL_REVISION equ <ACL_REVISION2>
  ACL_REVISION2 equ 2
  ACL_REVISION3 equ 3
  ACL_REVISION4 equ 4
  MAX_ACL_REVISION equ <ACL_REVISION4>
  ACL struct
    AclRevision BYTE ?
    Sbz1 BYTE ?
    AclSize WORD ?
    AceCount WORD ?
    Sbz2 WORD ?
  ACL ends
  _ACL typedef ACL
  PACL typedef ptr ACL
  ACE_HEADER struct
    AceType BYTE ?
    AceFlags BYTE ?
    AceSize WORD ?
  ACE_HEADER ends
  _ACE_HEADER typedef ACE_HEADER
  PACE_HEADER typedef ptr ACE_HEADER
  ACCESS_MIN_MS_ACE_TYPE equ 0h
  ACCESS_ALLOWED_ACE_TYPE equ 0h
  ACCESS_DENIED_ACE_TYPE equ 1h
  SYSTEM_AUDIT_ACE_TYPE equ 2h
  SYSTEM_ALARM_ACE_TYPE equ 3h
  ACCESS_MAX_MS_V2_ACE_TYPE equ 3h
  ACCESS_ALLOWED_COMPOUND_ACE_TYPE equ 4h
  ACCESS_MAX_MS_V3_ACE_TYPE equ 4h
  ACCESS_MIN_MS_OBJECT_ACE_TYPE equ 5h
  ACCESS_ALLOWED_OBJECT_ACE_TYPE equ 5h
  ACCESS_DENIED_OBJECT_ACE_TYPE equ 6h
  SYSTEM_AUDIT_OBJECT_ACE_TYPE equ 7h
  SYSTEM_ALARM_OBJECT_ACE_TYPE equ 8h
  ACCESS_MAX_MS_OBJECT_ACE_TYPE equ 8h
  ACCESS_MAX_MS_V4_ACE_TYPE equ 8h
  ACCESS_MAX_MS_ACE_TYPE equ 8h
  ACCESS_ALLOWED_CALLBACK_ACE_TYPE equ 9h
  ACCESS_DENIED_CALLBACK_ACE_TYPE equ 0Ah
  ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE equ 0Bh
  ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE equ 0Ch
  SYSTEM_AUDIT_CALLBACK_ACE_TYPE equ 0Dh
  SYSTEM_ALARM_CALLBACK_ACE_TYPE equ 0Eh
  SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE equ 0Fh
  SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE equ 10h
  SYSTEM_MANDATORY_LABEL_ACE_TYPE equ 11h
  SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE equ 12h
  SYSTEM_SCOPED_POLICY_ID_ACE_TYPE equ 13h
  SYSTEM_PROCESS_TRUST_LABEL_ACE_TYPE equ 14h
  SYSTEM_ACCESS_FILTER_ACE_TYPE equ 15h
  ACCESS_MAX_MS_V5_ACE_TYPE equ 15h
  OBJECT_INHERIT_ACE equ 1h
  CONTAINER_INHERIT_ACE equ 2h
  NO_PROPAGATE_INHERIT_ACE equ 4h
  INHERIT_ONLY_ACE equ 8h
  INHERITED_ACE equ 10h
  VALID_INHERIT_FLAGS equ 1Fh
  SUCCESSFUL_ACCESS_ACE_FLAG equ 40h
  FAILED_ACCESS_ACE_FLAG equ 80h
  TRUST_PROTECTED_FILTER_ACE_FLAG equ 40h
  ACCESS_ALLOWED_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    SidStart DWORD ?
  ACCESS_ALLOWED_ACE ends
  _ACCESS_ALLOWED_ACE typedef ACCESS_ALLOWED_ACE
  PACCESS_ALLOWED_ACE typedef ptr ACCESS_ALLOWED_ACE
  ACCESS_DENIED_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    SidStart DWORD ?
  ACCESS_DENIED_ACE ends
  _ACCESS_DENIED_ACE typedef ACCESS_DENIED_ACE
  PACCESS_DENIED_ACE typedef ptr ACCESS_DENIED_ACE
  SYSTEM_AUDIT_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    SidStart DWORD ?
  SYSTEM_AUDIT_ACE ends
  _SYSTEM_AUDIT_ACE typedef SYSTEM_AUDIT_ACE
  PSYSTEM_AUDIT_ACE typedef ptr SYSTEM_AUDIT_ACE
  SYSTEM_ALARM_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    SidStart DWORD ?
  SYSTEM_ALARM_ACE ends
  _SYSTEM_ALARM_ACE typedef SYSTEM_ALARM_ACE
  PSYSTEM_ALARM_ACE typedef ptr SYSTEM_ALARM_ACE
  SYSTEM_RESOURCE_ATTRIBUTE_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    SidStart DWORD ?
  SYSTEM_RESOURCE_ATTRIBUTE_ACE ends
  _SYSTEM_RESOURCE_ATTRIBUTE_ACE typedef SYSTEM_RESOURCE_ATTRIBUTE_ACE
  PSYSTEM_RESOURCE_ATTRIBUTE_ACE typedef ptr SYSTEM_RESOURCE_ATTRIBUTE_ACE
  SYSTEM_SCOPED_POLICY_ID_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    SidStart DWORD ?
  SYSTEM_SCOPED_POLICY_ID_ACE ends
  _SYSTEM_SCOPED_POLICY_ID_ACE typedef SYSTEM_SCOPED_POLICY_ID_ACE
  PSYSTEM_SCOPED_POLICY_ID_ACE typedef ptr SYSTEM_SCOPED_POLICY_ID_ACE
  SYSTEM_MANDATORY_LABEL_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    SidStart DWORD ?
  SYSTEM_MANDATORY_LABEL_ACE ends
  _SYSTEM_MANDATORY_LABEL_ACE typedef SYSTEM_MANDATORY_LABEL_ACE
  PSYSTEM_MANDATORY_LABEL_ACE typedef ptr SYSTEM_MANDATORY_LABEL_ACE
  SYSTEM_PROCESS_TRUST_LABEL_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    SidStart DWORD ?
  SYSTEM_PROCESS_TRUST_LABEL_ACE ends
  _SYSTEM_PROCESS_TRUST_LABEL_ACE typedef SYSTEM_PROCESS_TRUST_LABEL_ACE
  PSYSTEM_PROCESS_TRUST_LABEL_ACE typedef ptr SYSTEM_PROCESS_TRUST_LABEL_ACE
  SYSTEM_ACCESS_FILTER_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    SidStart DWORD ?
  SYSTEM_ACCESS_FILTER_ACE ends
  _SYSTEM_ACCESS_FILTER_ACE typedef SYSTEM_ACCESS_FILTER_ACE
  PSYSTEM_ACCESS_FILTER_ACE typedef ptr SYSTEM_ACCESS_FILTER_ACE
  SYSTEM_MANDATORY_LABEL_NO_WRITE_UP equ 1h
  SYSTEM_MANDATORY_LABEL_NO_READ_UP equ 2h
  SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP equ 4h
  SYSTEM_MANDATORY_LABEL_VALID_MASK equ <(SYSTEM_MANDATORY_LABEL_NO_WRITE_UP or SYSTEM_MANDATORY_LABEL_NO_READ_UP or SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP)>
  SYSTEM_PROCESS_TRUST_LABEL_VALID_MASK equ 00ffffffh
  SYSTEM_PROCESS_TRUST_NOCONSTRAINT_MASK equ 0ffffffffh
  SYSTEM_ACCESS_FILTER_VALID_MASK equ 00ffffffh
  SYSTEM_ACCESS_FILTER_NOCONSTRAINT_MASK equ 0ffffffffh
  ACCESS_ALLOWED_OBJECT_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    Flags DWORD ?
    ObjectType GUID <>
    InheritedObjectType GUID <>
    SidStart DWORD ?
  ACCESS_ALLOWED_OBJECT_ACE ends
  _ACCESS_ALLOWED_OBJECT_ACE typedef ACCESS_ALLOWED_OBJECT_ACE
  PACCESS_ALLOWED_OBJECT_ACE typedef ptr ACCESS_ALLOWED_OBJECT_ACE
  ACCESS_DENIED_OBJECT_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    Flags DWORD ?
    ObjectType GUID <>
    InheritedObjectType GUID <>
    SidStart DWORD ?
  ACCESS_DENIED_OBJECT_ACE ends
  _ACCESS_DENIED_OBJECT_ACE typedef ACCESS_DENIED_OBJECT_ACE
  PACCESS_DENIED_OBJECT_ACE typedef ptr ACCESS_DENIED_OBJECT_ACE
  SYSTEM_AUDIT_OBJECT_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    Flags DWORD ?
    ObjectType GUID <>
    InheritedObjectType GUID <>
    SidStart DWORD ?
  SYSTEM_AUDIT_OBJECT_ACE ends
  _SYSTEM_AUDIT_OBJECT_ACE typedef SYSTEM_AUDIT_OBJECT_ACE
  PSYSTEM_AUDIT_OBJECT_ACE typedef ptr SYSTEM_AUDIT_OBJECT_ACE
  SYSTEM_ALARM_OBJECT_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    Flags DWORD ?
    ObjectType GUID <>
    InheritedObjectType GUID <>
    SidStart DWORD ?
  SYSTEM_ALARM_OBJECT_ACE ends
  _SYSTEM_ALARM_OBJECT_ACE typedef SYSTEM_ALARM_OBJECT_ACE
  PSYSTEM_ALARM_OBJECT_ACE typedef ptr SYSTEM_ALARM_OBJECT_ACE
  ACCESS_ALLOWED_CALLBACK_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    SidStart DWORD ?
  ACCESS_ALLOWED_CALLBACK_ACE ends
  _ACCESS_ALLOWED_CALLBACK_ACE typedef ACCESS_ALLOWED_CALLBACK_ACE
  PACCESS_ALLOWED_CALLBACK_ACE typedef ptr ACCESS_ALLOWED_CALLBACK_ACE
  ACCESS_DENIED_CALLBACK_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    SidStart DWORD ?
  ACCESS_DENIED_CALLBACK_ACE ends
  _ACCESS_DENIED_CALLBACK_ACE typedef ACCESS_DENIED_CALLBACK_ACE
  PACCESS_DENIED_CALLBACK_ACE typedef ptr ACCESS_DENIED_CALLBACK_ACE
  SYSTEM_AUDIT_CALLBACK_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    SidStart DWORD ?
  SYSTEM_AUDIT_CALLBACK_ACE ends
  _SYSTEM_AUDIT_CALLBACK_ACE typedef SYSTEM_AUDIT_CALLBACK_ACE
  PSYSTEM_AUDIT_CALLBACK_ACE typedef ptr SYSTEM_AUDIT_CALLBACK_ACE
  SYSTEM_ALARM_CALLBACK_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    SidStart DWORD ?
  SYSTEM_ALARM_CALLBACK_ACE ends
  _SYSTEM_ALARM_CALLBACK_ACE typedef SYSTEM_ALARM_CALLBACK_ACE
  PSYSTEM_ALARM_CALLBACK_ACE typedef ptr SYSTEM_ALARM_CALLBACK_ACE
  ACCESS_ALLOWED_CALLBACK_OBJECT_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    Flags DWORD ?
    ObjectType GUID <>
    InheritedObjectType GUID <>
    SidStart DWORD ?
  ACCESS_ALLOWED_CALLBACK_OBJECT_ACE ends
  _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE typedef ACCESS_ALLOWED_CALLBACK_OBJECT_ACE
  PACCESS_ALLOWED_CALLBACK_OBJECT_ACE typedef ptr ACCESS_ALLOWED_CALLBACK_OBJECT_ACE
  ACCESS_DENIED_CALLBACK_OBJECT_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    Flags DWORD ?
    ObjectType GUID <>
    InheritedObjectType GUID <>
    SidStart DWORD ?
  ACCESS_DENIED_CALLBACK_OBJECT_ACE ends
  _ACCESS_DENIED_CALLBACK_OBJECT_ACE typedef ACCESS_DENIED_CALLBACK_OBJECT_ACE
  PACCESS_DENIED_CALLBACK_OBJECT_ACE typedef ptr ACCESS_DENIED_CALLBACK_OBJECT_ACE
  SYSTEM_AUDIT_CALLBACK_OBJECT_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    Flags DWORD ?
    ObjectType GUID <>
    InheritedObjectType GUID <>
    SidStart DWORD ?
  SYSTEM_AUDIT_CALLBACK_OBJECT_ACE ends
  _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE typedef SYSTEM_AUDIT_CALLBACK_OBJECT_ACE
  PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE typedef ptr SYSTEM_AUDIT_CALLBACK_OBJECT_ACE
  SYSTEM_ALARM_CALLBACK_OBJECT_ACE struct
    Header ACE_HEADER <>
    Mask_ ACCESS_MASK ?
    Flags DWORD ?
    ObjectType GUID <>
    InheritedObjectType GUID <>
    SidStart DWORD ?
  SYSTEM_ALARM_CALLBACK_OBJECT_ACE ends
  _SYSTEM_ALARM_CALLBACK_OBJECT_ACE typedef SYSTEM_ALARM_CALLBACK_OBJECT_ACE
  PSYSTEM_ALARM_CALLBACK_OBJECT_ACE typedef ptr SYSTEM_ALARM_CALLBACK_OBJECT_ACE
  ACE_OBJECT_TYPE_PRESENT equ 1h
  ACE_INHERITED_OBJECT_TYPE_PRESENT equ 2h
  ACL_INFORMATION_CLASS typedef SDWORD
  AclRevisionInformation equ 1
  AclSizeInformation equ 2
  _ACL_INFORMATION_CLASS typedef ACL_INFORMATION_CLASS
  ACL_REVISION_INFORMATION struct
    AclRevision DWORD ?
  ACL_REVISION_INFORMATION ends
  _ACL_REVISION_INFORMATION typedef ACL_REVISION_INFORMATION
  PACL_REVISION_INFORMATION typedef ptr ACL_REVISION_INFORMATION
  ACL_SIZE_INFORMATION struct
    AceCount DWORD ?
    AclBytesInUse DWORD ?
    AclBytesFree DWORD ?
  ACL_SIZE_INFORMATION ends
  _ACL_SIZE_INFORMATION typedef ACL_SIZE_INFORMATION
  PACL_SIZE_INFORMATION typedef ptr ACL_SIZE_INFORMATION
  SECURITY_DESCRIPTOR_REVISION equ 1
  SECURITY_DESCRIPTOR_REVISION1 equ 1
  SECURITY_DESCRIPTOR_MIN_LENGTH equ <(sizeof(SECURITY_DESCRIPTOR))>
  SECURITY_DESCRIPTOR_CONTROL typedef WORD
  PSECURITY_DESCRIPTOR_CONTROL typedef ptr WORD
  SE_OWNER_DEFAULTED equ 0001h
  SE_GROUP_DEFAULTED equ 0002h
  SE_DACL_PRESENT equ 0004h
  SE_DACL_DEFAULTED equ 0008h
  SE_SACL_PRESENT equ 0010h
  SE_SACL_DEFAULTED equ 0020h
  SE_DACL_AUTO_INHERIT_REQ equ 0100h
  SE_SACL_AUTO_INHERIT_REQ equ 0200h
  SE_DACL_AUTO_INHERITED equ 0400h
  SE_SACL_AUTO_INHERITED equ 0800h
  SE_DACL_PROTECTED equ 1000h
  SE_SACL_PROTECTED equ 2000h
  SE_RM_CONTROL_VALID equ 4000h
  SE_SELF_RELATIVE equ 8000h
  SECURITY_DESCRIPTOR_RELATIVE struct
    Revision BYTE ?
    Sbz1 BYTE ?
    Control SECURITY_DESCRIPTOR_CONTROL ?
    Owner DWORD ?
    Group_ DWORD ?
    Sacl DWORD ?
    Dacl DWORD ?
  SECURITY_DESCRIPTOR_RELATIVE ends
  _SECURITY_DESCRIPTOR_RELATIVE typedef SECURITY_DESCRIPTOR_RELATIVE
  PISECURITY_DESCRIPTOR_RELATIVE typedef ptr SECURITY_DESCRIPTOR_RELATIVE
  SECURITY_DESCRIPTOR struct
    Revision BYTE ?
    Sbz1 BYTE ?
    Control SECURITY_DESCRIPTOR_CONTROL ?
    Owner PSID ?
    Group_ PSID ?
    Sacl PACL ?
    Dacl PACL ?
  SECURITY_DESCRIPTOR ends
  _SECURITY_DESCRIPTOR typedef SECURITY_DESCRIPTOR
  PISECURITY_DESCRIPTOR typedef ptr SECURITY_DESCRIPTOR
  SECURITY_OBJECT_AI_PARAMS struct
    Size_ DWORD ?
    ConstraintMask DWORD ?
  SECURITY_OBJECT_AI_PARAMS ends
  _SECURITY_OBJECT_AI_PARAMS typedef SECURITY_OBJECT_AI_PARAMS
  PSECURITY_OBJECT_AI_PARAMS typedef ptr SECURITY_OBJECT_AI_PARAMS
  OBJECT_TYPE_LIST struct
    Level WORD ?
    Sbz WORD ?
    ObjectType POINTER ?
  OBJECT_TYPE_LIST ends
  _OBJECT_TYPE_LIST typedef OBJECT_TYPE_LIST
  POBJECT_TYPE_LIST typedef ptr OBJECT_TYPE_LIST
  ACCESS_OBJECT_GUID equ 0
  ACCESS_PROPERTY_SET_GUID equ 1
  ACCESS_PROPERTY_GUID equ 2
  ACCESS_MAX_LEVEL equ 4
  AUDIT_EVENT_TYPE typedef SDWORD
  AuditEventObjectAccess equ 0
  AuditEventDirectoryServiceAccess equ 1
  _AUDIT_EVENT_TYPE typedef AUDIT_EVENT_TYPE
  PAUDIT_EVENT_TYPE typedef ptr AUDIT_EVENT_TYPE
  AUDIT_ALLOW_NO_PRIVILEGE equ 1h
  ACCESS_DS_SOURCE_A equ <"DS">
  ACCESS_DS_SOURCE_W equ <L("DS")>
  ACCESS_DS_OBJECT_TYPE_NAME_A equ <"Directory Service Object">
  ACCESS_DS_OBJECT_TYPE_NAME_W equ <L("Directory Service Object")>
  SE_PRIVILEGE_ENABLED_BY_DEFAULT equ 00000001h
  SE_PRIVILEGE_ENABLED equ 00000002h
  SE_PRIVILEGE_REMOVED equ 00000004h
  SE_PRIVILEGE_USED_FOR_ACCESS equ 80000000h
  SE_PRIVILEGE_VALID_ATTRIBUTES equ <(SE_PRIVILEGE_ENABLED_BY_DEFAULT or SE_PRIVILEGE_ENABLED or SE_PRIVILEGE_REMOVED or SE_PRIVILEGE_USED_FOR_ACCESS)>
  PRIVILEGE_SET_ALL_NECESSARY equ 1
  PRIVILEGE_SET struct
    PrivilegeCount DWORD ?
    Control DWORD ?
    Privilege LUID_AND_ATTRIBUTES ANYSIZE_ARRAY dup (<>)
  PRIVILEGE_SET ends
  _PRIVILEGE_SET typedef PRIVILEGE_SET
  PPRIVILEGE_SET typedef ptr PRIVILEGE_SET
  ACCESS_REASON_TYPE_MASK equ 00ff0000h
  ACCESS_REASON_DATA_MASK equ 0000ffffh
  ACCESS_REASON_STAGING_MASK equ 80000000h
  ACCESS_REASON_EXDATA_MASK equ 7f000000h
  ACCESS_REASON_TYPE typedef SDWORD
  AccessReasonNone equ 00000000h
  AccessReasonAllowedAce equ 00010000h
  AccessReasonDeniedAce equ 00020000h
  AccessReasonAllowedParentAce equ 00030000h
  AccessReasonDeniedParentAce equ 00040000h
  AccessReasonNotGrantedByCape equ 00050000h
  AccessReasonNotGrantedByParentCape equ 00060000h
  AccessReasonNotGrantedToAppContainer equ 00070000h
  AccessReasonMissingPrivilege equ 00100000h
  AccessReasonFromPrivilege equ 00200000h
  AccessReasonIntegrityLevel equ 00300000h
  AccessReasonOwnership equ 00400000h
  AccessReasonNullDacl equ 00500000h
  AccessReasonEmptyDacl equ 00600000h
  AccessReasonNoSD equ 00700000h
  AccessReasonNoGrant equ 00800000h
  AccessReasonTrustLabel equ 00900000h
  AccessReasonFilterAce equ 00a00000h
  _ACCESS_REASON_TYPE typedef ACCESS_REASON_TYPE
  ACCESS_REASON typedef DWORD
  ACCESS_REASONS struct
    Data ACCESS_REASON 32 dup (?)
  ACCESS_REASONS ends
  _ACCESS_REASONS typedef ACCESS_REASONS
  PACCESS_REASONS typedef ptr ACCESS_REASONS
  SE_SECURITY_DESCRIPTOR_FLAG_NO_OWNER_ACE equ 00000001h
  SE_SECURITY_DESCRIPTOR_FLAG_NO_LABEL_ACE equ 00000002h
  SE_SECURITY_DESCRIPTOR_FLAG_NO_ACCESS_FILTER_ACE equ 00000004h
  SE_SECURITY_DESCRIPTOR_VALID_FLAGS equ 00000007h
  SE_SECURITY_DESCRIPTOR struct
    Size_ DWORD ?
    Flags DWORD ?
    SecurityDescriptor PSECURITY_DESCRIPTOR ?
  SE_SECURITY_DESCRIPTOR ends
  _SE_SECURITY_DESCRIPTOR typedef SE_SECURITY_DESCRIPTOR
  PSE_SECURITY_DESCRIPTOR typedef ptr SE_SECURITY_DESCRIPTOR
  SE_ACCESS_REQUEST struct
    Size_ DWORD ?
    SeSecurityDescriptor PSE_SECURITY_DESCRIPTOR ?
    DesiredAccess ACCESS_MASK ?
    PreviouslyGrantedAccess ACCESS_MASK ?
    PrincipalSelfSid PSID ?
    GenericMapping PGENERIC_MAPPING ?
    ObjectTypeListCount DWORD ?
    ObjectTypeList POBJECT_TYPE_LIST ?
  SE_ACCESS_REQUEST ends
  _SE_ACCESS_REQUEST typedef SE_ACCESS_REQUEST
  PSE_ACCESS_REQUEST typedef ptr SE_ACCESS_REQUEST
  SE_ACCESS_REPLY struct
    Size_ DWORD ?
    ResultListCount DWORD ?
    GrantedAccess PACCESS_MASK ?
    AccessStatus PDWORD ?
    AccessReason PACCESS_REASONS ?
    Privileges POINTER ?
  SE_ACCESS_REPLY ends
  _SE_ACCESS_REPLY typedef SE_ACCESS_REPLY
  PSE_ACCESS_REPLY typedef ptr SE_ACCESS_REPLY
  SE_CREATE_TOKEN_NAME equ <TEXT("SeCreateTokenPrivilege")>
  SE_ASSIGNPRIMARYTOKEN_NAME equ <TEXT("SeAssignPrimaryTokenPrivilege")>
  SE_LOCK_MEMORY_NAME equ <TEXT("SeLockMemoryPrivilege")>
  SE_INCREASE_QUOTA_NAME equ <TEXT("SeIncreaseQuotaPrivilege")>
  SE_UNSOLICITED_INPUT_NAME equ <TEXT("SeUnsolicitedInputPrivilege")>
  SE_MACHINE_ACCOUNT_NAME equ <TEXT("SeMachineAccountPrivilege")>
  SE_TCB_NAME equ <TEXT("SeTcbPrivilege")>
  SE_SECURITY_NAME equ <TEXT("SeSecurityPrivilege")>
  SE_TAKE_OWNERSHIP_NAME equ <TEXT("SeTakeOwnershipPrivilege")>
  SE_LOAD_DRIVER_NAME equ <TEXT("SeLoadDriverPrivilege")>
  SE_SYSTEM_PROFILE_NAME equ <TEXT("SeSystemProfilePrivilege")>
  SE_SYSTEMTIME_NAME equ <TEXT("SeSystemtimePrivilege")>
  SE_PROF_SINGLE_PROCESS_NAME equ <TEXT("SeProfileSingleProcessPrivilege")>
  SE_INC_BASE_PRIORITY_NAME equ <TEXT("SeIncreaseBasePriorityPrivilege")>
  SE_CREATE_PAGEFILE_NAME equ <TEXT("SeCreatePagefilePrivilege")>
  SE_CREATE_PERMANENT_NAME equ <TEXT("SeCreatePermanentPrivilege")>
  SE_BACKUP_NAME equ <TEXT("SeBackupPrivilege")>
  SE_RESTORE_NAME equ <TEXT("SeRestorePrivilege")>
  SE_SHUTDOWN_NAME equ <TEXT("SeShutdownPrivilege")>
  SE_DEBUG_NAME equ <TEXT("SeDebugPrivilege")>
  SE_AUDIT_NAME equ <TEXT("SeAuditPrivilege")>
  SE_SYSTEM_ENVIRONMENT_NAME equ <TEXT("SeSystemEnvironmentPrivilege")>
  SE_CHANGE_NOTIFY_NAME equ <TEXT("SeChangeNotifyPrivilege")>
  SE_REMOTE_SHUTDOWN_NAME equ <TEXT("SeRemoteShutdownPrivilege")>
  SE_UNDOCK_NAME equ <TEXT("SeUndockPrivilege")>
  SE_SYNC_AGENT_NAME equ <TEXT("SeSyncAgentPrivilege")>
  SE_ENABLE_DELEGATION_NAME equ <TEXT("SeEnableDelegationPrivilege")>
  SE_MANAGE_VOLUME_NAME equ <TEXT("SeManageVolumePrivilege")>
  SE_IMPERSONATE_NAME equ <TEXT("SeImpersonatePrivilege")>
  SE_CREATE_GLOBAL_NAME equ <TEXT("SeCreateGlobalPrivilege")>
  SE_TRUSTED_CREDMAN_ACCESS_NAME equ <TEXT("SeTrustedCredManAccessPrivilege")>
  SE_RELABEL_NAME equ <TEXT("SeRelabelPrivilege")>
  SE_INC_WORKING_SET_NAME equ <TEXT("SeIncreaseWorkingSetPrivilege")>
  SE_TIME_ZONE_NAME equ <TEXT("SeTimeZonePrivilege")>
  SE_CREATE_SYMBOLIC_LINK_NAME equ <TEXT("SeCreateSymbolicLinkPrivilege")>
  SE_DELEGATE_SESSION_USER_IMPERSONATE_NAME equ <TEXT("SeDelegateSessionUserImpersonatePrivilege")>
  SE_ACTIVATE_AS_USER_CAPABILITY equ <L("activateAsUser")>
  SE_CONSTRAINED_IMPERSONATION_CAPABILITY equ <L("constrainedImpersonation")>
  SE_SESSION_IMPERSONATION_CAPABILITY equ <L("sessionImpersonation")>
  SE_MUMA_CAPABILITY equ <L("muma")>
  SE_DEVELOPMENT_MODE_NETWORK_CAPABILITY equ <L("developmentModeNetwork")>
  SECURITY_IMPERSONATION_LEVEL typedef SDWORD
  SecurityAnonymous equ 0
  SecurityIdentification equ 1
  SecurityImpersonation equ 2
  SecurityDelegation equ 3
  _SECURITY_IMPERSONATION_LEVEL typedef SECURITY_IMPERSONATION_LEVEL
  PSECURITY_IMPERSONATION_LEVEL typedef ptr SECURITY_IMPERSONATION_LEVEL
  SECURITY_MAX_IMPERSONATION_LEVEL equ <SecurityDelegation>
  SECURITY_MIN_IMPERSONATION_LEVEL equ <SecurityAnonymous>
  DEFAULT_IMPERSONATION_LEVEL equ <SecurityImpersonation>
  VALID_IMPERSONATION_LEVEL macro L
    exitm <(((L) >= SECURITY_MIN_IMPERSONATION_LEVEL) and ((L) <= SECURITY_MAX_IMPERSONATION_LEVEL))>
  endm
  TOKEN_ASSIGN_PRIMARY equ 0001h
  TOKEN_DUPLICATE equ 0002h
  TOKEN_IMPERSONATE equ 0004h
  TOKEN_QUERY equ 0008h
  TOKEN_QUERY_SOURCE equ 0010h
  TOKEN_ADJUST_PRIVILEGES equ 0020h
  TOKEN_ADJUST_GROUPS equ 0040h
  TOKEN_ADJUST_DEFAULT equ 0080h
  TOKEN_ADJUST_SESSIONID equ 0100h
  TOKEN_ALL_ACCESS_P equ <(STANDARD_RIGHTS_REQUIRED or TOKEN_ASSIGN_PRIMARY or TOKEN_DUPLICATE or TOKEN_IMPERSONATE or TOKEN_QUERY or TOKEN_QUERY_SOURCE or TOKEN_ADJUST_PRIVILEGES or TOKEN_ADJUST_GROUPS or TOKEN_ADJUST_DEFAULT)>
  if ((Defined(_WIN32_WINNT) and (_WIN32_WINNT gt 0400h)) or ( not Defined(_WIN32_WINNT)))
    TOKEN_ALL_ACCESS equ <(TOKEN_ALL_ACCESS_P or TOKEN_ADJUST_SESSIONID)>
  else
    TOKEN_ALL_ACCESS equ <(TOKEN_ALL_ACCESS_P)>
  endif
  TOKEN_READ equ <(STANDARD_RIGHTS_READ or TOKEN_QUERY)>
  TOKEN_WRITE equ <(STANDARD_RIGHTS_WRITE or TOKEN_ADJUST_PRIVILEGES or TOKEN_ADJUST_GROUPS or TOKEN_ADJUST_DEFAULT)>
  TOKEN_EXECUTE equ <(STANDARD_RIGHTS_EXECUTE)>
  TOKEN_TRUST_CONSTRAINT_MASK equ <(STANDARD_RIGHTS_READ or TOKEN_QUERY or TOKEN_QUERY_SOURCE)>
  if (NTDDI_VERSION ge NTDDI_WIN8)
    TOKEN_ACCESS_PSEUDO_HANDLE_WIN8 equ <(TOKEN_QUERY or TOKEN_QUERY_SOURCE)>
    TOKEN_ACCESS_PSEUDO_HANDLE equ <TOKEN_ACCESS_PSEUDO_HANDLE_WIN8>
  endif
  TOKEN_TYPE typedef SDWORD
  TokenPrimary equ 1
  TokenImpersonation equ 2
  _TOKEN_TYPE typedef TOKEN_TYPE
  PTOKEN_TYPE typedef ptr TOKEN_TYPE
  TOKEN_ELEVATION_TYPE typedef SDWORD
  TokenElevationTypeDefault equ 1
  TokenElevationTypeFull equ 2
  TokenElevationTypeLimited equ 3
  _TOKEN_ELEVATION_TYPE typedef TOKEN_ELEVATION_TYPE
  PTOKEN_ELEVATION_TYPE typedef ptr TOKEN_ELEVATION_TYPE
  TOKEN_INFORMATION_CLASS typedef SDWORD
  TokenUser equ 1
  TokenGroups equ 2
  TokenPrivileges equ 3
  TokenOwner equ 4
  TokenPrimaryGroup equ 5
  TokenDefaultDacl equ 6
  TokenSource equ 7
  TokenType equ 8
  TokenImpersonationLevel equ 9
  TokenStatistics equ 10
  TokenRestrictedSids equ 11
  TokenSessionId equ 12
  TokenGroupsAndPrivileges equ 13
  TokenSessionReference equ 14
  TokenSandBoxInert equ 15
  TokenAuditPolicy equ 16
  TokenOrigin equ 17
  TokenElevationType equ 18
  TokenLinkedToken equ 19
  TokenElevation equ 20
  TokenHasRestrictions equ 21
  TokenAccessInformation equ 22
  TokenVirtualizationAllowed equ 23
  TokenVirtualizationEnabled equ 24
  TokenIntegrityLevel equ 25
  TokenUIAccess equ 26
  TokenMandatoryPolicy equ 27
  TokenLogonSid equ 28
  TokenIsAppContainer equ 29
  TokenCapabilities equ 30
  TokenAppContainerSid equ 31
  TokenAppContainerNumber equ 32
  TokenUserClaimAttributes equ 33
  TokenDeviceClaimAttributes equ 34
  TokenRestrictedUserClaimAttributes equ 35
  TokenRestrictedDeviceClaimAttributes equ 36
  TokenDeviceGroups equ 37
  TokenRestrictedDeviceGroups equ 38
  TokenSecurityAttributes equ 39
  TokenIsRestricted equ 40
  TokenProcessTrustLevel equ 41
  TokenPrivateNameSpace equ 42
  TokenSingletonAttributes equ 43
  TokenBnoIsolation equ 44
  TokenChildProcessFlags equ 45
  MaxTokenInfoClass equ 46
  _TOKEN_INFORMATION_CLASS typedef TOKEN_INFORMATION_CLASS
  PTOKEN_INFORMATION_CLASS typedef ptr TOKEN_INFORMATION_CLASS
  TOKEN_USER struct
    User SID_AND_ATTRIBUTES <>
  TOKEN_USER ends
  _TOKEN_USER typedef TOKEN_USER
  PTOKEN_USER typedef ptr TOKEN_USER
  ifndef MIDL_PASS
    SE_TOKEN_USER struct
      union
        TokenUser_ TOKEN_USER <>
        User SID_AND_ATTRIBUTES <>
      ends
      union DUMMYUNIONNAME2
        Sid SID <>
        Buffer BYTE SECURITY_MAX_SID_SIZE dup (?)
      ends
    SE_TOKEN_USER ends
    _SE_TOKEN_USER typedef SE_TOKEN_USER
    PSE_TOKEN_USER typedef SE_TOKEN_USER
    TOKEN_USER_MAX_SIZE equ <(sizeof(TOKEN_USER) + SECURITY_MAX_SID_SIZE)>
  endif
  TOKEN_GROUPS struct
    GroupCount DWORD ?
    ifdef MIDL_PASS
      ;[...]
    else
      Groups SID_AND_ATTRIBUTES ANYSIZE_ARRAY dup (<>)
    endif
  TOKEN_GROUPS ends
  _TOKEN_GROUPS typedef TOKEN_GROUPS
  PTOKEN_GROUPS typedef ptr TOKEN_GROUPS
  TOKEN_PRIVILEGES struct
    PrivilegeCount DWORD ?
    Privileges LUID_AND_ATTRIBUTES ANYSIZE_ARRAY dup (<>)
  TOKEN_PRIVILEGES ends
  _TOKEN_PRIVILEGES typedef TOKEN_PRIVILEGES
  PTOKEN_PRIVILEGES typedef ptr TOKEN_PRIVILEGES
  TOKEN_OWNER struct
    Owner PSID ?
  TOKEN_OWNER ends
  _TOKEN_OWNER typedef TOKEN_OWNER
  PTOKEN_OWNER typedef ptr TOKEN_OWNER
  ifndef MIDL_PASS
    TOKEN_OWNER_MAX_SIZE equ <(sizeof(TOKEN_OWNER) + SECURITY_MAX_SID_SIZE)>
  endif
  TOKEN_PRIMARY_GROUP struct
    PrimaryGroup PSID ?
  TOKEN_PRIMARY_GROUP ends
  _TOKEN_PRIMARY_GROUP typedef TOKEN_PRIMARY_GROUP
  PTOKEN_PRIMARY_GROUP typedef ptr TOKEN_PRIMARY_GROUP
  TOKEN_DEFAULT_DACL struct
    DefaultDacl PACL ?
  TOKEN_DEFAULT_DACL ends
  _TOKEN_DEFAULT_DACL typedef TOKEN_DEFAULT_DACL
  PTOKEN_DEFAULT_DACL typedef ptr TOKEN_DEFAULT_DACL
  TOKEN_USER_CLAIMS struct
    UserClaims PCLAIMS_BLOB ?
  TOKEN_USER_CLAIMS ends
  _TOKEN_USER_CLAIMS typedef TOKEN_USER_CLAIMS
  PTOKEN_USER_CLAIMS typedef ptr TOKEN_USER_CLAIMS
  TOKEN_DEVICE_CLAIMS struct
    DeviceClaims PCLAIMS_BLOB ?
  TOKEN_DEVICE_CLAIMS ends
  _TOKEN_DEVICE_CLAIMS typedef TOKEN_DEVICE_CLAIMS
  PTOKEN_DEVICE_CLAIMS typedef ptr TOKEN_DEVICE_CLAIMS
  TOKEN_GROUPS_AND_PRIVILEGES struct
    SidCount DWORD ?
    SidLength DWORD ?
    Sids PSID_AND_ATTRIBUTES ?
    RestrictedSidCount DWORD ?
    RestrictedSidLength DWORD ?
    RestrictedSids PSID_AND_ATTRIBUTES ?
    PrivilegeCount DWORD ?
    PrivilegeLength DWORD ?
    Privileges PLUID_AND_ATTRIBUTES ?
    AuthenticationId LUID <>
  TOKEN_GROUPS_AND_PRIVILEGES ends
  _TOKEN_GROUPS_AND_PRIVILEGES typedef TOKEN_GROUPS_AND_PRIVILEGES
  PTOKEN_GROUPS_AND_PRIVILEGES typedef ptr TOKEN_GROUPS_AND_PRIVILEGES
  TOKEN_LINKED_TOKEN struct
    LinkedToken HANDLE ?
  TOKEN_LINKED_TOKEN ends
  _TOKEN_LINKED_TOKEN typedef TOKEN_LINKED_TOKEN
  PTOKEN_LINKED_TOKEN typedef ptr TOKEN_LINKED_TOKEN
  TOKEN_ELEVATION struct
    TokenIsElevated DWORD ?
  TOKEN_ELEVATION ends
  _TOKEN_ELEVATION typedef TOKEN_ELEVATION
  PTOKEN_ELEVATION typedef ptr TOKEN_ELEVATION
  TOKEN_MANDATORY_LABEL struct
    Label_ SID_AND_ATTRIBUTES <>
  TOKEN_MANDATORY_LABEL ends
  _TOKEN_MANDATORY_LABEL typedef TOKEN_MANDATORY_LABEL
  PTOKEN_MANDATORY_LABEL typedef ptr TOKEN_MANDATORY_LABEL
  TOKEN_MANDATORY_POLICY_OFF equ 0h
  TOKEN_MANDATORY_POLICY_NO_WRITE_UP equ 1h
  TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN equ 2h
  TOKEN_MANDATORY_POLICY_VALID_MASK equ <(TOKEN_MANDATORY_POLICY_NO_WRITE_UP or TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN)>
  ifndef MIDL_PASS
    TOKEN_INTEGRITY_LEVEL_MAX_SIZE equ ((((sizeof(TOKEN_MANDATORY_LABEL)) + sizeof(PVOID) - 1) and not (sizeof(PVOID) - 1)) + SECURITY_MAX_SID_SIZE)
  endif
  TOKEN_MANDATORY_POLICY struct
    Policy DWORD ?
  TOKEN_MANDATORY_POLICY ends
  _TOKEN_MANDATORY_POLICY typedef TOKEN_MANDATORY_POLICY
  PTOKEN_MANDATORY_POLICY typedef ptr TOKEN_MANDATORY_POLICY
  PSECURITY_ATTRIBUTES_OPAQUE typedef PVOID
  TOKEN_ACCESS_INFORMATION struct
    SidHash PSID_AND_ATTRIBUTES_HASH ?
    RestrictedSidHash PSID_AND_ATTRIBUTES_HASH ?
    Privileges PTOKEN_PRIVILEGES ?
    AuthenticationId LUID <>
    TokenType TOKEN_TYPE ?
    ImpersonationLevel SECURITY_IMPERSONATION_LEVEL ?
    MandatoryPolicy TOKEN_MANDATORY_POLICY <>
    Flags DWORD ?
    AppContainerNumber DWORD ?
    PackageSid PSID ?
    CapabilitiesHash PSID_AND_ATTRIBUTES_HASH ?
    TrustLevelSid PSID ?
    SecurityAttributes PSECURITY_ATTRIBUTES_OPAQUE ?
  TOKEN_ACCESS_INFORMATION ends
  _TOKEN_ACCESS_INFORMATION typedef TOKEN_ACCESS_INFORMATION
  PTOKEN_ACCESS_INFORMATION typedef ptr TOKEN_ACCESS_INFORMATION
  POLICY_AUDIT_SUBCATEGORY_COUNT equ 59
  TOKEN_AUDIT_POLICY struct
    PerUserPolicy BYTE ((POLICY_AUDIT_SUBCATEGORY_COUNT) shr 1) + 1 dup (?)
  TOKEN_AUDIT_POLICY ends
  _TOKEN_AUDIT_POLICY typedef TOKEN_AUDIT_POLICY
  PTOKEN_AUDIT_POLICY typedef ptr TOKEN_AUDIT_POLICY
  TOKEN_SOURCE_LENGTH equ 8
  TOKEN_SOURCE struct
    SourceName CHAR TOKEN_SOURCE_LENGTH dup (?)
    SourceIdentifier LUID <>
  TOKEN_SOURCE ends
  _TOKEN_SOURCE typedef TOKEN_SOURCE
  PTOKEN_SOURCE typedef ptr TOKEN_SOURCE
  TOKEN_STATISTICS struct
    TokenId LUID <>
    AuthenticationId LUID <>
    ExpirationTime LARGE_INTEGER <>
    TokenType TOKEN_TYPE ?
    ImpersonationLevel SECURITY_IMPERSONATION_LEVEL ?
    DynamicCharged DWORD ?
    DynamicAvailable DWORD ?
    GroupCount DWORD ?
    PrivilegeCount DWORD ?
    ModifiedId LUID <>
  TOKEN_STATISTICS ends
  _TOKEN_STATISTICS typedef TOKEN_STATISTICS
  PTOKEN_STATISTICS typedef ptr TOKEN_STATISTICS
  TOKEN_CONTROL struct
    TokenId LUID <>
    AuthenticationId LUID <>
    ModifiedId LUID <>
    TokenSource_ TOKEN_SOURCE <>
  TOKEN_CONTROL ends
  _TOKEN_CONTROL typedef TOKEN_CONTROL
  PTOKEN_CONTROL typedef ptr TOKEN_CONTROL
  TOKEN_ORIGIN struct
    OriginatingLogonSession LUID <>
  TOKEN_ORIGIN ends
  _TOKEN_ORIGIN typedef TOKEN_ORIGIN
  PTOKEN_ORIGIN typedef ptr TOKEN_ORIGIN
  MANDATORY_LEVEL typedef SDWORD
  MandatoryLevelUntrusted equ 0
  MandatoryLevelLow equ 1
  MandatoryLevelMedium equ 2
  MandatoryLevelHigh equ 3
  MandatoryLevelSystem equ 4
  MandatoryLevelSecureProcess equ 5
  MandatoryLevelCount equ 6
  _MANDATORY_LEVEL typedef MANDATORY_LEVEL
  PMANDATORY_LEVEL typedef ptr MANDATORY_LEVEL
  TOKEN_APPCONTAINER_INFORMATION struct
    TokenAppContainer PSID ?
  TOKEN_APPCONTAINER_INFORMATION ends
  _TOKEN_APPCONTAINER_INFORMATION typedef TOKEN_APPCONTAINER_INFORMATION
  PTOKEN_APPCONTAINER_INFORMATION typedef ptr TOKEN_APPCONTAINER_INFORMATION
  ifndef MIDL_PASS
    TOKEN_APPCONTAINER_SID_MAX_SIZE equ <(sizeof(TOKEN_APPCONTAINER_INFORMATION) + SECURITY_MAX_SID_SIZE)>
  endif
  TOKEN_SID_INFORMATION struct
    Sid PSID ?
  TOKEN_SID_INFORMATION ends
  _TOKEN_SID_INFORMATION typedef TOKEN_SID_INFORMATION
  PTOKEN_SID_INFORMATION typedef ptr TOKEN_SID_INFORMATION
  TOKEN_BNO_ISOLATION_INFORMATION struct
    IsolationPrefix PWSTR ?
    IsolationEnabled BOOLEAN ?
  TOKEN_BNO_ISOLATION_INFORMATION ends
  _TOKEN_BNO_ISOLATION_INFORMATION typedef TOKEN_BNO_ISOLATION_INFORMATION
  PTOKEN_BNO_ISOLATION_INFORMATION typedef ptr TOKEN_BNO_ISOLATION_INFORMATION
  CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID equ 00h
  CLAIM_SECURITY_ATTRIBUTE_TYPE_INT64 equ 01h
  CLAIM_SECURITY_ATTRIBUTE_TYPE_UINT64 equ 02h
  CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING equ 03h
  CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE struct
    Version DWORD64 ?
    Name_ PWSTR ?
  CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE ends
  _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE typedef CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE
  PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE typedef ptr CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE
  CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN equ 04h
  CLAIM_SECURITY_ATTRIBUTE_TYPE_SID equ 05h
  CLAIM_SECURITY_ATTRIBUTE_TYPE_BOOLEAN equ 06h
  CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE struct
    pValue PVOID ?
    ValueLength DWORD ?
  CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE ends
  _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE typedef CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
  PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE typedef ptr CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
  CLAIM_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING equ 10h
  CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE equ 0001h
  CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE equ 0002h
  CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY equ 0004h
  CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT equ 0008h
  CLAIM_SECURITY_ATTRIBUTE_DISABLED equ 0010h
  CLAIM_SECURITY_ATTRIBUTE_MANDATORY equ 0020h
  CLAIM_SECURITY_ATTRIBUTE_VALID_FLAGS equ <>
  ;(CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE or CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE or
  ;CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY or CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT or
  ;CLAIM_SECURITY_ATTRIBUTE_DISABLED or CLAIM_SECURITY_ATTRIBUTE_MANDATORY)
  CLAIM_SECURITY_ATTRIBUTE_CUSTOM_FLAGS equ 0FFFF0000h
  CLAIM_SECURITY_ATTRIBUTE_V1 struct
    Name_ PWSTR ?
    ValueType WORD ?
    Reserved WORD ?
    Flags DWORD ?
    ValueCount DWORD ?
    union Values
      pInt64 PLONG64 ?
      pUint64 PDWORD64 ?
      ppString POINTER ?
      pFqbn PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE ?
      pOctetString PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE ?
    ends
  CLAIM_SECURITY_ATTRIBUTE_V1 ends
  _CLAIM_SECURITY_ATTRIBUTE_V1 typedef CLAIM_SECURITY_ATTRIBUTE_V1
  PCLAIM_SECURITY_ATTRIBUTE_V1 typedef ptr CLAIM_SECURITY_ATTRIBUTE_V1
  CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 struct
    Name_ DWORD ?
    ValueType WORD ?
    Reserved WORD ?
    Flags DWORD ?
    ValueCount DWORD ?
    union Values
      pInt64 DWORD ANYSIZE_ARRAY dup (?)
      pUint64 DWORD ANYSIZE_ARRAY dup (?)
      ppString DWORD ANYSIZE_ARRAY dup (?)
      pFqbn DWORD ANYSIZE_ARRAY dup (?)
      pOctetString DWORD ANYSIZE_ARRAY dup (?)
    ends
  CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 ends
  _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 typedef CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1
  PCLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 typedef ptr CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1
  CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1 equ 1
  CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION equ <CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1>
  CLAIM_SECURITY_ATTRIBUTES_INFORMATION struct
    Version WORD ?
    Reserved WORD ?
    AttributeCount DWORD ?
    union Attribute
      pAttributeV1 PCLAIM_SECURITY_ATTRIBUTE_V1 ?
    ends
  CLAIM_SECURITY_ATTRIBUTES_INFORMATION ends
  _CLAIM_SECURITY_ATTRIBUTES_INFORMATION typedef CLAIM_SECURITY_ATTRIBUTES_INFORMATION
  PCLAIM_SECURITY_ATTRIBUTES_INFORMATION typedef ptr CLAIM_SECURITY_ATTRIBUTES_INFORMATION
  SECURITY_DYNAMIC_TRACKING equ <(TRUE)>
  SECURITY_STATIC_TRACKING equ <(FALSE)>
  SECURITY_CONTEXT_TRACKING_MODE typedef BOOLEAN
  PSECURITY_CONTEXT_TRACKING_MODE typedef ptr BOOLEAN
  SECURITY_QUALITY_OF_SERVICE struct
    Length_ DWORD ?
    ImpersonationLevel SECURITY_IMPERSONATION_LEVEL ?
    ContextTrackingMode SECURITY_CONTEXT_TRACKING_MODE ?
    EffectiveOnly BOOLEAN ?
  SECURITY_QUALITY_OF_SERVICE ends
  _SECURITY_QUALITY_OF_SERVICE typedef SECURITY_QUALITY_OF_SERVICE
  PSECURITY_QUALITY_OF_SERVICE typedef ptr SECURITY_QUALITY_OF_SERVICE
  SE_IMPERSONATION_STATE struct
    Token PACCESS_TOKEN ?
    CopyOnOpen BOOLEAN ?
    EffectiveOnly BOOLEAN ?
    Level SECURITY_IMPERSONATION_LEVEL ?
  SE_IMPERSONATION_STATE ends
  _SE_IMPERSONATION_STATE typedef SE_IMPERSONATION_STATE
  PSE_IMPERSONATION_STATE typedef ptr SE_IMPERSONATION_STATE
  DISABLE_MAX_PRIVILEGE equ 1h
  SANDBOX_INERT equ 2h
  LUA_TOKEN equ 4h
  WRITE_RESTRICTED equ 8h
  SECURITY_INFORMATION typedef DWORD
  PSECURITY_INFORMATION typedef ptr DWORD
  OWNER_SECURITY_INFORMATION equ 00000001h
  GROUP_SECURITY_INFORMATION equ 00000002h
  DACL_SECURITY_INFORMATION equ 00000004h
  SACL_SECURITY_INFORMATION equ 00000008h
  LABEL_SECURITY_INFORMATION equ 00000010h
  ATTRIBUTE_SECURITY_INFORMATION equ 00000020h
  SCOPE_SECURITY_INFORMATION equ 00000040h
  PROCESS_TRUST_LABEL_SECURITY_INFORMATION equ 00000080h
  ACCESS_FILTER_SECURITY_INFORMATION equ 00000100h
  BACKUP_SECURITY_INFORMATION equ 00010000h
  PROTECTED_DACL_SECURITY_INFORMATION equ 80000000h
  PROTECTED_SACL_SECURITY_INFORMATION equ 40000000h
  UNPROTECTED_DACL_SECURITY_INFORMATION equ 20000000h
  UNPROTECTED_SACL_SECURITY_INFORMATION equ 10000000h
  SE_SIGNING_LEVEL typedef BYTE
  PSE_SIGNING_LEVEL typedef ptr BYTE
  SE_SIGNING_LEVEL_UNCHECKED equ 00000000h
  SE_SIGNING_LEVEL_UNSIGNED equ 00000001h
  SE_SIGNING_LEVEL_ENTERPRISE equ 00000002h
  SE_SIGNING_LEVEL_CUSTOM_1 equ 00000003h
  SE_SIGNING_LEVEL_AUTHENTICODE equ 00000004h
  SE_SIGNING_LEVEL_CUSTOM_2 equ 00000005h
  SE_SIGNING_LEVEL_STORE equ 00000006h
  SE_SIGNING_LEVEL_CUSTOM_3 equ 00000007h
  SE_SIGNING_LEVEL_ANTIMALWARE equ <SE_SIGNING_LEVEL_CUSTOM_3>
  SE_SIGNING_LEVEL_MICROSOFT equ 00000008h
  SE_SIGNING_LEVEL_CUSTOM_4 equ 00000009h
  SE_SIGNING_LEVEL_CUSTOM_5 equ 0000000Ah
  SE_SIGNING_LEVEL_DYNAMIC_CODEGEN equ 0000000Bh
  SE_SIGNING_LEVEL_WINDOWS equ 0000000Ch
  SE_SIGNING_LEVEL_CUSTOM_7 equ 0000000Dh
  SE_SIGNING_LEVEL_WINDOWS_TCB equ 0000000Eh
  SE_SIGNING_LEVEL_CUSTOM_6 equ 0000000Fh
  SE_IMAGE_SIGNATURE_TYPE typedef SDWORD
  SeImageSignatureNone equ 0
  SeImageSignatureEmbedded equ 1
  SeImageSignatureCache equ 2
  SeImageSignatureCatalogCached equ 3
  SeImageSignatureCatalogNotCached equ 4
  SeImageSignatureCatalogHint equ 5
  SeImageSignaturePackageCatalog equ 6
  _SE_IMAGE_SIGNATURE_TYPE typedef SE_IMAGE_SIGNATURE_TYPE
  PSE_IMAGE_SIGNATURE_TYPE typedef ptr SE_IMAGE_SIGNATURE_TYPE
  SE_LEARNING_MODE_DATA_TYPE typedef SDWORD
  SeLearningModeInvalidType equ 0
  SeLearningModeSettings equ 1
  SeLearningModeMax equ 2
  _SE_LEARNING_MODE_DATA_TYPE typedef SE_LEARNING_MODE_DATA_TYPE
  SE_LEARNING_MODE_FLAG_PERMISSIVE equ 00000001h
  SECURITY_CAPABILITIES struct
    ifdef MIDL_PASS
      ;[...]
    else
      AppContainerSid PSID ?
      Capabilities PSID_AND_ATTRIBUTES ?
    endif
    CapabilityCount DWORD ?
    Reserved DWORD ?
  SECURITY_CAPABILITIES ends
  _SECURITY_CAPABILITIES typedef SECURITY_CAPABILITIES
  PSECURITY_CAPABILITIES typedef ptr SECURITY_CAPABILITIES
  LPSECURITY_CAPABILITIES typedef ptr SECURITY_CAPABILITIES
  PROCESS_TERMINATE equ 0001h
  PROCESS_CREATE_THREAD equ 0002h
  PROCESS_SET_SESSIONID equ 0004h
  PROCESS_VM_OPERATION equ 0008h
  PROCESS_VM_READ equ 0010h
  PROCESS_VM_WRITE equ 0020h
  PROCESS_DUP_HANDLE equ 0040h
  PROCESS_CREATE_PROCESS equ 0080h
  PROCESS_SET_QUOTA equ 0100h
  PROCESS_SET_INFORMATION equ 0200h
  PROCESS_QUERY_INFORMATION equ 0400h
  PROCESS_SUSPEND_RESUME equ 0800h
  PROCESS_QUERY_LIMITED_INFORMATION equ 1000h
  PROCESS_SET_LIMITED_INFORMATION equ 2000h
  if (NTDDI_VERSION ge NTDDI_VISTA)
    PROCESS_ALL_ACCESS equ (STANDARD_RIGHTS_REQUIRED or SYNCHRONIZE or 0FFFFh)
  else
    PROCESS_ALL_ACCESS equ (STANDARD_RIGHTS_REQUIRED or SYNCHRONIZE or 0FFFh)
  endif
  THREAD_TERMINATE equ 0001h
  THREAD_SUSPEND_RESUME equ 0002h
  THREAD_GET_CONTEXT equ 0008h
  THREAD_SET_CONTEXT equ 0010h
  THREAD_QUERY_INFORMATION equ 0040h
  THREAD_SET_INFORMATION equ 0020h
  THREAD_SET_THREAD_TOKEN equ 0080h
  THREAD_IMPERSONATE equ 0100h
  THREAD_DIRECT_IMPERSONATION equ 0200h
  THREAD_SET_LIMITED_INFORMATION equ 0400h
  THREAD_QUERY_LIMITED_INFORMATION equ 0800h
  THREAD_RESUME equ 1000h
  if (NTDDI_VERSION ge NTDDI_VISTA)
    THREAD_ALL_ACCESS equ (STANDARD_RIGHTS_REQUIRED or SYNCHRONIZE or 0FFFFh)
  else
    THREAD_ALL_ACCESS equ (STANDARD_RIGHTS_REQUIRED or SYNCHRONIZE or 3FFh)
  endif
  JOB_OBJECT_ASSIGN_PROCESS equ 0001h
  JOB_OBJECT_SET_ATTRIBUTES equ 0002h
  JOB_OBJECT_QUERY equ 0004h
  JOB_OBJECT_TERMINATE equ 0008h
  JOB_OBJECT_SET_SECURITY_ATTRIBUTES equ 0010h
  JOB_OBJECT_IMPERSONATE equ 0020h
  JOB_OBJECT_ALL_ACCESS equ (STANDARD_RIGHTS_REQUIRED or SYNCHRONIZE or 3Fh)
  JOB_SET_ARRAY struct
    JobHandle HANDLE ?
    MemberLevel DWORD ?
    Flags DWORD ?
  JOB_SET_ARRAY ends
  _JOB_SET_ARRAY typedef JOB_SET_ARRAY
  PJOB_SET_ARRAY typedef ptr JOB_SET_ARRAY
  FLS_MAXIMUM_AVAILABLE equ 128
  TLS_MINIMUM_AVAILABLE equ 64
  EXCEPTION_REGISTRATION_RECORD struct
    Next POINTER ?
    Handler PEXCEPTION_ROUTINE ?
  EXCEPTION_REGISTRATION_RECORD ends
  _EXCEPTION_REGISTRATION_RECORD typedef EXCEPTION_REGISTRATION_RECORD
  PEXCEPTION_REGISTRATION_RECORD typedef ptr EXCEPTION_REGISTRATION_RECORD
  NT_TIB struct
    ExceptionList POINTER ?
    StackBase PVOID ?
    StackLimit PVOID ?
    SubSystemTib PVOID ?
    if Defined(_MSC_EXTENSIONS)
      union
        FiberData PVOID ?
        Version DWORD ?
      ends
    else
      FiberData PVOID ?
    endif
    ArbitraryUserPointer PVOID ?
    Self POINTER ?
  NT_TIB ends
  _NT_TIB typedef NT_TIB
  PNT_TIB typedef ptr NT_TIB
  NT_TIB32 struct
    ExceptionList DWORD ?
    StackBase DWORD ?
    StackLimit DWORD ?
    SubSystemTib DWORD ?
    if Defined(_MSC_EXTENSIONS)
      union
        FiberData DWORD ?
        Version DWORD ?
      ends
    else
      FiberData DWORD ?
    endif
    ArbitraryUserPointer DWORD ?
    Self DWORD ?
  NT_TIB32 ends
  _NT_TIB32 typedef NT_TIB32
  PNT_TIB32 typedef ptr NT_TIB32
  NT_TIB64 struct
    ExceptionList DWORD64 ?
    StackBase DWORD64 ?
    StackLimit DWORD64 ?
    SubSystemTib DWORD64 ?
    if Defined(_MSC_EXTENSIONS)
      union
        FiberData DWORD64 ?
        Version DWORD ?
      ends
    else
      FiberData DWORD64 ?
    endif
    ArbitraryUserPointer DWORD64 ?
    Self DWORD64 ?
  NT_TIB64 ends
  _NT_TIB64 typedef NT_TIB64
  PNT_TIB64 typedef ptr NT_TIB64
  THREAD_DYNAMIC_CODE_ALLOW equ 1
  THREAD_BASE_PRIORITY_LOWRT equ 15
  THREAD_BASE_PRIORITY_MAX equ 2
  THREAD_BASE_PRIORITY_MIN equ -2
  THREAD_BASE_PRIORITY_IDLE equ -15
  UMS_CREATE_THREAD_ATTRIBUTES struct
    UmsVersion DWORD ?
    UmsContext PVOID ?
    UmsCompletionList PVOID ?
  UMS_CREATE_THREAD_ATTRIBUTES ends
  _UMS_CREATE_THREAD_ATTRIBUTES typedef UMS_CREATE_THREAD_ATTRIBUTES
  PUMS_CREATE_THREAD_ATTRIBUTES typedef ptr UMS_CREATE_THREAD_ATTRIBUTES
  WOW64_ARCHITECTURE_INFORMATION struct
    WOW64_ARCHITECTURE_INFORMATION_??2 record Machine_??2:16, KernelMode_??2:1, UserMode_??2:1, Native_??2:1, Process_??2:1, ReservedZero0_??2:12
    WOW64_ARCHITECTURE_INFORMATION_??2 <>
  WOW64_ARCHITECTURE_INFORMATION ends
  _WOW64_ARCHITECTURE_INFORMATION typedef WOW64_ARCHITECTURE_INFORMATION
  MEMORY_PRIORITY_LOWEST equ 0
  MEMORY_PRIORITY_VERY_LOW equ 1
  MEMORY_PRIORITY_LOW equ 2
  MEMORY_PRIORITY_MEDIUM equ 3
  MEMORY_PRIORITY_BELOW_NORMAL equ 4
  MEMORY_PRIORITY_NORMAL equ 5
  QUOTA_LIMITS struct
    PagedPoolLimit SIZE_T ?
    NonPagedPoolLimit SIZE_T ?
    MinimumWorkingSetSize SIZE_T ?
    MaximumWorkingSetSize SIZE_T ?
    PagefileLimit SIZE_T ?
    TimeLimit LARGE_INTEGER <>
  QUOTA_LIMITS ends
  _QUOTA_LIMITS typedef QUOTA_LIMITS
  PQUOTA_LIMITS typedef ptr QUOTA_LIMITS
  QUOTA_LIMITS_HARDWS_MIN_ENABLE equ 00000001h
  QUOTA_LIMITS_HARDWS_MIN_DISABLE equ 00000002h
  QUOTA_LIMITS_HARDWS_MAX_ENABLE equ 00000004h
  QUOTA_LIMITS_HARDWS_MAX_DISABLE equ 00000008h
  QUOTA_LIMITS_USE_DEFAULT_LIMITS equ 00000010h
  RATE_QUOTA_LIMIT union
    RateData DWORD ?
    struct
      DUMMYRECORDNAME_??3 record RatePercent_??3:7, Reserved0_??3:25
      DUMMYRECORDNAME_??3 <>
    ends
  RATE_QUOTA_LIMIT ends
  _RATE_QUOTA_LIMIT typedef RATE_QUOTA_LIMIT
  PRATE_QUOTA_LIMIT typedef ptr RATE_QUOTA_LIMIT
  QUOTA_LIMITS_EX struct
    PagedPoolLimit SIZE_T ?
    NonPagedPoolLimit SIZE_T ?
    MinimumWorkingSetSize SIZE_T ?
    MaximumWorkingSetSize SIZE_T ?
    PagefileLimit SIZE_T ?
    TimeLimit LARGE_INTEGER <>
    WorkingSetLimit SIZE_T ?
    Reserved2 SIZE_T ?
    Reserved3 SIZE_T ?
    Reserved4 SIZE_T ?
    Flags DWORD ?
    CpuRateLimit RATE_QUOTA_LIMIT <>
  QUOTA_LIMITS_EX ends
  _QUOTA_LIMITS_EX typedef QUOTA_LIMITS_EX
  PQUOTA_LIMITS_EX typedef ptr QUOTA_LIMITS_EX
  IO_COUNTERS struct
    ReadOperationCount ULONGLONG ?
    WriteOperationCount ULONGLONG ?
    OtherOperationCount ULONGLONG ?
    ReadTransferCount ULONGLONG ?
    WriteTransferCount ULONGLONG ?
    OtherTransferCount ULONGLONG ?
  IO_COUNTERS ends
  _IO_COUNTERS typedef IO_COUNTERS
  PIO_COUNTERS typedef ptr IO_COUNTERS
  MAX_HW_COUNTERS equ 16
  THREAD_PROFILING_FLAG_DISPATCH equ 00000001h
  HARDWARE_COUNTER_TYPE typedef SDWORD
  PMCCounter equ 0
  MaxHardwareCounterType equ 1
  _HARDWARE_COUNTER_TYPE typedef HARDWARE_COUNTER_TYPE
  PHARDWARE_COUNTER_TYPE typedef ptr HARDWARE_COUNTER_TYPE
  PROCESS_MITIGATION_POLICY typedef SDWORD
  ProcessDEPPolicy equ 0
  ProcessASLRPolicy equ 1
  ProcessDynamicCodePolicy equ 2
  ProcessStrictHandleCheckPolicy equ 3
  ProcessSystemCallDisablePolicy equ 4
  ProcessMitigationOptionsMask equ 5
  ProcessExtensionPointDisablePolicy equ 6
  ProcessControlFlowGuardPolicy equ 7
  ProcessSignaturePolicy equ 8
  ProcessFontDisablePolicy equ 9
  ProcessImageLoadPolicy equ 10
  ProcessSystemCallFilterPolicy equ 11
  ProcessPayloadRestrictionPolicy equ 12
  ProcessChildProcessPolicy equ 13
  MaxProcessMitigationPolicy equ 14
  _PROCESS_MITIGATION_POLICY typedef PROCESS_MITIGATION_POLICY
  PPROCESS_MITIGATION_POLICY typedef ptr PROCESS_MITIGATION_POLICY
  PROCESS_MITIGATION_ASLR_POLICY struct
    union
      Flags DWORD ?
      struct
        DUMMYRECORDNAME_??4 record EnableBottomUpRandomization_??4:1, EnableForceRelocateImages_??4:1, EnableHighEntropy_??4:1, DisallowStrippedImages_??4:1, ReservedFlags_??4:28
        DUMMYRECORDNAME_??4 <>
      ends
    ends
  PROCESS_MITIGATION_ASLR_POLICY ends
  _PROCESS_MITIGATION_ASLR_POLICY typedef PROCESS_MITIGATION_ASLR_POLICY
  PPROCESS_MITIGATION_ASLR_POLICY typedef ptr PROCESS_MITIGATION_ASLR_POLICY
  PROCESS_MITIGATION_DEP_POLICY struct
    union
      Flags DWORD ?
      struct
        DUMMYRECORDNAME_??5 record Enable_??5:1, DisableAtlThunkEmulation_??5:1, ReservedFlags_??5:30
        DUMMYRECORDNAME_??5 <>
      ends
    ends
    Permanent BOOLEAN ?
  PROCESS_MITIGATION_DEP_POLICY ends
  _PROCESS_MITIGATION_DEP_POLICY typedef PROCESS_MITIGATION_DEP_POLICY
  PPROCESS_MITIGATION_DEP_POLICY typedef ptr PROCESS_MITIGATION_DEP_POLICY
  PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY struct
    union
      Flags DWORD ?
      struct
        DUMMYRECORDNAME_??6 record RaiseExceptionOnInvalidHandleReference_??6:1, HandleExceptionsPermanentlyEnabled_??6:1, ReservedFlags_??6:30
        DUMMYRECORDNAME_??6 <>
      ends
    ends
  PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY ends
  _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY typedef PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY
  PPROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY typedef ptr PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY
  PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY struct
    union
      Flags DWORD ?
      struct
        DUMMYRECORDNAME_??7 record DisallowWin32kSystemCalls_??7:1, AuditDisallowWin32kSystemCalls_??7:1, ReservedFlags_??7:30
        DUMMYRECORDNAME_??7 <>
      ends
    ends
  PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY ends
  _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY typedef PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY
  PPROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY typedef ptr PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY
  PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY struct
    union
      Flags DWORD ?
      struct
        DUMMYRECORDNAME_??8 record DisableExtensionPoints_??8:1, ReservedFlags_??8:31
        DUMMYRECORDNAME_??8 <>
      ends
    ends
  PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY ends
  _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY typedef PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY
  PPROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY typedef ptr PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY
  PROCESS_MITIGATION_DYNAMIC_CODE_POLICY struct
    union
      Flags DWORD ?
      struct
        DUMMYRECORDNAME_??9 record ProhibitDynamicCode_??9:1, AllowThreadOptOut_??9:1, AllowRemoteDowngrade_??9:1, AuditProhibitDynamicCode_??9:1, ReservedFlags_??9:28
        DUMMYRECORDNAME_??9 <>
      ends
    ends
  PROCESS_MITIGATION_DYNAMIC_CODE_POLICY ends
  _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY typedef PROCESS_MITIGATION_DYNAMIC_CODE_POLICY
  PPROCESS_MITIGATION_DYNAMIC_CODE_POLICY typedef ptr PROCESS_MITIGATION_DYNAMIC_CODE_POLICY
  PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY struct
    union
      Flags DWORD ?
      struct
        DUMMYRECORDNAME_??10 record EnableControlFlowGuard_??10:1, EnableExportSuppression_??10:1, StrictMode_??10:1, ReservedFlags_??10:29
        DUMMYRECORDNAME_??10 <>
      ends
    ends
  PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY ends
  _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY typedef PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY
  PPROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY typedef ptr PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY
  PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY struct
    union
      Flags DWORD ?
      struct
        DUMMYRECORDNAME_??11 record MicrosoftSignedOnly_??11:1, StoreSignedOnly_??11:1, MitigationOptIn_??11:1, AuditMicrosoftSignedOnly_??11:1, AuditStoreSignedOnly_??11:1, ReservedFlags_??11:27
        DUMMYRECORDNAME_??11 <>
      ends
    ends
  PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY ends
  _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY typedef PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY
  PPROCESS_MITIGATION_BINARY_SIGNATURE_POLICY typedef ptr PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY
  PROCESS_MITIGATION_FONT_DISABLE_POLICY struct
    union
      Flags DWORD ?
      struct
        DUMMYRECORDNAME_??12 record DisableNonSystemFonts_??12:1, AuditNonSystemFontLoading_??12:1, ReservedFlags_??12:30
        DUMMYRECORDNAME_??12 <>
      ends
    ends
  PROCESS_MITIGATION_FONT_DISABLE_POLICY ends
  _PROCESS_MITIGATION_FONT_DISABLE_POLICY typedef PROCESS_MITIGATION_FONT_DISABLE_POLICY
  PPROCESS_MITIGATION_FONT_DISABLE_POLICY typedef ptr PROCESS_MITIGATION_FONT_DISABLE_POLICY
  PROCESS_MITIGATION_IMAGE_LOAD_POLICY struct
    union
      Flags DWORD ?
      struct
        DUMMYRECORDNAME_??13 record NoRemoteImages_??13:1, NoLowMandatoryLabelImages_??13:1, PreferSystem32Images_??13:1, AuditNoRemoteImages_??13:1, AuditNoLowMandatoryLabelImages_??13:1, ReservedFlags_??13:27
        DUMMYRECORDNAME_??13 <>
      ends
    ends
  PROCESS_MITIGATION_IMAGE_LOAD_POLICY ends
  _PROCESS_MITIGATION_IMAGE_LOAD_POLICY typedef PROCESS_MITIGATION_IMAGE_LOAD_POLICY
  PPROCESS_MITIGATION_IMAGE_LOAD_POLICY typedef ptr PROCESS_MITIGATION_IMAGE_LOAD_POLICY
  PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY struct
    union
      Flags DWORD ?
      struct
        DUMMYRECORDNAME_??14 record FilterId_??14:4, ReservedFlags_??14:28
        DUMMYRECORDNAME_??14 <>
      ends
    ends
  PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY ends
  _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY typedef PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY
  PPROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY typedef ptr PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY
  PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY struct
    union
      Flags DWORD ?
      struct
        DUMMYRECORDNAME_??15 record EnableExportAddressFilter_??15:1, AuditExportAddressFilter_??15:1, EnableExportAddressFilterPlus_??15:1, AuditExportAddressFilterPlus_??15:1, EnableImportAddressFilter_??15:1, AuditImportAddressFilter_??15:1, EnableRopStackPivot_??15:1, AuditRopStackPivot_??15:1, EnableRopCallerCheck_??15:1, AuditRopCallerCheck_??15:1, EnableRopSimExec_??15:1, AuditRopSimExec_??15:1, ReservedFlags_??15:20
        DUMMYRECORDNAME_??15 <>
      ends
    ends
  PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY ends
  _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY typedef PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY
  PPROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY typedef ptr PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY
  PROCESS_MITIGATION_CHILD_PROCESS_POLICY struct
    union
      Flags DWORD ?
      struct
        DUMMYRECORDNAME_??16 record NoChildProcessCreation_??16:1, AuditNoChildProcessCreation_??16:1, AllowSecureProcessCreation_??16:1, ReservedFlags_??16:29
        DUMMYRECORDNAME_??16 <>
      ends
    ends
  PROCESS_MITIGATION_CHILD_PROCESS_POLICY ends
  _PROCESS_MITIGATION_CHILD_PROCESS_POLICY typedef PROCESS_MITIGATION_CHILD_PROCESS_POLICY
  PPROCESS_MITIGATION_CHILD_PROCESS_POLICY typedef ptr PROCESS_MITIGATION_CHILD_PROCESS_POLICY
  JOBOBJECT_BASIC_ACCOUNTING_INFORMATION struct
    TotalUserTime LARGE_INTEGER <>
    TotalKernelTime LARGE_INTEGER <>
    ThisPeriodTotalUserTime LARGE_INTEGER <>
    ThisPeriodTotalKernelTime LARGE_INTEGER <>
    TotalPageFaultCount DWORD ?
    TotalProcesses DWORD ?
    ActiveProcesses DWORD ?
    TotalTerminatedProcesses DWORD ?
  JOBOBJECT_BASIC_ACCOUNTING_INFORMATION ends
  _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION typedef JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
  PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION typedef ptr JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
  JOBOBJECT_BASIC_LIMIT_INFORMATION struct
    PerProcessUserTimeLimit LARGE_INTEGER <>
    PerJobUserTimeLimit LARGE_INTEGER <>
    LimitFlags DWORD ?
    MinimumWorkingSetSize SIZE_T ?
    MaximumWorkingSetSize SIZE_T ?
    ActiveProcessLimit DWORD ?
    Affinity ULONG_PTR ?
    PriorityClass DWORD ?
    SchedulingClass DWORD ?
  JOBOBJECT_BASIC_LIMIT_INFORMATION ends
  _JOBOBJECT_BASIC_LIMIT_INFORMATION typedef JOBOBJECT_BASIC_LIMIT_INFORMATION
  PJOBOBJECT_BASIC_LIMIT_INFORMATION typedef ptr JOBOBJECT_BASIC_LIMIT_INFORMATION
  JOBOBJECT_EXTENDED_LIMIT_INFORMATION struct
    BasicLimitInformation JOBOBJECT_BASIC_LIMIT_INFORMATION <>
    IoInfo IO_COUNTERS <>
    ProcessMemoryLimit SIZE_T ?
    JobMemoryLimit SIZE_T ?
    PeakProcessMemoryUsed SIZE_T ?
    PeakJobMemoryUsed SIZE_T ?
  JOBOBJECT_EXTENDED_LIMIT_INFORMATION ends
  _JOBOBJECT_EXTENDED_LIMIT_INFORMATION typedef JOBOBJECT_EXTENDED_LIMIT_INFORMATION
  PJOBOBJECT_EXTENDED_LIMIT_INFORMATION typedef ptr JOBOBJECT_EXTENDED_LIMIT_INFORMATION
  JOBOBJECT_BASIC_PROCESS_ID_LIST struct
    NumberOfAssignedProcesses DWORD ?
    NumberOfProcessIdsInList DWORD ?
    ProcessIdList ULONG_PTR 1 dup (?)
  JOBOBJECT_BASIC_PROCESS_ID_LIST ends
  _JOBOBJECT_BASIC_PROCESS_ID_LIST typedef JOBOBJECT_BASIC_PROCESS_ID_LIST
  PJOBOBJECT_BASIC_PROCESS_ID_LIST typedef ptr JOBOBJECT_BASIC_PROCESS_ID_LIST
  JOBOBJECT_BASIC_UI_RESTRICTIONS struct
    UIRestrictionsClass DWORD ?
  JOBOBJECT_BASIC_UI_RESTRICTIONS ends
  _JOBOBJECT_BASIC_UI_RESTRICTIONS typedef JOBOBJECT_BASIC_UI_RESTRICTIONS
  PJOBOBJECT_BASIC_UI_RESTRICTIONS typedef ptr JOBOBJECT_BASIC_UI_RESTRICTIONS
  JOBOBJECT_SECURITY_LIMIT_INFORMATION struct
    SecurityLimitFlags DWORD ?
    JobToken HANDLE ?
    SidsToDisable PTOKEN_GROUPS ?
    PrivilegesToDelete PTOKEN_PRIVILEGES ?
    RestrictedSids PTOKEN_GROUPS ?
  JOBOBJECT_SECURITY_LIMIT_INFORMATION ends
  _JOBOBJECT_SECURITY_LIMIT_INFORMATION typedef JOBOBJECT_SECURITY_LIMIT_INFORMATION
  PJOBOBJECT_SECURITY_LIMIT_INFORMATION typedef ptr JOBOBJECT_SECURITY_LIMIT_INFORMATION
  JOBOBJECT_END_OF_JOB_TIME_INFORMATION struct
    EndOfJobTimeAction DWORD ?
  JOBOBJECT_END_OF_JOB_TIME_INFORMATION ends
  _JOBOBJECT_END_OF_JOB_TIME_INFORMATION typedef JOBOBJECT_END_OF_JOB_TIME_INFORMATION
  PJOBOBJECT_END_OF_JOB_TIME_INFORMATION typedef ptr JOBOBJECT_END_OF_JOB_TIME_INFORMATION
  JOBOBJECT_ASSOCIATE_COMPLETION_PORT struct
    CompletionKey PVOID ?
    CompletionPort HANDLE ?
  JOBOBJECT_ASSOCIATE_COMPLETION_PORT ends
  _JOBOBJECT_ASSOCIATE_COMPLETION_PORT typedef JOBOBJECT_ASSOCIATE_COMPLETION_PORT
  PJOBOBJECT_ASSOCIATE_COMPLETION_PORT typedef ptr JOBOBJECT_ASSOCIATE_COMPLETION_PORT
  JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION struct
    BasicInfo JOBOBJECT_BASIC_ACCOUNTING_INFORMATION <>
    IoInfo IO_COUNTERS <>
  JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION ends
  _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION typedef JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION
  PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION typedef ptr JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION
  JOBOBJECT_JOBSET_INFORMATION struct
    MemberLevel DWORD ?
  JOBOBJECT_JOBSET_INFORMATION ends
  _JOBOBJECT_JOBSET_INFORMATION typedef JOBOBJECT_JOBSET_INFORMATION
  PJOBOBJECT_JOBSET_INFORMATION typedef ptr JOBOBJECT_JOBSET_INFORMATION
  JOBOBJECT_RATE_CONTROL_TOLERANCE typedef SDWORD
  ToleranceLow equ 1
  ToleranceMedium equ 2
  ToleranceHigh equ 3
  _JOBOBJECT_RATE_CONTROL_TOLERANCE typedef JOBOBJECT_RATE_CONTROL_TOLERANCE
  PJOBOBJECT_RATE_CONTROL_TOLERANCE typedef ptr JOBOBJECT_RATE_CONTROL_TOLERANCE
  JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL typedef SDWORD
  ToleranceIntervalShort equ 1
  ToleranceIntervalMedium equ 2
  ToleranceIntervalLong equ 3
  _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL typedef JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
  PJOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL typedef ptr JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
  JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION struct
    IoReadBytesLimit DWORD64 ?
    IoWriteBytesLimit DWORD64 ?
    PerJobUserTimeLimit LARGE_INTEGER <>
    JobMemoryLimit DWORD64 ?
    RateControlTolerance JOBOBJECT_RATE_CONTROL_TOLERANCE ?
    RateControlToleranceInterval JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL ?
    LimitFlags DWORD ?
  JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION ends
  _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION typedef JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION
  PJOBOBJECT_NOTIFICATION_LIMIT_INFORMATION typedef ptr JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION
  JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2 struct
    IoReadBytesLimit DWORD64 ?
    IoWriteBytesLimit DWORD64 ?
    PerJobUserTimeLimit LARGE_INTEGER <>
    union
      JobHighMemoryLimit DWORD64 ?
      JobMemoryLimit DWORD64 ?
    ends
    union DUMMYUNIONNAME2
      RateControlTolerance JOBOBJECT_RATE_CONTROL_TOLERANCE ?
      CpuRateControlTolerance JOBOBJECT_RATE_CONTROL_TOLERANCE ?
    ends
    union DUMMYUNIONNAME3
      RateControlToleranceInterval JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL ?
      CpuRateControlToleranceInterval JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL ?
    ends
    LimitFlags DWORD ?
    IoRateControlTolerance JOBOBJECT_RATE_CONTROL_TOLERANCE ?
    JobLowMemoryLimit DWORD64 ?
    IoRateControlToleranceInterval JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL ?
    NetRateControlTolerance JOBOBJECT_RATE_CONTROL_TOLERANCE ?
    NetRateControlToleranceInterval JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL ?
  JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2 ends
  JOBOBJECT_LIMIT_VIOLATION_INFORMATION struct
    LimitFlags DWORD ?
    ViolationLimitFlags DWORD ?
    IoReadBytes DWORD64 ?
    IoReadBytesLimit DWORD64 ?
    IoWriteBytes DWORD64 ?
    IoWriteBytesLimit DWORD64 ?
    PerJobUserTime LARGE_INTEGER <>
    PerJobUserTimeLimit LARGE_INTEGER <>
    JobMemory DWORD64 ?
    JobMemoryLimit DWORD64 ?
    RateControlTolerance JOBOBJECT_RATE_CONTROL_TOLERANCE ?
    RateControlToleranceLimit JOBOBJECT_RATE_CONTROL_TOLERANCE ?
  JOBOBJECT_LIMIT_VIOLATION_INFORMATION ends
  _JOBOBJECT_LIMIT_VIOLATION_INFORMATION typedef JOBOBJECT_LIMIT_VIOLATION_INFORMATION
  PJOBOBJECT_LIMIT_VIOLATION_INFORMATION typedef ptr JOBOBJECT_LIMIT_VIOLATION_INFORMATION
  JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2 struct
    LimitFlags DWORD ?
    ViolationLimitFlags DWORD ?
    IoReadBytes DWORD64 ?
    IoReadBytesLimit DWORD64 ?
    IoWriteBytes DWORD64 ?
    IoWriteBytesLimit DWORD64 ?
    PerJobUserTime LARGE_INTEGER <>
    PerJobUserTimeLimit LARGE_INTEGER <>
    JobMemory DWORD64 ?
    union
      JobHighMemoryLimit DWORD64 ?
      JobMemoryLimit DWORD64 ?
    ends
    union DUMMYUNIONNAME2
      RateControlTolerance JOBOBJECT_RATE_CONTROL_TOLERANCE ?
      CpuRateControlTolerance JOBOBJECT_RATE_CONTROL_TOLERANCE ?
    ends
    union DUMMYUNIONNAME3
      RateControlToleranceLimit JOBOBJECT_RATE_CONTROL_TOLERANCE ?
      CpuRateControlToleranceLimit JOBOBJECT_RATE_CONTROL_TOLERANCE ?
    ends
    JobLowMemoryLimit DWORD64 ?
    IoRateControlTolerance JOBOBJECT_RATE_CONTROL_TOLERANCE ?
    IoRateControlToleranceLimit JOBOBJECT_RATE_CONTROL_TOLERANCE ?
    NetRateControlTolerance JOBOBJECT_RATE_CONTROL_TOLERANCE ?
    NetRateControlToleranceLimit JOBOBJECT_RATE_CONTROL_TOLERANCE ?
  JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2 ends
  JOBOBJECT_CPU_RATE_CONTROL_INFORMATION struct
    ControlFlags DWORD ?
    union
      CpuRate DWORD ?
      Weight DWORD ?
      struct
        MinRate WORD ?
        MaxRate WORD ?
      ends
    ends
  JOBOBJECT_CPU_RATE_CONTROL_INFORMATION ends
  _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION typedef JOBOBJECT_CPU_RATE_CONTROL_INFORMATION
  PJOBOBJECT_CPU_RATE_CONTROL_INFORMATION typedef ptr JOBOBJECT_CPU_RATE_CONTROL_INFORMATION
  JOB_OBJECT_NET_RATE_CONTROL_FLAGS typedef SDWORD
  JOB_OBJECT_NET_RATE_CONTROL_ENABLE equ 1h
  JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH equ 2h
  JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG equ 4h
  JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS equ 7h
  if  not Defined(SORTPP_PASS) and  not Defined(MIDL_PASS) and  not Defined(RC_INVOKED)
    DEFINE_ENUM_FLAG_OPERATORS(JOB_OBJECT_NET_RATE_CONTROL_FLAGS)
  endif
  JOB_OBJECT_NET_RATE_CONTROL_MAX_DSCP_TAG equ 64
  JOBOBJECT_NET_RATE_CONTROL_INFORMATION struct
    MaxBandwidth DWORD64 ?
    ControlFlags JOB_OBJECT_NET_RATE_CONTROL_FLAGS ?
    DscpTag BYTE ?
  JOBOBJECT_NET_RATE_CONTROL_INFORMATION ends
  JOB_OBJECT_IO_RATE_CONTROL_FLAGS typedef SDWORD
  JOB_OBJECT_IO_RATE_CONTROL_ENABLE equ 1h
  JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME equ 2h
  JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL equ 4h
  JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP equ 8h
  JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS equ JOB_OBJECT_IO_RATE_CONTROL_ENABLE or JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME or JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL or JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP
  if  not Defined(SORTPP_PASS) and  not Defined(MIDL_PASS) and  not Defined(RC_INVOKED)
    DEFINE_ENUM_FLAG_OPERATORS(JOB_OBJECT_IO_RATE_CONTROL_FLAGS)
  endif
  JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE struct
    MaxIops LONG64 ?
    MaxBandwidth LONG64 ?
    ReservationIops LONG64 ?
    VolumeName PWSTR ?
    BaseIoSize DWORD ?
    ControlFlags JOB_OBJECT_IO_RATE_CONTROL_FLAGS ?
    VolumeNameLength WORD ?
  JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE ends
  JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V1 typedef JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE
  JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2 struct
    MaxIops LONG64 ?
    MaxBandwidth LONG64 ?
    ReservationIops LONG64 ?
    VolumeName PWSTR ?
    BaseIoSize DWORD ?
    ControlFlags JOB_OBJECT_IO_RATE_CONTROL_FLAGS ?
    VolumeNameLength WORD ?
    CriticalReservationIops LONG64 ?
    ReservationBandwidth LONG64 ?
    CriticalReservationBandwidth LONG64 ?
    MaxTimePercent LONG64 ?
    ReservationTimePercent LONG64 ?
    CriticalReservationTimePercent LONG64 ?
  JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2 ends
  JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3 struct
    MaxIops LONG64 ?
    MaxBandwidth LONG64 ?
    ReservationIops LONG64 ?
    VolumeName PWSTR ?
    BaseIoSize DWORD ?
    ControlFlags JOB_OBJECT_IO_RATE_CONTROL_FLAGS ?
    VolumeNameLength WORD ?
    CriticalReservationIops LONG64 ?
    ReservationBandwidth LONG64 ?
    CriticalReservationBandwidth LONG64 ?
    MaxTimePercent LONG64 ?
    ReservationTimePercent LONG64 ?
    CriticalReservationTimePercent LONG64 ?
    SoftMaxIops LONG64 ?
    SoftMaxBandwidth LONG64 ?
    SoftMaxTimePercent LONG64 ?
    LimitExcessNotifyIops LONG64 ?
    LimitExcessNotifyBandwidth LONG64 ?
    LimitExcessNotifyTimePercent LONG64 ?
  JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3 ends
  JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS typedef SDWORD
  JOBOBJECT_IO_ATTRIBUTION_CONTROL_ENABLE equ 1h
  JOBOBJECT_IO_ATTRIBUTION_CONTROL_DISABLE equ 2h
  JOBOBJECT_IO_ATTRIBUTION_CONTROL_VALID_FLAGS equ 3h
  JOBOBJECT_IO_ATTRIBUTION_STATS struct
    IoCount ULONG_PTR ?
    TotalNonOverlappedQueueTime ULONGLONG ?
    TotalNonOverlappedServiceTime ULONGLONG ?
    TotalSize ULONGLONG ?
  JOBOBJECT_IO_ATTRIBUTION_STATS ends
  _JOBOBJECT_IO_ATTRIBUTION_STATS typedef JOBOBJECT_IO_ATTRIBUTION_STATS
  PJOBOBJECT_IO_ATTRIBUTION_STATS typedef ptr JOBOBJECT_IO_ATTRIBUTION_STATS
  JOBOBJECT_IO_ATTRIBUTION_INFORMATION struct
    ControlFlags DWORD ?
    ReadStats JOBOBJECT_IO_ATTRIBUTION_STATS <>
    WriteStats JOBOBJECT_IO_ATTRIBUTION_STATS <>
  JOBOBJECT_IO_ATTRIBUTION_INFORMATION ends
  _JOBOBJECT_IO_ATTRIBUTION_INFORMATION typedef JOBOBJECT_IO_ATTRIBUTION_INFORMATION
  PJOBOBJECT_IO_ATTRIBUTION_INFORMATION typedef ptr JOBOBJECT_IO_ATTRIBUTION_INFORMATION
  JOB_OBJECT_TERMINATE_AT_END_OF_JOB equ 0
  JOB_OBJECT_POST_AT_END_OF_JOB equ 1
  JOB_OBJECT_MSG_END_OF_JOB_TIME equ 1
  JOB_OBJECT_MSG_END_OF_PROCESS_TIME equ 2
  JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT equ 3
  JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO equ 4
  JOB_OBJECT_MSG_NEW_PROCESS equ 6
  JOB_OBJECT_MSG_EXIT_PROCESS equ 7
  JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS equ 8
  JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT equ 9
  JOB_OBJECT_MSG_JOB_MEMORY_LIMIT equ 10
  JOB_OBJECT_MSG_NOTIFICATION_LIMIT equ 11
  JOB_OBJECT_MSG_JOB_CYCLE_TIME_LIMIT equ 12
  JOB_OBJECT_MSG_SILO_TERMINATED equ 13
  JOB_OBJECT_MSG_MINIMUM equ 1
  JOB_OBJECT_MSG_MAXIMUM equ 13
  JOB_OBJECT_VALID_COMPLETION_FILTER equ (((1 shl (JOB_OBJECT_MSG_MAXIMUM + 1)) - 1) - ((1 shl JOB_OBJECT_MSG_MINIMUM) - 1))
  JOB_OBJECT_LIMIT_WORKINGSET equ 00000001h
  JOB_OBJECT_LIMIT_PROCESS_TIME equ 00000002h
  JOB_OBJECT_LIMIT_JOB_TIME equ 00000004h
  JOB_OBJECT_LIMIT_ACTIVE_PROCESS equ 00000008h
  JOB_OBJECT_LIMIT_AFFINITY equ 00000010h
  JOB_OBJECT_LIMIT_PRIORITY_CLASS equ 00000020h
  JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME equ 00000040h
  JOB_OBJECT_LIMIT_SCHEDULING_CLASS equ 00000080h
  JOB_OBJECT_LIMIT_PROCESS_MEMORY equ 00000100h
  JOB_OBJECT_LIMIT_JOB_MEMORY equ 00000200h
  JOB_OBJECT_LIMIT_JOB_MEMORY_HIGH equ <JOB_OBJECT_LIMIT_JOB_MEMORY>
  JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION equ 00000400h
  JOB_OBJECT_LIMIT_BREAKAWAY_OK equ 00000800h
  JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK equ 00001000h
  JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE equ 00002000h
  JOB_OBJECT_LIMIT_SUBSET_AFFINITY equ 00004000h
  JOB_OBJECT_LIMIT_JOB_MEMORY_LOW equ 00008000h
  JOB_OBJECT_LIMIT_JOB_READ_BYTES equ 00010000h
  JOB_OBJECT_LIMIT_JOB_WRITE_BYTES equ 00020000h
  JOB_OBJECT_LIMIT_RATE_CONTROL equ 00040000h
  JOB_OBJECT_LIMIT_CPU_RATE_CONTROL equ <JOB_OBJECT_LIMIT_RATE_CONTROL>
  JOB_OBJECT_LIMIT_IO_RATE_CONTROL equ 00080000h
  JOB_OBJECT_LIMIT_NET_RATE_CONTROL equ 00100000h
  JOB_OBJECT_LIMIT_VALID_FLAGS equ 0007ffffh
  JOB_OBJECT_BASIC_LIMIT_VALID_FLAGS equ 000000ffh
  JOB_OBJECT_EXTENDED_LIMIT_VALID_FLAGS equ 00007fffh
  JOB_OBJECT_NOTIFICATION_LIMIT_VALID_FLAGS equ <>
  ;(JOB_OBJECT_LIMIT_JOB_READ_BYTES or JOB_OBJECT_LIMIT_JOB_WRITE_BYTES or JOB_OBJECT_LIMIT_JOB_TIME or
  ;JOB_OBJECT_LIMIT_JOB_MEMORY_LOW or JOB_OBJECT_LIMIT_JOB_MEMORY_HIGH or JOB_OBJECT_LIMIT_CPU_RATE_CONTROL or
  ;JOB_OBJECT_LIMIT_IO_RATE_CONTROL or JOB_OBJECT_LIMIT_NET_RATE_CONTROL)
  JOB_OBJECT_UILIMIT_NONE equ 00000000h
  JOB_OBJECT_UILIMIT_HANDLES equ 00000001h
  JOB_OBJECT_UILIMIT_READCLIPBOARD equ 00000002h
  JOB_OBJECT_UILIMIT_WRITECLIPBOARD equ 00000004h
  JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS equ 00000008h
  JOB_OBJECT_UILIMIT_DISPLAYSETTINGS equ 00000010h
  JOB_OBJECT_UILIMIT_GLOBALATOMS equ 00000020h
  JOB_OBJECT_UILIMIT_DESKTOP equ 00000040h
  JOB_OBJECT_UILIMIT_EXITWINDOWS equ 00000080h
  JOB_OBJECT_UILIMIT_ALL equ 000000FFh
  JOB_OBJECT_UI_VALID_FLAGS equ 000000FFh
  JOB_OBJECT_SECURITY_NO_ADMIN equ 00000001h
  JOB_OBJECT_SECURITY_RESTRICTED_TOKEN equ 00000002h
  JOB_OBJECT_SECURITY_ONLY_TOKEN equ 00000004h
  JOB_OBJECT_SECURITY_FILTER_TOKENS equ 00000008h
  JOB_OBJECT_SECURITY_VALID_FLAGS equ 0000000fh
  JOB_OBJECT_CPU_RATE_CONTROL_ENABLE equ 1h
  JOB_OBJECT_CPU_RATE_CONTROL_WEIGHT_BASED equ 2h
  JOB_OBJECT_CPU_RATE_CONTROL_HARD_CAP equ 4h
  JOB_OBJECT_CPU_RATE_CONTROL_NOTIFY equ 8h
  JOB_OBJECT_CPU_RATE_CONTROL_MIN_MAX_RATE equ 10h
  JOB_OBJECT_CPU_RATE_CONTROL_VALID_FLAGS equ 1fh
  JOBOBJECTINFOCLASS typedef SDWORD
  JobObjectBasicAccountingInformation equ 1
  JobObjectBasicLimitInformation equ 2
  JobObjectBasicProcessIdList equ 3
  JobObjectBasicUIRestrictions equ 4
  JobObjectSecurityLimitInformation equ 5
  JobObjectEndOfJobTimeInformation equ 6
  JobObjectAssociateCompletionPortInformation equ 7
  JobObjectBasicAndIoAccountingInformation equ 8
  JobObjectExtendedLimitInformation equ 9
  JobObjectJobSetInformation equ 10
  JobObjectGroupInformation equ 11
  JobObjectNotificationLimitInformation equ 12
  JobObjectLimitViolationInformation equ 13
  JobObjectGroupInformationEx equ 14
  JobObjectCpuRateControlInformation equ 15
  JobObjectCompletionFilter equ 16
  JobObjectCompletionCounter equ 17
  JobObjectReserved1Information equ 18
  JobObjectReserved2Information equ 19
  JobObjectReserved3Information equ 20
  JobObjectReserved4Information equ 21
  JobObjectReserved5Information equ 22
  JobObjectReserved6Information equ 23
  JobObjectReserved7Information equ 24
  JobObjectReserved8Information equ 25
  JobObjectReserved9Information equ 26
  JobObjectReserved10Information equ 27
  JobObjectReserved11Information equ 28
  JobObjectReserved12Information equ 29
  JobObjectReserved13Information equ 30
  JobObjectReserved14Information equ 31
  JobObjectNetRateControlInformation equ 32
  JobObjectNotificationLimitInformation2 equ 33
  JobObjectLimitViolationInformation2 equ 34
  JobObjectCreateSilo equ 35
  JobObjectSiloBasicInformation equ 36
  JobObjectReserved15Information equ 37
  JobObjectReserved16Information equ 38
  JobObjectReserved17Information equ 39
  JobObjectReserved18Information equ 40
  JobObjectReserved19Information equ 41
  JobObjectReserved20Information equ 42
  JobObjectReserved21Information equ 43
  JobObjectReserved22Information equ 44
  JobObjectReserved23Information equ 45
  JobObjectReserved24Information equ 46
  JobObjectReserved25Information equ 47
  MaxJobObjectInfoClass equ 48
  _JOBOBJECTINFOCLASS typedef JOBOBJECTINFOCLASS
  SILOOBJECT_BASIC_INFORMATION struct
    SiloId DWORD ?
    SiloParentId DWORD ?
    NumberOfProcesses DWORD ?
    IsInServerSilo BOOLEAN ?
    Reserved BYTE 3 dup (?)
  SILOOBJECT_BASIC_INFORMATION ends
  _SILOOBJECT_BASIC_INFORMATION typedef SILOOBJECT_BASIC_INFORMATION
  PSILOOBJECT_BASIC_INFORMATION typedef ptr SILOOBJECT_BASIC_INFORMATION
  SERVERSILO_STATE typedef SDWORD
  SERVERSILO_INITING equ 0
  SERVERSILO_STARTED equ 1
  SERVERSILO_SHUTTING_DOWN equ 2
  SERVERSILO_TERMINATING equ 3
  SERVERSILO_TERMINATED equ 4
  _SERVERSILO_STATE typedef SERVERSILO_STATE
  PSERVERSILO_STATE typedef ptr SERVERSILO_STATE
  SERVERSILO_BASIC_INFORMATION struct
    ServiceSessionId DWORD ?
    State SERVERSILO_STATE ?
    ExitStatus DWORD ?
  SERVERSILO_BASIC_INFORMATION ends
  _SERVERSILO_BASIC_INFORMATION typedef SERVERSILO_BASIC_INFORMATION
  PSERVERSILO_BASIC_INFORMATION typedef ptr SERVERSILO_BASIC_INFORMATION
  FIRMWARE_TYPE typedef SDWORD
  FirmwareTypeUnknown equ 0
  FirmwareTypeBios equ 1
  FirmwareTypeUefi equ 2
  FirmwareTypeMax equ 3
  _FIRMWARE_TYPE typedef FIRMWARE_TYPE
  PFIRMWARE_TYPE typedef ptr FIRMWARE_TYPE
  EVENT_MODIFY_STATE equ 0002h
  EVENT_ALL_ACCESS equ (STANDARD_RIGHTS_REQUIRED or SYNCHRONIZE or 3h)
  MUTANT_QUERY_STATE equ 0001h
  MUTANT_ALL_ACCESS equ <(STANDARD_RIGHTS_REQUIRED or SYNCHRONIZE or MUTANT_QUERY_STATE)>
  SEMAPHORE_MODIFY_STATE equ 0002h
  SEMAPHORE_ALL_ACCESS equ (STANDARD_RIGHTS_REQUIRED or SYNCHRONIZE or 3h)
  TIMER_QUERY_STATE equ 0001h
  TIMER_MODIFY_STATE equ 0002h
  TIMER_ALL_ACCESS equ <(STANDARD_RIGHTS_REQUIRED or SYNCHRONIZE or TIMER_QUERY_STATE or TIMER_MODIFY_STATE)>
  TIME_ZONE_ID_UNKNOWN equ 0
  TIME_ZONE_ID_STANDARD equ 1
  TIME_ZONE_ID_DAYLIGHT equ 2
  LOGICAL_PROCESSOR_RELATIONSHIP typedef SDWORD
  RelationProcessorCore equ 0
  RelationNumaNode equ 1
  RelationCache equ 2
  RelationProcessorPackage equ 3
  RelationGroup equ 4
  RelationAll equ 0ffffh
  _LOGICAL_PROCESSOR_RELATIONSHIP typedef LOGICAL_PROCESSOR_RELATIONSHIP
  LTP_PC_SMT equ 1h
  PROCESSOR_CACHE_TYPE typedef SDWORD
  CacheUnified equ 0
  CacheInstruction equ 1
  CacheData equ 2
  CacheTrace equ 3
  _PROCESSOR_CACHE_TYPE typedef PROCESSOR_CACHE_TYPE
  CACHE_FULLY_ASSOCIATIVE equ 0FFh
  CACHE_DESCRIPTOR struct
    Level BYTE ?
    Associativity BYTE ?
    LineSize WORD ?
    Size_ DWORD ?
    Type_ PROCESSOR_CACHE_TYPE ?
  CACHE_DESCRIPTOR ends
  _CACHE_DESCRIPTOR typedef CACHE_DESCRIPTOR
  PCACHE_DESCRIPTOR typedef ptr CACHE_DESCRIPTOR
  SYSTEM_LOGICAL_PROCESSOR_INFORMATION struct
    ProcessorMask ULONG_PTR ?
    Relationship LOGICAL_PROCESSOR_RELATIONSHIP ?
    union
      struct ProcessorCore
        Flags BYTE ?
      ends
      struct NumaNode
        NodeNumber DWORD ?
      ends
      Cache CACHE_DESCRIPTOR <>
      Reserved ULONGLONG 2 dup (?)
    ends
  SYSTEM_LOGICAL_PROCESSOR_INFORMATION ends
  _SYSTEM_LOGICAL_PROCESSOR_INFORMATION typedef SYSTEM_LOGICAL_PROCESSOR_INFORMATION
  PSYSTEM_LOGICAL_PROCESSOR_INFORMATION typedef ptr SYSTEM_LOGICAL_PROCESSOR_INFORMATION
  PROCESSOR_RELATIONSHIP struct
    Flags BYTE ?
    EfficiencyClass BYTE ?
    Reserved BYTE 20 dup (?)
    GroupCount WORD ?
    GroupMask GROUP_AFFINITY ANYSIZE_ARRAY dup (<>)
  PROCESSOR_RELATIONSHIP ends
  _PROCESSOR_RELATIONSHIP typedef PROCESSOR_RELATIONSHIP
  PPROCESSOR_RELATIONSHIP typedef ptr PROCESSOR_RELATIONSHIP
  NUMA_NODE_RELATIONSHIP struct
    NodeNumber DWORD ?
    Reserved BYTE 20 dup (?)
    GroupMask GROUP_AFFINITY <>
  NUMA_NODE_RELATIONSHIP ends
  _NUMA_NODE_RELATIONSHIP typedef NUMA_NODE_RELATIONSHIP
  PNUMA_NODE_RELATIONSHIP typedef ptr NUMA_NODE_RELATIONSHIP
  CACHE_RELATIONSHIP struct
    Level BYTE ?
    Associativity BYTE ?
    LineSize WORD ?
    CacheSize DWORD ?
    Type_ PROCESSOR_CACHE_TYPE ?
    Reserved BYTE 20 dup (?)
    GroupMask GROUP_AFFINITY <>
  CACHE_RELATIONSHIP ends
  _CACHE_RELATIONSHIP typedef CACHE_RELATIONSHIP
  PCACHE_RELATIONSHIP typedef ptr CACHE_RELATIONSHIP
  PROCESSOR_GROUP_INFO struct
    MaximumProcessorCount BYTE ?
    ActiveProcessorCount BYTE ?
    Reserved BYTE 38 dup (?)
    ActiveProcessorMask KAFFINITY ?
  PROCESSOR_GROUP_INFO ends
  _PROCESSOR_GROUP_INFO typedef PROCESSOR_GROUP_INFO
  PPROCESSOR_GROUP_INFO typedef ptr PROCESSOR_GROUP_INFO
  GROUP_RELATIONSHIP struct
    MaximumGroupCount WORD ?
    ActiveGroupCount WORD ?
    Reserved BYTE 20 dup (?)
    GroupInfo PROCESSOR_GROUP_INFO ANYSIZE_ARRAY dup (<>)
  GROUP_RELATIONSHIP ends
  _GROUP_RELATIONSHIP typedef GROUP_RELATIONSHIP
  PGROUP_RELATIONSHIP typedef ptr GROUP_RELATIONSHIP
  _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX struct
    Relationship LOGICAL_PROCESSOR_RELATIONSHIP ?
    Size_ DWORD ?
    union
      Processor PROCESSOR_RELATIONSHIP <>
      NumaNode NUMA_NODE_RELATIONSHIP <>
      Cache CACHE_RELATIONSHIP <>
      Group_ GROUP_RELATIONSHIP <>
    ends
  _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX ends
  SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX typedef _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX
  PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX typedef ptr _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX
  CPU_SET_INFORMATION_TYPE typedef SDWORD
  CpuSetInformation equ 0
  _CPU_SET_INFORMATION_TYPE typedef CPU_SET_INFORMATION_TYPE
  PCPU_SET_INFORMATION_TYPE typedef ptr CPU_SET_INFORMATION_TYPE
  _SYSTEM_CPU_SET_INFORMATION struct
    Size_ DWORD ?
    Type_ CPU_SET_INFORMATION_TYPE ?
    union
      struct CpuSet
        Id DWORD ?
        Group_ WORD ?
        LogicalProcessorIndex BYTE ?
        CoreIndex BYTE ?
        LastLevelCacheIndex BYTE ?
        NumaNodeIndex BYTE ?
        EfficiencyClass BYTE ?
        union DUMMYUNIONNAME2
          SYSTEM_CPU_SET_INFORMATION_PARKED equ 1h
          SYSTEM_CPU_SET_INFORMATION_ALLOCATED equ 2h
          SYSTEM_CPU_SET_INFORMATION_ALLOCATED_TO_TARGET_PROCESS equ 4h
          SYSTEM_CPU_SET_INFORMATION_REALTIME equ 8h
          AllFlags BYTE ?
          struct
            DUMMYRECORDNAME_??17 record Parked_??17:1, Allocated_??17:1, AllocatedToTargetProcess_??17:1, RealTime_??17:1, ReservedFlags_??17:4
            DUMMYRECORDNAME_??17 <>
          ends
        ends
        union
          Reserved DWORD ?
          SchedulingClass BYTE ?
        ends
        AllocationTag DWORD64 ?
      ends
    ends
  _SYSTEM_CPU_SET_INFORMATION ends
  SYSTEM_CPU_SET_INFORMATION typedef _SYSTEM_CPU_SET_INFORMATION
  PSYSTEM_CPU_SET_INFORMATION typedef ptr _SYSTEM_CPU_SET_INFORMATION
  SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION struct
    CycleTime DWORD64 ?
  SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION ends
  _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION typedef SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION
  PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION typedef ptr SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION
  PROCESSOR_INTEL_386 equ 386
  PROCESSOR_INTEL_486 equ 486
  PROCESSOR_INTEL_PENTIUM equ 586
  PROCESSOR_INTEL_IA64 equ 2200
  PROCESSOR_AMD_X8664 equ 8664
  PROCESSOR_MIPS_R4000 equ 4000
  PROCESSOR_ALPHA_21064 equ 21064
  PROCESSOR_PPC_601 equ 601
  PROCESSOR_PPC_603 equ 603
  PROCESSOR_PPC_604 equ 604
  PROCESSOR_PPC_620 equ 620
  PROCESSOR_HITACHI_SH3 equ 10003
  PROCESSOR_HITACHI_SH3E equ 10004
  PROCESSOR_HITACHI_SH4 equ 10005
  PROCESSOR_MOTOROLA_821 equ 821
  PROCESSOR_SHx_SH3 equ 103
  PROCESSOR_SHx_SH4 equ 104
  PROCESSOR_STRONGARM equ 2577
  PROCESSOR_ARM720 equ 1824
  PROCESSOR_ARM820 equ 2080
  PROCESSOR_ARM920 equ 2336
  PROCESSOR_ARM_7TDMI equ 70001
  PROCESSOR_OPTIL equ 494fh
  PROCESSOR_ARCHITECTURE_INTEL equ 0
  PROCESSOR_ARCHITECTURE_MIPS equ 1
  PROCESSOR_ARCHITECTURE_ALPHA equ 2
  PROCESSOR_ARCHITECTURE_PPC equ 3
  PROCESSOR_ARCHITECTURE_SHX equ 4
  PROCESSOR_ARCHITECTURE_ARM equ 5
  PROCESSOR_ARCHITECTURE_IA64 equ 6
  PROCESSOR_ARCHITECTURE_ALPHA64 equ 7
  PROCESSOR_ARCHITECTURE_MSIL equ 8
  PROCESSOR_ARCHITECTURE_AMD64 equ 9
  PROCESSOR_ARCHITECTURE_IA32_ON_WIN64 equ 10
  PROCESSOR_ARCHITECTURE_NEUTRAL equ 11
  PROCESSOR_ARCHITECTURE_ARM64 equ 12
  PROCESSOR_ARCHITECTURE_ARM32_ON_WIN64 equ 13
  PROCESSOR_ARCHITECTURE_IA32_ON_ARM64 equ 14
  PROCESSOR_ARCHITECTURE_UNKNOWN equ 0FFFFh
  PF_FLOATING_POINT_PRECISION_ERRATA equ 0
  PF_FLOATING_POINT_EMULATED equ 1
  PF_COMPARE_EXCHANGE_DOUBLE equ 2
  PF_MMX_INSTRUCTIONS_AVAILABLE equ 3
  PF_PPC_MOVEMEM_64BIT_OK equ 4
  PF_ALPHA_BYTE_INSTRUCTIONS equ 5
  PF_XMMI_INSTRUCTIONS_AVAILABLE equ 6
  PF_3DNOW_INSTRUCTIONS_AVAILABLE equ 7
  PF_RDTSC_INSTRUCTION_AVAILABLE equ 8
  PF_PAE_ENABLED equ 9
  PF_XMMI64_INSTRUCTIONS_AVAILABLE equ 10
  PF_SSE_DAZ_MODE_AVAILABLE equ 11
  PF_NX_ENABLED equ 12
  PF_SSE3_INSTRUCTIONS_AVAILABLE equ 13
  PF_COMPARE_EXCHANGE128 equ 14
  PF_COMPARE64_EXCHANGE128 equ 15
  PF_CHANNELS_ENABLED equ 16
  PF_XSAVE_ENABLED equ 17
  PF_ARM_VFP_32_REGISTERS_AVAILABLE equ 18
  PF_ARM_NEON_INSTRUCTIONS_AVAILABLE equ 19
  PF_SECOND_LEVEL_ADDRESS_TRANSLATION equ 20
  PF_VIRT_FIRMWARE_ENABLED equ 21
  PF_RDWRFSGSBASE_AVAILABLE equ 22
  PF_FASTFAIL_AVAILABLE equ 23
  PF_ARM_DIVIDE_INSTRUCTION_AVAILABLE equ 24
  PF_ARM_64BIT_LOADSTORE_ATOMIC equ 25
  PF_ARM_EXTERNAL_CACHE_AVAILABLE equ 26
  PF_ARM_FMAC_INSTRUCTIONS_AVAILABLE equ 27
  PF_RDRAND_INSTRUCTION_AVAILABLE equ 28
  PF_ARM_V8_INSTRUCTIONS_AVAILABLE equ 29
  PF_ARM_V8_CRYPTO_INSTRUCTIONS_AVAILABLE equ 30
  PF_ARM_V8_CRC32_INSTRUCTIONS_AVAILABLE equ 31
  PF_RDTSCP_INSTRUCTION_AVAILABLE equ 32
  XSTATE_LEGACY_FLOATING_POINT equ 0
  XSTATE_LEGACY_SSE equ 1
  XSTATE_GSSE equ 2
  XSTATE_AVX equ <(XSTATE_GSSE)>
  XSTATE_MPX_BNDREGS equ 3
  XSTATE_MPX_BNDCSR equ 4
  XSTATE_AVX512_KMASK equ 5
  XSTATE_AVX512_ZMM_H equ 6
  XSTATE_AVX512_ZMM equ 7
  XSTATE_IPT equ 8
  XSTATE_LWP equ 62
  MAXIMUM_XSTATE_FEATURES equ 64
  XSTATE_MASK_LEGACY_FLOATING_POINT equ (1 shl (XSTATE_LEGACY_FLOATING_POINT))
  XSTATE_MASK_LEGACY_SSE equ (1 shl (XSTATE_LEGACY_SSE))
  XSTATE_MASK_LEGACY equ <(XSTATE_MASK_LEGACY_FLOATING_POINT or XSTATE_MASK_LEGACY_SSE)>
  XSTATE_MASK_GSSE equ (1 shl (XSTATE_GSSE))
  XSTATE_MASK_AVX equ <(XSTATE_MASK_GSSE)>
  XSTATE_MASK_MPX equ ((1 shl (XSTATE_MPX_BNDREGS)) or (1 shl (XSTATE_MPX_BNDCSR)))
  XSTATE_MASK_AVX512 equ ((1 shl (XSTATE_AVX512_KMASK)) or (1 shl (XSTATE_AVX512_ZMM_H)) or (1 shl (XSTATE_AVX512_ZMM)))
  XSTATE_MASK_IPT equ (1 shl (XSTATE_IPT))
  XSTATE_MASK_LWP equ (1 shl (XSTATE_LWP))
  XSTATE_MASK_ALLOWED equ <(XSTATE_MASK_LEGACY or XSTATE_MASK_AVX or XSTATE_MASK_MPX or XSTATE_MASK_AVX512 or XSTATE_MASK_IPT or XSTATE_MASK_LWP)>
  XSTATE_MASK_PERSISTENT equ ((1 shl (XSTATE_MPX_BNDCSR)) or XSTATE_MASK_LWP)
  XSTATE_COMPACTION_ENABLE equ 63
  XSTATE_COMPACTION_ENABLE_MASK equ (1 shl (XSTATE_COMPACTION_ENABLE))
  XSTATE_ALIGN_BIT equ 1
  XSTATE_ALIGN_MASK equ (1 shl (XSTATE_ALIGN_BIT))
  XSTATE_CONTROLFLAG_XSAVEOPT_MASK equ 1
  XSTATE_CONTROLFLAG_XSAVEC_MASK equ 2
  XSTATE_CONTROLFLAG_VALID_MASK equ <(XSTATE_CONTROLFLAG_XSAVEOPT_MASK or XSTATE_CONTROLFLAG_XSAVEC_MASK)>
  XSTATE_FEATURE struct
    Offset_ DWORD ?
    Size_ DWORD ?
  XSTATE_FEATURE ends
  _XSTATE_FEATURE typedef XSTATE_FEATURE
  PXSTATE_FEATURE typedef ptr XSTATE_FEATURE
  XSTATE_CONFIGURATION struct
    EnabledFeatures DWORD64 ?
    EnabledVolatileFeatures DWORD64 ?
    Size_ DWORD ?
    union
      ControlFlags DWORD ?
      struct
        DUMMYRECORDNAME_??18 record OptimizedSave_??18:1, CompactionEnabled_??18:1
        DUMMYRECORDNAME_??18 <>
      ends
    ends
    Features XSTATE_FEATURE MAXIMUM_XSTATE_FEATURES dup (<>)
    EnabledSupervisorFeatures DWORD64 ?
    AlignedFeatures DWORD64 ?
    AllFeatureSize DWORD ?
    AllFeatures DWORD MAXIMUM_XSTATE_FEATURES dup (?)
  XSTATE_CONFIGURATION ends
  _XSTATE_CONFIGURATION typedef XSTATE_CONFIGURATION
  PXSTATE_CONFIGURATION typedef ptr XSTATE_CONFIGURATION
  MEMORY_BASIC_INFORMATION struct
    BaseAddress PVOID ?
    AllocationBase PVOID ?
    AllocationProtect DWORD ?
    RegionSize SIZE_T ?
    State DWORD ?
    Protect DWORD ?
    Type_ DWORD ?
  MEMORY_BASIC_INFORMATION ends
  _MEMORY_BASIC_INFORMATION typedef MEMORY_BASIC_INFORMATION
  PMEMORY_BASIC_INFORMATION typedef ptr MEMORY_BASIC_INFORMATION
  MEMORY_BASIC_INFORMATION32 struct
    BaseAddress DWORD ?
    AllocationBase DWORD ?
    AllocationProtect DWORD ?
    RegionSize DWORD ?
    State DWORD ?
    Protect DWORD ?
    Type_ DWORD ?
  MEMORY_BASIC_INFORMATION32 ends
  _MEMORY_BASIC_INFORMATION32 typedef MEMORY_BASIC_INFORMATION32
  PMEMORY_BASIC_INFORMATION32 typedef ptr MEMORY_BASIC_INFORMATION32
  MEMORY_BASIC_INFORMATION64 struct
    BaseAddress ULONGLONG ?
    AllocationBase ULONGLONG ?
    AllocationProtect DWORD ?
    __alignment1 DWORD ?
    RegionSize ULONGLONG ?
    State DWORD ?
    Protect DWORD ?
    Type_ DWORD ?
    __alignment2 DWORD ?
  MEMORY_BASIC_INFORMATION64 ends
  _MEMORY_BASIC_INFORMATION64 typedef MEMORY_BASIC_INFORMATION64
  PMEMORY_BASIC_INFORMATION64 typedef ptr MEMORY_BASIC_INFORMATION64
  CFG_CALL_TARGET_VALID equ 00000001h
  CFG_CALL_TARGET_PROCESSED equ 00000002h
  CFG_CALL_TARGET_CONVERT_EXPORT_SUPPRESSED_TO_VALID equ 00000004h
  CFG_CALL_TARGET_INFO struct
    Offset_ ULONG_PTR ?
    Flags ULONG_PTR ?
  CFG_CALL_TARGET_INFO ends
  _CFG_CALL_TARGET_INFO typedef CFG_CALL_TARGET_INFO
  PCFG_CALL_TARGET_INFO typedef ptr CFG_CALL_TARGET_INFO
  SECTION_QUERY equ 0001h
  SECTION_MAP_WRITE equ 0002h
  SECTION_MAP_READ equ 0004h
  SECTION_MAP_EXECUTE equ 0008h
  SECTION_EXTEND_SIZE equ 0010h
  SECTION_MAP_EXECUTE_EXPLICIT equ 0020h
  SECTION_ALL_ACCESS equ <(STANDARD_RIGHTS_REQUIRED or SECTION_QUERY or SECTION_MAP_WRITE or SECTION_MAP_READ or SECTION_MAP_EXECUTE or SECTION_EXTEND_SIZE)>
  SESSION_QUERY_ACCESS equ 0001h
  SESSION_MODIFY_ACCESS equ 0002h
  SESSION_ALL_ACCESS equ <(STANDARD_RIGHTS_REQUIRED or SESSION_QUERY_ACCESS or SESSION_MODIFY_ACCESS)>
  PAGE_NOACCESS equ 01h
  PAGE_READONLY equ 02h
  PAGE_READWRITE equ 04h
  PAGE_WRITECOPY equ 08h
  PAGE_EXECUTE equ 10h
  PAGE_EXECUTE_READ equ 20h
  PAGE_EXECUTE_READWRITE equ 40h
  PAGE_EXECUTE_WRITECOPY equ 80h
  PAGE_GUARD equ 100h
  PAGE_NOCACHE equ 200h
  PAGE_WRITECOMBINE equ 400h
  PAGE_ENCLAVE_THREAD_CONTROL equ 80000000h
  PAGE_REVERT_TO_FILE_MAP equ 80000000h
  PAGE_TARGETS_NO_UPDATE equ 40000000h
  PAGE_TARGETS_INVALID equ 40000000h
  PAGE_ENCLAVE_UNVALIDATED equ 20000000h
  PAGE_ENCLAVE_DECOMMIT equ 10000000h
  MEM_COMMIT equ 00001000h
  MEM_RESERVE equ 00002000h
  MEM_REPLACE_PLACEHOLDER equ 00004000h
  MEM_RESERVE_PLACEHOLDER equ 00040000h
  MEM_RESET equ 00080000h
  MEM_TOP_DOWN equ 00100000h
  MEM_WRITE_WATCH equ 00200000h
  MEM_PHYSICAL equ 00400000h
  MEM_ROTATE equ 00800000h
  MEM_DIFFERENT_IMAGE_BASE_OK equ 00800000h
  MEM_RESET_UNDO equ 01000000h
  MEM_LARGE_PAGES equ 20000000h
  MEM_4MB_PAGES equ 80000000h
  MEM_64K_PAGES equ <(MEM_LARGE_PAGES or MEM_PHYSICAL)>
  MEM_UNMAP_WITH_TRANSIENT_BOOST equ 00000001h
  MEM_COALESCE_PLACEHOLDERS equ 00000001h
  MEM_PRESERVE_PLACEHOLDER equ 00000002h
  MEM_DECOMMIT equ 00004000h
  MEM_RELEASE equ 00008000h
  MEM_FREE equ 00010000h
  MEM_ADDRESS_REQUIREMENTS struct
    LowestStartingAddress PVOID ?
    HighestEndingAddress PVOID ?
    Alignment SIZE_T ?
  MEM_ADDRESS_REQUIREMENTS ends
  PMEM_ADDRESS_REQUIREMENTS typedef ptr MEM_ADDRESS_REQUIREMENTS
  MEM_EXTENDED_PARAMETER_TYPE typedef SDWORD
  MemExtendedParameterInvalidType equ 0
  MemExtendedParameterAddressRequirements equ 1
  MemExtendedParameterNumaNode equ 2
  MemExtendedParameterPartitionHandle equ 3
  MemExtendedParameterMax equ 4
  PMEM_EXTENDED_PARAMETER_TYPE typedef ptr MEM_EXTENDED_PARAMETER_TYPE
  MEM_EXTENDED_PARAMETER_TYPE_BITS equ 8
  MEM_EXTENDED_PARAMETER struct
    struct
;      DUMMYRECORDNAME_??19 record Type_??19:MEM_EXTENDED_PARAMETER_TYPE_BITS, Reserved_??19:64 - MEM_EXTENDED_PARAMETER_TYPE_BITS
;      DUMMYRECORDNAME_??19 <>
      DUMMYRECORDNAME_??19 record Type_??19:MEM_EXTENDED_PARAMETER_TYPE_BITS, Reserved_??19:32 - MEM_EXTENDED_PARAMETER_TYPE_BITS
      DWORD ?
      DUMMYRECORDNAME_??19 <>
    ends
    union
      ULong64 DWORD64 ?
      Pointer PVOID ?
      Size_ SIZE_T ?
      Handle HANDLE ?
      ULong DWORD ?
    ends
  MEM_EXTENDED_PARAMETER ends
  PMEM_EXTENDED_PARAMETER typedef ptr MEM_EXTENDED_PARAMETER
  SEC_PARTITION_OWNER_HANDLE equ 00040000h
  SEC_64K_PAGES equ 00080000h
  SEC_FILE equ 00800000h
  SEC_IMAGE equ 01000000h
  SEC_PROTECTED_IMAGE equ 02000000h
  SEC_RESERVE equ 04000000h
  SEC_COMMIT equ 08000000h
  SEC_NOCACHE equ 10000000h
  SEC_WRITECOMBINE equ 40000000h
  SEC_LARGE_PAGES equ 80000000h
  SEC_IMAGE_NO_EXECUTE equ <(SEC_IMAGE or SEC_NOCACHE)>
  MEM_PRIVATE equ 00020000h
  MEM_MAPPED equ 00040000h
  MEM_IMAGE equ 01000000h
  WRITE_WATCH_FLAG_RESET equ 01h
  ENCLAVE_TYPE_SGX equ 00000001h
  ENCLAVE_TYPE_SGX2 equ 00000002h
  ENCLAVE_CREATE_INFO_SGX struct
    Secs BYTE 4096 dup (?)
  ENCLAVE_CREATE_INFO_SGX ends
  _ENCLAVE_CREATE_INFO_SGX typedef ENCLAVE_CREATE_INFO_SGX
  PENCLAVE_CREATE_INFO_SGX typedef ptr ENCLAVE_CREATE_INFO_SGX
  ENCLAVE_INIT_INFO_SGX struct
    SigStruct BYTE 1808 dup (?)
    Reserved1 BYTE 240 dup (?)
    EInitToken BYTE 304 dup (?)
    Reserved2 BYTE 1744 dup (?)
  ENCLAVE_INIT_INFO_SGX ends
  _ENCLAVE_INIT_INFO_SGX typedef ENCLAVE_INIT_INFO_SGX
  PENCLAVE_INIT_INFO_SGX typedef ptr ENCLAVE_INIT_INFO_SGX
  ENCLAVE_TYPE_VBS equ 00000010h
  ENCLAVE_CREATE_INFO_VBS struct
    Flags DWORD ?
    OwnerID BYTE 32 dup (?)
  ENCLAVE_CREATE_INFO_VBS ends
  _ENCLAVE_CREATE_INFO_VBS typedef ENCLAVE_CREATE_INFO_VBS
  PENCLAVE_CREATE_INFO_VBS typedef ptr ENCLAVE_CREATE_INFO_VBS
  ENCLAVE_VBS_FLAG_DEBUG equ 00000001h
  ENCLAVE_INIT_INFO_VBS struct
    Length_ DWORD ?
    ThreadCount DWORD ?
  ENCLAVE_INIT_INFO_VBS ends
  _ENCLAVE_INIT_INFO_VBS typedef ENCLAVE_INIT_INFO_VBS
  PENCLAVE_INIT_INFO_VBS typedef ptr ENCLAVE_INIT_INFO_VBS
  if  not Defined(SORTPP_PASS) and  not Defined(MIDL_PASS) and  not Defined(RC_INVOKED)
    TYPE_ENCLAVE_TARGET_FUNCTION typedef proto WIN_STD_CALL_CONV :PVOID
    ENCLAVE_TARGET_FUNCTION typedef ptr TYPE_ENCLAVE_TARGET_FUNCTION
    PENCLAVE_TARGET_FUNCTION typedef proto :ptr ENCLAVE_TARGET_FUNCTION
    LPENCLAVE_TARGET_FUNCTION typedef PENCLAVE_TARGET_FUNCTION
  endif
  FILE_READ_DATA equ 0001h
  FILE_LIST_DIRECTORY equ 0001h
  FILE_WRITE_DATA equ 0002h
  FILE_ADD_FILE equ 0002h
  FILE_APPEND_DATA equ 0004h
  FILE_ADD_SUBDIRECTORY equ 0004h
  FILE_CREATE_PIPE_INSTANCE equ 0004h
  FILE_READ_EA equ 0008h
  FILE_WRITE_EA equ 0010h
  FILE_EXECUTE equ 0020h
  FILE_TRAVERSE equ 0020h
  FILE_DELETE_CHILD equ 0040h
  FILE_READ_ATTRIBUTES equ 0080h
  FILE_WRITE_ATTRIBUTES equ 0100h
  FILE_ALL_ACCESS equ (STANDARD_RIGHTS_REQUIRED or SYNCHRONIZE or 1FFh)
  FILE_GENERIC_READ equ <(STANDARD_RIGHTS_READ or FILE_READ_DATA or FILE_READ_ATTRIBUTES or FILE_READ_EA or SYNCHRONIZE)>
  FILE_GENERIC_WRITE equ <(STANDARD_RIGHTS_WRITE or FILE_WRITE_DATA or FILE_WRITE_ATTRIBUTES or FILE_WRITE_EA or FILE_APPEND_DATA or SYNCHRONIZE)>
  FILE_GENERIC_EXECUTE equ <(STANDARD_RIGHTS_EXECUTE or FILE_READ_ATTRIBUTES or FILE_EXECUTE or SYNCHRONIZE)>
  FILE_SHARE_READ equ 00000001h
  FILE_SHARE_WRITE equ 00000002h
  FILE_SHARE_DELETE equ 00000004h
  FILE_ATTRIBUTE_READONLY equ 00000001h
  FILE_ATTRIBUTE_HIDDEN equ 00000002h
  FILE_ATTRIBUTE_SYSTEM equ 00000004h
  FILE_ATTRIBUTE_DIRECTORY equ 00000010h
  FILE_ATTRIBUTE_ARCHIVE equ 00000020h
  FILE_ATTRIBUTE_DEVICE equ 00000040h
  FILE_ATTRIBUTE_NORMAL equ 00000080h
  FILE_ATTRIBUTE_TEMPORARY equ 00000100h
  FILE_ATTRIBUTE_SPARSE_FILE equ 00000200h
  FILE_ATTRIBUTE_REPARSE_POINT equ 00000400h
  FILE_ATTRIBUTE_COMPRESSED equ 00000800h
  FILE_ATTRIBUTE_OFFLINE equ 00001000h
  FILE_ATTRIBUTE_NOT_CONTENT_INDEXED equ 00002000h
  FILE_ATTRIBUTE_ENCRYPTED equ 00004000h
  FILE_ATTRIBUTE_INTEGRITY_STREAM equ 00008000h
  FILE_ATTRIBUTE_VIRTUAL equ 00010000h
  FILE_ATTRIBUTE_NO_SCRUB_DATA equ 00020000h
  FILE_ATTRIBUTE_EA equ 00040000h
  FILE_ATTRIBUTE_PINNED equ 00080000h
  FILE_ATTRIBUTE_UNPINNED equ 00100000h
  FILE_ATTRIBUTE_RECALL_ON_OPEN equ 00040000h
  FILE_ATTRIBUTE_RECALL_ON_DATA_ACCESS equ 00400000h
  TREE_CONNECT_ATTRIBUTE_PRIVACY equ 00004000h
  TREE_CONNECT_ATTRIBUTE_INTEGRITY equ 00008000h
  TREE_CONNECT_ATTRIBUTE_GLOBAL equ 00000004h
  FILE_ATTRIBUTE_STRICTLY_SEQUENTIAL equ 20000000h
  FILE_NOTIFY_CHANGE_FILE_NAME equ 00000001h
  FILE_NOTIFY_CHANGE_DIR_NAME equ 00000002h
  FILE_NOTIFY_CHANGE_ATTRIBUTES equ 00000004h
  FILE_NOTIFY_CHANGE_SIZE equ 00000008h
  FILE_NOTIFY_CHANGE_LAST_WRITE equ 00000010h
  FILE_NOTIFY_CHANGE_LAST_ACCESS equ 00000020h
  FILE_NOTIFY_CHANGE_CREATION equ 00000040h
  FILE_NOTIFY_CHANGE_SECURITY equ 00000100h
  FILE_ACTION_ADDED equ 00000001h
  FILE_ACTION_REMOVED equ 00000002h
  FILE_ACTION_MODIFIED equ 00000003h
  FILE_ACTION_RENAMED_OLD_NAME equ 00000004h
  FILE_ACTION_RENAMED_NEW_NAME equ 00000005h
  MAILSLOT_NO_MESSAGE equ (- 1)
  MAILSLOT_WAIT_FOREVER equ (- 1)
  FILE_CASE_SENSITIVE_SEARCH equ 00000001h
  FILE_CASE_PRESERVED_NAMES equ 00000002h
  FILE_UNICODE_ON_DISK equ 00000004h
  FILE_PERSISTENT_ACLS equ 00000008h
  FILE_FILE_COMPRESSION equ 00000010h
  FILE_VOLUME_QUOTAS equ 00000020h
  FILE_SUPPORTS_SPARSE_FILES equ 00000040h
  FILE_SUPPORTS_REPARSE_POINTS equ 00000080h
  FILE_SUPPORTS_REMOTE_STORAGE equ 00000100h
  FILE_RETURNS_CLEANUP_RESULT_INFO equ 00000200h
  FILE_SUPPORTS_POSIX_UNLINK_RENAME equ 00000400h
  FILE_VOLUME_IS_COMPRESSED equ 00008000h
  FILE_SUPPORTS_OBJECT_IDS equ 00010000h
  FILE_SUPPORTS_ENCRYPTION equ 00020000h
  FILE_NAMED_STREAMS equ 00040000h
  FILE_READ_ONLY_VOLUME equ 00080000h
  FILE_SEQUENTIAL_WRITE_ONCE equ 00100000h
  FILE_SUPPORTS_TRANSACTIONS equ 00200000h
  FILE_SUPPORTS_HARD_LINKS equ 00400000h
  FILE_SUPPORTS_EXTENDED_ATTRIBUTES equ 00800000h
  FILE_SUPPORTS_OPEN_BY_FILE_ID equ 01000000h
  FILE_SUPPORTS_USN_JOURNAL equ 02000000h
  FILE_SUPPORTS_INTEGRITY_STREAMS equ 04000000h
  FILE_SUPPORTS_BLOCK_REFCOUNTING equ 08000000h
  FILE_SUPPORTS_SPARSE_VDL equ 10000000h
  FILE_DAX_VOLUME equ 20000000h
  FILE_SUPPORTS_GHOSTING equ 40000000h
  FILE_INVALID_FILE_ID equ (- 1L)
  FILE_ID_128 struct
    Identifier BYTE 16 dup (?)
  FILE_ID_128 ends
  _FILE_ID_128 typedef FILE_ID_128
  PFILE_ID_128 typedef ptr FILE_ID_128
  FILE_NOTIFY_INFORMATION struct
    NextEntryOffset DWORD ?
    Action DWORD ?
    FileNameLength DWORD ?
    FileName WCHAR 1 dup (?)
  FILE_NOTIFY_INFORMATION ends
  _FILE_NOTIFY_INFORMATION typedef FILE_NOTIFY_INFORMATION
  PFILE_NOTIFY_INFORMATION typedef ptr FILE_NOTIFY_INFORMATION
  if (_WIN32_WINNT ge _WIN32_WINNT_WIN10_RS3)
    FILE_NOTIFY_EXTENDED_INFORMATION struct
      NextEntryOffset DWORD ?
      Action DWORD ?
      CreationTime LARGE_INTEGER <>
      LastModificationTime LARGE_INTEGER <>
      LastChangeTime LARGE_INTEGER <>
      LastAccessTime LARGE_INTEGER <>
      AllocatedLength LARGE_INTEGER <>
      FileSize LARGE_INTEGER <>
      FileAttributes DWORD ?
      ReparsePointTag DWORD ?
      FileId LARGE_INTEGER <>
      ParentFileId LARGE_INTEGER <>
      FileNameLength DWORD ?
      FileName WCHAR 1 dup (?)
    FILE_NOTIFY_EXTENDED_INFORMATION ends
    _FILE_NOTIFY_EXTENDED_INFORMATION typedef FILE_NOTIFY_EXTENDED_INFORMATION
    PFILE_NOTIFY_EXTENDED_INFORMATION typedef ptr FILE_NOTIFY_EXTENDED_INFORMATION
  endif
  FILE_SEGMENT_ELEMENT union
    Buffer PVOID64 ?
    Alignment ULONGLONG ?
  FILE_SEGMENT_ELEMENT ends
  _FILE_SEGMENT_ELEMENT typedef FILE_SEGMENT_ELEMENT
  PFILE_SEGMENT_ELEMENT typedef ptr FILE_SEGMENT_ELEMENT
  if (NTDDI_VERSION ge NTDDI_WIN8)
    FLUSH_FLAGS_FILE_DATA_ONLY equ 00000001h
    FLUSH_FLAGS_NO_SYNC equ 00000002h
  endif
  if (NTDDI_VERSION ge NTDDI_WIN10_RS1)
    FLUSH_FLAGS_FILE_DATA_SYNC_ONLY equ 00000004h
  endif
  REPARSE_GUID_DATA_BUFFER struct
    ReparseTag DWORD ?
    ReparseDataLength WORD ?
    Reserved WORD ?
    ReparseGuid GUID <>
    struct GenericReparseBuffer
      DataBuffer BYTE 1 dup (?)
    ends
  REPARSE_GUID_DATA_BUFFER ends
  _REPARSE_GUID_DATA_BUFFER typedef REPARSE_GUID_DATA_BUFFER
  PREPARSE_GUID_DATA_BUFFER typedef ptr REPARSE_GUID_DATA_BUFFER
  REPARSE_GUID_DATA_BUFFER_HEADER_SIZE equ <UFIELD_OFFSET(REPARSE_GUID_DATA_BUFFER, GenericReparseBuffer)>
  MAXIMUM_REPARSE_DATA_BUFFER_SIZE equ (16 * 1024)
  IO_REPARSE_TAG_RESERVED_ZERO equ 0
  IO_REPARSE_TAG_RESERVED_ONE equ 1
  IO_REPARSE_TAG_RESERVED_TWO equ 2
  IO_REPARSE_TAG_RESERVED_RANGE equ <IO_REPARSE_TAG_RESERVED_TWO>
  IsReparseTagMicrosoft macro _tag
    exitm <(((_tag) and 80000000h))>
  endm
  IsReparseTagNameSurrogate macro _tag
    exitm <(((_tag) and 20000000h))>
  endm
  IsReparseTagDirectory macro _tag
    exitm <(((_tag) and 10000000h))>
  endm
  IO_REPARSE_TAG_MOUNT_POINT equ 0A0000003h
  IO_REPARSE_TAG_HSM equ 0C0000004h
  IO_REPARSE_TAG_HSM2 equ 80000006h
  IO_REPARSE_TAG_SIS equ 80000007h
  IO_REPARSE_TAG_WIM equ 80000008h
  IO_REPARSE_TAG_CSV equ 80000009h
  IO_REPARSE_TAG_DFS equ 8000000Ah
  IO_REPARSE_TAG_SYMLINK equ 0A000000Ch
  IO_REPARSE_TAG_DFSR equ 80000012h
  IO_REPARSE_TAG_DEDUP equ 80000013h
  IO_REPARSE_TAG_NFS equ 80000014h
  IO_REPARSE_TAG_FILE_PLACEHOLDER equ 80000015h
  IO_REPARSE_TAG_WOF equ 80000017h
  IO_REPARSE_TAG_WCI equ 80000018h
  IO_REPARSE_TAG_WCI_1 equ 90001018h
  IO_REPARSE_TAG_GLOBAL_REPARSE equ 0A0000019h
  IO_REPARSE_TAG_CLOUD equ 9000001Ah
  IO_REPARSE_TAG_CLOUD_1 equ 9000101Ah
  IO_REPARSE_TAG_CLOUD_2 equ 9000201Ah
  IO_REPARSE_TAG_CLOUD_3 equ 9000301Ah
  IO_REPARSE_TAG_CLOUD_4 equ 9000401Ah
  IO_REPARSE_TAG_CLOUD_5 equ 9000501Ah
  IO_REPARSE_TAG_CLOUD_6 equ 9000601Ah
  IO_REPARSE_TAG_CLOUD_7 equ 9000701Ah
  IO_REPARSE_TAG_CLOUD_8 equ 9000801Ah
  IO_REPARSE_TAG_CLOUD_9 equ 9000901Ah
  IO_REPARSE_TAG_CLOUD_A equ 9000A01Ah
  IO_REPARSE_TAG_CLOUD_B equ 9000B01Ah
  IO_REPARSE_TAG_CLOUD_C equ 9000C01Ah
  IO_REPARSE_TAG_CLOUD_D equ 9000D01Ah
  IO_REPARSE_TAG_CLOUD_E equ 9000E01Ah
  IO_REPARSE_TAG_CLOUD_F equ 9000F01Ah
  IO_REPARSE_TAG_CLOUD_MASK equ 0000F000h
  IO_REPARSE_TAG_APPEXECLINK equ 8000001Bh
  IO_REPARSE_TAG_PROJFS equ 9000001Ch
  IO_REPARSE_TAG_STORAGE_SYNC equ 8000001Eh
  IO_REPARSE_TAG_WCI_TOMBSTONE equ 0A000001Fh
  IO_REPARSE_TAG_UNHANDLED equ 80000020h
  IO_REPARSE_TAG_ONEDRIVE equ 80000021h
  IO_REPARSE_TAG_PROJFS_TOMBSTONE equ 0A0000022h
  IO_REPARSE_TAG_AF_UNIX equ 80000023h
  if (_WIN32_WINNT ge _WIN32_WINNT_WIN8)
    SCRUB_DATA_INPUT_FLAG_RESUME equ 00000001h
    SCRUB_DATA_INPUT_FLAG_SKIP_IN_SYNC equ 00000002h
    SCRUB_DATA_INPUT_FLAG_SKIP_NON_INTEGRITY_DATA equ 00000004h
    SCRUB_DATA_INPUT_FLAG_IGNORE_REDUNDANCY equ 00000008h
    SCRUB_DATA_INPUT_FLAG_SKIP_DATA equ 00000010h
    SCRUB_DATA_INPUT_FLAG_SCRUB_BY_OBJECT_ID equ 00000020h
    SCRUB_DATA_OUTPUT_FLAG_INCOMPLETE equ 00000001h
    SCRUB_DATA_OUTPUT_FLAG_NON_USER_DATA_RANGE equ 00010000h
    if (_WIN32_WINNT ge _WIN32_WINNT_WINBLUE)
      SCRUB_DATA_OUTPUT_FLAG_PARITY_EXTENT_DATA_RETURNED equ 00020000h
      SCRUB_DATA_OUTPUT_FLAG_RESUME_CONTEXT_LENGTH_SPECIFIED equ 00040000h
    endif
    SCRUB_DATA_INPUT struct
      Size_ DWORD ?
      Flags DWORD ?
      MaximumIos DWORD ?
      ObjectId DWORD 4 dup (?)
      Reserved DWORD 13 dup (?)
      ResumeContext BYTE 816 dup (?)
    SCRUB_DATA_INPUT ends
    _SCRUB_DATA_INPUT typedef SCRUB_DATA_INPUT
    PSCRUB_DATA_INPUT typedef ptr SCRUB_DATA_INPUT
    if (_WIN32_WINNT ge _WIN32_WINNT_WINBLUE)
      SCRUB_PARITY_EXTENT struct
        Offset_ LONGLONG ?
        Length_ ULONGLONG ?
      SCRUB_PARITY_EXTENT ends
      _SCRUB_PARITY_EXTENT typedef SCRUB_PARITY_EXTENT
      PSCRUB_PARITY_EXTENT typedef ptr SCRUB_PARITY_EXTENT
      SCRUB_PARITY_EXTENT_DATA struct
        Size_ WORD ?
        Flags WORD ?
        NumberOfParityExtents WORD ?
        MaximumNumberOfParityExtents WORD ?
        ParityExtents SCRUB_PARITY_EXTENT ANYSIZE_ARRAY dup (<>)
      SCRUB_PARITY_EXTENT_DATA ends
      _SCRUB_PARITY_EXTENT_DATA typedef SCRUB_PARITY_EXTENT_DATA
      PSCRUB_PARITY_EXTENT_DATA typedef ptr SCRUB_PARITY_EXTENT_DATA
    endif
    SCRUB_DATA_OUTPUT struct
      Size_ DWORD ?
      Flags DWORD ?
      Status DWORD ?
      ErrorFileOffset ULONGLONG ?
      ErrorLength ULONGLONG ?
      NumberOfBytesRepaired ULONGLONG ?
      NumberOfBytesFailed ULONGLONG ?
      InternalFileReference ULONGLONG ?
      if (_WIN32_WINNT ge _WIN32_WINNT_WINBLUE)
        ResumeContextLength WORD ?
        ParityExtentDataOffset WORD ?
        Reserved DWORD 5 dup (?)
      else
        Reserved DWORD 6 dup (?)
      endif
      ResumeContext BYTE 816 dup (?)
    SCRUB_DATA_OUTPUT ends
    _SCRUB_DATA_OUTPUT typedef SCRUB_DATA_OUTPUT
    PSCRUB_DATA_OUTPUT typedef ptr SCRUB_DATA_OUTPUT
  endif
  if (_WIN32_WINNT ge _WIN32_WINNT_WINBLUE)
    SharedVirtualDiskSupportType typedef SDWORD
    SharedVirtualDisksUnsupported equ 0
    SharedVirtualDisksSupported equ 1
    SharedVirtualDiskSnapshotsSupported equ 3
    SharedVirtualDiskCDPSnapshotsSupported equ 7
    _SharedVirtualDiskSupportType typedef SharedVirtualDiskSupportType
    SharedVirtualDiskHandleState typedef SDWORD
    SharedVirtualDiskHandleStateNone equ 0
    SharedVirtualDiskHandleStateFileShared equ 1
    SharedVirtualDiskHandleStateHandleShared equ 3
    _SharedVirtualDiskHandleState typedef SharedVirtualDiskHandleState
    SHARED_VIRTUAL_DISK_SUPPORT struct
      SharedVirtualDiskSupport SharedVirtualDiskSupportType ?
      HandleState SharedVirtualDiskHandleState ?
    SHARED_VIRTUAL_DISK_SUPPORT ends
    _SHARED_VIRTUAL_DISK_SUPPORT typedef SHARED_VIRTUAL_DISK_SUPPORT
    PSHARED_VIRTUAL_DISK_SUPPORT typedef ptr SHARED_VIRTUAL_DISK_SUPPORT
    IsVirtualDiskFileShared macro HandleState
      exitm <(((HandleState) and SharedVirtualDiskHandleStateFileShared) != 0)>
    endm
  endif
  IO_COMPLETION_MODIFY_STATE equ 0002h
  IO_COMPLETION_ALL_ACCESS equ (STANDARD_RIGHTS_REQUIRED or SYNCHRONIZE or 3h)
  IO_QOS_MAX_RESERVATION equ 1000000000UL
  ifndef SMB_CCF_APP_INSTANCE_EA_NAME
    SMB_CCF_APP_INSTANCE_EA_NAME equ <"ClusteredApplicationInstance">
  endif
  ifndef _NETWORK_APP_INSTANCE_EA_DEFINED
    _NETWORK_APP_INSTANCE_EA_DEFINED equ <>
    if (NTDDI_VERSION ge NTDDI_WIN10)
      ifndef NETWORK_APP_INSTANCE_CSV_FLAGS_VALID_ONLY_IF_CSV_COORDINATOR
        NETWORK_APP_INSTANCE_CSV_FLAGS_VALID_ONLY_IF_CSV_COORDINATOR equ 00000001h
      endif
      NETWORK_APP_INSTANCE_EA struct
        AppInstanceID GUID <>
        CsvFlags DWORD ?
      NETWORK_APP_INSTANCE_EA ends
      _NETWORK_APP_INSTANCE_EA typedef NETWORK_APP_INSTANCE_EA
      PNETWORK_APP_INSTANCE_EA typedef ptr NETWORK_APP_INSTANCE_EA
    endif
  endif
  DUPLICATE_CLOSE_SOURCE equ 00000001h
  DUPLICATE_SAME_ACCESS equ 00000002h
  DEFINE_GUID GUID_MAX_POWER_SAVINGS, 0A1841308h, 3541h, 4FABh, 0BCh, 81h, 0F7h, 15h, 56h, 0F2h, 0Bh, 4Ah
  DEFINE_GUID GUID_MIN_POWER_SAVINGS, 8C5E7FDAh, 0E8BFh, 4A96h, 9Ah, 85h, 0A6h, 0E2h, 3Ah, 8Ch, 63h, 5Ch
  DEFINE_GUID GUID_TYPICAL_POWER_SAVINGS, 381B4222h, 0F694h, 41F0h, 96h, 85h, 0FFh, 5Bh, 0B2h, 60h, 0DFh, 2Eh
  DEFINE_GUID NO_SUBGROUP_GUID, 0FEA3413Eh, 7E05h, 4911h, 9Ah, 71h, 70h, 03h, 31h, 0F1h, 0C2h, 94h
  DEFINE_GUID ALL_POWERSCHEMES_GUID, 68A1E95Eh, 13EAh, 41E1h, 80h, 11h, 0Ch, 49h, 6Ch, 0A4h, 90h, 0B0h
  DEFINE_GUID GUID_POWERSCHEME_PERSONALITY, 245D8541h, 3943h, 4422h, 0B0h, 25h, 13h, 0A7h, 84h, 0F6h, 79h, 0B7h
  DEFINE_GUID GUID_ACTIVE_POWERSCHEME, 31F9F286h, 5084h, 42FEh, 0B7h, 20h, 2Bh, 02h, 64h, 99h, 37h, 63h
  DEFINE_GUID GUID_IDLE_RESILIENCY_SUBGROUP, 2e601130h, 5351h, 4d9dh, 8eh, 4h, 25h, 29h, 66h, 0bah, 0d0h, 54h
  DEFINE_GUID GUID_IDLE_RESILIENCY_PERIOD, 0c42b79aah, 0aa3ah, 484bh, 0a9h, 8fh, 2ch, 0f3h, 2ah, 0a9h, 0ah, 28h
  DEFINE_GUID GUID_DEEP_SLEEP_ENABLED, 0d502f7eeh, 1dc7h, 4efdh, 0a5h, 5dh, 0f0h, 4bh, 6fh, 5ch, 5h, 45h
  DEFINE_GUID GUID_DEEP_SLEEP_PLATFORM_STATE, 0d23f2fb8h, 9536h, 4038h, 9ch, 94h, 1ch, 0e0h, 2eh, 5ch, 21h, 52h
  DEFINE_GUID GUID_DISK_COALESCING_POWERDOWN_TIMEOUT, 0c36f0eb4h, 2988h, 4a70h, 8eh, 0eeh, 8h, 84h, 0fch, 2ch, 24h, 33h
  DEFINE_GUID GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT, 3166bc41h, 7e98h, 4e03h, 0b3h, 4eh, 0ech, 0fh, 5fh, 2bh, 21h, 8eh
  DEFINE_GUID GUID_VIDEO_SUBGROUP, 7516B95Fh, 0F776h, 4464h, 8Ch, 53h, 06h, 16h, 7Fh, 40h, 0CCh, 99h
  DEFINE_GUID GUID_VIDEO_POWERDOWN_TIMEOUT, 3C0BC021h, 0C8A8h, 4E07h, 0A9h, 73h, 6Bh, 14h, 0CBh, 0CBh, 2Bh, 7Eh
  DEFINE_GUID GUID_VIDEO_ANNOYANCE_TIMEOUT, 82DBCF2Dh, 0CD67h, 40C5h, 0BFh, 0DCh, 9Fh, 1Ah, 5Ch, 0CDh, 46h, 63h
  DEFINE_GUID GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE, 0EED904DFh, 0B142h, 4183h, 0B1h, 0Bh, 5Ah, 11h, 97h, 0A3h, 78h, 64h
  DEFINE_GUID GUID_VIDEO_DIM_TIMEOUT, 17aaa29bh, 8b43h, 4b94h, 0aah, 0feh, 35h, 0f6h, 4dh, 0aah, 0f1h, 0eeh
  DEFINE_GUID GUID_VIDEO_ADAPTIVE_POWERDOWN, 90959D22h, 0D6A1h, 49B9h, 0AFh, 93h, 0BCh, 0E8h, 85h, 0ADh, 33h, 5Bh
  DEFINE_GUID GUID_MONITOR_POWER_ON, 02731015h, 4510h, 4526h, 99h, 0E6h, 0E5h, 0A1h, 7Eh, 0BDh, 1Ah, 0EAh
  DEFINE_GUID GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS, 0aded5e82h, 0b909h, 4619h, 99h, 49h, 0f5h, 0d7h, 1dh, 0ach, 0bh, 0cbh
  DEFINE_GUID GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS, 0f1fbfde2h, 0a960h, 4165h, 9fh, 88h, 50h, 66h, 79h, 11h, 0ceh, 96h
  DEFINE_GUID GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS, 8ffee2c6h, 2d01h, 46beh, 0adh, 0b9h, 39h, 8ah, 0ddh, 0c5h, 0b4h, 0ffh
  DEFINE_GUID GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS, 0FBD9AA66h, 9553h, 4097h, 0BAh, 44h, 0EDh, 6Eh, 9Dh, 65h, 0EAh, 0B8h
  DEFINE_GUID GUID_CONSOLE_DISPLAY_STATE, 6fe69556h, 704ah, 47a0h, 8fh, 24h, 0c2h, 8dh, 93h, 6fh, 0dah, 47h
  DEFINE_GUID GUID_ALLOW_DISPLAY_REQUIRED, 0A9CEB8DAh, 0CD46h, 44FBh, 0A9h, 8Bh, 02h, 0AFh, 69h, 0DEh, 46h, 23h
  DEFINE_GUID GUID_VIDEO_CONSOLE_LOCK_TIMEOUT, 8ec4b3a5h, 6868h, 48c2h, 0beh, 75h, 4fh, 30h, 44h, 0beh, 88h, 0a7h
  DEFINE_GUID GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP, 8619b916h, 0e004h, 4dd8h, 9bh, 66h, 0dah, 0e8h, 6fh, 80h, 66h, 98h
  DEFINE_GUID GUID_NON_ADAPTIVE_INPUT_TIMEOUT, 5adbbfbch, 74eh, 4da1h, 0bah, 38h, 0dbh, 8bh, 36h, 0b2h, 0c8h, 0f3h
  DEFINE_GUID GUID_ADAPTIVE_INPUT_CONTROLLER_STATE, 0e98fae9h, 0f45ah, 4de1h, 0a7h, 57h, 60h, 31h, 0f1h, 97h, 0f6h, 0eah
  DEFINE_GUID GUID_DISK_SUBGROUP, 0012EE47h, 9041h, 4B5Dh, 9Bh, 77h, 53h, 5Fh, 0BAh, 8Bh, 14h, 42h
  DEFINE_GUID GUID_DISK_MAX_POWER, 51dea550h, 0bb38h, 4bc4h, 99h, 1bh, 0eah, 0cfh, 37h, 0beh, 5eh, 0c8h
  DEFINE_GUID GUID_DISK_POWERDOWN_TIMEOUT, 6738E2C4h, 0E8A5h, 4A42h, 0B1h, 6Ah, 0E0h, 40h, 0E7h, 69h, 75h, 6Eh
  DEFINE_GUID GUID_DISK_IDLE_TIMEOUT, 58E39BA8h, 0B8E6h, 4EF6h, 90h, 0D0h, 89h, 0AEh, 32h, 0B2h, 58h, 0D6h
  DEFINE_GUID GUID_DISK_BURST_IGNORE_THRESHOLD, 80e3c60eh, 0bb94h, 4ad8h, 0bbh, 0e0h, 0dh, 31h, 95h, 0efh, 0c6h, 63h
  DEFINE_GUID GUID_DISK_ADAPTIVE_POWERDOWN, 396A32E1h, 499Ah, 40B2h, 91h, 24h, 0A9h, 6Ah, 0FEh, 70h, 76h, 67h
  DEFINE_GUID GUID_SLEEP_SUBGROUP, 238C9FA8h, 0AADh, 41EDh, 83h, 0F4h, 97h, 0BEh, 24h, 2Ch, 8Fh, 20h
  DEFINE_GUID GUID_SLEEP_IDLE_THRESHOLD, 81cd32e0h, 7833h, 44f3h, 87h, 37h, 70h, 81h, 0f3h, 8dh, 1fh, 70h
  DEFINE_GUID GUID_STANDBY_TIMEOUT, 29F6C1DBh, 86DAh, 48C5h, 9Fh, 0DBh, 0F2h, 0B6h, 7Bh, 1Fh, 44h, 0DAh
  DEFINE_GUID GUID_UNATTEND_SLEEP_TIMEOUT, 7bc4a2f9h, 0d8fch, 4469h, 0b0h, 7bh, 33h, 0ebh, 78h, 5ah, 0ach, 0a0h
  DEFINE_GUID GUID_HIBERNATE_TIMEOUT, 9D7815A6h, 7EE4h, 497Eh, 88h, 88h, 51h, 5Ah, 05h, 0F0h, 23h, 64h
  DEFINE_GUID GUID_HIBERNATE_FASTS4_POLICY, 94AC6D29h, 73CEh, 41A6h, 80h, 9Fh, 63h, 63h, 0BAh, 21h, 0B4h, 7Eh
  DEFINE_GUID GUID_CRITICAL_POWER_TRANSITION, 0B7A27025h, 0E569h, 46c2h, 0A5h, 04h, 2Bh, 96h, 0CAh, 0D2h, 25h, 0A1h
  DEFINE_GUID GUID_SYSTEM_AWAYMODE, 98A7F580h, 01F7h, 48AAh, 9Ch, 0Fh, 44h, 35h, 2Ch, 29h, 0E5h, 0C0h
  DEFINE_GUID GUID_ALLOW_AWAYMODE, 25dfa149h, 5dd1h, 4736h, 0b5h, 0abh, 0e8h, 0a3h, 7bh, 5bh, 81h, 87h
  DEFINE_GUID GUID_USER_PRESENCE_PREDICTION, 82011705h, 0fb95h, 4d46h, 8dh, 35h, 40h, 42h, 0b1h, 0d2h, 0dh, 0efh
  DEFINE_GUID GUID_STANDBY_BUDGET_GRACE_PERIOD, 60c07fe1h, 0556h, 45cfh, 99h, 03h, 0d5h, 6eh, 32h, 21h, 2h, 42h
  DEFINE_GUID GUID_STANDBY_BUDGET_PERCENT, 9fe527beh, 1b70h, 48dah, 93h, 0dh, 7bh, 0cfh, 17h, 0b4h, 49h, 90h
  DEFINE_GUID GUID_STANDBY_RESERVE_GRACE_PERIOD, 0c763ee92h, 71e8h, 4127h, 84h, 0ebh, 0f6h, 0edh, 04h, 3ah, 3eh, 3dh
  DEFINE_GUID GUID_STANDBY_RESERVE_TIME, 468FE7E5h, 1158h, 46ECh, 88h, 0bch, 5bh, 96h, 0c9h, 0e4h, 4fh, 0d0h
  DEFINE_GUID GUID_STANDBY_RESET_PERCENT, 49cb11a5h, 56e2h, 4afbh, 9dh, 38h, 3dh, 0f4h, 78h, 72h, 0e2h, 1bh
  DEFINE_GUID GUID_ALLOW_STANDBY_STATES, 0abfc2519h, 3608h, 4c2ah, 94h, 0eah, 17h, 1bh, 0eh, 0d5h, 46h, 0abh
  DEFINE_GUID GUID_ALLOW_RTC_WAKE, 0BD3B718Ah, 0680h, 4D9Dh, 8Ah, 0B2h, 0E1h, 0D2h, 0B4h, 0ACh, 80h, 6Dh
  DEFINE_GUID GUID_LEGACY_RTC_MITIGATION, 1A34BDC3h, 7E6Bh, 442Eh, 0A9h, 0D0h, 64h, 0B6h, 0EFh, 37h, 8Eh, 84h
  DEFINE_GUID GUID_ALLOW_SYSTEM_REQUIRED, 0A4B195F5h, 8225h, 47D8h, 80h, 12h, 9Dh, 41h, 36h, 97h, 86h, 0E2h
  DEFINE_GUID GUID_POWER_SAVING_STATUS, 0e00958c0h, 0c213h, 4aceh, 0ach, 77h, 0feh, 0cch, 0edh, 2eh, 0eeh, 0a5h
  DEFINE_GUID GUID_ENERGY_SAVER_SUBGROUP, 0DE830923h, 0A562h, 41AFh, 0A0h, 86h, 0E3h, 0A2h, 0C6h, 0BAh, 0D2h, 0DAh
  DEFINE_GUID GUID_ENERGY_SAVER_BATTERY_THRESHOLD, 0E69653CAh, 0CF7Fh, 4F05h, 0AAh, 73h, 0CBh, 83h, 3Fh, 0A9h, 0Ah, 0D4h
  DEFINE_GUID GUID_ENERGY_SAVER_BRIGHTNESS, 13D09884h, 0F74Eh, 474Ah, 0A8h, 52h, 0B6h, 0BDh, 0E8h, 0ADh, 03h, 0A8h
  DEFINE_GUID GUID_ENERGY_SAVER_POLICY, 5c5bb349h, 0ad29h, 4ee2h, 9dh, 0bh, 2bh, 25h, 27h, 0fh, 7ah, 81h
  DEFINE_GUID GUID_SYSTEM_BUTTON_SUBGROUP, 4F971E89h, 0EEBDh, 4455h, 0A8h, 0DEh, 9Eh, 59h, 04h, 0Eh, 73h, 47h
  POWERBUTTON_ACTION_INDEX_NOTHING equ 0
  POWERBUTTON_ACTION_INDEX_SLEEP equ 1
  POWERBUTTON_ACTION_INDEX_HIBERNATE equ 2
  POWERBUTTON_ACTION_INDEX_SHUTDOWN equ 3
  POWERBUTTON_ACTION_INDEX_TURN_OFF_THE_DISPLAY equ 4
  POWERBUTTON_ACTION_VALUE_NOTHING equ 0
  POWERBUTTON_ACTION_VALUE_SLEEP equ 2
  POWERBUTTON_ACTION_VALUE_HIBERNATE equ 3
  POWERBUTTON_ACTION_VALUE_SHUTDOWN equ 6
  POWERBUTTON_ACTION_VALUE_TURN_OFF_THE_DISPLAY equ 8
  DEFINE_GUID GUID_POWERBUTTON_ACTION, 7648EFA3h, 0DD9Ch, 4E3Eh, 0B5h, 66h, 50h, 0F9h, 29h, 38h, 62h, 80h
  DEFINE_GUID GUID_SLEEPBUTTON_ACTION, 96996BC0h, 0AD50h, 47ECh, 92h, 3Bh, 6Fh, 41h, 87h, 4Dh, 0D9h, 0EBh
  DEFINE_GUID GUID_USERINTERFACEBUTTON_ACTION, 0A7066653h, 8D6Ch, 40A8h, 91h, 0Eh, 0A1h, 0F5h, 4Bh, 84h, 0C7h, 0E5h
  DEFINE_GUID GUID_LIDCLOSE_ACTION, 5CA83367h, 6E45h, 459Fh, 0A2h, 7Bh, 47h, 6Bh, 1Dh, 01h, 0C9h, 36h
  DEFINE_GUID GUID_LIDOPEN_POWERSTATE, 99FF10E7h, 23B1h, 4C07h, 0A9h, 0D1h, 5Ch, 32h, 06h, 0D7h, 41h, 0B4h
  DEFINE_GUID GUID_BATTERY_SUBGROUP, 0E73A048Dh, 0BF27h, 4F12h, 97h, 31h, 8Bh, 20h, 76h, 0E8h, 89h, 1Fh
  DEFINE_GUID GUID_BATTERY_DISCHARGE_ACTION_0, 637EA02Fh, 0BBCBh, 4015h, 8Eh, 2Ch, 0A1h, 0C7h, 0B9h, 0C0h, 0B5h, 46h
  DEFINE_GUID GUID_BATTERY_DISCHARGE_LEVEL_0, 9A66D8D7h, 4FF7h, 4EF9h, 0B5h, 0A2h, 5Ah, 32h, 6Ch, 0A2h, 0A4h, 69h
  DEFINE_GUID GUID_BATTERY_DISCHARGE_FLAGS_0, 5dbb7c9fh, 38e9h, 40d2h, 97h, 49h, 4fh, 8ah, 0eh, 9fh, 64h, 0fh
  DEFINE_GUID GUID_BATTERY_DISCHARGE_ACTION_1, 0D8742DCBh, 3E6Ah, 4B3Ch, 0B3h, 0FEh, 37h, 46h, 23h, 0CDh, 0CFh, 06h
  DEFINE_GUID GUID_BATTERY_DISCHARGE_LEVEL_1, 8183BA9Ah, 0E910h, 48DAh, 87h, 69h, 14h, 0AEh, 6Dh, 0C1h, 17h, 0Ah
  DEFINE_GUID GUID_BATTERY_DISCHARGE_FLAGS_1, 0bcded951h, 187bh, 4d05h, 0bch, 0cch, 0f7h, 0e5h, 19h, 60h, 0c2h, 58h
  DEFINE_GUID GUID_BATTERY_DISCHARGE_ACTION_2, 421CBA38h, 1A8Eh, 4881h, 0ACh, 89h, 0E3h, 3Ah, 8Bh, 04h, 0ECh, 0E4h
  DEFINE_GUID GUID_BATTERY_DISCHARGE_LEVEL_2, 07A07CA2h, 0ADAFh, 40D7h, 0B0h, 77h, 53h, 3Ah, 0ADh, 0EDh, 1Bh, 0FAh
  DEFINE_GUID GUID_BATTERY_DISCHARGE_FLAGS_2, 7fd2f0c4h, 0feb7h, 4da3h, 81h, 17h, 0e3h, 0fbh, 0edh, 0c4h, 65h, 82h
  DEFINE_GUID GUID_BATTERY_DISCHARGE_ACTION_3, 80472613h, 9780h, 455Eh, 0B3h, 08h, 72h, 0D3h, 00h, 3Ch, 0F2h, 0F8h
  DEFINE_GUID GUID_BATTERY_DISCHARGE_LEVEL_3, 58AFD5A6h, 0C2DDh, 47D2h, 9Fh, 0BFh, 0EFh, 70h, 0CCh, 5Ch, 59h, 65h
  DEFINE_GUID GUID_BATTERY_DISCHARGE_FLAGS_3, 73613ccfh, 0dbfah, 4279h, 83h, 56h, 49h, 35h, 0f6h, 0bfh, 62h, 0f3h
  DEFINE_GUID GUID_PROCESSOR_SETTINGS_SUBGROUP, 54533251h, 82BEh, 4824h, 96h, 0C1h, 47h, 0B6h, 0Bh, 74h, 0Dh, 00h
  DEFINE_GUID GUID_PROCESSOR_THROTTLE_POLICY, 57027304h, 4AF6h, 4104h, 92h, 60h, 0E3h, 0D9h, 52h, 48h, 0FCh, 36h
  PERFSTATE_POLICY_CHANGE_IDEAL equ 0
  PERFSTATE_POLICY_CHANGE_SINGLE equ 1
  PERFSTATE_POLICY_CHANGE_ROCKET equ 2
  PERFSTATE_POLICY_CHANGE_IDEAL_AGGRESSIVE equ 3
  PERFSTATE_POLICY_CHANGE_DECREASE_MAX equ <PERFSTATE_POLICY_CHANGE_ROCKET>
  PERFSTATE_POLICY_CHANGE_INCREASE_MAX equ <PERFSTATE_POLICY_CHANGE_IDEAL_AGGRESSIVE>
  DEFINE_GUID GUID_PROCESSOR_THROTTLE_MAXIMUM, 0BC5038F7h, 23E0h, 4960h, 96h, 0DAh, 33h, 0ABh, 0AFh, 59h, 35h, 0ECh
  DEFINE_GUID GUID_PROCESSOR_THROTTLE_MAXIMUM_1, 0BC5038F7h, 23E0h, 4960h, 96h, 0DAh, 33h, 0ABh, 0AFh, 59h, 35h, 0EDh
  DEFINE_GUID GUID_PROCESSOR_THROTTLE_MINIMUM, 893DEE8Eh, 2BEFh, 41E0h, 89h, 0C6h, 0B5h, 5Dh, 09h, 29h, 96h, 4Ch
  DEFINE_GUID GUID_PROCESSOR_THROTTLE_MINIMUM_1, 893DEE8Eh, 2BEFh, 41E0h, 89h, 0C6h, 0B5h, 5Dh, 09h, 29h, 96h, 4Dh
  DEFINE_GUID GUID_PROCESSOR_FREQUENCY_LIMIT, 75b0ae3fh, 0bce0h, 45a7h, 8ch, 89h, 0c9h, 61h, 1ch, 25h, 0e1h, 00h
  DEFINE_GUID GUID_PROCESSOR_FREQUENCY_LIMIT_1, 75b0ae3fh, 0bce0h, 45a7h, 8ch, 89h, 0c9h, 61h, 1ch, 25h, 0e1h, 01h
  DEFINE_GUID GUID_PROCESSOR_ALLOW_THROTTLING, 3b04d4fdh, 1cc7h, 4f23h, 0abh, 1ch, 0d1h, 33h, 78h, 19h, 0c4h, 0bbh
  PROCESSOR_THROTTLE_DISABLED equ 0
  PROCESSOR_THROTTLE_ENABLED equ 1
  PROCESSOR_THROTTLE_AUTOMATIC equ 2
  DEFINE_GUID GUID_PROCESSOR_IDLESTATE_POLICY, 68f262a7h, 0f621h, 4069h, 0b9h, 0a5h, 48h, 74h, 16h, 9bh, 0e2h, 3ch
  DEFINE_GUID GUID_PROCESSOR_PERFSTATE_POLICY, 0BBDC3814h, 18E9h, 4463h, 8Ah, 55h, 0D1h, 97h, 32h, 7Ch, 45h, 0C0h
  DEFINE_GUID GUID_PROCESSOR_PERF_INCREASE_THRESHOLD, 06cadf0eh, 64edh, 448ah, 89h, 27h, 0ceh, 7bh, 0f9h, 0eh, 0b3h, 5dh
  DEFINE_GUID GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1, 06cadf0eh, 64edh, 448ah, 89h, 27h, 0ceh, 7bh, 0f9h, 0eh, 0b3h, 5eh
  DEFINE_GUID GUID_PROCESSOR_PERF_DECREASE_THRESHOLD, 12a0ab44h, 0fe28h, 4fa9h, 0b3h, 0bdh, 4bh, 64h, 0f4h, 49h, 60h, 0a6h
  DEFINE_GUID GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1, 12a0ab44h, 0fe28h, 4fa9h, 0b3h, 0bdh, 4bh, 64h, 0f4h, 49h, 60h, 0a7h
  DEFINE_GUID GUID_PROCESSOR_PERF_INCREASE_POLICY, 465e1f50h, 0b610h, 473ah, 0abh, 58h, 0h, 0d1h, 7h, 7dh, 0c4h, 18h
  DEFINE_GUID GUID_PROCESSOR_PERF_INCREASE_POLICY_1, 465e1f50h, 0b610h, 473ah, 0abh, 58h, 0h, 0d1h, 7h, 7dh, 0c4h, 19h
  DEFINE_GUID GUID_PROCESSOR_PERF_DECREASE_POLICY, 40fbefc7h, 2e9dh, 4d25h, 0a1h, 85h, 0ch, 0fdh, 85h, 74h, 0bah, 0c6h
  DEFINE_GUID GUID_PROCESSOR_PERF_DECREASE_POLICY_1, 40fbefc7h, 2e9dh, 4d25h, 0a1h, 85h, 0ch, 0fdh, 85h, 74h, 0bah, 0c7h
  DEFINE_GUID GUID_PROCESSOR_PERF_INCREASE_TIME, 984cf492h, 3bedh, 4488h, 0a8h, 0f9h, 42h, 86h, 0c9h, 7bh, 0f5h, 0aah
  DEFINE_GUID GUID_PROCESSOR_PERF_INCREASE_TIME_1, 984cf492h, 3bedh, 4488h, 0a8h, 0f9h, 42h, 86h, 0c9h, 7bh, 0f5h, 0abh
  DEFINE_GUID GUID_PROCESSOR_PERF_DECREASE_TIME, 0d8edeb9bh, 95cfh, 4f95h, 0a7h, 3ch, 0b0h, 61h, 97h, 36h, 93h, 0c8h
  DEFINE_GUID GUID_PROCESSOR_PERF_DECREASE_TIME_1, 0d8edeb9bh, 95cfh, 4f95h, 0a7h, 3ch, 0b0h, 61h, 97h, 36h, 93h, 0c9h
  DEFINE_GUID GUID_PROCESSOR_PERF_TIME_CHECK, 4d2b0152h, 7d5ch, 498bh, 88h, 0e2h, 34h, 34h, 53h, 92h, 0a2h, 0c5h
  DEFINE_GUID GUID_PROCESSOR_PERF_BOOST_POLICY, 45bcc044h, 0d885h, 43e2h, 86h, 5h, 0eeh, 0eh, 0c6h, 0e9h, 6bh, 59h
  PROCESSOR_PERF_BOOST_POLICY_DISABLED equ 0
  PROCESSOR_PERF_BOOST_POLICY_MAX equ 100
  DEFINE_GUID GUID_PROCESSOR_PERF_BOOST_MODE, 0be337238h, 0d82h, 4146h, 0a9h, 60h, 4fh, 37h, 49h, 0d4h, 70h, 0c7h
  PROCESSOR_PERF_BOOST_MODE_DISABLED equ 0
  PROCESSOR_PERF_BOOST_MODE_ENABLED equ 1
  PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE equ 2
  PROCESSOR_PERF_BOOST_MODE_EFFICIENT_ENABLED equ 3
  PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE equ 4
  PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE_AT_GUARANTEED equ 5
  PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE_AT_GUARANTEED equ 6
  PROCESSOR_PERF_BOOST_MODE_MAX equ <PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE_AT_GUARANTEED>
  DEFINE_GUID GUID_PROCESSOR_PERF_AUTONOMOUS_MODE, 8baa4a8ah, 14c6h, 4451h, 8eh, 8bh, 14h, 0bdh, 0bdh, 19h, 75h, 37h
  PROCESSOR_PERF_AUTONOMOUS_MODE_DISABLED equ 0
  PROCESSOR_PERF_AUTONOMOUS_MODE_ENABLED equ 1
;  DEFINE_GUID GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE, 36687f9eh, 0e3a5h, 4dbfh, 0b1h, 0dch, 15h, 0ebh, 38h, 1ch, 68h, 63h
  PROCESSOR_PERF_PERFORMANCE_PREFERENCE equ 0ffh
  PROCESSOR_PERF_ENERGY_PREFERENCE equ 0
  DEFINE_GUID GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW, 0cfeda3d0h, 7697h, 4566h, 0a9h, 22h, 0a9h, 8h, 6ch, 0d4h, 9dh, 0fah
  PROCESSOR_PERF_MINIMUM_ACTIVITY_WINDOW equ 0
  PROCESSOR_PERF_MAXIMUM_ACTIVITY_WINDOW equ 1270000000
  DEFINE_GUID GUID_PROCESSOR_DUTY_CYCLING, 4e4450b3h, 6179h, 4e91h, 0b8h, 0f1h, 5bh, 0b9h, 93h, 8fh, 81h, 0a1h
  PROCESSOR_DUTY_CYCLING_DISABLED equ 0
  PROCESSOR_DUTY_CYCLING_ENABLED equ 1
  DEFINE_GUID GUID_PROCESSOR_IDLE_ALLOW_SCALING, 6c2993b0h, 8f48h, 481fh, 0bch, 0c6h, 0h, 0ddh, 27h, 42h, 0aah, 6h
  DEFINE_GUID GUID_PROCESSOR_IDLE_DISABLE, 5d76a2cah, 0e8c0h, 402fh, 0a1h, 33h, 21h, 58h, 49h, 2dh, 58h, 0adh
  DEFINE_GUID GUID_PROCESSOR_IDLE_STATE_MAXIMUM, 9943e905h, 9a30h, 4ec1h, 9bh, 99h, 44h, 0ddh, 3bh, 76h, 0f7h, 0a2h
  DEFINE_GUID GUID_PROCESSOR_IDLE_TIME_CHECK, 0c4581c31h, 89abh, 4597h, 8eh, 2bh, 9ch, 9ch, 0abh, 44h, 0eh, 6bh
  DEFINE_GUID GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD, 4b92d758h, 5a24h, 4851h, 0a4h, 70h, 81h, 5dh, 78h, 0aeh, 0e1h, 19h
  DEFINE_GUID GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD, 7b224883h, 0b3cch, 4d79h, 81h, 9fh, 83h, 74h, 15h, 2ch, 0beh, 7ch
  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD, 0df142941h, 20f3h, 4edfh, 9ah, 4ah, 9ch, 83h, 0d3h, 0d7h, 17h, 0d1h
  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD, 68dd2f27h, 0a4ceh, 4e11h, 84h, 87h, 37h, 94h, 0e4h, 13h, 5dh, 0fah
  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY, 0c7be0679h, 2817h, 4d69h, 9dh, 02h, 51h, 9ah, 53h, 7eh, 0d0h, 0c6h
  CORE_PARKING_POLICY_CHANGE_IDEAL equ 0
  CORE_PARKING_POLICY_CHANGE_SINGLE equ 1
  CORE_PARKING_POLICY_CHANGE_ROCKET equ 2
  CORE_PARKING_POLICY_CHANGE_MULTISTEP equ 3
  CORE_PARKING_POLICY_CHANGE_MAX equ <CORE_PARKING_POLICY_CHANGE_MULTISTEP>
  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY, 71021b41h, 0c749h, 4d21h, 0beh, 74h, 0a0h, 0fh, 33h, 5dh, 58h, 2bh
  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_MAX_CORES, 0ea062031h, 0e34h, 4ff1h, 9bh, 6dh, 0ebh, 10h, 59h, 33h, 40h, 28h
  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1, 0ea062031h, 0e34h, 4ff1h, 9bh, 6dh, 0ebh, 10h, 59h, 33h, 40h, 29h
  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_MIN_CORES, 0cc5b647h, 0c1dfh, 4637h, 89h, 1ah, 0deh, 0c3h, 5ch, 31h, 85h, 83h
  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1, 0cc5b647h, 0c1dfh, 4637h, 89h, 1ah, 0deh, 0c3h, 5ch, 31h, 85h, 84h
  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME, 2ddd5a84h, 5a71h, 437eh, 91h, 2ah, 0dbh, 0bh, 8ch, 78h, 87h, 32h
  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME, 0dfd10d17h, 0d5ebh, 45ddh, 87h, 7ah, 9ah, 34h, 0ddh, 0d1h, 5ch, 82h
;  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR, 8f7b45e3h, 0c393h, 480ah, 87h, 8ch, 0f6h, 7ah, 0c3h, 0d0h, 70h, 82h
;  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD, 5b33697bh, 0e89dh, 4d38h, 0aah, 46h, 9eh, 7dh, 0fbh, 7ch, 0d2h, 0f9h
  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING, 0e70867f1h, 0fa2fh, 4f4eh, 0aeh, 0a1h, 4dh, 8ah, 0bh, 0a2h, 3bh, 20h
;  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR, 1299023ch, 0bc28h, 4f0ah, 81h, 0ech, 0d3h, 29h, 5ah, 8dh, 81h, 5dh
;  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD, 9ac18e92h, 0aa3ch, 4e27h, 0b3h, 07h, 01h, 0aeh, 37h, 30h, 71h, 29h
;  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING, 8809c2d8h, 0b155h, 42d4h, 0bch, 0dah, 0dh, 34h, 56h, 51h, 0b1h, 0dbh
;  DEFINE_GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD, 943c8cb6h, 6f93h, 4227h, 0adh, 87h, 0e9h, 0a3h, 0feh, 0ech, 08h, 0d1h
  DEFINE_GUID GUID_PROCESSOR_PARKING_CORE_OVERRIDE, 0a55612aah, 0f624h, 42c6h, 0a4h, 43h, 73h, 97h, 0d0h, 64h, 0c0h, 4fh
  DEFINE_GUID GUID_PROCESSOR_PARKING_PERF_STATE, 447235c7h, 6a8dh, 4cc0h, 8eh, 24h, 9eh, 0afh, 70h, 0b9h, 6eh, 2bh
  DEFINE_GUID GUID_PROCESSOR_PARKING_PERF_STATE_1, 447235c7h, 6a8dh, 4cc0h, 8eh, 24h, 9eh, 0afh, 70h, 0b9h, 6eh, 2ch
  DEFINE_GUID GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD, 2430ab6fh, 0a520h, 44a2h, 96h, 01h, 0f7h, 0f2h, 3bh, 51h, 34h, 0b1h
  DEFINE_GUID GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD, 0f735a673h, 2066h, 4f80h, 0a0h, 0c5h, 0ddh, 0eeh, 0ch, 0f1h, 0bfh, 5dh
  DEFINE_GUID GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD, 4bdaf4e9h, 0d103h, 46d7h, 0a5h, 0f0h, 62h, 80h, 12h, 16h, 16h, 0efh
  DEFINE_GUID GUID_PROCESSOR_PERF_HISTORY, 7d24baa7h, 0b84h, 480fh, 84h, 0ch, 1bh, 07h, 43h, 0c0h, 0fh, 5fh
  DEFINE_GUID GUID_PROCESSOR_PERF_HISTORY_1, 7d24baa7h, 0b84h, 480fh, 84h, 0ch, 1bh, 07h, 43h, 0c0h, 0fh, 60h
  DEFINE_GUID GUID_PROCESSOR_PERF_INCREASE_HISTORY, 99b3ef01h, 752fh, 46a1h, 80h, 0fbh, 77h, 30h, 1h, 1fh, 23h, 54h
  DEFINE_GUID GUID_PROCESSOR_PERF_DECREASE_HISTORY, 300f6f8h, 0abd6h, 45a9h, 0b7h, 4fh, 49h, 8h, 69h, 1ah, 40h, 0b5h
  DEFINE_GUID GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY, 77d7f282h, 8f1ah, 42cdh, 85h, 37h, 45h, 45h, 0ah, 83h, 9bh, 0e8h
  DEFINE_GUID GUID_PROCESSOR_PERF_LATENCY_HINT, 0822df31h, 9c83h, 441ch, 0a0h, 79h, 0dh, 0e4h, 0cfh, 00h, 9ch, 7bh
  DEFINE_GUID GUID_PROCESSOR_PERF_LATENCY_HINT_PERF, 619b7505h, 3bh, 4e82h, 0b7h, 0a6h, 4dh, 0d2h, 9ch, 30h, 9h, 71h
  DEFINE_GUID GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1, 619b7505h, 3bh, 4e82h, 0b7h, 0a6h, 4dh, 0d2h, 9ch, 30h, 9h, 72h
  DEFINE_GUID GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK, 616cdaa5h, 695eh, 4545h, 97h, 0adh, 97h, 0dch, 2dh, 1bh, 0ddh, 88h
  DEFINE_GUID GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1, 616cdaa5h, 695eh, 4545h, 97h, 0adh, 97h, 0dch, 2dh, 1bh, 0ddh, 89h
  DEFINE_GUID GUID_PROCESSOR_DISTRIBUTE_UTILITY, 0e0007330h, 0f589h, 42edh, 0a4h, 01h, 5dh, 0dbh, 10h, 0e7h, 85h, 0d3h
  DEFINE_GUID GUID_PROCESSOR_HETEROGENEOUS_POLICY, 7f2f5cfah, 0f10ch, 4823h, 0b5h, 0e1h, 0e9h, 3ah, 0e8h, 5fh, 46h, 0b5h
  DEFINE_GUID GUID_PROCESSOR_HETERO_DECREASE_TIME, 7f2492b6h, 60b1h, 45e5h, 0aeh, 55h, 77h, 3fh, 8ch, 0d5h, 0cah, 0ech
  DEFINE_GUID GUID_PROCESSOR_HETERO_INCREASE_TIME, 4009efa7h, 0e72dh, 4cbah, 9eh, 0dfh, 91h, 08h, 4eh, 0a8h, 0cbh, 0c3h
  DEFINE_GUID GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD, 0f8861c27h, 95e7h, 475ch, 86h, 5bh, 13h, 0c0h, 0cbh, 3fh, 9dh, 6bh
  DEFINE_GUID GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD, 0b000397dh, 9b0bh, 483dh, 98h, 0c9h, 69h, 2ah, 60h, 60h, 0cfh, 0bfh
  DEFINE_GUID GUID_PROCESSOR_CLASS0_FLOOR_PERF, 0fddc842bh, 8364h, 4edch, 94h, 0cfh, 0c1h, 7fh, 60h, 0deh, 1ch, 80h
  DEFINE_GUID GUID_PROCESSOR_CLASS1_INITIAL_PERF, 1facfc65h, 0a930h, 4bc5h, 9fh, 38h, 50h, 4eh, 0c0h, 97h, 0bbh, 0c0h
  DEFINE_GUID GUID_PROCESSOR_THREAD_SCHEDULING_POLICY, 93b8b6dch, 698h, 4d1ch, 9eh, 0e4h, 6h, 44h, 0e9h, 0h, 0c8h, 5dh
  DEFINE_GUID GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY, 0bae08b81h, 2d5eh, 4688h, 0adh, 6ah, 13h, 24h, 33h, 56h, 65h, 4bh
  DEFINE_GUID GUID_SYSTEM_COOLING_POLICY, 94D3A615h, 0A899h, 4AC5h, 0AEh, 2Bh, 0E4h, 0D8h, 0F6h, 34h, 36h, 7Fh
  DEFINE_GUID GUID_LOCK_CONSOLE_ON_WAKE, 0E796BDBh, 100Dh, 47D6h, 0A2h, 0D5h, 0F7h, 0D2h, 0DAh, 0A5h, 1Fh, 51h
  DEFINE_GUID GUID_DEVICE_IDLE_POLICY, 4faab71ah, 92e5h, 4726h, 0b5h, 31h, 22h, 45h, 59h, 67h, 2dh, 19h
  POWER_DEVICE_IDLE_POLICY_PERFORMANCE equ 0
  POWER_DEVICE_IDLE_POLICY_CONSERVATIVE equ 1
  DEFINE_GUID GUID_CONNECTIVITY_IN_STANDBY, 0F15576E8h, 98B7h, 4186h, 0B9h, 44h, 0EAh, 0FAh, 66h, 44h, 02h, 0D9h
  POWER_CONNECTIVITY_IN_STANDBY_DISABLED equ 0
  POWER_CONNECTIVITY_IN_STANDBY_ENABLED equ 1
  POWER_CONNECTIVITY_IN_STANDBY_SYSTEM_MANAGED equ 2
  DEFINE_GUID GUID_DISCONNECTED_STANDBY_MODE, 68AFB2D9h, 0EE95h, 47A8h, 8Fh, 50h, 41h, 15h, 08h, 80h, 73h, 0B1h
  POWER_DISCONNECTED_STANDBY_MODE_NORMAL equ 0
  POWER_DISCONNECTED_STANDBY_MODE_AGGRESSIVE equ 1
  DEFINE_GUID GUID_ACDC_POWER_SOURCE, 5D3E9A59h, 0E9D5h, 4B00h, 0A6h, 0BDh, 0FFh, 34h, 0FFh, 51h, 65h, 48h
  DEFINE_GUID GUID_LIDSWITCH_STATE_CHANGE, 0BA3E0F4Dh, 0B817h, 4094h, 0A2h, 0D1h, 0D5h, 63h, 79h, 0E6h, 0A0h, 0F3h
  DEFINE_GUID GUID_BATTERY_PERCENTAGE_REMAINING, 0A7AD8041h, 0B45Ah, 4CAEh, 87h, 0A3h, 0EEh, 0CBh, 0B4h, 68h, 0A9h, 0E1h
  DEFINE_GUID GUID_BATTERY_COUNT, 7d263f15h, 0fca4h, 49e5h, 85h, 4bh, 0a9h, 0f2h, 0bfh, 0bdh, 5ch, 24h
  DEFINE_GUID GUID_GLOBAL_USER_PRESENCE, 786e8a1dh, 0b427h, 4344h, 92h, 7h, 9h, 0e7h, 0bh, 0dch, 0beh, 0a9h
  DEFINE_GUID GUID_SESSION_DISPLAY_STATUS, 2b84c20eh, 0ad23h, 4ddfh, 93h, 0dbh, 5h, 0ffh, 0bdh, 7eh, 0fch, 0a5h
  DEFINE_GUID GUID_SESSION_USER_PRESENCE, 3c0f4548h, 0c03fh, 4c4dh, 0b9h, 0f2h, 23h, 7eh, 0deh, 68h, 63h, 76h
  DEFINE_GUID GUID_IDLE_BACKGROUND_TASK, 515C31D8h, 0F734h, 163Dh, 0A0h, 0FDh, 11h, 0A0h, 8Ch, 91h, 0E8h, 0F1h
  DEFINE_GUID GUID_BACKGROUND_TASK_NOTIFICATION, 0CF23F240h, 2A54h, 48D8h, 0B1h, 14h, 0DEh, 15h, 18h, 0FFh, 05h, 2Eh
  DEFINE_GUID GUID_APPLAUNCH_BUTTON, 1A689231h, 7399h, 4E9Ah, 8Fh, 99h, 0B7h, 1Fh, 99h, 9Dh, 0B3h, 0FAh
  DEFINE_GUID GUID_PCIEXPRESS_SETTINGS_SUBGROUP, 501a4d13h, 42afh, 4429h, 9fh, 0d1h, 0a8h, 21h, 8ch, 26h, 8eh, 20h
  DEFINE_GUID GUID_PCIEXPRESS_ASPM_POLICY, 0ee12f906h, 0d277h, 404bh, 0b6h, 0dah, 0e5h, 0fah, 1ah, 57h, 6dh, 0f5h
  DEFINE_GUID GUID_ENABLE_SWITCH_FORCED_SHUTDOWN, 833a6b62h, 0dfa4h, 46d1h, 82h, 0f8h, 0e0h, 9eh, 34h, 0d0h, 29h, 0d6h
  DEFINE_GUID GUID_INTSTEER_SUBGROUP, 48672f38h, 7a9ah, 4bb2h, 8bh, 0f8h, 3dh, 85h, 0beh, 19h, 0deh, 4eh
  DEFINE_GUID GUID_INTSTEER_MODE, 2bfc24f9h, 5ea2h, 4801h, 82h, 13h, 3dh, 0bah, 0e0h, 1ah, 0a3h, 9dh
  DEFINE_GUID GUID_INTSTEER_LOAD_PER_PROC_TRIGGER, 73cde64dh, 0d720h, 4bb2h, 0a8h, 60h, 0c7h, 55h, 0afh, 0e7h, 7eh, 0f2h
  DEFINE_GUID GUID_INTSTEER_TIME_UNPARK_TRIGGER, 0d6ba4903h, 386fh, 4c2ch, 8ah, 0dbh, 5ch, 21h, 0b3h, 32h, 8dh, 25h
  DEFINE_GUID GUID_GRAPHICS_SUBGROUP, 5fb4938dh, 1ee8h, 4b0fh, 9ah, 3ch, 50h, 36h, 0b0h, 0abh, 99h, 5ch
  DEFINE_GUID GUID_GPU_PREFERENCE_POLICY, 0dd848b2ah, 8a5dh, 4451h, 9ah, 0e2h, 39h, 0cdh, 41h, 65h, 8fh, 6ch
  DEFINE_GUID GUID_MIXED_REALITY_MODE, 1e626b4eh, 0cf04h, 4f8dh, 9ch, 0c7h, 0c9h, 7ch, 5bh, 0fh, 23h, 91h
  DEFINE_GUID GUID_SPR_ACTIVE_SESSION_CHANGE, 0e24ce38h, 0c393h, 4742h, 0bdh, 0b1h, 74h, 4fh, 4bh, 9eh, 0e0h, 8eh
  SYSTEM_POWER_STATE typedef SDWORD
  PowerSystemUnspecified equ 0
  PowerSystemWorking equ 1
  PowerSystemSleeping1 equ 2
  PowerSystemSleeping2 equ 3
  PowerSystemSleeping3 equ 4
  PowerSystemHibernate equ 5
  PowerSystemShutdown equ 6
  PowerSystemMaximum equ 7
  _SYSTEM_POWER_STATE typedef SYSTEM_POWER_STATE
  PSYSTEM_POWER_STATE typedef ptr SYSTEM_POWER_STATE
  POWER_SYSTEM_MAXIMUM equ 7
  POWER_ACTION typedef SDWORD
  PowerActionNone equ 0
  PowerActionReserved equ 1
  PowerActionSleep equ 2
  PowerActionHibernate equ 3
  PowerActionShutdown equ 4
  PowerActionShutdownReset equ 5
  PowerActionShutdownOff equ 6
  PowerActionWarmEject equ 7
  PowerActionDisplayOff equ 8
  PPOWER_ACTION typedef ptr POWER_ACTION
  DEVICE_POWER_STATE typedef SDWORD
  PowerDeviceUnspecified equ 0
  PowerDeviceD0 equ 1
  PowerDeviceD1 equ 2
  PowerDeviceD2 equ 3
  PowerDeviceD3 equ 4
  PowerDeviceMaximum equ 5
  _DEVICE_POWER_STATE typedef DEVICE_POWER_STATE
  PDEVICE_POWER_STATE typedef ptr DEVICE_POWER_STATE
  MONITOR_DISPLAY_STATE typedef SDWORD
  PowerMonitorOff equ 0
  PowerMonitorOn equ 1
  PowerMonitorDim equ 2
  _MONITOR_DISPLAY_STATE typedef MONITOR_DISPLAY_STATE
  PMONITOR_DISPLAY_STATE typedef ptr MONITOR_DISPLAY_STATE
  USER_ACTIVITY_PRESENCE typedef SDWORD
  PowerUserPresent equ 0
  PowerUserNotPresent equ 1
  PowerUserInactive equ 2
  PowerUserMaximum equ 3
  PowerUserInvalid equ PowerUserMaximum
  _USER_ACTIVITY_PRESENCE typedef USER_ACTIVITY_PRESENCE
  PUSER_ACTIVITY_PRESENCE typedef ptr USER_ACTIVITY_PRESENCE
  ES_SYSTEM_REQUIRED equ (00000001h)
  ES_DISPLAY_REQUIRED equ (00000002h)
  ES_USER_PRESENT equ (00000004h)
  ES_AWAYMODE_REQUIRED equ (00000040h)
  ES_CONTINUOUS equ (80000000h)
  EXECUTION_STATE typedef DWORD
  PEXECUTION_STATE typedef ptr DWORD
  LATENCY_TIME typedef SDWORD
  LT_DONT_CARE equ 0
  LT_LOWEST_LATENCY equ 1
  DIAGNOSTIC_REASON_VERSION equ 0
  DIAGNOSTIC_REASON_SIMPLE_STRING equ 00000001h
  DIAGNOSTIC_REASON_DETAILED_STRING equ 00000002h
  DIAGNOSTIC_REASON_NOT_SPECIFIED equ 80000000h
  DIAGNOSTIC_REASON_INVALID_FLAGS equ (not 80000007h)
  POWER_REQUEST_CONTEXT_VERSION equ <DIAGNOSTIC_REASON_VERSION>
  POWER_REQUEST_CONTEXT_SIMPLE_STRING equ <DIAGNOSTIC_REASON_SIMPLE_STRING>
  POWER_REQUEST_CONTEXT_DETAILED_STRING equ <DIAGNOSTIC_REASON_DETAILED_STRING>
  POWER_REQUEST_TYPE typedef SDWORD
  PowerRequestDisplayRequired equ 0
  PowerRequestSystemRequired equ 1
  PowerRequestAwayModeRequired equ 2
  PowerRequestExecutionRequired equ 3
  _POWER_REQUEST_TYPE typedef POWER_REQUEST_TYPE
  PPOWER_REQUEST_TYPE typedef ptr POWER_REQUEST_TYPE
  if (NTDDI_VERSION ge NTDDI_WINXP)
    PDCAP_D0_SUPPORTED equ 00000001h
    PDCAP_D1_SUPPORTED equ 00000002h
    PDCAP_D2_SUPPORTED equ 00000004h
    PDCAP_D3_SUPPORTED equ 00000008h
    PDCAP_WAKE_FROM_D0_SUPPORTED equ 00000010h
    PDCAP_WAKE_FROM_D1_SUPPORTED equ 00000020h
    PDCAP_WAKE_FROM_D2_SUPPORTED equ 00000040h
    PDCAP_WAKE_FROM_D3_SUPPORTED equ 00000080h
    PDCAP_WARM_EJECT_SUPPORTED equ 00000100h
    CM_POWER_DATA struct
      PD_Size DWORD ?
      PD_MostRecentPowerState DEVICE_POWER_STATE ?
      PD_Capabilities DWORD ?
      PD_D1Latency DWORD ?
      PD_D2Latency DWORD ?
      PD_D3Latency DWORD ?
      PD_PowerStateMapping DEVICE_POWER_STATE POWER_SYSTEM_MAXIMUM dup (?)
      PD_DeepestSystemWake SYSTEM_POWER_STATE ?
    CM_POWER_DATA ends
    CM_Power_Data_s typedef CM_POWER_DATA
    PCM_POWER_DATA typedef ptr CM_POWER_DATA
  endif
  POWER_INFORMATION_LEVEL typedef SDWORD
  SystemPowerPolicyAc equ 0
  SystemPowerPolicyDc equ 1
  VerifySystemPolicyAc equ 2
  VerifySystemPolicyDc equ 3
  SystemPowerCapabilities equ 4
  SystemBatteryState equ 5
  SystemPowerStateHandler equ 6
  ProcessorStateHandler equ 7
  SystemPowerPolicyCurrent equ 8
  AdministratorPowerPolicy equ 9
  SystemReserveHiberFile equ 10
  ProcessorInformation equ 11
  SystemPowerInformation equ 12
  ProcessorStateHandler2 equ 13
  LastWakeTime equ 14
  LastSleepTime equ 15
  SystemExecutionState equ 16
  SystemPowerStateNotifyHandler equ 17
  ProcessorPowerPolicyAc equ 18
  ProcessorPowerPolicyDc equ 19
  VerifyProcessorPowerPolicyAc equ 20
  VerifyProcessorPowerPolicyDc equ 21
  ProcessorPowerPolicyCurrent equ 22
  SystemPowerStateLogging equ 23
  SystemPowerLoggingEntry equ 24
  SetPowerSettingValue equ 25
  NotifyUserPowerSetting equ 26
  PowerInformationLevelUnused0 equ 27
  SystemMonitorHiberBootPowerOff equ 28
  SystemVideoState equ 29
  TraceApplicationPowerMessage equ 30
  TraceApplicationPowerMessageEnd equ 31
  ProcessorPerfStates equ 32
  ProcessorIdleStates equ 33
  ProcessorCap equ 34
  SystemWakeSource equ 35
  SystemHiberFileInformation equ 36
  TraceServicePowerMessage equ 37
  ProcessorLoad equ 38
  PowerShutdownNotification equ 39
  MonitorCapabilities equ 40
  SessionPowerInit equ 41
  SessionDisplayState equ 42
  PowerRequestCreate equ 43
  PowerRequestAction equ 44
  GetPowerRequestList equ 45
  ProcessorInformationEx equ 46
  NotifyUserModeLegacyPowerEvent equ 47
  GroupPark equ 48
  ProcessorIdleDomains equ 49
  WakeTimerList equ 50
  SystemHiberFileSize equ 51
  ProcessorIdleStatesHv equ 52
  ProcessorPerfStatesHv equ 53
  ProcessorPerfCapHv equ 54
  ProcessorSetIdle equ 55
  LogicalProcessorIdling equ 56
  UserPresence equ 57
  PowerSettingNotificationName equ 58
  GetPowerSettingValue equ 59
  IdleResiliency equ 60
  SessionRITState equ 61
  SessionConnectNotification equ 62
  SessionPowerCleanup equ 63
  SessionLockState equ 64
  SystemHiberbootState equ 65
  PlatformInformation equ 66
  PdcInvocation equ 67
  MonitorInvocation equ 68
  FirmwareTableInformationRegistered equ 69
  SetShutdownSelectedTime equ 70
  SuspendResumeInvocation equ 71
  PlmPowerRequestCreate equ 72
  ScreenOff equ 73
  CsDeviceNotification equ 74
  PlatformRole equ 75
  LastResumePerformance equ 76
  DisplayBurst equ 77
  ExitLatencySamplingPercentage equ 78
  RegisterSpmPowerSettings equ 79
  PlatformIdleStates equ 80
  ProcessorIdleVeto equ 81
  PlatformIdleVeto equ 82
  SystemBatteryStatePrecise equ 83
  ThermalEvent equ 84
  PowerRequestActionInternal equ 85
  BatteryDeviceState equ 86
  PowerInformationInternal equ 87
  ThermalStandby equ 88
  SystemHiberFileType equ 89
  PhysicalPowerButtonPress equ 90
  QueryPotentialDripsConstraint equ 91
  EnergyTrackerCreate equ 92
  EnergyTrackerQuery equ 93
  UpdateBlackBoxRecorder equ 94
  PowerInformationLevelMaximum equ 95
  POWER_USER_PRESENCE_TYPE typedef SDWORD
  UserNotPresent equ 0
  UserPresent equ 1
  UserUnknown equ 0ffh
  PPOWER_USER_PRESENCE_TYPE typedef ptr POWER_USER_PRESENCE_TYPE
  POWER_USER_PRESENCE struct
    UserPresence POWER_USER_PRESENCE_TYPE ?
  POWER_USER_PRESENCE ends
  _POWER_USER_PRESENCE typedef POWER_USER_PRESENCE
  PPOWER_USER_PRESENCE typedef ptr POWER_USER_PRESENCE
  POWER_SESSION_CONNECT struct
    Connected BOOLEAN ?
    Console BOOLEAN ?
  POWER_SESSION_CONNECT ends
  _POWER_SESSION_CONNECT typedef POWER_SESSION_CONNECT
  PPOWER_SESSION_CONNECT typedef ptr POWER_SESSION_CONNECT
  POWER_SESSION_TIMEOUTS struct
    InputTimeout DWORD ?
    DisplayTimeout DWORD ?
  POWER_SESSION_TIMEOUTS ends
  _POWER_SESSION_TIMEOUTS typedef POWER_SESSION_TIMEOUTS
  PPOWER_SESSION_TIMEOUTS typedef ptr POWER_SESSION_TIMEOUTS
  POWER_SESSION_RIT_STATE struct
    Active BOOLEAN ?
    LastInputTime DWORD ?
  POWER_SESSION_RIT_STATE ends
  _POWER_SESSION_RIT_STATE typedef POWER_SESSION_RIT_STATE
  PPOWER_SESSION_RIT_STATE typedef ptr POWER_SESSION_RIT_STATE
  POWER_SESSION_WINLOGON struct
    SessionId DWORD ?
    Console BOOLEAN ?
    Locked BOOLEAN ?
  POWER_SESSION_WINLOGON ends
  _POWER_SESSION_WINLOGON typedef POWER_SESSION_WINLOGON
  PPOWER_SESSION_WINLOGON typedef ptr POWER_SESSION_WINLOGON
  POWER_IDLE_RESILIENCY struct
    CoalescingTimeout DWORD ?
    IdleResiliencyPeriod DWORD ?
  POWER_IDLE_RESILIENCY ends
  _POWER_IDLE_RESILIENCY typedef POWER_IDLE_RESILIENCY
  PPOWER_IDLE_RESILIENCY typedef ptr POWER_IDLE_RESILIENCY
  POWER_MONITOR_REQUEST_REASON typedef SDWORD
  MonitorRequestReasonUnknown equ 0
  MonitorRequestReasonPowerButton equ 1
  MonitorRequestReasonRemoteConnection equ 2
  MonitorRequestReasonScMonitorpower equ 3
  MonitorRequestReasonUserInput equ 4
  MonitorRequestReasonAcDcDisplayBurst equ 5
  MonitorRequestReasonUserDisplayBurst equ 6
  MonitorRequestReasonPoSetSystemState equ 7
  MonitorRequestReasonSetThreadExecutionState equ 8
  MonitorRequestReasonFullWake equ 9
  MonitorRequestReasonSessionUnlock equ 10
  MonitorRequestReasonScreenOffRequest equ 11
  MonitorRequestReasonIdleTimeout equ 12
  MonitorRequestReasonPolicyChange equ 13
  MonitorRequestReasonSleepButton equ 14
  MonitorRequestReasonLid equ 15
  MonitorRequestReasonBatteryCountChange equ 16
  MonitorRequestReasonGracePeriod equ 17
  MonitorRequestReasonPnP equ 18
  MonitorRequestReasonDP equ 19
  MonitorRequestReasonSxTransition equ 20
  MonitorRequestReasonSystemIdle equ 21
  MonitorRequestReasonNearProximity equ 22
  MonitorRequestReasonThermalStandby equ 23
  MonitorRequestReasonResumePdc equ 24
  MonitorRequestReasonResumeS4 equ 25
  MonitorRequestReasonTerminal equ 26
  MonitorRequestReasonPdcSignal equ 27
  MonitorRequestReasonAcDcDisplayBurstSuppressed equ 28
  MonitorRequestReasonSystemStateEntered equ 29
  MonitorRequestReasonWinrt equ 30
  MonitorRequestReasonUserInputKeyboard equ 31
  MonitorRequestReasonUserInputMouse equ 32
  MonitorRequestReasonUserInputTouch equ 33
  MonitorRequestReasonUserInputPen equ 34
  MonitorRequestReasonUserInputAccelerometer equ 35
  MonitorRequestReasonUserInputHid equ 36
  MonitorRequestReasonUserInputPoUserPresent equ 37
  MonitorRequestReasonUserInputSessionSwitch equ 38
  MonitorRequestReasonUserInputInitialization equ 39
  MonitorRequestReasonPdcSignalWindowsMobilePwrNotif equ 40
  MonitorRequestReasonPdcSignalWindowsMobileShell equ 41
  MonitorRequestReasonPdcSignalHeyCortana equ 42
  MonitorRequestReasonPdcSignalHolographicShell equ 43
  MonitorRequestReasonPdcSignalFingerprint equ 44
  MonitorRequestReasonMax equ 45
  POWER_MONITOR_REQUEST_TYPE typedef SDWORD
  MonitorRequestTypeOff equ 0
  MonitorRequestTypeOnAndPresent equ 1
  MonitorRequestTypeToggleOn equ 2
  _POWER_MONITOR_REQUEST_TYPE typedef POWER_MONITOR_REQUEST_TYPE
  POWER_MONITOR_INVOCATION struct
    Console BOOLEAN ?
    RequestReason POWER_MONITOR_REQUEST_REASON ?
  POWER_MONITOR_INVOCATION ends
  _POWER_MONITOR_INVOCATION typedef POWER_MONITOR_INVOCATION
  PPOWER_MONITOR_INVOCATION typedef ptr POWER_MONITOR_INVOCATION
  RESUME_PERFORMANCE struct
    PostTimeMs DWORD ?
    TotalResumeTimeMs ULONGLONG ?
    ResumeCompleteTimestamp ULONGLONG ?
  RESUME_PERFORMANCE ends
  _RESUME_PERFORMANCE typedef RESUME_PERFORMANCE
  PRESUME_PERFORMANCE typedef ptr RESUME_PERFORMANCE
  SYSTEM_POWER_CONDITION typedef SDWORD
  PoAc equ 0
  PoDc equ 1
  PoHot equ 2
  PoConditionMaximum equ 3
  SET_POWER_SETTING_VALUE struct
    Version DWORD ?
    Guid GUID <>
    PowerCondition SYSTEM_POWER_CONDITION ?
    DataLength DWORD ?
    Data BYTE ANYSIZE_ARRAY dup (?)
  SET_POWER_SETTING_VALUE ends
  PSET_POWER_SETTING_VALUE typedef ptr SET_POWER_SETTING_VALUE
  POWER_SETTING_VALUE_VERSION equ 1h
  NOTIFY_USER_POWER_SETTING struct
    Guid GUID <>
  NOTIFY_USER_POWER_SETTING ends
  PNOTIFY_USER_POWER_SETTING typedef ptr NOTIFY_USER_POWER_SETTING
  APPLICATIONLAUNCH_SETTING_VALUE struct
    ActivationTime LARGE_INTEGER <>
    Flags DWORD ?
    ButtonInstanceID DWORD ?
  APPLICATIONLAUNCH_SETTING_VALUE ends
  _APPLICATIONLAUNCH_SETTING_VALUE typedef APPLICATIONLAUNCH_SETTING_VALUE
  PAPPLICATIONLAUNCH_SETTING_VALUE typedef ptr APPLICATIONLAUNCH_SETTING_VALUE
  POWER_PLATFORM_ROLE typedef SDWORD
  PlatformRoleUnspecified equ 0
  PlatformRoleDesktop equ 1
  PlatformRoleMobile equ 2
  PlatformRoleWorkstation equ 3
  PlatformRoleEnterpriseServer equ 4
  PlatformRoleSOHOServer equ 5
  PlatformRoleAppliancePC equ 6
  PlatformRolePerformanceServer equ 7
  PlatformRoleSlate equ 8
  PlatformRoleMaximum equ 9
  _POWER_PLATFORM_ROLE typedef POWER_PLATFORM_ROLE
  PPOWER_PLATFORM_ROLE typedef ptr POWER_PLATFORM_ROLE
  POWER_PLATFORM_ROLE_V1 equ 00000001h
  POWER_PLATFORM_ROLE_V1_MAX equ (PlatformRolePerformanceServer + 1)
  POWER_PLATFORM_ROLE_V2 equ 00000002h
  POWER_PLATFORM_ROLE_V2_MAX equ (PlatformRoleSlate + 1)
  if (NTDDI_VERSION ge NTDDI_WIN8)
    POWER_PLATFORM_ROLE_VERSION equ <POWER_PLATFORM_ROLE_V2>
    POWER_PLATFORM_ROLE_VERSION_MAX equ <POWER_PLATFORM_ROLE_V2_MAX>
  else
    POWER_PLATFORM_ROLE_VERSION equ <POWER_PLATFORM_ROLE_V1>
    POWER_PLATFORM_ROLE_VERSION_MAX equ <POWER_PLATFORM_ROLE_V1_MAX>
  endif
  POWER_PLATFORM_INFORMATION struct
    AoAc BOOLEAN ?
  POWER_PLATFORM_INFORMATION ends
  _POWER_PLATFORM_INFORMATION typedef POWER_PLATFORM_INFORMATION
  PPOWER_PLATFORM_INFORMATION typedef ptr POWER_PLATFORM_INFORMATION
  if (NTDDI_VERSION ge NTDDI_WINXP) or  not Defined(_BATCLASS_)
    BATTERY_REPORTING_SCALE struct
      Granularity DWORD ?
      Capacity DWORD ?
    BATTERY_REPORTING_SCALE ends
    PBATTERY_REPORTING_SCALE typedef ptr BATTERY_REPORTING_SCALE
  endif
  PPM_WMI_LEGACY_PERFSTATE struct
    Frequency DWORD ?
    Flags DWORD ?
    PercentFrequency DWORD ?
  PPM_WMI_LEGACY_PERFSTATE ends
  PPPM_WMI_LEGACY_PERFSTATE typedef ptr PPM_WMI_LEGACY_PERFSTATE
  PPM_WMI_IDLE_STATE struct
    Latency DWORD ?
    Power DWORD ?
    TimeCheck DWORD ?
    PromotePercent BYTE ?
    DemotePercent BYTE ?
    StateType BYTE ?
    Reserved BYTE ?
    StateFlags DWORD ?
    Context DWORD ?
    IdleHandler DWORD ?
    Reserved1 DWORD ?
  PPM_WMI_IDLE_STATE ends
  PPPM_WMI_IDLE_STATE typedef ptr PPM_WMI_IDLE_STATE
  PPM_WMI_IDLE_STATES struct
    Type_ DWORD ?
    Count DWORD ?
    TargetState DWORD ?
    OldState DWORD ?
    TargetProcessors DWORD64 ?
    State PPM_WMI_IDLE_STATE ANYSIZE_ARRAY dup (<>)
  PPM_WMI_IDLE_STATES ends
  PPPM_WMI_IDLE_STATES typedef ptr PPM_WMI_IDLE_STATES
  PPM_WMI_IDLE_STATES_EX struct
    Type_ DWORD ?
    Count DWORD ?
    TargetState DWORD ?
    OldState DWORD ?
    TargetProcessors PVOID ?
    State PPM_WMI_IDLE_STATE ANYSIZE_ARRAY dup (<>)
  PPM_WMI_IDLE_STATES_EX ends
  PPPM_WMI_IDLE_STATES_EX typedef ptr PPM_WMI_IDLE_STATES_EX
  PPM_WMI_PERF_STATE struct
    Frequency DWORD ?
    Power DWORD ?
    PercentFrequency BYTE ?
    IncreaseLevel BYTE ?
    DecreaseLevel BYTE ?
    Type_ BYTE ?
    IncreaseTime DWORD ?
    DecreaseTime DWORD ?
    Control DWORD64 ?
    Status DWORD64 ?
    HitCount DWORD ?
    Reserved1 DWORD ?
    Reserved2 DWORD64 ?
    Reserved3 DWORD64 ?
  PPM_WMI_PERF_STATE ends
  PPPM_WMI_PERF_STATE typedef ptr PPM_WMI_PERF_STATE
  PPM_WMI_PERF_STATES struct
    Count DWORD ?
    MaxFrequency DWORD ?
    CurrentState DWORD ?
    MaxPerfState DWORD ?
    MinPerfState DWORD ?
    LowestPerfState DWORD ?
    ThermalConstraint DWORD ?
    BusyAdjThreshold BYTE ?
    PolicyType BYTE ?
    Type_ BYTE ?
    Reserved BYTE ?
    TimerInterval DWORD ?
    TargetProcessors DWORD64 ?
    PStateHandler DWORD ?
    PStateContext DWORD ?
    TStateHandler DWORD ?
    TStateContext DWORD ?
    FeedbackHandler DWORD ?
    Reserved1 DWORD ?
    Reserved2 DWORD64 ?
    State PPM_WMI_PERF_STATE ANYSIZE_ARRAY dup (<>)
  PPM_WMI_PERF_STATES ends
  PPPM_WMI_PERF_STATES typedef ptr PPM_WMI_PERF_STATES
  PPM_WMI_PERF_STATES_EX struct
    Count DWORD ?
    MaxFrequency DWORD ?
    CurrentState DWORD ?
    MaxPerfState DWORD ?
    MinPerfState DWORD ?
    LowestPerfState DWORD ?
    ThermalConstraint DWORD ?
    BusyAdjThreshold BYTE ?
    PolicyType BYTE ?
    Type_ BYTE ?
    Reserved BYTE ?
    TimerInterval DWORD ?
    TargetProcessors PVOID ?
    PStateHandler DWORD ?
    PStateContext DWORD ?
    TStateHandler DWORD ?
    TStateContext DWORD ?
    FeedbackHandler DWORD ?
    Reserved1 DWORD ?
    Reserved2 DWORD64 ?
    State PPM_WMI_PERF_STATE ANYSIZE_ARRAY dup (<>)
  PPM_WMI_PERF_STATES_EX ends
  PPPM_WMI_PERF_STATES_EX typedef ptr PPM_WMI_PERF_STATES_EX
  PROC_IDLE_BUCKET_COUNT equ 6
  PPM_IDLE_STATE_ACCOUNTING struct
    IdleTransitions DWORD ?
    FailedTransitions DWORD ?
    InvalidBucketIndex DWORD ?
    TotalTime DWORD64 ?
    IdleTimeBuckets DWORD PROC_IDLE_BUCKET_COUNT dup (?)
  PPM_IDLE_STATE_ACCOUNTING ends
  PPPM_IDLE_STATE_ACCOUNTING typedef ptr PPM_IDLE_STATE_ACCOUNTING
  PPM_IDLE_ACCOUNTING struct
    StateCount DWORD ?
    TotalTransitions DWORD ?
    ResetCount DWORD ?
    StartTime DWORD64 ?
    State PPM_IDLE_STATE_ACCOUNTING ANYSIZE_ARRAY dup (<>)
  PPM_IDLE_ACCOUNTING ends
  PPPM_IDLE_ACCOUNTING typedef ptr PPM_IDLE_ACCOUNTING
  PROC_IDLE_BUCKET_COUNT_EX equ 16
  PPM_IDLE_STATE_BUCKET_EX struct
    TotalTimeUs DWORD64 ?
    MinTimeUs DWORD ?
    MaxTimeUs DWORD ?
    Count DWORD ?
  PPM_IDLE_STATE_BUCKET_EX ends
  PPPM_IDLE_STATE_BUCKET_EX typedef ptr PPM_IDLE_STATE_BUCKET_EX
  PPM_IDLE_STATE_ACCOUNTING_EX struct
    TotalTime DWORD64 ?
    IdleTransitions DWORD ?
    FailedTransitions DWORD ?
    InvalidBucketIndex DWORD ?
    MinTimeUs DWORD ?
    MaxTimeUs DWORD ?
    CancelledTransitions DWORD ?
    IdleTimeBuckets PPM_IDLE_STATE_BUCKET_EX PROC_IDLE_BUCKET_COUNT_EX dup (<>)
  PPM_IDLE_STATE_ACCOUNTING_EX ends
  PPPM_IDLE_STATE_ACCOUNTING_EX typedef ptr PPM_IDLE_STATE_ACCOUNTING_EX
  PPM_IDLE_ACCOUNTING_EX struct
    StateCount DWORD ?
    TotalTransitions DWORD ?
    ResetCount DWORD ?
    AbortCount DWORD ?
    StartTime DWORD64 ?
    State PPM_IDLE_STATE_ACCOUNTING_EX ANYSIZE_ARRAY dup (<>)
  PPM_IDLE_ACCOUNTING_EX ends
  PPPM_IDLE_ACCOUNTING_EX typedef ptr PPM_IDLE_ACCOUNTING_EX
  ACPI_PPM_SOFTWARE_ALL equ 0FCh
  ACPI_PPM_SOFTWARE_ANY equ 0FDh
  ACPI_PPM_HARDWARE_ALL equ 0FEh
  MS_PPM_SOFTWARE_ALL equ 1h
  PPM_FIRMWARE_ACPI1C2 equ 00000001h
  PPM_FIRMWARE_ACPI1C3 equ 00000002h
  PPM_FIRMWARE_ACPI1TSTATES equ 00000004h
  PPM_FIRMWARE_CST equ 00000008h
  PPM_FIRMWARE_CSD equ 00000010h
  PPM_FIRMWARE_PCT equ 00000020h
  PPM_FIRMWARE_PSS equ 00000040h
  PPM_FIRMWARE_XPSS equ 00000080h
  PPM_FIRMWARE_PPC equ 00000100h
  PPM_FIRMWARE_PSD equ 00000200h
  PPM_FIRMWARE_PTC equ 00000400h
  PPM_FIRMWARE_TSS equ 00000800h
  PPM_FIRMWARE_TPC equ 00001000h
  PPM_FIRMWARE_TSD equ 00002000h
  PPM_FIRMWARE_PCCH equ 00004000h
  PPM_FIRMWARE_PCCP equ 00008000h
  PPM_FIRMWARE_OSC equ 00010000h
  PPM_FIRMWARE_PDC equ 00020000h
  PPM_FIRMWARE_CPC equ 00040000h
  PPM_FIRMWARE_LPI equ 00080000h
  PPM_PERFORMANCE_IMPLEMENTATION_NONE equ 00000000h
  PPM_PERFORMANCE_IMPLEMENTATION_PSTATES equ 00000001h
  PPM_PERFORMANCE_IMPLEMENTATION_PCCV1 equ 00000002h
  PPM_PERFORMANCE_IMPLEMENTATION_CPPC equ 00000003h
  PPM_PERFORMANCE_IMPLEMENTATION_PEP equ 00000004h
  PPM_IDLE_IMPLEMENTATION_NONE equ 00000000h
  PPM_IDLE_IMPLEMENTATION_CSTATES equ 00000001h
  PPM_IDLE_IMPLEMENTATION_PEP equ 00000002h
  PPM_IDLE_IMPLEMENTATION_MICROPEP equ 00000003h
  PPM_IDLE_IMPLEMENTATION_LPISTATES equ 00000004h
  DEFINE_GUID PPM_PERFSTATE_CHANGE_GUID, 0a5b32dddh, 7f39h, 4abch, 0b8h, 92h, 90h, 0eh, 43h, 0b5h, 9eh, 0bbh
  DEFINE_GUID PPM_PERFSTATE_DOMAIN_CHANGE_GUID, 995e6b7fh, 0d653h, 497ah, 0b9h, 78h, 36h, 0a3h, 0ch, 29h, 0bfh, 1h
  DEFINE_GUID PPM_IDLESTATE_CHANGE_GUID, 4838fe4fh, 0f71ch, 4e51h, 9eh, 0cch, 84h, 30h, 0a7h, 0ach, 4ch, 6ch
  DEFINE_GUID PPM_PERFSTATES_DATA_GUID, 5708cc20h, 7d40h, 4bf4h, 0b4h, 0aah, 2bh, 01h, 33h, 8dh, 01h, 26h
  DEFINE_GUID PPM_IDLESTATES_DATA_GUID, 0ba138e10h, 0e250h, 4ad7h, 86h, 16h, 0cfh, 1ah, 7ah, 0d4h, 10h, 0e7h
  DEFINE_GUID PPM_IDLE_ACCOUNTING_GUID, 0e2a26f78h, 0ae07h, 4ee0h, 0a3h, 0fh, 0ceh, 54h, 0f5h, 5ah, 94h, 0cdh
  DEFINE_GUID PPM_IDLE_ACCOUNTING_EX_GUID, 0d67abd39h, 81f8h, 4a5eh, 81h, 52h, 72h, 0e3h, 1eh, 0c9h, 12h, 0eeh
  DEFINE_GUID PPM_THERMALCONSTRAINT_GUID, 0a852c2c8h, 1a4ch, 423bh, 8ch, 2ch, 0f3h, 0dh, 82h, 93h, 1ah, 88h
  DEFINE_GUID PPM_PERFMON_PERFSTATE_GUID, 7fd18652h, 0cfeh, 40d2h, 0b0h, 0a1h, 0bh, 6h, 6ah, 87h, 75h, 9eh
  DEFINE_GUID PPM_THERMAL_POLICY_CHANGE_GUID, 48f377b8h, 6880h, 4c7bh, 8bh, 0dch, 38h, 1h, 76h, 0c6h, 65h, 4dh
  PPM_PERFSTATE_EVENT struct
    State DWORD ?
    Status DWORD ?
    Latency DWORD ?
    Speed DWORD ?
    Processor DWORD ?
  PPM_PERFSTATE_EVENT ends
  PPPM_PERFSTATE_EVENT typedef ptr PPM_PERFSTATE_EVENT
  PPM_PERFSTATE_DOMAIN_EVENT struct
    State DWORD ?
    Latency DWORD ?
    Speed DWORD ?
    Processors DWORD64 ?
  PPM_PERFSTATE_DOMAIN_EVENT ends
  PPPM_PERFSTATE_DOMAIN_EVENT typedef ptr PPM_PERFSTATE_DOMAIN_EVENT
  PPM_IDLESTATE_EVENT struct
    NewState DWORD ?
    OldState DWORD ?
    Processors DWORD64 ?
  PPM_IDLESTATE_EVENT ends
  PPPM_IDLESTATE_EVENT typedef ptr PPM_IDLESTATE_EVENT
  PPM_THERMALCHANGE_EVENT struct
    ThermalConstraint DWORD ?
    Processors DWORD64 ?
  PPM_THERMALCHANGE_EVENT ends
  PPPM_THERMALCHANGE_EVENT typedef ptr PPM_THERMALCHANGE_EVENT
  PPM_THERMAL_POLICY_EVENT struct
    Mode BYTE ?
    Processors DWORD64 ?
  PPM_THERMAL_POLICY_EVENT ends
  PPPM_THERMAL_POLICY_EVENT typedef ptr PPM_THERMAL_POLICY_EVENT
  POWER_ACTION_POLICY struct
    Action POWER_ACTION ?
    Flags DWORD ?
    EventCode DWORD ?
  POWER_ACTION_POLICY ends
  PPOWER_ACTION_POLICY typedef ptr POWER_ACTION_POLICY
  POWER_ACTION_QUERY_ALLOWED equ 00000001h
  POWER_ACTION_UI_ALLOWED equ 00000002h
  POWER_ACTION_OVERRIDE_APPS equ 00000004h
  POWER_ACTION_HIBERBOOT equ 00000008h
  POWER_ACTION_USER_NOTIFY equ 00000010h
  POWER_ACTION_DOZE_TO_HIBERNATE equ 00000020h
  POWER_ACTION_ACPI_CRITICAL equ 01000000h
  POWER_ACTION_ACPI_USER_NOTIFY equ 02000000h
  POWER_ACTION_DIRECTED_DRIPS equ 04000000h
  POWER_ACTION_PSEUDO_TRANSITION equ 08000000h
  POWER_ACTION_LIGHTEST_FIRST equ 10000000h
  POWER_ACTION_LOCK_CONSOLE equ 20000000h
  POWER_ACTION_DISABLE_WAKES equ 40000000h
  POWER_ACTION_CRITICAL equ 80000000h
  POWER_LEVEL_USER_NOTIFY_TEXT equ 00000001h
  POWER_LEVEL_USER_NOTIFY_SOUND equ 00000002h
  POWER_LEVEL_USER_NOTIFY_EXEC equ 00000004h
  POWER_USER_NOTIFY_BUTTON equ 00000008h
  POWER_USER_NOTIFY_SHUTDOWN equ 00000010h
  POWER_USER_NOTIFY_FORCED_SHUTDOWN equ 00000020h
  POWER_FORCE_TRIGGER_RESET equ 80000000h
  BATTERY_DISCHARGE_FLAGS_EVENTCODE_MASK equ 00000007h
  BATTERY_DISCHARGE_FLAGS_ENABLE equ 80000000h
  SYSTEM_POWER_LEVEL struct
    Enable BOOLEAN ?
    Spare BYTE 3 dup (?)
    BatteryLevel DWORD ?
    PowerPolicy POWER_ACTION_POLICY <>
    MinSystemState SYSTEM_POWER_STATE ?
  SYSTEM_POWER_LEVEL ends
  PSYSTEM_POWER_LEVEL typedef ptr SYSTEM_POWER_LEVEL
  NUM_DISCHARGE_POLICIES equ 4
  DISCHARGE_POLICY_CRITICAL equ 0
  DISCHARGE_POLICY_LOW equ 1
  SYSTEM_POWER_POLICY struct
    Revision DWORD ?
    PowerButton POWER_ACTION_POLICY <>
    SleepButton POWER_ACTION_POLICY <>
    LidClose POWER_ACTION_POLICY <>
    LidOpenWake SYSTEM_POWER_STATE ?
    Reserved DWORD ?
    Idle POWER_ACTION_POLICY <>
    IdleTimeout DWORD ?
    IdleSensitivity BYTE ?
    DynamicThrottle BYTE ?
    Spare2 BYTE 2 dup (?)
    MinSleep SYSTEM_POWER_STATE ?
    MaxSleep SYSTEM_POWER_STATE ?
    ReducedLatencySleep SYSTEM_POWER_STATE ?
    WinLogonFlags DWORD ?
    Spare3 DWORD ?
    DozeS4Timeout DWORD ?
    BroadcastCapacityResolution DWORD ?
    DischargePolicy SYSTEM_POWER_LEVEL NUM_DISCHARGE_POLICIES dup (<>)
    VideoTimeout DWORD ?
    VideoDimDisplay BOOLEAN ?
    VideoReserved DWORD 3 dup (?)
    SpindownTimeout DWORD ?
    OptimizeForPower BOOLEAN ?
    FanThrottleTolerance BYTE ?
    ForcedThrottle BYTE ?
    MinThrottle BYTE ?
    OverThrottled POWER_ACTION_POLICY <>
  SYSTEM_POWER_POLICY ends
  _SYSTEM_POWER_POLICY typedef SYSTEM_POWER_POLICY
  PSYSTEM_POWER_POLICY typedef ptr SYSTEM_POWER_POLICY
  PROCESSOR_IDLESTATE_POLICY_COUNT equ 3h
  PROCESSOR_IDLESTATE_INFO struct
    TimeCheck DWORD ?
    DemotePercent BYTE ?
    PromotePercent BYTE ?
    Spare BYTE 2 dup (?)
  PROCESSOR_IDLESTATE_INFO ends
  PPROCESSOR_IDLESTATE_INFO typedef ptr PROCESSOR_IDLESTATE_INFO
  PROCESSOR_IDLESTATE_POLICY struct
    Revision WORD ?
    union Flags
      AsWORD WORD ?
      struct
        DUMMYRECORDNAME_??20 record AllowScaling_??20:1, Disabled_??20:1, Reserved_??20:14
        DUMMYRECORDNAME_??20 <>
      ends
    ends
    PolicyCount DWORD ?
    Policy PROCESSOR_IDLESTATE_INFO PROCESSOR_IDLESTATE_POLICY_COUNT dup (<>)
  PROCESSOR_IDLESTATE_POLICY ends
  PPROCESSOR_IDLESTATE_POLICY typedef ptr PROCESSOR_IDLESTATE_POLICY
  PO_THROTTLE_NONE equ 0
  PO_THROTTLE_CONSTANT equ 1
  PO_THROTTLE_DEGRADE equ 2
  PO_THROTTLE_ADAPTIVE equ 3
  PO_THROTTLE_MAXIMUM equ 4
  PROCESSOR_POWER_POLICY_INFO struct
    TimeCheck DWORD ?
    DemoteLimit DWORD ?
    PromoteLimit DWORD ?
    DemotePercent BYTE ?
    PromotePercent BYTE ?
    Spare BYTE 2 dup (?)
    PROCESSOR_POWER_POLICY_INFO_??21 record AllowDemotion_??21:1, AllowPromotion_??21:1, Reserved_??21:30
    PROCESSOR_POWER_POLICY_INFO_??21 <>
  PROCESSOR_POWER_POLICY_INFO ends
  _PROCESSOR_POWER_POLICY_INFO typedef PROCESSOR_POWER_POLICY_INFO
  PPROCESSOR_POWER_POLICY_INFO typedef ptr PROCESSOR_POWER_POLICY_INFO
  PROCESSOR_POWER_POLICY struct
    Revision DWORD ?
    DynamicThrottle BYTE ?
    Spare BYTE 3 dup (?)
;    PROCESSOR_POWER_POLICY_??22 record DisableCStates_??22:1, Reserved_??22:31
;    PROCESSOR_POWER_POLICY_??22 <>
    Flags DWORD ?
    PolicyCount DWORD ?
    Policy PROCESSOR_POWER_POLICY_INFO 3 dup (<>)
  PROCESSOR_POWER_POLICY ends
  _PROCESSOR_POWER_POLICY typedef PROCESSOR_POWER_POLICY
  PPROCESSOR_POWER_POLICY typedef ptr PROCESSOR_POWER_POLICY
  PROCESSOR_PERFSTATE_POLICY struct
    Revision DWORD ?
    MaxThrottle BYTE ?
    MinThrottle BYTE ?
    BusyAdjThreshold BYTE ?
    union
      Spare BYTE ?
      union Flags
        AsBYTE BYTE ?
        struct
          DUMMYRECORDNAME_??23 record NoDomainAccounting_??23:1, IncreasePolicy_??23:2, DecreasePolicy_??23:2, Reserved_??23:3
          DUMMYRECORDNAME_??23 <>
        ends
      ends
    ends
    TimeCheck DWORD ?
    IncreaseTime DWORD ?
    DecreaseTime DWORD ?
    IncreasePercent DWORD ?
    DecreasePercent DWORD ?
  PROCESSOR_PERFSTATE_POLICY ends
  PPROCESSOR_PERFSTATE_POLICY typedef ptr PROCESSOR_PERFSTATE_POLICY
  ADMINISTRATOR_POWER_POLICY struct
    MinSleep SYSTEM_POWER_STATE ?
    MaxSleep SYSTEM_POWER_STATE ?
    MinVideoTimeout DWORD ?
    MaxVideoTimeout DWORD ?
    MinSpindownTimeout DWORD ?
    MaxSpindownTimeout DWORD ?
  ADMINISTRATOR_POWER_POLICY ends
  _ADMINISTRATOR_POWER_POLICY typedef ADMINISTRATOR_POWER_POLICY
  PADMINISTRATOR_POWER_POLICY typedef ptr ADMINISTRATOR_POWER_POLICY
  HIBERFILE_BUCKET_SIZE typedef SDWORD
  HiberFileBucket1GB equ 0
  HiberFileBucket2GB equ 1
  HiberFileBucket4GB equ 2
  HiberFileBucket8GB equ 3
  HiberFileBucket16GB equ 4
  HiberFileBucket32GB equ 5
  HiberFileBucketUnlimited equ 6
  HiberFileBucketMax equ 7
  _HIBERFILE_BUCKET_SIZE typedef HIBERFILE_BUCKET_SIZE
  PHIBERFILE_BUCKET_SIZE typedef ptr HIBERFILE_BUCKET_SIZE
  HIBERFILE_TYPE_NONE equ 00h
  HIBERFILE_TYPE_REDUCED equ 01h
  HIBERFILE_TYPE_FULL equ 02h
  HIBERFILE_TYPE_MAX equ 03h
  HIBERFILE_BUCKET struct
    MaxPhysicalMemory DWORD64 ?
    PhysicalMemoryPercent DWORD HIBERFILE_TYPE_MAX dup (?)
  HIBERFILE_BUCKET ends
  _HIBERFILE_BUCKET typedef HIBERFILE_BUCKET
  PHIBERFILE_BUCKET typedef ptr HIBERFILE_BUCKET
  SYSTEM_POWER_CAPABILITIES struct
    PowerButtonPresent BOOLEAN ?
    SleepButtonPresent BOOLEAN ?
    LidPresent BOOLEAN ?
    SystemS1 BOOLEAN ?
    SystemS2 BOOLEAN ?
    SystemS3 BOOLEAN ?
    SystemS4 BOOLEAN ?
    SystemS5 BOOLEAN ?
    HiberFilePresent BOOLEAN ?
    FullWake BOOLEAN ?
    VideoDimPresent BOOLEAN ?
    ApmPresent BOOLEAN ?
    UpsPresent BOOLEAN ?
    ThermalControl BOOLEAN ?
    ProcessorThrottle BOOLEAN ?
    ProcessorMinThrottle BYTE ?
    if (NTDDI_VERSION lt NTDDI_WINXP)
      ProcessorThrottleScale BYTE ?
      spare2 BYTE 4 dup (?)
    else
      ProcessorMaxThrottle BYTE ?
      FastSystemS4 BOOLEAN ?
      Hiberboot BOOLEAN ?
      WakeAlarmPresent BOOLEAN ?
      AoAc BOOLEAN ?
    endif
    DiskSpinDown BOOLEAN ?
    if (NTDDI_VERSION lt NTDDI_WINTHRESHOLD)
      spare3 BYTE 8 dup (?)
    else
      HiberFileType BYTE ?
      AoAcConnectivitySupported BOOLEAN ?
      spare3 BYTE 6 dup (?)
    endif
    SystemBatteriesPresent BOOLEAN ?
    BatteriesAreShortTerm BOOLEAN ?
    BatteryScale BATTERY_REPORTING_SCALE 3 dup (<>)
    AcOnLineWake SYSTEM_POWER_STATE ?
    SoftLidWake SYSTEM_POWER_STATE ?
    RtcWake SYSTEM_POWER_STATE ?
    MinDeviceWakeState SYSTEM_POWER_STATE ?
    DefaultLowLatencyWake SYSTEM_POWER_STATE ?
  SYSTEM_POWER_CAPABILITIES ends
  PSYSTEM_POWER_CAPABILITIES typedef ptr SYSTEM_POWER_CAPABILITIES
  SYSTEM_BATTERY_STATE struct
    AcOnLine BOOLEAN ?
    BatteryPresent BOOLEAN ?
    Charging BOOLEAN ?
    Discharging BOOLEAN ?
    Spare1 BOOLEAN 3 dup (?)
    Tag BYTE ?
    MaxCapacity DWORD ?
    RemainingCapacity DWORD ?
    Rate DWORD ?
    EstimatedTime DWORD ?
    DefaultAlert1 DWORD ?
    DefaultAlert2 DWORD ?
  SYSTEM_BATTERY_STATE ends
  PSYSTEM_BATTERY_STATE typedef ptr SYSTEM_BATTERY_STATE
  ifndef _MAC
    include pshpack4.inc
    IMAGE_DOS_SIGNATURE equ 5A4Dh
    IMAGE_OS2_SIGNATURE equ 454Eh
    IMAGE_OS2_SIGNATURE_LE equ 454Ch
    IMAGE_VXD_SIGNATURE equ 454Ch
    IMAGE_NT_SIGNATURE equ 00004550h
    include pshpack2.inc
  else
    ;[...]
  endif
  IMAGE_DOS_HEADER struct
    e_magic WORD ?
    e_cblp WORD ?
    e_cp WORD ?
    e_crlc WORD ?
    e_cparhdr WORD ?
    e_minalloc WORD ?
    e_maxalloc WORD ?
    e_ss WORD ?
    e_sp WORD ?
    e_csum WORD ?
    e_ip WORD ?
    e_cs WORD ?
    e_lfarlc WORD ?
    e_ovno WORD ?
    e_res WORD 4 dup (?)
    e_oemid WORD ?
    e_oeminfo WORD ?
    e_res2 WORD 10 dup (?)
    e_lfanew LONG ?
  IMAGE_DOS_HEADER ends
  _IMAGE_DOS_HEADER typedef IMAGE_DOS_HEADER
  PIMAGE_DOS_HEADER typedef ptr IMAGE_DOS_HEADER
  IMAGE_OS2_HEADER struct
    ne_magic WORD ?
    ne_ver CHAR ?
    ne_rev CHAR ?
    ne_enttab WORD ?
    ne_cbenttab WORD ?
    ne_crc LONG ?
    ne_flags WORD ?
    ne_autodata WORD ?
    ne_heap WORD ?
    ne_stack WORD ?
    ne_csip LONG ?
    ne_sssp LONG ?
    ne_cseg WORD ?
    ne_cmod WORD ?
    ne_cbnrestab WORD ?
    ne_segtab WORD ?
    ne_rsrctab WORD ?
    ne_restab WORD ?
    ne_modtab WORD ?
    ne_imptab WORD ?
    ne_nrestab LONG ?
    ne_cmovent WORD ?
    ne_align WORD ?
    ne_cres WORD ?
    ne_exetyp BYTE ?
    ne_flagsothers BYTE ?
    ne_pretthunks WORD ?
    ne_psegrefbytes WORD ?
    ne_swaparea WORD ?
    ne_expver WORD ?
  IMAGE_OS2_HEADER ends
  _IMAGE_OS2_HEADER typedef IMAGE_OS2_HEADER
  PIMAGE_OS2_HEADER typedef ptr IMAGE_OS2_HEADER
  IMAGE_VXD_HEADER struct
    e32_magic WORD ?
    e32_border BYTE ?
    e32_worder BYTE ?
    e32_level DWORD ?
    e32_cpu WORD ?
    e32_os WORD ?
    e32_ver DWORD ?
    e32_mflags DWORD ?
    e32_mpages DWORD ?
    e32_startobj DWORD ?
    e32_eip DWORD ?
    e32_stackobj DWORD ?
    e32_esp DWORD ?
    e32_pagesize DWORD ?
    e32_lastpagesize DWORD ?
    e32_fixupsize DWORD ?
    e32_fixupsum DWORD ?
    e32_ldrsize DWORD ?
    e32_ldrsum DWORD ?
    e32_objtab DWORD ?
    e32_objcnt DWORD ?
    e32_objmap DWORD ?
    e32_itermap DWORD ?
    e32_rsrctab DWORD ?
    e32_rsrccnt DWORD ?
    e32_restab DWORD ?
    e32_enttab DWORD ?
    e32_dirtab DWORD ?
    e32_dircnt DWORD ?
    e32_fpagetab DWORD ?
    e32_frectab DWORD ?
    e32_impmod DWORD ?
    e32_impmodcnt DWORD ?
    e32_impproc DWORD ?
    e32_pagesum DWORD ?
    e32_datapage DWORD ?
    e32_preload DWORD ?
    e32_nrestab DWORD ?
    e32_cbnrestab DWORD ?
    e32_nressum DWORD ?
    e32_autodata DWORD ?
    e32_debuginfo DWORD ?
    e32_debuglen DWORD ?
    e32_instpreload DWORD ?
    e32_instdemand DWORD ?
    e32_heapsize DWORD ?
    e32_res3 BYTE 12 dup (?)
    e32_winresoff DWORD ?
    e32_winreslen DWORD ?
    e32_devid WORD ?
    e32_ddkver WORD ?
  IMAGE_VXD_HEADER ends
  _IMAGE_VXD_HEADER typedef IMAGE_VXD_HEADER
  PIMAGE_VXD_HEADER typedef ptr IMAGE_VXD_HEADER
  ifndef _MAC
    include poppack.inc
  endif
  IMAGE_FILE_HEADER struct
    Machine WORD ?
    NumberOfSections WORD ?
    TimeDateStamp DWORD ?
    PointerToSymbolTable DWORD ?
    NumberOfSymbols DWORD ?
    SizeOfOptionalHeader WORD ?
    Characteristics WORD ?
  IMAGE_FILE_HEADER ends
  _IMAGE_FILE_HEADER typedef IMAGE_FILE_HEADER
  PIMAGE_FILE_HEADER typedef ptr IMAGE_FILE_HEADER
  IMAGE_SIZEOF_FILE_HEADER equ 20
  IMAGE_FILE_RELOCS_STRIPPED equ 0001h
  IMAGE_FILE_EXECUTABLE_IMAGE equ 0002h
  IMAGE_FILE_LINE_NUMS_STRIPPED equ 0004h
  IMAGE_FILE_LOCAL_SYMS_STRIPPED equ 0008h
  IMAGE_FILE_AGGRESIVE_WS_TRIM equ 0010h
  IMAGE_FILE_LARGE_ADDRESS_AWARE equ 0020h
  IMAGE_FILE_BYTES_REVERSED_LO equ 0080h
  IMAGE_FILE_32BIT_MACHINE equ 0100h
  IMAGE_FILE_DEBUG_STRIPPED equ 0200h
  IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP equ 0400h
  IMAGE_FILE_NET_RUN_FROM_SWAP equ 0800h
  IMAGE_FILE_SYSTEM equ 1000h
  IMAGE_FILE_DLL equ 2000h
  IMAGE_FILE_UP_SYSTEM_ONLY equ 4000h
  IMAGE_FILE_BYTES_REVERSED_HI equ 8000h
  IMAGE_FILE_MACHINE_UNKNOWN equ 0
  IMAGE_FILE_MACHINE_TARGET_HOST equ 0001h
  IMAGE_FILE_MACHINE_I386 equ 014ch
  IMAGE_FILE_MACHINE_R3000 equ 0162h
  IMAGE_FILE_MACHINE_R4000 equ 0166h
  IMAGE_FILE_MACHINE_R10000 equ 0168h
  IMAGE_FILE_MACHINE_WCEMIPSV2 equ 0169h
  IMAGE_FILE_MACHINE_ALPHA equ 0184h
  IMAGE_FILE_MACHINE_SH3 equ 01a2h
  IMAGE_FILE_MACHINE_SH3DSP equ 01a3h
  IMAGE_FILE_MACHINE_SH3E equ 01a4h
  IMAGE_FILE_MACHINE_SH4 equ 01a6h
  IMAGE_FILE_MACHINE_SH5 equ 01a8h
  IMAGE_FILE_MACHINE_ARM equ 01c0h
  IMAGE_FILE_MACHINE_THUMB equ 01c2h
  IMAGE_FILE_MACHINE_ARMNT equ 01c4h
  IMAGE_FILE_MACHINE_AM33 equ 01d3h
  IMAGE_FILE_MACHINE_POWERPC equ 01F0h
  IMAGE_FILE_MACHINE_POWERPCFP equ 01f1h
  IMAGE_FILE_MACHINE_IA64 equ 0200h
  IMAGE_FILE_MACHINE_MIPS16 equ 0266h
  IMAGE_FILE_MACHINE_ALPHA64 equ 0284h
  IMAGE_FILE_MACHINE_MIPSFPU equ 0366h
  IMAGE_FILE_MACHINE_MIPSFPU16 equ 0466h
  IMAGE_FILE_MACHINE_AXP64 equ <IMAGE_FILE_MACHINE_ALPHA64>
  IMAGE_FILE_MACHINE_TRICORE equ 0520h
  IMAGE_FILE_MACHINE_CEF equ 0CEFh
  IMAGE_FILE_MACHINE_EBC equ 0EBCh
  IMAGE_FILE_MACHINE_AMD64 equ 8664h
  IMAGE_FILE_MACHINE_M32R equ 9041h
  IMAGE_FILE_MACHINE_ARM64 equ 0AA64h
  IMAGE_FILE_MACHINE_CEE equ 0C0EEh
  IMAGE_DATA_DIRECTORY struct
    VirtualAddress DWORD ?
    Size_ DWORD ?
  IMAGE_DATA_DIRECTORY ends
  _IMAGE_DATA_DIRECTORY typedef IMAGE_DATA_DIRECTORY
  PIMAGE_DATA_DIRECTORY typedef ptr IMAGE_DATA_DIRECTORY
  IMAGE_NUMBEROF_DIRECTORY_ENTRIES equ 16
  IMAGE_OPTIONAL_HEADER32 struct
    Magic WORD ?
    MajorLinkerVersion BYTE ?
    MinorLinkerVersion BYTE ?
    SizeOfCode DWORD ?
    SizeOfInitializedData DWORD ?
    SizeOfUninitializedData DWORD ?
    AddressOfEntryPoint DWORD ?
    BaseOfCode DWORD ?
    BaseOfData DWORD ?
    ImageBase DWORD ?
    SectionAlignment DWORD ?
    FileAlignment DWORD ?
    MajorOperatingSystemVersion WORD ?
    MinorOperatingSystemVersion WORD ?
    MajorImageVersion WORD ?
    MinorImageVersion WORD ?
    MajorSubsystemVersion WORD ?
    MinorSubsystemVersion WORD ?
    Win32VersionValue DWORD ?
    SizeOfImage DWORD ?
    SizeOfHeaders DWORD ?
    CheckSum DWORD ?
    Subsystem WORD ?
    DllCharacteristics WORD ?
    SizeOfStackReserve DWORD ?
    SizeOfStackCommit DWORD ?
    SizeOfHeapReserve DWORD ?
    SizeOfHeapCommit DWORD ?
    LoaderFlags DWORD ?
    NumberOfRvaAndSizes DWORD ?
    DataDirectory IMAGE_DATA_DIRECTORY IMAGE_NUMBEROF_DIRECTORY_ENTRIES dup (<>)
  IMAGE_OPTIONAL_HEADER32 ends
  _IMAGE_OPTIONAL_HEADER typedef IMAGE_OPTIONAL_HEADER32
  PIMAGE_OPTIONAL_HEADER32 typedef ptr IMAGE_OPTIONAL_HEADER32
  IMAGE_ROM_OPTIONAL_HEADER struct
    Magic WORD ?
    MajorLinkerVersion BYTE ?
    MinorLinkerVersion BYTE ?
    SizeOfCode DWORD ?
    SizeOfInitializedData DWORD ?
    SizeOfUninitializedData DWORD ?
    AddressOfEntryPoint DWORD ?
    BaseOfCode DWORD ?
    BaseOfData DWORD ?
    BaseOfBss DWORD ?
    GprMask DWORD ?
    CprMask DWORD 4 dup (?)
    GpValue DWORD ?
  IMAGE_ROM_OPTIONAL_HEADER ends
  _IMAGE_ROM_OPTIONAL_HEADER typedef IMAGE_ROM_OPTIONAL_HEADER
  PIMAGE_ROM_OPTIONAL_HEADER typedef ptr IMAGE_ROM_OPTIONAL_HEADER
  IMAGE_OPTIONAL_HEADER64 struct
    Magic WORD ?
    MajorLinkerVersion BYTE ?
    MinorLinkerVersion BYTE ?
    SizeOfCode DWORD ?
    SizeOfInitializedData DWORD ?
    SizeOfUninitializedData DWORD ?
    AddressOfEntryPoint DWORD ?
    BaseOfCode DWORD ?
    ImageBase ULONGLONG ?
    SectionAlignment DWORD ?
    FileAlignment DWORD ?
    MajorOperatingSystemVersion WORD ?
    MinorOperatingSystemVersion WORD ?
    MajorImageVersion WORD ?
    MinorImageVersion WORD ?
    MajorSubsystemVersion WORD ?
    MinorSubsystemVersion WORD ?
    Win32VersionValue DWORD ?
    SizeOfImage DWORD ?
    SizeOfHeaders DWORD ?
    CheckSum DWORD ?
    Subsystem WORD ?
    DllCharacteristics WORD ?
    SizeOfStackReserve ULONGLONG ?
    SizeOfStackCommit ULONGLONG ?
    SizeOfHeapReserve ULONGLONG ?
    SizeOfHeapCommit ULONGLONG ?
    LoaderFlags DWORD ?
    NumberOfRvaAndSizes DWORD ?
    DataDirectory IMAGE_DATA_DIRECTORY IMAGE_NUMBEROF_DIRECTORY_ENTRIES dup (<>)
  IMAGE_OPTIONAL_HEADER64 ends
  _IMAGE_OPTIONAL_HEADER64 typedef IMAGE_OPTIONAL_HEADER64
  PIMAGE_OPTIONAL_HEADER64 typedef ptr IMAGE_OPTIONAL_HEADER64
  IMAGE_NT_OPTIONAL_HDR32_MAGIC equ 10bh
  IMAGE_NT_OPTIONAL_HDR64_MAGIC equ 20bh
  IMAGE_ROM_OPTIONAL_HDR_MAGIC equ 107h
  ifdef _WIN64
    IMAGE_OPTIONAL_HEADER typedef IMAGE_OPTIONAL_HEADER64
    PIMAGE_OPTIONAL_HEADER typedef PIMAGE_OPTIONAL_HEADER64
    IMAGE_NT_OPTIONAL_HDR_MAGIC equ <IMAGE_NT_OPTIONAL_HDR64_MAGIC>
  else
    IMAGE_OPTIONAL_HEADER typedef IMAGE_OPTIONAL_HEADER32
    PIMAGE_OPTIONAL_HEADER typedef PIMAGE_OPTIONAL_HEADER32
    IMAGE_NT_OPTIONAL_HDR_MAGIC equ <IMAGE_NT_OPTIONAL_HDR32_MAGIC>
  endif
  IMAGE_NT_HEADERS64 struct
    Signature DWORD ?
    FileHeader IMAGE_FILE_HEADER <>
    OptionalHeader IMAGE_OPTIONAL_HEADER64 <>
  IMAGE_NT_HEADERS64 ends
  _IMAGE_NT_HEADERS64 typedef IMAGE_NT_HEADERS64
  PIMAGE_NT_HEADERS64 typedef ptr IMAGE_NT_HEADERS64
  IMAGE_NT_HEADERS32 struct
    Signature DWORD ?
    FileHeader IMAGE_FILE_HEADER <>
    OptionalHeader IMAGE_OPTIONAL_HEADER32 <>
  IMAGE_NT_HEADERS32 ends
  _IMAGE_NT_HEADERS typedef IMAGE_NT_HEADERS32
  PIMAGE_NT_HEADERS32 typedef ptr IMAGE_NT_HEADERS32
  IMAGE_ROM_HEADERS struct
    FileHeader IMAGE_FILE_HEADER <>
    OptionalHeader IMAGE_ROM_OPTIONAL_HEADER <>
  IMAGE_ROM_HEADERS ends
  _IMAGE_ROM_HEADERS typedef IMAGE_ROM_HEADERS
  PIMAGE_ROM_HEADERS typedef ptr IMAGE_ROM_HEADERS
  ifdef _WIN64
    IMAGE_NT_HEADERS typedef IMAGE_NT_HEADERS64
    PIMAGE_NT_HEADERS typedef PIMAGE_NT_HEADERS64
  else
    IMAGE_NT_HEADERS typedef IMAGE_NT_HEADERS32
    PIMAGE_NT_HEADERS typedef PIMAGE_NT_HEADERS32
  endif
  IMAGE_FIRST_SECTION macro ntheader
    exitm <((PIMAGE_SECTION_HEADER) ((ntheader) + FIELD_OFFSET(IMAGE_NT_HEADERS, OptionalHeader) + ((ntheader)) - FileHeader.SizeOfOptionalHeader))>
  endm
  IMAGE_SUBSYSTEM_UNKNOWN equ 0
  IMAGE_SUBSYSTEM_NATIVE equ 1
  IMAGE_SUBSYSTEM_WINDOWS_GUI equ 2
  IMAGE_SUBSYSTEM_WINDOWS_CUI equ 3
  IMAGE_SUBSYSTEM_OS2_CUI equ 5
  IMAGE_SUBSYSTEM_POSIX_CUI equ 7
  IMAGE_SUBSYSTEM_NATIVE_WINDOWS equ 8
  IMAGE_SUBSYSTEM_WINDOWS_CE_GUI equ 9
  IMAGE_SUBSYSTEM_EFI_APPLICATION equ 10
  IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER equ 11
  IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER equ 12
  IMAGE_SUBSYSTEM_EFI_ROM equ 13
  IMAGE_SUBSYSTEM_XBOX equ 14
  IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION equ 16
  IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG equ 17
  IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA equ 0020h
  IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE equ 0040h
  IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY equ 0080h
  IMAGE_DLLCHARACTERISTICS_NX_COMPAT equ 0100h
  IMAGE_DLLCHARACTERISTICS_NO_ISOLATION equ 0200h
  IMAGE_DLLCHARACTERISTICS_NO_SEH equ 0400h
  IMAGE_DLLCHARACTERISTICS_NO_BIND equ 0800h
  IMAGE_DLLCHARACTERISTICS_APPCONTAINER equ 1000h
  IMAGE_DLLCHARACTERISTICS_WDM_DRIVER equ 2000h
  IMAGE_DLLCHARACTERISTICS_GUARD_CF equ 4000h
  IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE equ 8000h
  IMAGE_DIRECTORY_ENTRY_EXPORT equ 0
  IMAGE_DIRECTORY_ENTRY_IMPORT equ 1
  IMAGE_DIRECTORY_ENTRY_RESOURCE equ 2
  IMAGE_DIRECTORY_ENTRY_EXCEPTION equ 3
  IMAGE_DIRECTORY_ENTRY_SECURITY equ 4
  IMAGE_DIRECTORY_ENTRY_BASERELOC equ 5
  IMAGE_DIRECTORY_ENTRY_DEBUG equ 6
  IMAGE_DIRECTORY_ENTRY_ARCHITECTURE equ 7
  IMAGE_DIRECTORY_ENTRY_GLOBALPTR equ 8
  IMAGE_DIRECTORY_ENTRY_TLS equ 9
  IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG equ 10
  IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT equ 11
  IMAGE_DIRECTORY_ENTRY_IAT equ 12
  IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT equ 13
  IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR equ 14
  ANON_OBJECT_HEADER struct
    Sig1 WORD ?
    Sig2 WORD ?
    Version WORD ?
    Machine WORD ?
    TimeDateStamp DWORD ?
    ClassID CLSID <>
    SizeOfData DWORD ?
  ANON_OBJECT_HEADER ends
  ANON_OBJECT_HEADER_V2 struct
    Sig1 WORD ?
    Sig2 WORD ?
    Version WORD ?
    Machine WORD ?
    TimeDateStamp DWORD ?
    ClassID CLSID <>
    SizeOfData DWORD ?
    Flags DWORD ?
    MetaDataSize DWORD ?
    MetaDataOffset DWORD ?
  ANON_OBJECT_HEADER_V2 ends
  ANON_OBJECT_HEADER_BIGOBJ struct
    Sig1 WORD ?
    Sig2 WORD ?
    Version WORD ?
    Machine WORD ?
    TimeDateStamp DWORD ?
    ClassID CLSID <>
    SizeOfData DWORD ?
    Flags DWORD ?
    MetaDataSize DWORD ?
    MetaDataOffset DWORD ?
    NumberOfSections DWORD ?
    PointerToSymbolTable DWORD ?
    NumberOfSymbols DWORD ?
  ANON_OBJECT_HEADER_BIGOBJ ends
  IMAGE_SIZEOF_SHORT_NAME equ 8
  IMAGE_SECTION_HEADER struct
    Name_ BYTE IMAGE_SIZEOF_SHORT_NAME dup (?)
    union Misc
      PhysicalAddress DWORD ?
      VirtualSize DWORD ?
    ends
    VirtualAddress DWORD ?
    SizeOfRawData DWORD ?
    PointerToRawData DWORD ?
    PointerToRelocations DWORD ?
    PointerToLinenumbers DWORD ?
    NumberOfRelocations WORD ?
    NumberOfLinenumbers WORD ?
    Characteristics DWORD ?
  IMAGE_SECTION_HEADER ends
  _IMAGE_SECTION_HEADER typedef IMAGE_SECTION_HEADER
  PIMAGE_SECTION_HEADER typedef ptr IMAGE_SECTION_HEADER
  IMAGE_SIZEOF_SECTION_HEADER equ 40
  IMAGE_SCN_TYPE_NO_PAD equ 00000008h
  IMAGE_SCN_CNT_CODE equ 00000020h
  IMAGE_SCN_CNT_INITIALIZED_DATA equ 00000040h
  IMAGE_SCN_CNT_UNINITIALIZED_DATA equ 00000080h
  IMAGE_SCN_LNK_OTHER equ 00000100h
  IMAGE_SCN_LNK_INFO equ 00000200h
  IMAGE_SCN_LNK_REMOVE equ 00000800h
  IMAGE_SCN_LNK_COMDAT equ 00001000h
  IMAGE_SCN_NO_DEFER_SPEC_EXC equ 00004000h
  IMAGE_SCN_GPREL equ 00008000h
  IMAGE_SCN_MEM_FARDATA equ 00008000h
  IMAGE_SCN_MEM_PURGEABLE equ 00020000h
  IMAGE_SCN_MEM_16BIT equ 00020000h
  IMAGE_SCN_MEM_LOCKED equ 00040000h
  IMAGE_SCN_MEM_PRELOAD equ 00080000h
  IMAGE_SCN_ALIGN_1BYTES equ 00100000h
  IMAGE_SCN_ALIGN_2BYTES equ 00200000h
  IMAGE_SCN_ALIGN_4BYTES equ 00300000h
  IMAGE_SCN_ALIGN_8BYTES equ 00400000h
  IMAGE_SCN_ALIGN_16BYTES equ 00500000h
  IMAGE_SCN_ALIGN_32BYTES equ 00600000h
  IMAGE_SCN_ALIGN_64BYTES equ 00700000h
  IMAGE_SCN_ALIGN_128BYTES equ 00800000h
  IMAGE_SCN_ALIGN_256BYTES equ 00900000h
  IMAGE_SCN_ALIGN_512BYTES equ 00A00000h
  IMAGE_SCN_ALIGN_1024BYTES equ 00B00000h
  IMAGE_SCN_ALIGN_2048BYTES equ 00C00000h
  IMAGE_SCN_ALIGN_4096BYTES equ 00D00000h
  IMAGE_SCN_ALIGN_8192BYTES equ 00E00000h
  IMAGE_SCN_ALIGN_MASK equ 00F00000h
  IMAGE_SCN_LNK_NRELOC_OVFL equ 01000000h
  IMAGE_SCN_MEM_DISCARDABLE equ 02000000h
  IMAGE_SCN_MEM_NOT_CACHED equ 04000000h
  IMAGE_SCN_MEM_NOT_PAGED equ 08000000h
  IMAGE_SCN_MEM_SHARED equ 10000000h
  IMAGE_SCN_MEM_EXECUTE equ 20000000h
  IMAGE_SCN_MEM_READ equ 40000000h
  IMAGE_SCN_MEM_WRITE equ 80000000h
  IMAGE_SCN_SCALE_INDEX equ 00000001h
  ifndef _MAC
    include pshpack2.inc
  endif
  IMAGE_SYMBOL struct
    union N
      ShortName BYTE 8 dup (?)
      struct Name_
        Short_ DWORD ?
        Long DWORD ?
      ends
      LongName DWORD 2 dup (?)
    ends
    Value DWORD ?
    SectionNumber SHORT_ ?
    Type_ WORD ?
    StorageClass BYTE ?
    NumberOfAuxSymbols BYTE ?
  IMAGE_SYMBOL ends
  _IMAGE_SYMBOL typedef IMAGE_SYMBOL
  PIMAGE_SYMBOL typedef ptr IMAGE_SYMBOL
  IMAGE_SIZEOF_SYMBOL equ 18
  IMAGE_SYMBOL_EX struct
    union N
      ShortName BYTE 8 dup (?)
      struct Name_
        Short_ DWORD ?
        Long DWORD ?
      ends
      LongName DWORD 2 dup (?)
    ends
    Value DWORD ?
    SectionNumber LONG ?
    Type_ WORD ?
    StorageClass BYTE ?
    NumberOfAuxSymbols BYTE ?
  IMAGE_SYMBOL_EX ends
  _IMAGE_SYMBOL_EX typedef IMAGE_SYMBOL_EX
  PIMAGE_SYMBOL_EX typedef ptr IMAGE_SYMBOL_EX
  IMAGE_SYM_UNDEFINED equ 0
  IMAGE_SYM_ABSOLUTE equ -1
  IMAGE_SYM_DEBUG equ -2
  IMAGE_SYM_SECTION_MAX equ 0FEFFh
  IMAGE_SYM_SECTION_MAX_EX equ <MAXLONG>
  IMAGE_SYM_TYPE_NULL equ 0000h
  IMAGE_SYM_TYPE_VOID equ 0001h
  IMAGE_SYM_TYPE_CHAR equ 0002h
  IMAGE_SYM_TYPE_SHORT equ 0003h
  IMAGE_SYM_TYPE_INT equ 0004h
  IMAGE_SYM_TYPE_LONG equ 0005h
  IMAGE_SYM_TYPE_FLOAT equ 0006h
  IMAGE_SYM_TYPE_DOUBLE equ 0007h
  IMAGE_SYM_TYPE_STRUCT equ 0008h
  IMAGE_SYM_TYPE_UNION equ 0009h
  IMAGE_SYM_TYPE_ENUM equ 000Ah
  IMAGE_SYM_TYPE_MOE equ 000Bh
  IMAGE_SYM_TYPE_BYTE equ 000Ch
  IMAGE_SYM_TYPE_WORD equ 000Dh
  IMAGE_SYM_TYPE_UINT equ 000Eh
  IMAGE_SYM_TYPE_DWORD equ 000Fh
  IMAGE_SYM_TYPE_PCODE equ 8000h
  IMAGE_SYM_DTYPE_NULL equ 0
  IMAGE_SYM_DTYPE_POINTER equ 1
  IMAGE_SYM_DTYPE_FUNCTION equ 2
  IMAGE_SYM_DTYPE_ARRAY equ 3
  IMAGE_SYM_CLASS_END_OF_FUNCTION equ -1
  IMAGE_SYM_CLASS_NULL equ 0000h
  IMAGE_SYM_CLASS_AUTOMATIC equ 0001h
  IMAGE_SYM_CLASS_EXTERNAL equ 0002h
  IMAGE_SYM_CLASS_STATIC equ 0003h
  IMAGE_SYM_CLASS_REGISTER equ 0004h
  IMAGE_SYM_CLASS_EXTERNAL_DEF equ 0005h
  IMAGE_SYM_CLASS_LABEL equ 0006h
  IMAGE_SYM_CLASS_UNDEFINED_LABEL equ 0007h
  IMAGE_SYM_CLASS_MEMBER_OF_STRUCT equ 0008h
  IMAGE_SYM_CLASS_ARGUMENT equ 0009h
  IMAGE_SYM_CLASS_STRUCT_TAG equ 000Ah
  IMAGE_SYM_CLASS_MEMBER_OF_UNION equ 000Bh
  IMAGE_SYM_CLASS_UNION_TAG equ 000Ch
  IMAGE_SYM_CLASS_TYPE_DEFINITION equ 000Dh
  IMAGE_SYM_CLASS_UNDEFINED_STATIC equ 000Eh
  IMAGE_SYM_CLASS_ENUM_TAG equ 000Fh
  IMAGE_SYM_CLASS_MEMBER_OF_ENUM equ 0010h
  IMAGE_SYM_CLASS_REGISTER_PARAM equ 0011h
  IMAGE_SYM_CLASS_BIT_FIELD equ 0012h
  IMAGE_SYM_CLASS_FAR_EXTERNAL equ 0044h
  IMAGE_SYM_CLASS_BLOCK equ 0064h
  IMAGE_SYM_CLASS_FUNCTION equ 0065h
  IMAGE_SYM_CLASS_END_OF_STRUCT equ 0066h
  IMAGE_SYM_CLASS_FILE equ 0067h
  IMAGE_SYM_CLASS_SECTION equ 0068h
  IMAGE_SYM_CLASS_WEAK_EXTERNAL equ 0069h
  IMAGE_SYM_CLASS_CLR_TOKEN equ 006Bh
  N_BTMASK equ 000Fh
  N_TMASK equ 0030h
  N_TMASK1 equ 00C0h
  N_TMASK2 equ 00F0h
  N_BTSHFT equ 4
  N_TSHIFT equ 2
  BTYPE macro x
    exitm <((x) and N_BTMASK)>
  endm
  ifndef ISPTR
    ISPTR macro x
      exitm <(((x) and N_TMASK) == (IMAGE_SYM_DTYPE_POINTER shl N_BTSHFT))>
    endm
  endif
  ifndef ISFCN
    ISFCN macro x
      exitm <(((x) and N_TMASK) == (IMAGE_SYM_DTYPE_FUNCTION shl N_BTSHFT))>
    endm
  endif
  ifndef ISARY
    ISARY macro x
      exitm <(((x) and N_TMASK) == (IMAGE_SYM_DTYPE_ARRAY shl N_BTSHFT))>
    endm
  endif
  ifndef ISTAG
    ISTAG macro x
      exitm <((x) == IMAGE_SYM_CLASS_STRUCT_TAG or (x) == IMAGE_SYM_CLASS_UNION_TAG or (x) == IMAGE_SYM_CLASS_ENUM_TAG)>
    endm
  endif
  ifndef INCREF
    INCREF macro x
      exitm <((((x) and not N_BTMASK) shl N_TSHIFT) or (IMAGE_SYM_DTYPE_POINTER shl N_BTSHFT) or ((x) and N_BTMASK))>
    endm
  endif
  ifndef DECREF
    DECREF macro x
      exitm <((((x) shr N_TSHIFT) and not N_BTMASK) or ((x) and N_BTMASK))>
    endm
  endif
  include pshpack2.inc
  IMAGE_AUX_SYMBOL_TOKEN_DEF struct
    bAuxType BYTE ?
    bReserved BYTE ?
    SymbolTableIndex DWORD ?
    rgbReserved BYTE 12 dup (?)
  IMAGE_AUX_SYMBOL_TOKEN_DEF ends
  PIMAGE_AUX_SYMBOL_TOKEN_DEF typedef ptr IMAGE_AUX_SYMBOL_TOKEN_DEF
  include poppack.inc
  IMAGE_AUX_SYMBOL union
    struct Sym
      TagIndex DWORD ?
      union Misc
        struct LnSz
          Linenumber WORD ?
          Size_ WORD ?
        ends
        TotalSize DWORD ?
      ends
      union FcnAry
        struct Function
          PointerToLinenumber DWORD ?
          PointerToNextFunction DWORD ?
        ends
        struct Array
          Dimension WORD 4 dup (?)
        ends
      ends
      TvIndex WORD ?
    ends
    struct File
      Name_ BYTE IMAGE_SIZEOF_SYMBOL dup (?)
    ends
    struct Section
      Length_ DWORD ?
      NumberOfRelocations WORD ?
      NumberOfLinenumbers WORD ?
      CheckSum DWORD ?
      Number SHORT_ ?
      Selection BYTE ?
      bReserved BYTE ?
      HighNumber SHORT_ ?
    ends
    TokenDef IMAGE_AUX_SYMBOL_TOKEN_DEF <>
    struct CRC
      crc DWORD ?
      rgbReserved BYTE 14 dup (?)
    ends
  IMAGE_AUX_SYMBOL ends
  _IMAGE_AUX_SYMBOL typedef IMAGE_AUX_SYMBOL
  PIMAGE_AUX_SYMBOL typedef ptr IMAGE_AUX_SYMBOL
  IMAGE_AUX_SYMBOL_EX union
    struct Sym
      WeakDefaultSymIndex DWORD ?
      WeakSearchType DWORD ?
      rgbReserved BYTE 12 dup (?)
    ends
    struct File
      Name_ BYTE sizeof (IMAGE_SYMBOL_EX) dup (?)
    ends
    struct Section
      Length_ DWORD ?
      NumberOfRelocations WORD ?
      NumberOfLinenumbers WORD ?
      CheckSum DWORD ?
      Number SHORT_ ?
      Selection BYTE ?
      bReserved BYTE ?
      HighNumber SHORT_ ?
      rgbReserved BYTE 2 dup (?)
    ends
    struct
      TokenDef IMAGE_AUX_SYMBOL_TOKEN_DEF <>
      rgbReserved BYTE 2 dup (?)
    ends
    struct CRC
      crc DWORD ?
      rgbReserved BYTE 16 dup (?)
    ends
  IMAGE_AUX_SYMBOL_EX ends
  _IMAGE_AUX_SYMBOL_EX typedef IMAGE_AUX_SYMBOL_EX
  PIMAGE_AUX_SYMBOL_EX typedef ptr IMAGE_AUX_SYMBOL_EX
  IMAGE_AUX_SYMBOL_TYPE typedef SDWORD
  IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF equ 1
  IMAGE_COMDAT_SELECT_NODUPLICATES equ 1
  IMAGE_COMDAT_SELECT_ANY equ 2
  IMAGE_COMDAT_SELECT_SAME_SIZE equ 3
  IMAGE_COMDAT_SELECT_EXACT_MATCH equ 4
  IMAGE_COMDAT_SELECT_ASSOCIATIVE equ 5
  IMAGE_COMDAT_SELECT_LARGEST equ 6
  IMAGE_COMDAT_SELECT_NEWEST equ 7
  IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY equ 1
  IMAGE_WEAK_EXTERN_SEARCH_LIBRARY equ 2
  IMAGE_WEAK_EXTERN_SEARCH_ALIAS equ 3
  IMAGE_WEAK_EXTERN_ANTI_DEPENDENCY equ 4
  IMAGE_RELOCATION struct
    union
      VirtualAddress DWORD ?
      RelocCount DWORD ?
    ends
    SymbolTableIndex DWORD ?
    Type_ WORD ?
  IMAGE_RELOCATION ends
  _IMAGE_RELOCATION typedef IMAGE_RELOCATION
  PIMAGE_RELOCATION typedef ptr IMAGE_RELOCATION
  IMAGE_REL_I386_ABSOLUTE equ 0000h
  IMAGE_REL_I386_DIR16 equ 0001h
  IMAGE_REL_I386_REL16 equ 0002h
  IMAGE_REL_I386_DIR32 equ 0006h
  IMAGE_REL_I386_DIR32NB equ 0007h
  IMAGE_REL_I386_SEG12 equ 0009h
  IMAGE_REL_I386_SECTION equ 000Ah
  IMAGE_REL_I386_SECREL equ 000Bh
  IMAGE_REL_I386_TOKEN equ 000Ch
  IMAGE_REL_I386_SECREL7 equ 000Dh
  IMAGE_REL_I386_REL32 equ 0014h
  IMAGE_REL_MIPS_ABSOLUTE equ 0000h
  IMAGE_REL_MIPS_REFHALF equ 0001h
  IMAGE_REL_MIPS_REFWORD equ 0002h
  IMAGE_REL_MIPS_JMPADDR equ 0003h
  IMAGE_REL_MIPS_REFHI equ 0004h
  IMAGE_REL_MIPS_REFLO equ 0005h
  IMAGE_REL_MIPS_GPREL equ 0006h
  IMAGE_REL_MIPS_LITERAL equ 0007h
  IMAGE_REL_MIPS_SECTION equ 000Ah
  IMAGE_REL_MIPS_SECREL equ 000Bh
  IMAGE_REL_MIPS_SECRELLO equ 000Ch
  IMAGE_REL_MIPS_SECRELHI equ 000Dh
  IMAGE_REL_MIPS_TOKEN equ 000Eh
  IMAGE_REL_MIPS_JMPADDR16 equ 0010h
  IMAGE_REL_MIPS_REFWORDNB equ 0022h
  IMAGE_REL_MIPS_PAIR equ 0025h
  IMAGE_REL_ALPHA_ABSOLUTE equ 0000h
  IMAGE_REL_ALPHA_REFLONG equ 0001h
  IMAGE_REL_ALPHA_REFQUAD equ 0002h
  IMAGE_REL_ALPHA_GPREL32 equ 0003h
  IMAGE_REL_ALPHA_LITERAL equ 0004h
  IMAGE_REL_ALPHA_LITUSE equ 0005h
  IMAGE_REL_ALPHA_GPDISP equ 0006h
  IMAGE_REL_ALPHA_BRADDR equ 0007h
  IMAGE_REL_ALPHA_HINT equ 0008h
  IMAGE_REL_ALPHA_INLINE_REFLONG equ 0009h
  IMAGE_REL_ALPHA_REFHI equ 000Ah
  IMAGE_REL_ALPHA_REFLO equ 000Bh
  IMAGE_REL_ALPHA_PAIR equ 000Ch
  IMAGE_REL_ALPHA_MATCH equ 000Dh
  IMAGE_REL_ALPHA_SECTION equ 000Eh
  IMAGE_REL_ALPHA_SECREL equ 000Fh
  IMAGE_REL_ALPHA_REFLONGNB equ 0010h
  IMAGE_REL_ALPHA_SECRELLO equ 0011h
  IMAGE_REL_ALPHA_SECRELHI equ 0012h
  IMAGE_REL_ALPHA_REFQ3 equ 0013h
  IMAGE_REL_ALPHA_REFQ2 equ 0014h
  IMAGE_REL_ALPHA_REFQ1 equ 0015h
  IMAGE_REL_ALPHA_GPRELLO equ 0016h
  IMAGE_REL_ALPHA_GPRELHI equ 0017h
  IMAGE_REL_PPC_ABSOLUTE equ 0000h
  IMAGE_REL_PPC_ADDR64 equ 0001h
  IMAGE_REL_PPC_ADDR32 equ 0002h
  IMAGE_REL_PPC_ADDR24 equ 0003h
  IMAGE_REL_PPC_ADDR16 equ 0004h
  IMAGE_REL_PPC_ADDR14 equ 0005h
  IMAGE_REL_PPC_REL24 equ 0006h
  IMAGE_REL_PPC_REL14 equ 0007h
  IMAGE_REL_PPC_TOCREL16 equ 0008h
  IMAGE_REL_PPC_TOCREL14 equ 0009h
  IMAGE_REL_PPC_ADDR32NB equ 000Ah
  IMAGE_REL_PPC_SECREL equ 000Bh
  IMAGE_REL_PPC_SECTION equ 000Ch
  IMAGE_REL_PPC_IFGLUE equ 000Dh
  IMAGE_REL_PPC_IMGLUE equ 000Eh
  IMAGE_REL_PPC_SECREL16 equ 000Fh
  IMAGE_REL_PPC_REFHI equ 0010h
  IMAGE_REL_PPC_REFLO equ 0011h
  IMAGE_REL_PPC_PAIR equ 0012h
  IMAGE_REL_PPC_SECRELLO equ 0013h
  IMAGE_REL_PPC_SECRELHI equ 0014h
  IMAGE_REL_PPC_GPREL equ 0015h
  IMAGE_REL_PPC_TOKEN equ 0016h
  IMAGE_REL_PPC_TYPEMASK equ 00FFh
  IMAGE_REL_PPC_NEG equ 0100h
  IMAGE_REL_PPC_BRTAKEN equ 0200h
  IMAGE_REL_PPC_BRNTAKEN equ 0400h
  IMAGE_REL_PPC_TOCDEFN equ 0800h
  IMAGE_REL_SH3_ABSOLUTE equ 0000h
  IMAGE_REL_SH3_DIRECT16 equ 0001h
  IMAGE_REL_SH3_DIRECT32 equ 0002h
  IMAGE_REL_SH3_DIRECT8 equ 0003h
  IMAGE_REL_SH3_DIRECT8_WORD equ 0004h
  IMAGE_REL_SH3_DIRECT8_LONG equ 0005h
  IMAGE_REL_SH3_DIRECT4 equ 0006h
  IMAGE_REL_SH3_DIRECT4_WORD equ 0007h
  IMAGE_REL_SH3_DIRECT4_LONG equ 0008h
  IMAGE_REL_SH3_PCREL8_WORD equ 0009h
  IMAGE_REL_SH3_PCREL8_LONG equ 000Ah
  IMAGE_REL_SH3_PCREL12_WORD equ 000Bh
  IMAGE_REL_SH3_STARTOF_SECTION equ 000Ch
  IMAGE_REL_SH3_SIZEOF_SECTION equ 000Dh
  IMAGE_REL_SH3_SECTION equ 000Eh
  IMAGE_REL_SH3_SECREL equ 000Fh
  IMAGE_REL_SH3_DIRECT32_NB equ 0010h
  IMAGE_REL_SH3_GPREL4_LONG equ 0011h
  IMAGE_REL_SH3_TOKEN equ 0012h
  IMAGE_REL_SHM_PCRELPT equ 0013h
  IMAGE_REL_SHM_REFLO equ 0014h
  IMAGE_REL_SHM_REFHALF equ 0015h
  IMAGE_REL_SHM_RELLO equ 0016h
  IMAGE_REL_SHM_RELHALF equ 0017h
  IMAGE_REL_SHM_PAIR equ 0018h
  IMAGE_REL_SH_NOMODE equ 8000h
  IMAGE_REL_ARM_ABSOLUTE equ 0000h
  IMAGE_REL_ARM_ADDR32 equ 0001h
  IMAGE_REL_ARM_ADDR32NB equ 0002h
  IMAGE_REL_ARM_BRANCH24 equ 0003h
  IMAGE_REL_ARM_BRANCH11 equ 0004h
  IMAGE_REL_ARM_TOKEN equ 0005h
  IMAGE_REL_ARM_GPREL12 equ 0006h
  IMAGE_REL_ARM_GPREL7 equ 0007h
  IMAGE_REL_ARM_BLX24 equ 0008h
  IMAGE_REL_ARM_BLX11 equ 0009h
  IMAGE_REL_ARM_SECTION equ 000Eh
  IMAGE_REL_ARM_SECREL equ 000Fh
  IMAGE_REL_ARM_MOV32A equ 0010h
  IMAGE_REL_ARM_MOV32 equ 0010h
  IMAGE_REL_ARM_MOV32T equ 0011h
  IMAGE_REL_THUMB_MOV32 equ 0011h
  IMAGE_REL_ARM_BRANCH20T equ 0012h
  IMAGE_REL_THUMB_BRANCH20 equ 0012h
  IMAGE_REL_ARM_BRANCH24T equ 0014h
  IMAGE_REL_THUMB_BRANCH24 equ 0014h
  IMAGE_REL_ARM_BLX23T equ 0015h
  IMAGE_REL_THUMB_BLX23 equ 0015h
  IMAGE_REL_AM_ABSOLUTE equ 0000h
  IMAGE_REL_AM_ADDR32 equ 0001h
  IMAGE_REL_AM_ADDR32NB equ 0002h
  IMAGE_REL_AM_CALL32 equ 0003h
  IMAGE_REL_AM_FUNCINFO equ 0004h
  IMAGE_REL_AM_REL32_1 equ 0005h
  IMAGE_REL_AM_REL32_2 equ 0006h
  IMAGE_REL_AM_SECREL equ 0007h
  IMAGE_REL_AM_SECTION equ 0008h
  IMAGE_REL_AM_TOKEN equ 0009h
  IMAGE_REL_ARM64_ABSOLUTE equ 0000h
  IMAGE_REL_ARM64_ADDR32 equ 0001h
  IMAGE_REL_ARM64_ADDR32NB equ 0002h
  IMAGE_REL_ARM64_BRANCH26 equ 0003h
  IMAGE_REL_ARM64_PAGEBASE_REL21 equ 0004h
  IMAGE_REL_ARM64_REL21 equ 0005h
  IMAGE_REL_ARM64_PAGEOFFSET_12A equ 0006h
  IMAGE_REL_ARM64_PAGEOFFSET_12L equ 0007h
  IMAGE_REL_ARM64_SECREL equ 0008h
  IMAGE_REL_ARM64_SECREL_LOW12A equ 0009h
  IMAGE_REL_ARM64_SECREL_HIGH12A equ 000Ah
  IMAGE_REL_ARM64_SECREL_LOW12L equ 000Bh
  IMAGE_REL_ARM64_TOKEN equ 000Ch
  IMAGE_REL_ARM64_SECTION equ 000Dh
  IMAGE_REL_ARM64_ADDR64 equ 000Eh
  IMAGE_REL_ARM64_BRANCH19 equ 000Fh
  IMAGE_REL_AMD64_ABSOLUTE equ 0000h
  IMAGE_REL_AMD64_ADDR64 equ 0001h
  IMAGE_REL_AMD64_ADDR32 equ 0002h
  IMAGE_REL_AMD64_ADDR32NB equ 0003h
  IMAGE_REL_AMD64_REL32 equ 0004h
  IMAGE_REL_AMD64_REL32_1 equ 0005h
  IMAGE_REL_AMD64_REL32_2 equ 0006h
  IMAGE_REL_AMD64_REL32_3 equ 0007h
  IMAGE_REL_AMD64_REL32_4 equ 0008h
  IMAGE_REL_AMD64_REL32_5 equ 0009h
  IMAGE_REL_AMD64_SECTION equ 000Ah
  IMAGE_REL_AMD64_SECREL equ 000Bh
  IMAGE_REL_AMD64_SECREL7 equ 000Ch
  IMAGE_REL_AMD64_TOKEN equ 000Dh
  IMAGE_REL_AMD64_SREL32 equ 000Eh
  IMAGE_REL_AMD64_PAIR equ 000Fh
  IMAGE_REL_AMD64_SSPAN32 equ 0010h
  IMAGE_REL_IA64_ABSOLUTE equ 0000h
  IMAGE_REL_IA64_IMM14 equ 0001h
  IMAGE_REL_IA64_IMM22 equ 0002h
  IMAGE_REL_IA64_IMM64 equ 0003h
  IMAGE_REL_IA64_DIR32 equ 0004h
  IMAGE_REL_IA64_DIR64 equ 0005h
  IMAGE_REL_IA64_PCREL21B equ 0006h
  IMAGE_REL_IA64_PCREL21M equ 0007h
  IMAGE_REL_IA64_PCREL21F equ 0008h
  IMAGE_REL_IA64_GPREL22 equ 0009h
  IMAGE_REL_IA64_LTOFF22 equ 000Ah
  IMAGE_REL_IA64_SECTION equ 000Bh
  IMAGE_REL_IA64_SECREL22 equ 000Ch
  IMAGE_REL_IA64_SECREL64I equ 000Dh
  IMAGE_REL_IA64_SECREL32 equ 000Eh
  IMAGE_REL_IA64_DIR32NB equ 0010h
  IMAGE_REL_IA64_SREL14 equ 0011h
  IMAGE_REL_IA64_SREL22 equ 0012h
  IMAGE_REL_IA64_SREL32 equ 0013h
  IMAGE_REL_IA64_UREL32 equ 0014h
  IMAGE_REL_IA64_PCREL60X equ 0015h
  IMAGE_REL_IA64_PCREL60B equ 0016h
  IMAGE_REL_IA64_PCREL60F equ 0017h
  IMAGE_REL_IA64_PCREL60I equ 0018h
  IMAGE_REL_IA64_PCREL60M equ 0019h
  IMAGE_REL_IA64_IMMGPREL64 equ 001Ah
  IMAGE_REL_IA64_TOKEN equ 001Bh
  IMAGE_REL_IA64_GPREL32 equ 001Ch
  IMAGE_REL_IA64_ADDEND equ 001Fh
  IMAGE_REL_CEF_ABSOLUTE equ 0000h
  IMAGE_REL_CEF_ADDR32 equ 0001h
  IMAGE_REL_CEF_ADDR64 equ 0002h
  IMAGE_REL_CEF_ADDR32NB equ 0003h
  IMAGE_REL_CEF_SECTION equ 0004h
  IMAGE_REL_CEF_SECREL equ 0005h
  IMAGE_REL_CEF_TOKEN equ 0006h
  IMAGE_REL_CEE_ABSOLUTE equ 0000h
  IMAGE_REL_CEE_ADDR32 equ 0001h
  IMAGE_REL_CEE_ADDR64 equ 0002h
  IMAGE_REL_CEE_ADDR32NB equ 0003h
  IMAGE_REL_CEE_SECTION equ 0004h
  IMAGE_REL_CEE_SECREL equ 0005h
  IMAGE_REL_CEE_TOKEN equ 0006h
  IMAGE_REL_M32R_ABSOLUTE equ 0000h
  IMAGE_REL_M32R_ADDR32 equ 0001h
  IMAGE_REL_M32R_ADDR32NB equ 0002h
  IMAGE_REL_M32R_ADDR24 equ 0003h
  IMAGE_REL_M32R_GPREL16 equ 0004h
  IMAGE_REL_M32R_PCREL24 equ 0005h
  IMAGE_REL_M32R_PCREL16 equ 0006h
  IMAGE_REL_M32R_PCREL8 equ 0007h
  IMAGE_REL_M32R_REFHALF equ 0008h
  IMAGE_REL_M32R_REFHI equ 0009h
  IMAGE_REL_M32R_REFLO equ 000Ah
  IMAGE_REL_M32R_PAIR equ 000Bh
  IMAGE_REL_M32R_SECTION equ 000Ch
  IMAGE_REL_M32R_SECREL32 equ 000Dh
  IMAGE_REL_M32R_TOKEN equ 000Eh
  IMAGE_REL_EBC_ABSOLUTE equ 0000h
  IMAGE_REL_EBC_ADDR32NB equ 0001h
  IMAGE_REL_EBC_REL32 equ 0002h
  IMAGE_REL_EBC_SECTION equ 0003h
  IMAGE_REL_EBC_SECREL equ 0004h
  EXT_IMM64 macro Value, Address, Size_, InstPos, ValPos
    exitm <Value or ((((* (Address) shr InstPos) and ((1 shl Size_) - 1))) shl ValPos)>
  endm
  INS_IMM64 macro Value, Address, Size_, InstPos, ValPos
    exitm <* Address = (* Address and not (((1 shl Size_) - 1) shl InstPos)) or ((((Value shr ValPos) and ((1 shl Size_) - 1))) shl InstPos)>
  endm
  EMARCH_ENC_I17_IMM7B_INST_WORD_X equ 3
  EMARCH_ENC_I17_IMM7B_SIZE_X equ 7
  EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X equ 4
  EMARCH_ENC_I17_IMM7B_VAL_POS_X equ 0
  EMARCH_ENC_I17_IMM9D_INST_WORD_X equ 3
  EMARCH_ENC_I17_IMM9D_SIZE_X equ 9
  EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X equ 18
  EMARCH_ENC_I17_IMM9D_VAL_POS_X equ 7
  EMARCH_ENC_I17_IMM5C_INST_WORD_X equ 3
  EMARCH_ENC_I17_IMM5C_SIZE_X equ 5
  EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X equ 13
  EMARCH_ENC_I17_IMM5C_VAL_POS_X equ 16
  EMARCH_ENC_I17_IC_INST_WORD_X equ 3
  EMARCH_ENC_I17_IC_SIZE_X equ 1
  EMARCH_ENC_I17_IC_INST_WORD_POS_X equ 12
  EMARCH_ENC_I17_IC_VAL_POS_X equ 21
  EMARCH_ENC_I17_IMM41a_INST_WORD_X equ 1
  EMARCH_ENC_I17_IMM41a_SIZE_X equ 10
  EMARCH_ENC_I17_IMM41a_INST_WORD_POS_X equ 14
  EMARCH_ENC_I17_IMM41a_VAL_POS_X equ 22
  EMARCH_ENC_I17_IMM41b_INST_WORD_X equ 1
  EMARCH_ENC_I17_IMM41b_SIZE_X equ 8
  EMARCH_ENC_I17_IMM41b_INST_WORD_POS_X equ 24
  EMARCH_ENC_I17_IMM41b_VAL_POS_X equ 32
  EMARCH_ENC_I17_IMM41c_INST_WORD_X equ 2
  EMARCH_ENC_I17_IMM41c_SIZE_X equ 23
  EMARCH_ENC_I17_IMM41c_INST_WORD_POS_X equ 0
  EMARCH_ENC_I17_IMM41c_VAL_POS_X equ 40
  EMARCH_ENC_I17_SIGN_INST_WORD_X equ 3
  EMARCH_ENC_I17_SIGN_SIZE_X equ 1
  EMARCH_ENC_I17_SIGN_INST_WORD_POS_X equ 27
  EMARCH_ENC_I17_SIGN_VAL_POS_X equ 63
  X3_OPCODE_INST_WORD_X equ 3
  X3_OPCODE_SIZE_X equ 4
  X3_OPCODE_INST_WORD_POS_X equ 28
  X3_OPCODE_SIGN_VAL_POS_X equ 0
  X3_I_INST_WORD_X equ 3
  X3_I_SIZE_X equ 1
  X3_I_INST_WORD_POS_X equ 27
  X3_I_SIGN_VAL_POS_X equ 59
  X3_D_WH_INST_WORD_X equ 3
  X3_D_WH_SIZE_X equ 3
  X3_D_WH_INST_WORD_POS_X equ 24
  X3_D_WH_SIGN_VAL_POS_X equ 0
  X3_IMM20_INST_WORD_X equ 3
  X3_IMM20_SIZE_X equ 20
  X3_IMM20_INST_WORD_POS_X equ 4
  X3_IMM20_SIGN_VAL_POS_X equ 0
  X3_IMM39_1_INST_WORD_X equ 2
  X3_IMM39_1_SIZE_X equ 23
  X3_IMM39_1_INST_WORD_POS_X equ 0
  X3_IMM39_1_SIGN_VAL_POS_X equ 36
  X3_IMM39_2_INST_WORD_X equ 1
  X3_IMM39_2_SIZE_X equ 16
  X3_IMM39_2_INST_WORD_POS_X equ 16
  X3_IMM39_2_SIGN_VAL_POS_X equ 20
  X3_P_INST_WORD_X equ 3
  X3_P_SIZE_X equ 4
  X3_P_INST_WORD_POS_X equ 0
  X3_P_SIGN_VAL_POS_X equ 0
  X3_TMPLT_INST_WORD_X equ 0
  X3_TMPLT_SIZE_X equ 4
  X3_TMPLT_INST_WORD_POS_X equ 0
  X3_TMPLT_SIGN_VAL_POS_X equ 0
  X3_BTYPE_QP_INST_WORD_X equ 2
  X3_BTYPE_QP_SIZE_X equ 9
  X3_BTYPE_QP_INST_WORD_POS_X equ 23
  X3_BTYPE_QP_INST_VAL_POS_X equ 0
  X3_EMPTY_INST_WORD_X equ 1
  X3_EMPTY_SIZE_X equ 2
  X3_EMPTY_INST_WORD_POS_X equ 14
  X3_EMPTY_INST_VAL_POS_X equ 0
  IMAGE_LINENUMBER struct
    union Type_
      SymbolTableIndex DWORD ?
      VirtualAddress DWORD ?
    ends
    Linenumber WORD ?
  IMAGE_LINENUMBER ends
  _IMAGE_LINENUMBER typedef IMAGE_LINENUMBER
  PIMAGE_LINENUMBER typedef ptr IMAGE_LINENUMBER
  ifndef _MAC
    include poppack.inc
  endif
  IMAGE_BASE_RELOCATION struct
    VirtualAddress DWORD ?
    SizeOfBlock DWORD ?
  IMAGE_BASE_RELOCATION ends
  _IMAGE_BASE_RELOCATION typedef IMAGE_BASE_RELOCATION
  PIMAGE_BASE_RELOCATION typedef ptr IMAGE_BASE_RELOCATION
  IMAGE_REL_BASED_ABSOLUTE equ 0
  IMAGE_REL_BASED_HIGH equ 1
  IMAGE_REL_BASED_LOW equ 2
  IMAGE_REL_BASED_HIGHLOW equ 3
  IMAGE_REL_BASED_HIGHADJ equ 4
  IMAGE_REL_BASED_MACHINE_SPECIFIC_5 equ 5
  IMAGE_REL_BASED_RESERVED equ 6
  IMAGE_REL_BASED_MACHINE_SPECIFIC_7 equ 7
  IMAGE_REL_BASED_MACHINE_SPECIFIC_8 equ 8
  IMAGE_REL_BASED_MACHINE_SPECIFIC_9 equ 9
  IMAGE_REL_BASED_DIR64 equ 10
  IMAGE_REL_BASED_IA64_IMM64 equ 9
  IMAGE_REL_BASED_MIPS_JMPADDR equ 5
  IMAGE_REL_BASED_MIPS_JMPADDR16 equ 9
  IMAGE_REL_BASED_ARM_MOV32 equ 5
  IMAGE_REL_BASED_THUMB_MOV32 equ 7
  IMAGE_ARCHIVE_START_SIZE equ 8
  IMAGE_ARCHIVE_START equ <"!<arch!>",0Ah>
  IMAGE_ARCHIVE_END equ <"`",0Ah>
  IMAGE_ARCHIVE_PAD equ 0Ah
  IMAGE_ARCHIVE_LINKER_MEMBER equ <"/               ">
  IMAGE_ARCHIVE_LONGNAMES_MEMBER equ <"//              ">
  IMAGE_ARCHIVE_HYBRIDMAP_MEMBER equ <"/<HYBRIDMAP>/   ">
  IMAGE_ARCHIVE_MEMBER_HEADER struct
    Name_ BYTE 16 dup (?)
    Date BYTE 12 dup (?)
    UserID BYTE 6 dup (?)
    GroupID BYTE 6 dup (?)
    Mode BYTE 8 dup (?)
    Size_ BYTE 10 dup (?)
    EndHeader BYTE 2 dup (?)
  IMAGE_ARCHIVE_MEMBER_HEADER ends
  _IMAGE_ARCHIVE_MEMBER_HEADER typedef IMAGE_ARCHIVE_MEMBER_HEADER
  PIMAGE_ARCHIVE_MEMBER_HEADER typedef ptr IMAGE_ARCHIVE_MEMBER_HEADER
  IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR equ 60
  IMAGE_EXPORT_DIRECTORY struct
    Characteristics DWORD ?
    TimeDateStamp DWORD ?
    MajorVersion WORD ?
    MinorVersion WORD ?
    Name_ DWORD ?
    Base DWORD ?
    NumberOfFunctions DWORD ?
    NumberOfNames DWORD ?
    AddressOfFunctions DWORD ?
    AddressOfNames DWORD ?
    AddressOfNameOrdinals DWORD ?
  IMAGE_EXPORT_DIRECTORY ends
  _IMAGE_EXPORT_DIRECTORY typedef IMAGE_EXPORT_DIRECTORY
  PIMAGE_EXPORT_DIRECTORY typedef ptr IMAGE_EXPORT_DIRECTORY
  IMAGE_IMPORT_BY_NAME struct
    Hint WORD ?
    Name_ CHAR 1 dup (?)
  IMAGE_IMPORT_BY_NAME ends
  _IMAGE_IMPORT_BY_NAME typedef IMAGE_IMPORT_BY_NAME
  PIMAGE_IMPORT_BY_NAME typedef ptr IMAGE_IMPORT_BY_NAME
  include pshpack8.inc
  IMAGE_THUNK_DATA64 struct
    union u1
      ForwarderString ULONGLONG ?
      Function ULONGLONG ?
      Ordinal ULONGLONG ?
      AddressOfData ULONGLONG ?
    ends
  IMAGE_THUNK_DATA64 ends
  _IMAGE_THUNK_DATA64 typedef IMAGE_THUNK_DATA64
  PIMAGE_THUNK_DATA64 typedef ptr IMAGE_THUNK_DATA64
  include poppack.inc
  IMAGE_THUNK_DATA32 struct
    union u1
      ForwarderString DWORD ?
      Function DWORD ?
      Ordinal DWORD ?
      AddressOfData DWORD ?
    ends
  IMAGE_THUNK_DATA32 ends
  _IMAGE_THUNK_DATA32 typedef IMAGE_THUNK_DATA32
  PIMAGE_THUNK_DATA32 typedef ptr IMAGE_THUNK_DATA32
  IMAGE_ORDINAL_FLAG64 equ 8000000000000000h
  IMAGE_ORDINAL_FLAG32 equ 80000000h
  IMAGE_ORDINAL64 macro Ordinal
    exitm <(Ordinal and 0ffffh)>
  endm
  IMAGE_ORDINAL32 macro Ordinal
    exitm <(Ordinal and 0ffffh)>
  endm
  IMAGE_SNAP_BY_ORDINAL64 macro Ordinal
    exitm <((Ordinal and IMAGE_ORDINAL_FLAG64) != 0)>
  endm
  IMAGE_SNAP_BY_ORDINAL32 macro Ordinal
    exitm <((Ordinal and IMAGE_ORDINAL_FLAG32) != 0)>
  endm
  TYPE_IMAGE_TLS_CALLBACK typedef proto WIN_STD_CALL_CONV :PVOID, :DWORD, :PVOID
  PIMAGE_TLS_CALLBACK typedef ptr TYPE_IMAGE_TLS_CALLBACK
  IMAGE_TLS_DIRECTORY64 struct
    StartAddressOfRawData ULONGLONG ?
    EndAddressOfRawData ULONGLONG ?
    AddressOfIndex ULONGLONG ?
    AddressOfCallBacks ULONGLONG ?
    SizeOfZeroFill DWORD ?
    union
      Characteristics DWORD ?
      struct
        DUMMYRECORDNAME_??24 record Reserved0_??24:20, Alignment_??24:4, Reserved1_??24:8
        DUMMYRECORDNAME_??24 <>
      ends
    ends
  IMAGE_TLS_DIRECTORY64 ends
  _IMAGE_TLS_DIRECTORY64 typedef IMAGE_TLS_DIRECTORY64
  PIMAGE_TLS_DIRECTORY64 typedef ptr IMAGE_TLS_DIRECTORY64
  IMAGE_TLS_DIRECTORY32 struct
    StartAddressOfRawData DWORD ?
    EndAddressOfRawData DWORD ?
    AddressOfIndex DWORD ?
    AddressOfCallBacks DWORD ?
    SizeOfZeroFill DWORD ?
    union
      Characteristics DWORD ?
      struct
        DUMMYRECORDNAME_??25 record Reserved0_??25:20, Alignment_??25:4, Reserved1_??25:8
        DUMMYRECORDNAME_??25 <>
      ends
    ends
  IMAGE_TLS_DIRECTORY32 ends
  _IMAGE_TLS_DIRECTORY32 typedef IMAGE_TLS_DIRECTORY32
  PIMAGE_TLS_DIRECTORY32 typedef ptr IMAGE_TLS_DIRECTORY32
  ifdef _WIN64
    IMAGE_ORDINAL_FLAG equ <IMAGE_ORDINAL_FLAG64>
    IMAGE_ORDINAL macro Ordinal
      exitm <IMAGE_ORDINAL64(Ordinal)>
    endm
    IMAGE_THUNK_DATA typedef IMAGE_THUNK_DATA64
    PIMAGE_THUNK_DATA typedef PIMAGE_THUNK_DATA64
    IMAGE_SNAP_BY_ORDINAL macro Ordinal
      exitm <IMAGE_SNAP_BY_ORDINAL64(Ordinal)>
    endm
    IMAGE_TLS_DIRECTORY typedef IMAGE_TLS_DIRECTORY64
    PIMAGE_TLS_DIRECTORY typedef PIMAGE_TLS_DIRECTORY64
  else
    IMAGE_ORDINAL_FLAG equ <IMAGE_ORDINAL_FLAG32>
    IMAGE_ORDINAL macro Ordinal
      exitm <IMAGE_ORDINAL32(Ordinal)>
    endm
    IMAGE_THUNK_DATA typedef IMAGE_THUNK_DATA32
    PIMAGE_THUNK_DATA typedef PIMAGE_THUNK_DATA32
    IMAGE_SNAP_BY_ORDINAL macro Ordinal
      exitm <IMAGE_SNAP_BY_ORDINAL32(Ordinal)>
    endm
    IMAGE_TLS_DIRECTORY typedef IMAGE_TLS_DIRECTORY32
    PIMAGE_TLS_DIRECTORY typedef PIMAGE_TLS_DIRECTORY32
  endif
  IMAGE_IMPORT_DESCRIPTOR struct
    union
      Characteristics DWORD ?
      OriginalFirstThunk DWORD ?
    ends
    TimeDateStamp DWORD ?
    ForwarderChain DWORD ?
    Name_ DWORD ?
    FirstThunk DWORD ?
  IMAGE_IMPORT_DESCRIPTOR ends
  _IMAGE_IMPORT_DESCRIPTOR typedef IMAGE_IMPORT_DESCRIPTOR
  PIMAGE_IMPORT_DESCRIPTOR typedef ptr IMAGE_IMPORT_DESCRIPTOR
  IMAGE_BOUND_IMPORT_DESCRIPTOR struct
    TimeDateStamp DWORD ?
    OffsetModuleName WORD ?
    NumberOfModuleForwarderRefs WORD ?
  IMAGE_BOUND_IMPORT_DESCRIPTOR ends
  _IMAGE_BOUND_IMPORT_DESCRIPTOR typedef IMAGE_BOUND_IMPORT_DESCRIPTOR
  PIMAGE_BOUND_IMPORT_DESCRIPTOR typedef ptr IMAGE_BOUND_IMPORT_DESCRIPTOR
  IMAGE_BOUND_FORWARDER_REF struct
    TimeDateStamp DWORD ?
    OffsetModuleName WORD ?
    Reserved WORD ?
  IMAGE_BOUND_FORWARDER_REF ends
  _IMAGE_BOUND_FORWARDER_REF typedef IMAGE_BOUND_FORWARDER_REF
  PIMAGE_BOUND_FORWARDER_REF typedef ptr IMAGE_BOUND_FORWARDER_REF
  IMAGE_DELAYLOAD_DESCRIPTOR struct
    union Attributes
      AllAttributes DWORD ?
      struct
        DUMMYRECORDNAME_??26 record RvaBased_??26:1, ReservedAttributes_??26:31
        DUMMYRECORDNAME_??26 <>
      ends
    ends
    DllNameRVA DWORD ?
    ModuleHandleRVA DWORD ?
    ImportAddressTableRVA DWORD ?
    ImportNameTableRVA DWORD ?
    BoundImportAddressTableRVA DWORD ?
    UnloadInformationTableRVA DWORD ?
    TimeDateStamp DWORD ?
  IMAGE_DELAYLOAD_DESCRIPTOR ends
  _IMAGE_DELAYLOAD_DESCRIPTOR typedef IMAGE_DELAYLOAD_DESCRIPTOR
  PIMAGE_DELAYLOAD_DESCRIPTOR typedef ptr IMAGE_DELAYLOAD_DESCRIPTOR
  PCIMAGE_DELAYLOAD_DESCRIPTOR typedef ptr IMAGE_DELAYLOAD_DESCRIPTOR
  IMAGE_RESOURCE_DIRECTORY struct
    Characteristics DWORD ?
    TimeDateStamp DWORD ?
    MajorVersion WORD ?
    MinorVersion WORD ?
    NumberOfNamedEntries WORD ?
    NumberOfIdEntries WORD ?
  IMAGE_RESOURCE_DIRECTORY ends
  _IMAGE_RESOURCE_DIRECTORY typedef IMAGE_RESOURCE_DIRECTORY
  PIMAGE_RESOURCE_DIRECTORY typedef ptr IMAGE_RESOURCE_DIRECTORY
  IMAGE_RESOURCE_NAME_IS_STRING equ 80000000h
  IMAGE_RESOURCE_DATA_IS_DIRECTORY equ 80000000h
  IMAGE_RESOURCE_DIRECTORY_ENTRY struct
    union
      struct
        DUMMYRECORDNAME_??27 record NameOffset_??27:31, NameIsString_??27:1
        DUMMYRECORDNAME_??27 <>
      ends
      Name_ DWORD ?
      Id WORD ?
    ends
    union DUMMYUNIONNAME2
      OffsetToData DWORD ?
      struct DUMMYSTRUCTNAME2
        DUMMYSTRUCTNAME2_??28 record OffsetToDirectory_??28:31, DataIsDirectory_??28:1
        DUMMYSTRUCTNAME2_??28 <>
      ends
    ends
  IMAGE_RESOURCE_DIRECTORY_ENTRY ends
  _IMAGE_RESOURCE_DIRECTORY_ENTRY typedef IMAGE_RESOURCE_DIRECTORY_ENTRY
  PIMAGE_RESOURCE_DIRECTORY_ENTRY typedef ptr IMAGE_RESOURCE_DIRECTORY_ENTRY
  IMAGE_RESOURCE_DIRECTORY_STRING struct
    Length_ WORD ?
    NameString CHAR 1 dup (?)
  IMAGE_RESOURCE_DIRECTORY_STRING ends
  _IMAGE_RESOURCE_DIRECTORY_STRING typedef IMAGE_RESOURCE_DIRECTORY_STRING
  PIMAGE_RESOURCE_DIRECTORY_STRING typedef ptr IMAGE_RESOURCE_DIRECTORY_STRING
  IMAGE_RESOURCE_DIR_STRING_U struct
    Length_ WORD ?
    NameString WCHAR 1 dup (?)
  IMAGE_RESOURCE_DIR_STRING_U ends
  _IMAGE_RESOURCE_DIR_STRING_U typedef IMAGE_RESOURCE_DIR_STRING_U
  PIMAGE_RESOURCE_DIR_STRING_U typedef ptr IMAGE_RESOURCE_DIR_STRING_U
  IMAGE_RESOURCE_DATA_ENTRY struct
    OffsetToData DWORD ?
    Size_ DWORD ?
    CodePage DWORD ?
    Reserved DWORD ?
  IMAGE_RESOURCE_DATA_ENTRY ends
  _IMAGE_RESOURCE_DATA_ENTRY typedef IMAGE_RESOURCE_DATA_ENTRY
  PIMAGE_RESOURCE_DATA_ENTRY typedef ptr IMAGE_RESOURCE_DATA_ENTRY
  IMAGE_LOAD_CONFIG_CODE_INTEGRITY struct
    Flags WORD ?
    Catalog WORD ?
    CatalogOffset DWORD ?
    Reserved DWORD ?
  IMAGE_LOAD_CONFIG_CODE_INTEGRITY ends
  _IMAGE_LOAD_CONFIG_CODE_INTEGRITY typedef IMAGE_LOAD_CONFIG_CODE_INTEGRITY
  PIMAGE_LOAD_CONFIG_CODE_INTEGRITY typedef ptr IMAGE_LOAD_CONFIG_CODE_INTEGRITY
  IMAGE_DYNAMIC_RELOCATION_TABLE struct
    Version DWORD ?
    Size_ DWORD ?
  IMAGE_DYNAMIC_RELOCATION_TABLE ends
  _IMAGE_DYNAMIC_RELOCATION_TABLE typedef IMAGE_DYNAMIC_RELOCATION_TABLE
  PIMAGE_DYNAMIC_RELOCATION_TABLE typedef ptr IMAGE_DYNAMIC_RELOCATION_TABLE
  include pshpack1.inc
  IMAGE_DYNAMIC_RELOCATION32 struct
    Symbol DWORD ?
    BaseRelocSize DWORD ?
  IMAGE_DYNAMIC_RELOCATION32 ends
  _IMAGE_DYNAMIC_RELOCATION32 typedef IMAGE_DYNAMIC_RELOCATION32
  PIMAGE_DYNAMIC_RELOCATION32 typedef ptr IMAGE_DYNAMIC_RELOCATION32
  IMAGE_DYNAMIC_RELOCATION64 struct
    Symbol ULONGLONG ?
    BaseRelocSize DWORD ?
  IMAGE_DYNAMIC_RELOCATION64 ends
  _IMAGE_DYNAMIC_RELOCATION64 typedef IMAGE_DYNAMIC_RELOCATION64
  PIMAGE_DYNAMIC_RELOCATION64 typedef ptr IMAGE_DYNAMIC_RELOCATION64
  IMAGE_DYNAMIC_RELOCATION32_V2 struct
    HeaderSize DWORD ?
    FixupInfoSize DWORD ?
    Symbol DWORD ?
    SymbolGroup DWORD ?
    Flags DWORD ?
  IMAGE_DYNAMIC_RELOCATION32_V2 ends
  _IMAGE_DYNAMIC_RELOCATION32_V2 typedef IMAGE_DYNAMIC_RELOCATION32_V2
  PIMAGE_DYNAMIC_RELOCATION32_V2 typedef ptr IMAGE_DYNAMIC_RELOCATION32_V2
  IMAGE_DYNAMIC_RELOCATION64_V2 struct
    HeaderSize DWORD ?
    FixupInfoSize DWORD ?
    Symbol ULONGLONG ?
    SymbolGroup DWORD ?
    Flags DWORD ?
  IMAGE_DYNAMIC_RELOCATION64_V2 ends
  _IMAGE_DYNAMIC_RELOCATION64_V2 typedef IMAGE_DYNAMIC_RELOCATION64_V2
  PIMAGE_DYNAMIC_RELOCATION64_V2 typedef ptr IMAGE_DYNAMIC_RELOCATION64_V2
  include poppack.inc
  ifdef _WIN64
    IMAGE_DYNAMIC_RELOCATION typedef IMAGE_DYNAMIC_RELOCATION64
    PIMAGE_DYNAMIC_RELOCATION typedef PIMAGE_DYNAMIC_RELOCATION64
    IMAGE_DYNAMIC_RELOCATION_V2 typedef IMAGE_DYNAMIC_RELOCATION64_V2
    PIMAGE_DYNAMIC_RELOCATION_V2 typedef PIMAGE_DYNAMIC_RELOCATION64_V2
  else
    IMAGE_DYNAMIC_RELOCATION typedef IMAGE_DYNAMIC_RELOCATION32
    PIMAGE_DYNAMIC_RELOCATION typedef PIMAGE_DYNAMIC_RELOCATION32
    IMAGE_DYNAMIC_RELOCATION_V2 typedef IMAGE_DYNAMIC_RELOCATION32_V2
    PIMAGE_DYNAMIC_RELOCATION_V2 typedef PIMAGE_DYNAMIC_RELOCATION32_V2
  endif
  IMAGE_DYNAMIC_RELOCATION_GUARD_RF_PROLOGUE equ 00000001h
  IMAGE_DYNAMIC_RELOCATION_GUARD_RF_EPILOGUE equ 00000002h
  include pshpack1.inc
  IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER struct
    PrologueByteCount BYTE ?
  IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER ends
  _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER typedef IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER
  PIMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER typedef ptr IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER
  IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER struct
    EpilogueCount DWORD ?
    EpilogueByteCount BYTE ?
    BranchDescriptorElementSize BYTE ?
    BranchDescriptorCount WORD ?
  IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER ends
  _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER typedef IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER
  PIMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER typedef ptr IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER
  include poppack.inc
  IMAGE_LOAD_CONFIG_DIRECTORY32 struct
    Size_ DWORD ?
    TimeDateStamp DWORD ?
    MajorVersion WORD ?
    MinorVersion WORD ?
    GlobalFlagsClear DWORD ?
    GlobalFlagsSet DWORD ?
    CriticalSectionDefaultTimeout DWORD ?
    DeCommitFreeBlockThreshold DWORD ?
    DeCommitTotalFreeThreshold DWORD ?
    LockPrefixTable DWORD ?
    MaximumAllocationSize DWORD ?
    VirtualMemoryThreshold DWORD ?
    ProcessHeapFlags DWORD ?
    ProcessAffinityMask DWORD ?
    CSDVersion WORD ?
    DependentLoadFlags WORD ?
    EditList DWORD ?
    SecurityCookie DWORD ?
    SEHandlerTable DWORD ?
    SEHandlerCount DWORD ?
    GuardCFCheckFunctionPointer DWORD ?
    GuardCFDispatchFunctionPointer DWORD ?
    GuardCFFunctionTable DWORD ?
    GuardCFFunctionCount DWORD ?
    GuardFlags DWORD ?
    CodeIntegrity IMAGE_LOAD_CONFIG_CODE_INTEGRITY <>
    GuardAddressTakenIatEntryTable DWORD ?
    GuardAddressTakenIatEntryCount DWORD ?
    GuardLongJumpTargetTable DWORD ?
    GuardLongJumpTargetCount DWORD ?
    DynamicValueRelocTable DWORD ?
    CHPEMetadataPointer DWORD ?
    GuardRFFailureRoutine DWORD ?
    GuardRFFailureRoutineFunctionPointer DWORD ?
    DynamicValueRelocTableOffset DWORD ?
    DynamicValueRelocTableSection WORD ?
    Reserved2 WORD ?
    GuardRFVerifyStackPointerFunctionPointer DWORD ?
    HotPatchTableOffset DWORD ?
    Reserved3 DWORD ?
    EnclaveConfigurationPointer DWORD ?
  IMAGE_LOAD_CONFIG_DIRECTORY32 ends
  _IMAGE_LOAD_CONFIG_DIRECTORY32 typedef IMAGE_LOAD_CONFIG_DIRECTORY32
  PIMAGE_LOAD_CONFIG_DIRECTORY32 typedef ptr IMAGE_LOAD_CONFIG_DIRECTORY32
  IMAGE_LOAD_CONFIG_DIRECTORY64 struct
    Size_ DWORD ?
    TimeDateStamp DWORD ?
    MajorVersion WORD ?
    MinorVersion WORD ?
    GlobalFlagsClear DWORD ?
    GlobalFlagsSet DWORD ?
    CriticalSectionDefaultTimeout DWORD ?
    DeCommitFreeBlockThreshold ULONGLONG ?
    DeCommitTotalFreeThreshold ULONGLONG ?
    LockPrefixTable ULONGLONG ?
    MaximumAllocationSize ULONGLONG ?
    VirtualMemoryThreshold ULONGLONG ?
    ProcessAffinityMask ULONGLONG ?
    ProcessHeapFlags DWORD ?
    CSDVersion WORD ?
    DependentLoadFlags WORD ?
    EditList ULONGLONG ?
    SecurityCookie ULONGLONG ?
    SEHandlerTable ULONGLONG ?
    SEHandlerCount ULONGLONG ?
    GuardCFCheckFunctionPointer ULONGLONG ?
    GuardCFDispatchFunctionPointer ULONGLONG ?
    GuardCFFunctionTable ULONGLONG ?
    GuardCFFunctionCount ULONGLONG ?
    GuardFlags DWORD ?
    CodeIntegrity IMAGE_LOAD_CONFIG_CODE_INTEGRITY <>
    GuardAddressTakenIatEntryTable ULONGLONG ?
    GuardAddressTakenIatEntryCount ULONGLONG ?
    GuardLongJumpTargetTable ULONGLONG ?
    GuardLongJumpTargetCount ULONGLONG ?
    DynamicValueRelocTable ULONGLONG ?
    CHPEMetadataPointer ULONGLONG ?
    GuardRFFailureRoutine ULONGLONG ?
    GuardRFFailureRoutineFunctionPointer ULONGLONG ?
    DynamicValueRelocTableOffset DWORD ?
    DynamicValueRelocTableSection WORD ?
    Reserved2 WORD ?
    GuardRFVerifyStackPointerFunctionPointer ULONGLONG ?
    HotPatchTableOffset DWORD ?
    Reserved3 DWORD ?
    EnclaveConfigurationPointer ULONGLONG ?
  IMAGE_LOAD_CONFIG_DIRECTORY64 ends
  _IMAGE_LOAD_CONFIG_DIRECTORY64 typedef IMAGE_LOAD_CONFIG_DIRECTORY64
  PIMAGE_LOAD_CONFIG_DIRECTORY64 typedef ptr IMAGE_LOAD_CONFIG_DIRECTORY64
  ifdef _WIN64
    IMAGE_LOAD_CONFIG_DIRECTORY typedef IMAGE_LOAD_CONFIG_DIRECTORY64
    PIMAGE_LOAD_CONFIG_DIRECTORY typedef PIMAGE_LOAD_CONFIG_DIRECTORY64
  else
    IMAGE_LOAD_CONFIG_DIRECTORY typedef IMAGE_LOAD_CONFIG_DIRECTORY32
    PIMAGE_LOAD_CONFIG_DIRECTORY typedef PIMAGE_LOAD_CONFIG_DIRECTORY32
  endif
  IMAGE_HOT_PATCH_INFO struct
    Version DWORD ?
    Size_ DWORD ?
    SequenceNumber DWORD ?
    BaseImageList DWORD ?
    BaseImageCount DWORD ?
    BufferOffset DWORD ?
  IMAGE_HOT_PATCH_INFO ends
  _IMAGE_HOT_PATCH_INFO typedef IMAGE_HOT_PATCH_INFO
  PIMAGE_HOT_PATCH_INFO typedef ptr IMAGE_HOT_PATCH_INFO
  IMAGE_HOT_PATCH_BASE struct
    SequenceNumber DWORD ?
    Flags DWORD ?
    OriginalTimeDateStamp DWORD ?
    OriginalCheckSum DWORD ?
    CodeIntegrityInfo DWORD ?
    CodeIntegritySize DWORD ?
    PatchTable DWORD ?
    BufferOffset DWORD ?
  IMAGE_HOT_PATCH_BASE ends
  _IMAGE_HOT_PATCH_BASE typedef IMAGE_HOT_PATCH_BASE
  PIMAGE_HOT_PATCH_BASE typedef ptr IMAGE_HOT_PATCH_BASE
  IMAGE_HOT_PATCH_HASHES struct
    SHA256 BYTE 32 dup (?)
    SHA1 BYTE 20 dup (?)
  IMAGE_HOT_PATCH_HASHES ends
  _IMAGE_HOT_PATCH_HASHES typedef IMAGE_HOT_PATCH_HASHES
  PIMAGE_HOT_PATCH_HASHES typedef ptr IMAGE_HOT_PATCH_HASHES
  IMAGE_HOT_PATCH_BASE_OBLIGATORY equ 00000001h
  IMAGE_HOT_PATCH_CHUNK_INVERSE equ 80000000h
  IMAGE_HOT_PATCH_CHUNK_OBLIGATORY equ 40000000h
  IMAGE_HOT_PATCH_CHUNK_RESERVED equ 3FF03000h
  IMAGE_HOT_PATCH_CHUNK_TYPE equ 000FC000h
  IMAGE_HOT_PATCH_CHUNK_SOURCE_RVA equ 00008000h
  IMAGE_HOT_PATCH_CHUNK_TARGET_RVA equ 00004000h
  IMAGE_HOT_PATCH_CHUNK_SIZE equ 00000FFFh
  IMAGE_HOT_PATCH_NONE equ 00000000h
  IMAGE_HOT_PATCH_FUNCTION equ 0001C000h
  IMAGE_HOT_PATCH_ABSOLUTE equ 0002C000h
  IMAGE_HOT_PATCH_REL32 equ 0003C000h
  IMAGE_HOT_PATCH_CALL_TARGET equ 00044000h
  IMAGE_HOT_PATCH_INDIRECT equ 0005C000h
  IMAGE_HOT_PATCH_NO_CALL_TARGET equ 00064000h
  IMAGE_HOT_PATCH_DYNAMIC_VALUE equ 00078000h
  IMAGE_GUARD_CF_INSTRUMENTED equ 00000100h
  IMAGE_GUARD_CFW_INSTRUMENTED equ 00000200h
  IMAGE_GUARD_CF_FUNCTION_TABLE_PRESENT equ 00000400h
  IMAGE_GUARD_SECURITY_COOKIE_UNUSED equ 00000800h
  IMAGE_GUARD_PROTECT_DELAYLOAD_IAT equ 00001000h
  IMAGE_GUARD_DELAYLOAD_IAT_IN_ITS_OWN_SECTION equ 00002000h
  IMAGE_GUARD_CF_EXPORT_SUPPRESSION_INFO_PRESENT equ 00004000h
  IMAGE_GUARD_CF_ENABLE_EXPORT_SUPPRESSION equ 00008000h
  IMAGE_GUARD_CF_LONGJUMP_TABLE_PRESENT equ 00010000h
  IMAGE_GUARD_RF_INSTRUMENTED equ 00020000h
  IMAGE_GUARD_RF_ENABLE equ 00040000h
  IMAGE_GUARD_RF_STRICT equ 00080000h
  IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK equ 0F0000000h
  IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_SHIFT equ 28
  IMAGE_GUARD_FLAG_FID_SUPPRESSED equ 01h
  IMAGE_GUARD_FLAG_EXPORT_SUPPRESSED equ 02h
  IMAGE_CE_RUNTIME_FUNCTION_ENTRY struct
    FuncStart DWORD ?
    IMAGE_CE_RUNTIME_FUNCTION_ENTRY_??29 record PrologLen_??29:8, FuncLen_??29:22, ThirtyTwoBit_??29:1, ExceptionFlag_??29:1
    IMAGE_CE_RUNTIME_FUNCTION_ENTRY_??29 <>
  IMAGE_CE_RUNTIME_FUNCTION_ENTRY ends
  _IMAGE_CE_RUNTIME_FUNCTION_ENTRY typedef IMAGE_CE_RUNTIME_FUNCTION_ENTRY
  PIMAGE_CE_RUNTIME_FUNCTION_ENTRY typedef ptr IMAGE_CE_RUNTIME_FUNCTION_ENTRY
  IMAGE_ARM_RUNTIME_FUNCTION_ENTRY struct
    BeginAddress DWORD ?
    union
      UnwindData DWORD ?
      struct
        DUMMYRECORDNAME_??30 record Flag_??30:2, FunctionLength_??30:11, Ret_??30:2, H_??30:1, Reg_??30:3, R_??30:1, L_??30:1, C_??30:1, StackAdjust_??30:10
        DUMMYRECORDNAME_??30 <>
      ends
    ends
  IMAGE_ARM_RUNTIME_FUNCTION_ENTRY ends
  _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY typedef IMAGE_ARM_RUNTIME_FUNCTION_ENTRY
  PIMAGE_ARM_RUNTIME_FUNCTION_ENTRY typedef ptr IMAGE_ARM_RUNTIME_FUNCTION_ENTRY
  IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY struct
    BeginAddress DWORD ?
    union
      UnwindData DWORD ?
      struct
        DUMMYRECORDNAME_??31 record Flag_??31:2, FunctionLength_??31:11, RegF_??31:3, RegI_??31:4, H_??31:1, CR_??31:2, FrameSize_??31:9
        DUMMYRECORDNAME_??31 <>
      ends
    ends
  IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY ends
  _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY typedef IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY
  PIMAGE_ARM64_RUNTIME_FUNCTION_ENTRY typedef ptr IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY
  IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY struct
    BeginAddress ULONGLONG ?
    EndAddress ULONGLONG ?
    ExceptionHandler ULONGLONG ?
    HandlerData ULONGLONG ?
    PrologEndAddress ULONGLONG ?
  IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY ends
  _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY typedef IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
  PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY typedef ptr IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
  IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY struct
    BeginAddress DWORD ?
    EndAddress DWORD ?
    ExceptionHandler DWORD ?
    HandlerData DWORD ?
    PrologEndAddress DWORD ?
  IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY ends
  _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY typedef IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
  PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY typedef ptr IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
  _IMAGE_RUNTIME_FUNCTION_ENTRY struct
    BeginAddress DWORD ?
    EndAddress DWORD ?
    union
      UnwindInfoAddress DWORD ?
      UnwindData DWORD ?
    ends
  _IMAGE_RUNTIME_FUNCTION_ENTRY ends
  _PIMAGE_RUNTIME_FUNCTION_ENTRY typedef ptr _IMAGE_RUNTIME_FUNCTION_ENTRY
  RUNTIME_FUNCTION typedef _IMAGE_RUNTIME_FUNCTION_ENTRY
  PRUNTIME_FUNCTION typedef ptr _IMAGE_RUNTIME_FUNCTION_ENTRY

  IMAGE_IA64_RUNTIME_FUNCTION_ENTRY typedef _IMAGE_RUNTIME_FUNCTION_ENTRY
  PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY
  if Defined(_AXP64_)
    IMAGE_AXP64_RUNTIME_FUNCTION_ENTRY typedef IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
    PIMAGE_AXP64_RUNTIME_FUNCTION_ENTRY typedef PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
    IMAGE_RUNTIME_FUNCTION_ENTRY typedef IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
    PIMAGE_RUNTIME_FUNCTION_ENTRY typedef PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
  elseif Defined(_ALPHA_)
    IMAGE_RUNTIME_FUNCTION_ENTRY typedef IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
    PIMAGE_RUNTIME_FUNCTION_ENTRY typedef PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
  elseif Defined(_ARM64_)
    ;[...]
  elseif Defined(_ARM_)
    ;[...]
  else
    IMAGE_RUNTIME_FUNCTION_ENTRY typedef _IMAGE_RUNTIME_FUNCTION_ENTRY
    PIMAGE_RUNTIME_FUNCTION_ENTRY typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY
  endif
  IMAGE_ENCLAVE_LONG_ID_LENGTH equ 32
  IMAGE_ENCLAVE_SHORT_ID_LENGTH equ 16
  IMAGE_ENCLAVE_CONFIG32 struct
    Size_ DWORD ?
    MinimumRequiredConfigSize DWORD ?
    PolicyFlags DWORD ?
    NumberOfImports DWORD ?
    ImportList DWORD ?
    ImportEntrySize DWORD ?
    FamilyID BYTE IMAGE_ENCLAVE_SHORT_ID_LENGTH dup (?)
    ImageID BYTE IMAGE_ENCLAVE_SHORT_ID_LENGTH dup (?)
    ImageVersion DWORD ?
    SecurityVersion DWORD ?
    EnclaveSize DWORD ?
    NumberOfThreads DWORD ?
    EnclaveFlags DWORD ?
  IMAGE_ENCLAVE_CONFIG32 ends
  _IMAGE_ENCLAVE_CONFIG32 typedef IMAGE_ENCLAVE_CONFIG32
  PIMAGE_ENCLAVE_CONFIG32 typedef ptr IMAGE_ENCLAVE_CONFIG32
  IMAGE_ENCLAVE_CONFIG64 struct
    Size_ DWORD ?
    MinimumRequiredConfigSize DWORD ?
    PolicyFlags DWORD ?
    NumberOfImports DWORD ?
    ImportList DWORD ?
    ImportEntrySize DWORD ?
    FamilyID BYTE IMAGE_ENCLAVE_SHORT_ID_LENGTH dup (?)
    ImageID BYTE IMAGE_ENCLAVE_SHORT_ID_LENGTH dup (?)
    ImageVersion DWORD ?
    SecurityVersion DWORD ?
    EnclaveSize ULONGLONG ?
    NumberOfThreads DWORD ?
    EnclaveFlags DWORD ?
  IMAGE_ENCLAVE_CONFIG64 ends
  _IMAGE_ENCLAVE_CONFIG64 typedef IMAGE_ENCLAVE_CONFIG64
  PIMAGE_ENCLAVE_CONFIG64 typedef ptr IMAGE_ENCLAVE_CONFIG64
  ifdef _WIN64
    IMAGE_ENCLAVE_CONFIG typedef IMAGE_ENCLAVE_CONFIG64
    PIMAGE_ENCLAVE_CONFIG typedef PIMAGE_ENCLAVE_CONFIG64
  else
    IMAGE_ENCLAVE_CONFIG typedef IMAGE_ENCLAVE_CONFIG32
    PIMAGE_ENCLAVE_CONFIG typedef PIMAGE_ENCLAVE_CONFIG32
  endif
  IMAGE_ENCLAVE_MINIMUM_CONFIG_SIZE equ <FIELD_OFFSET (IMAGE_ENCLAVE_CONFIG, EnclaveFlags)>
  IMAGE_ENCLAVE_POLICY_DEBUGGABLE equ 00000001h
  IMAGE_ENCLAVE_FLAG_PRIMARY_IMAGE equ 00000001h
  IMAGE_ENCLAVE_IMPORT struct
    MatchType DWORD ?
    MinimumSecurityVersion DWORD ?
    UniqueOrAuthorID BYTE IMAGE_ENCLAVE_LONG_ID_LENGTH dup (?)
    FamilyID BYTE IMAGE_ENCLAVE_SHORT_ID_LENGTH dup (?)
    ImageID BYTE IMAGE_ENCLAVE_SHORT_ID_LENGTH dup (?)
    ImportName DWORD ?
    Reserved DWORD ?
  IMAGE_ENCLAVE_IMPORT ends
  _IMAGE_ENCLAVE_IMPORT typedef IMAGE_ENCLAVE_IMPORT
  PIMAGE_ENCLAVE_IMPORT typedef ptr IMAGE_ENCLAVE_IMPORT
  IMAGE_ENCLAVE_IMPORT_MATCH_NONE equ 00000000h
  IMAGE_ENCLAVE_IMPORT_MATCH_UNIQUE_ID equ 00000001h
  IMAGE_ENCLAVE_IMPORT_MATCH_AUTHOR_ID equ 00000002h
  IMAGE_ENCLAVE_IMPORT_MATCH_FAMILY_ID equ 00000003h
  IMAGE_ENCLAVE_IMPORT_MATCH_IMAGE_ID equ 00000004h
  IMAGE_DEBUG_DIRECTORY struct
    Characteristics DWORD ?
    TimeDateStamp DWORD ?
    MajorVersion WORD ?
    MinorVersion WORD ?
    Type_ DWORD ?
    SizeOfData DWORD ?
    AddressOfRawData DWORD ?
    PointerToRawData DWORD ?
  IMAGE_DEBUG_DIRECTORY ends
  _IMAGE_DEBUG_DIRECTORY typedef IMAGE_DEBUG_DIRECTORY
  PIMAGE_DEBUG_DIRECTORY typedef ptr IMAGE_DEBUG_DIRECTORY
  IMAGE_DEBUG_TYPE_UNKNOWN equ 0
  IMAGE_DEBUG_TYPE_COFF equ 1
  IMAGE_DEBUG_TYPE_CODEVIEW equ 2
  IMAGE_DEBUG_TYPE_FPO equ 3
  IMAGE_DEBUG_TYPE_MISC equ 4
  IMAGE_DEBUG_TYPE_EXCEPTION equ 5
  IMAGE_DEBUG_TYPE_FIXUP equ 6
  IMAGE_DEBUG_TYPE_OMAP_TO_SRC equ 7
  IMAGE_DEBUG_TYPE_OMAP_FROM_SRC equ 8
  IMAGE_DEBUG_TYPE_BORLAND equ 9
  IMAGE_DEBUG_TYPE_RESERVED10 equ 10
  IMAGE_DEBUG_TYPE_CLSID equ 11
  IMAGE_DEBUG_TYPE_VC_FEATURE equ 12
  IMAGE_DEBUG_TYPE_POGO equ 13
  IMAGE_DEBUG_TYPE_ILTCG equ 14
  IMAGE_DEBUG_TYPE_MPX equ 15
  IMAGE_DEBUG_TYPE_REPRO equ 16
  IMAGE_COFF_SYMBOLS_HEADER struct
    NumberOfSymbols DWORD ?
    LvaToFirstSymbol DWORD ?
    NumberOfLinenumbers DWORD ?
    LvaToFirstLinenumber DWORD ?
    RvaToFirstByteOfCode DWORD ?
    RvaToLastByteOfCode DWORD ?
    RvaToFirstByteOfData DWORD ?
    RvaToLastByteOfData DWORD ?
  IMAGE_COFF_SYMBOLS_HEADER ends
  _IMAGE_COFF_SYMBOLS_HEADER typedef IMAGE_COFF_SYMBOLS_HEADER
  PIMAGE_COFF_SYMBOLS_HEADER typedef ptr IMAGE_COFF_SYMBOLS_HEADER
  FRAME_FPO equ 0
  FRAME_TRAP equ 1
  FRAME_TSS equ 2
  FRAME_NONFPO equ 3
  FPO_DATA struct
    ulOffStart DWORD ?
    cbProcSize DWORD ?
    cdwLocals DWORD ?
    cdwParams WORD ?
    FPO_DATA_??32 record cbProlog_??32:8, cbRegs_??32:3, fHasSEH_??32:1, fUseBP_??32:1, reserved_??32:1, cbFrame_??32:2
    FPO_DATA_??32 <>
  FPO_DATA ends
  _FPO_DATA typedef FPO_DATA
  PFPO_DATA typedef ptr FPO_DATA
  SIZEOF_RFPO_DATA equ 16
  IMAGE_DEBUG_MISC_EXENAME equ 1
  IMAGE_DEBUG_MISC struct
    DataType DWORD ?
    Length_ DWORD ?
    Unicode BOOLEAN ?
    Reserved BYTE 3 dup (?)
    Data BYTE 1 dup (?)
  IMAGE_DEBUG_MISC ends
  _IMAGE_DEBUG_MISC typedef IMAGE_DEBUG_MISC
  PIMAGE_DEBUG_MISC typedef ptr IMAGE_DEBUG_MISC
  IMAGE_FUNCTION_ENTRY struct
    StartingAddress DWORD ?
    EndingAddress DWORD ?
    EndOfPrologue DWORD ?
  IMAGE_FUNCTION_ENTRY ends
  _IMAGE_FUNCTION_ENTRY typedef IMAGE_FUNCTION_ENTRY
  PIMAGE_FUNCTION_ENTRY typedef ptr IMAGE_FUNCTION_ENTRY
  IMAGE_FUNCTION_ENTRY64 struct
    StartingAddress ULONGLONG ?
    EndingAddress ULONGLONG ?
    union
      EndOfPrologue ULONGLONG ?
      UnwindInfoAddress ULONGLONG ?
    ends
  IMAGE_FUNCTION_ENTRY64 ends
  _IMAGE_FUNCTION_ENTRY64 typedef IMAGE_FUNCTION_ENTRY64
  PIMAGE_FUNCTION_ENTRY64 typedef ptr IMAGE_FUNCTION_ENTRY64
  IMAGE_SEPARATE_DEBUG_HEADER struct
    Signature WORD ?
    Flags WORD ?
    Machine WORD ?
    Characteristics WORD ?
    TimeDateStamp DWORD ?
    CheckSum DWORD ?
    ImageBase DWORD ?
    SizeOfImage DWORD ?
    NumberOfSections DWORD ?
    ExportedNamesSize DWORD ?
    DebugDirectorySize DWORD ?
    SectionAlignment DWORD ?
    Reserved DWORD 2 dup (?)
  IMAGE_SEPARATE_DEBUG_HEADER ends
  _IMAGE_SEPARATE_DEBUG_HEADER typedef IMAGE_SEPARATE_DEBUG_HEADER
  PIMAGE_SEPARATE_DEBUG_HEADER typedef ptr IMAGE_SEPARATE_DEBUG_HEADER
  NON_PAGED_DEBUG_INFO struct
    Signature WORD ?
    Flags WORD ?
    Size_ DWORD ?
    Machine WORD ?
    Characteristics WORD ?
    TimeDateStamp DWORD ?
    CheckSum DWORD ?
    SizeOfImage DWORD ?
    ImageBase ULONGLONG ?
  NON_PAGED_DEBUG_INFO ends
  _NON_PAGED_DEBUG_INFO typedef NON_PAGED_DEBUG_INFO
  PNON_PAGED_DEBUG_INFO typedef ptr NON_PAGED_DEBUG_INFO
  ifndef _MAC
    IMAGE_SEPARATE_DEBUG_SIGNATURE equ 4944h
    NON_PAGED_DEBUG_SIGNATURE equ 494Eh
  else
    ;[...]
  endif
  IMAGE_SEPARATE_DEBUG_FLAGS_MASK equ 8000h
  IMAGE_SEPARATE_DEBUG_MISMATCH equ 8000h
  IMAGE_ARCHITECTURE_HEADER struct
    IMAGE_ARCHITECTURE_HEADER_??33 record AmaskValue_??33:1, Bitfield1_??33:7, AmaskShift_??33:8, Bitfield3_??33:16
    IMAGE_ARCHITECTURE_HEADER_??33 <>
    FirstEntryRVA DWORD ?
  IMAGE_ARCHITECTURE_HEADER ends
  _ImageArchitectureHeader typedef IMAGE_ARCHITECTURE_HEADER
  PIMAGE_ARCHITECTURE_HEADER typedef ptr IMAGE_ARCHITECTURE_HEADER
  IMAGE_ARCHITECTURE_ENTRY struct
    FixupInstRVA DWORD ?
    NewInst DWORD ?
  IMAGE_ARCHITECTURE_ENTRY ends
  _ImageArchitectureEntry typedef IMAGE_ARCHITECTURE_ENTRY
  PIMAGE_ARCHITECTURE_ENTRY typedef ptr IMAGE_ARCHITECTURE_ENTRY
  include poppack.inc
  IMPORT_OBJECT_HDR_SIG2 equ 0ffffh
  IMPORT_OBJECT_HEADER struct
    Sig1 WORD ?
    Sig2 WORD ?
    Version WORD ?
    Machine WORD ?
    TimeDateStamp DWORD ?
    SizeOfData DWORD ?
    union
      Ordinal WORD ?
      Hint WORD ?
    ends
    IMPORT_OBJECT_HEADER_??34 record Type_??34:2, NameType_??34:3, Reserved_??34:11
    IMPORT_OBJECT_HEADER_??34 <>
  IMPORT_OBJECT_HEADER ends
  IMPORT_OBJECT_TYPE typedef SDWORD
  IMPORT_OBJECT_CODE equ 0
  IMPORT_OBJECT_DATA equ 1
  IMPORT_OBJECT_CONST equ 2
  IMPORT_OBJECT_NAME_TYPE typedef SDWORD
  IMPORT_OBJECT_ORDINAL equ 0
  IMPORT_OBJECT_NAME equ 1
  IMPORT_OBJECT_NAME_NO_PREFIX equ 2
  IMPORT_OBJECT_NAME_UNDECORATE equ 3
  IMPORT_OBJECT_NAME_EXPORTAS equ 4
  ifndef __IMAGE_COR20_HEADER_DEFINED__
    __IMAGE_COR20_HEADER_DEFINED__ equ <>
    ReplacesCorHdrNumericDefines typedef SDWORD
    COMIMAGE_FLAGS_ILONLY equ 00000001h
    COMIMAGE_FLAGS_32BITREQUIRED equ 00000002h
    COMIMAGE_FLAGS_IL_LIBRARY equ 00000004h
    COMIMAGE_FLAGS_STRONGNAMESIGNED equ 00000008h
    COMIMAGE_FLAGS_NATIVE_ENTRYPOINT equ 00000010h
    COMIMAGE_FLAGS_TRACKDEBUGDATA equ 00010000h
    COMIMAGE_FLAGS_32BITPREFERRED equ 00020000h
    COR_VERSION_MAJOR_V2 equ 2
    COR_VERSION_MAJOR equ COR_VERSION_MAJOR_V2
    COR_VERSION_MINOR equ 5
    COR_DELETED_NAME_LENGTH equ 8
    COR_VTABLEGAP_NAME_LENGTH equ 8
    NATIVE_TYPE_MAX_CB equ 1
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE equ 0FFh
    IMAGE_COR_MIH_METHODRVA equ 01h
    IMAGE_COR_MIH_EHRVA equ 02h
    IMAGE_COR_MIH_BASICBLOCK equ 08h
    COR_VTABLE_32BIT equ 01h
    COR_VTABLE_64BIT equ 02h
    COR_VTABLE_FROM_UNMANAGED equ 04h
    COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN equ 08h
    COR_VTABLE_CALL_MOST_DERIVED equ 10h
    IMAGE_COR_EATJ_THUNK_SIZE equ 32
    MAX_CLASS_NAME equ 1024
    MAX_PACKAGE_NAME equ 1024
    IMAGE_COR20_HEADER struct
      cb DWORD ?
      MajorRuntimeVersion WORD ?
      MinorRuntimeVersion WORD ?
      MetaData IMAGE_DATA_DIRECTORY <>
      Flags DWORD ?
      union
        EntryPointToken DWORD ?
        EntryPointRVA DWORD ?
      ends
      Resources IMAGE_DATA_DIRECTORY <>
      StrongNameSignature IMAGE_DATA_DIRECTORY <>
      CodeManagerTable IMAGE_DATA_DIRECTORY <>
      VTableFixups IMAGE_DATA_DIRECTORY <>
      ExportAddressTableJumps IMAGE_DATA_DIRECTORY <>
      ManagedNativeHeader IMAGE_DATA_DIRECTORY <>
    IMAGE_COR20_HEADER ends
    PIMAGE_COR20_HEADER typedef ptr IMAGE_COR20_HEADER
  endif
  include apiset.inc
  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP or WINAPI_PARTITION_SYSTEM)
    if (NTDDI_VERSION gt NTDDI_WINXP)
      @DefProto DllImport, RtlCaptureStackBackTrace, WIN_STD_CALL_CONV,, <:DWORD, :DWORD, :ptr PVOID, :PDWORD>, 16
    endif
  endif
  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP or WINAPI_PARTITION_SYSTEM)
    if (NTDDI_VERSION gt NTDDI_WIN2K)
      @DefProto DllImport, RtlCaptureContext, WIN_STD_CALL_CONV,, <:PCONTEXT>, 4
    endif
  endif
  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP or WINAPI_PARTITION_SYSTEM)
    @DefProto DllImport, RtlUnwind, WIN_STD_CALL_CONV,, <:PVOID, :PVOID, :PEXCEPTION_RECORD, :PVOID>, 16
  endif
  if Defined(_AMD64_)
    if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP or WINAPI_PARTITION_SYSTEM)
      @DefProto DllImport, RtlAddFunctionTable, c,, <:PRUNTIME_FUNCTION, :DWORD, :DWORD64>
      @DefProto DllImport, RtlDeleteFunctionTable, c,, <:PRUNTIME_FUNCTION>
      @DefProto DllImport, RtlInstallFunctionTableCallback, c,, <:DWORD64, :DWORD64, :DWORD, :PGET_RUNTIME_FUNCTION_CALLBACK, :PVOID, :PCWSTR>
      if (NTDDI_VERSION ge NTDDI_WIN8)
        @DefProto DllImport, RtlAddGrowableFunctionTable, WIN_STD_CALL_CONV,, <:ptr PVOID, :PRUNTIME_FUNCTION, :DWORD, :DWORD, :ULONG_PTR, :ULONG_PTR>, 32
        @DefProto DllImport, RtlGrowFunctionTable, WIN_STD_CALL_CONV,, <:PVOID, :DWORD>, 8
        @DefProto DllImport, RtlDeleteGrowableFunctionTable, WIN_STD_CALL_CONV,, <:PVOID>, 4
      endif
    endif
    if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP or WINAPI_PARTITION_SYSTEM)
      @DefProto DllImport, RtlLookupFunctionEntry, WIN_STD_CALL_CONV,, <:DWORD64, :PDWORD64, :PUNWIND_HISTORY_TABLE>, 16
    endif
    if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP or WINAPI_PARTITION_SYSTEM)
      @DefProto DllImport, RtlRestoreContext, c,, <:PCONTEXT, :ptr _EXCEPTION_RECORD>
    endif
    if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP or WINAPI_PARTITION_SYSTEM)
      @DefProto DllImport, RtlUnwindEx, WIN_STD_CALL_CONV,, <:PVOID, :PVOID, :PEXCEPTION_RECORD, :PVOID, :PCONTEXT, :PUNWIND_HISTORY_TABLE>, 24
    endif
    if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP or WINAPI_PARTITION_SYSTEM)
      @DefProto DllImport, RtlVirtualUnwind, WIN_STD_CALL_CONV,, <:DWORD, :DWORD64, :DWORD64, :PRUNTIME_FUNCTION, :PCONTEXT, :ptr PVOID, :PDWORD64, :PKNONVOLATILE_CONTEXT_POINTERS>, 40
    endif
  endif
  if Defined(_ARM_)
    ;[...]
  endif
  if Defined(_ARM64_)
    ;[...]
  endif
  if Defined(_CHPE_X86_ARM64_)
    ;[...]
  endif
  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP or WINAPI_PARTITION_SYSTEM)
    @DefProto DllImport, RtlPcToFileHeader, WIN_STD_CALL_CONV,, <:PVOID, :ptr PVOID>, 8
  endif
  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP or WINAPI_PARTITION_SYSTEM)
    if (NTDDI_VERSION ge NTDDI_WIN2K)
      @DefProto DllImport, RtlCompareMemory, WIN_STD_CALL_CONV,, <:ptr VOID, :ptr VOID, :SIZE_T>, 12
    endif
  endif
  ifdef _MAC
    ;[...]
  else
    include string.inc
  endif
  ifndef _SLIST_HEADER_
    _SLIST_HEADER_ equ <>
    if Defined(_WIN64)
      SLIST_ENTRY struct
        Next POINTER ?
      SLIST_ENTRY ends
      _SLIST_ENTRY typedef SLIST_ENTRY
      PSLIST_ENTRY typedef ptr SLIST_ENTRY
    else
      SLIST_ENTRY typedef _SINGLE_LIST_ENTRY
      PSLIST_ENTRY typedef ptr _SINGLE_LIST_ENTRY
    endif
    if Defined(_AMD64_)
      SLIST_HEADER union
        struct
          Alignment ULONGLONG ?
          Region ULONGLONG ?
        ends
        struct HeaderX64
          HeaderX64_??35 record Depth_??35:16, Sequence_??35:48, Reserved_??35:4, NextEntry_??35:60
          HeaderX64_??35 <>
        ends
      SLIST_HEADER ends
      _SLIST_HEADER typedef SLIST_HEADER
      PSLIST_HEADER typedef ptr SLIST_HEADER
    elseif Defined(_ARM64_)
      ;[...]
    elseif Defined(_X86_)
      SLIST_HEADER union
        Alignment ULONGLONG ?
        struct
          Next SLIST_ENTRY <>
          Depth WORD ?
          CpuId_ WORD ?
        ends
      SLIST_HEADER ends
      _SLIST_HEADER typedef SLIST_HEADER
      PSLIST_HEADER typedef ptr SLIST_HEADER
    elseif Defined(_ARM_)
      ;[...]
    endif
  endif
  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP or WINAPI_PARTITION_SYSTEM)
    @DefProto DllImport, RtlInitializeSListHead, WIN_STD_CALL_CONV,, <:PSLIST_HEADER>, 4
    @DefProto DllImport, RtlFirstEntrySList, WIN_STD_CALL_CONV,, <:ptr SLIST_HEADER>, 4
    @DefProto DllImport, RtlInterlockedPopEntrySList, WIN_STD_CALL_CONV,, <:PSLIST_HEADER>, 4
    @DefProto DllImport, RtlInterlockedPushEntrySList, WIN_STD_CALL_CONV,, <:PSLIST_HEADER, :PSLIST_ENTRY>, 8
    @DefProto DllImport, RtlInterlockedPushListSListEx, WIN_STD_CALL_CONV,, <:PSLIST_HEADER, :PSLIST_ENTRY, :PSLIST_ENTRY, :DWORD>, 16
    @DefProto DllImport, RtlInterlockedFlushSList, WIN_STD_CALL_CONV,, <:PSLIST_HEADER>, 4
    @DefProto DllImport, RtlQueryDepthSList, WIN_STD_CALL_CONV,, <:PSLIST_HEADER>, 4
  endif
  ifndef _RTL_RUN_ONCE_DEF
    _RTL_RUN_ONCE_DEF equ <>
    RTL_RUN_ONCE_INIT equ { 0 }
    RTL_RUN_ONCE_CHECK_ONLY equ 00000001h
    RTL_RUN_ONCE_ASYNC equ 00000002h
    RTL_RUN_ONCE_INIT_FAILED equ 00000004h
    RTL_RUN_ONCE_CTX_RESERVED_BITS equ 2
    RTL_RUN_ONCE union
      Ptr_ PVOID ?
    RTL_RUN_ONCE ends
    _RTL_RUN_ONCE typedef RTL_RUN_ONCE
    PRTL_RUN_ONCE typedef ptr RTL_RUN_ONCE
  endif
  RTL_BARRIER struct
    Reserved1 DWORD ?
    Reserved2 DWORD ?
    Reserved3 ULONG_PTR 2 dup (?)
    Reserved4 DWORD ?
    Reserved5 DWORD ?
  RTL_BARRIER ends
  _RTL_BARRIER typedef RTL_BARRIER
  PRTL_BARRIER typedef ptr RTL_BARRIER
  include specstrings.inc
  FAST_FAIL_LEGACY_GS_VIOLATION equ 0
  FAST_FAIL_VTGUARD_CHECK_FAILURE equ 1
  FAST_FAIL_STACK_COOKIE_CHECK_FAILURE equ 2
  FAST_FAIL_CORRUPT_LIST_ENTRY equ 3
  FAST_FAIL_INCORRECT_STACK equ 4
  FAST_FAIL_INVALID_ARG equ 5
  FAST_FAIL_GS_COOKIE_INIT equ 6
  FAST_FAIL_FATAL_APP_EXIT equ 7
  FAST_FAIL_RANGE_CHECK_FAILURE equ 8
  FAST_FAIL_UNSAFE_REGISTRY_ACCESS equ 9
  FAST_FAIL_GUARD_ICALL_CHECK_FAILURE equ 10
  FAST_FAIL_GUARD_WRITE_CHECK_FAILURE equ 11
  FAST_FAIL_INVALID_FIBER_SWITCH equ 12
  FAST_FAIL_INVALID_SET_OF_CONTEXT equ 13
  FAST_FAIL_INVALID_REFERENCE_COUNT equ 14
  FAST_FAIL_INVALID_JUMP_BUFFER equ 18
  FAST_FAIL_MRDATA_MODIFIED equ 19
  FAST_FAIL_CERTIFICATION_FAILURE equ 20
  FAST_FAIL_INVALID_EXCEPTION_CHAIN equ 21
  FAST_FAIL_CRYPTO_LIBRARY equ 22
  FAST_FAIL_INVALID_CALL_IN_DLL_CALLOUT equ 23
  FAST_FAIL_INVALID_IMAGE_BASE equ 24
  FAST_FAIL_DLOAD_PROTECTION_FAILURE equ 25
  FAST_FAIL_UNSAFE_EXTENSION_CALL equ 26
  FAST_FAIL_DEPRECATED_SERVICE_INVOKED equ 27
  FAST_FAIL_INVALID_BUFFER_ACCESS equ 28
  FAST_FAIL_INVALID_BALANCED_TREE equ 29
  FAST_FAIL_INVALID_NEXT_THREAD equ 30
  FAST_FAIL_GUARD_ICALL_CHECK_SUPPRESSED equ 31
  FAST_FAIL_APCS_DISABLED equ 32
  FAST_FAIL_INVALID_IDLE_STATE equ 33
  FAST_FAIL_MRDATA_PROTECTION_FAILURE equ 34
  FAST_FAIL_UNEXPECTED_HEAP_EXCEPTION equ 35
  FAST_FAIL_INVALID_LOCK_STATE equ 36
  FAST_FAIL_GUARD_JUMPTABLE equ 37
  FAST_FAIL_INVALID_LONGJUMP_TARGET equ 38
  FAST_FAIL_INVALID_DISPATCH_CONTEXT equ 39
  FAST_FAIL_INVALID_THREAD equ 40
  FAST_FAIL_INVALID_SYSCALL_NUMBER equ 41
  FAST_FAIL_INVALID_FILE_OPERATION equ 42
  FAST_FAIL_LPAC_ACCESS_DENIED equ 43
  FAST_FAIL_GUARD_SS_FAILURE equ 44
  FAST_FAIL_LOADER_CONTINUITY_FAILURE equ 45
  FAST_FAIL_GUARD_EXPORT_SUPPRESSION_FAILURE equ 46
  FAST_FAIL_INVALID_CONTROL_STACK equ 47
  FAST_FAIL_SET_CONTEXT_DENIED equ 48
  FAST_FAIL_INVALID_IAT equ 49
  FAST_FAIL_HEAP_METADATA_CORRUPTION equ 50
  FAST_FAIL_PAYLOAD_RESTRICTION_VIOLATION equ 51
  FAST_FAIL_LOW_LABEL_ACCESS_DENIED equ 52
  FAST_FAIL_ENCLAVE_CALL_FAILURE equ 53
  FAST_FAIL_UNHANDLED_LSS_EXCEPTON equ 54
  FAST_FAIL_ADMINLESS_ACCESS_DENIED equ 55
  FAST_FAIL_UNEXPECTED_CALL equ 56
  FAST_FAIL_INVALID_FAST_FAIL_CODE equ 0FFFFFFFFh
  if _MSC_VER ge 1610
    __fastfail proto WIN_STD_CALL_CONV :DWORD
  endif
  HEAP_NO_SERIALIZE equ 00000001h
  HEAP_GROWABLE equ 00000002h
  HEAP_GENERATE_EXCEPTIONS equ 00000004h
  HEAP_ZERO_MEMORY equ 00000008h
  HEAP_REALLOC_IN_PLACE_ONLY equ 00000010h
  HEAP_TAIL_CHECKING_ENABLED equ 00000020h
  HEAP_FREE_CHECKING_ENABLED equ 00000040h
  HEAP_DISABLE_COALESCE_ON_FREE equ 00000080h
  HEAP_CREATE_ALIGN_16 equ 00010000h
  HEAP_CREATE_ENABLE_TRACING equ 00020000h
  HEAP_CREATE_ENABLE_EXECUTE equ 00040000h
  HEAP_MAXIMUM_TAG equ 0FFFh
  HEAP_PSEUDO_TAG_FLAG equ 8000h
  HEAP_TAG_SHIFT equ 18
  HEAP_CREATE_SEGMENT_HEAP equ 00000100h
  HEAP_CREATE_HARDENED equ 00000200h
  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
    if  not Defined(MIDL_PASS)
    endif
  endif
  IS_TEXT_UNICODE_ASCII16 equ 0001h
  IS_TEXT_UNICODE_REVERSE_ASCII16 equ 0010h
  IS_TEXT_UNICODE_STATISTICS equ 0002h
  IS_TEXT_UNICODE_REVERSE_STATISTICS equ 0020h
  IS_TEXT_UNICODE_CONTROLS equ 0004h
  IS_TEXT_UNICODE_REVERSE_CONTROLS equ 0040h
  IS_TEXT_UNICODE_SIGNATURE equ 0008h
  IS_TEXT_UNICODE_REVERSE_SIGNATURE equ 0080h
  IS_TEXT_UNICODE_ILLEGAL_CHARS equ 0100h
  IS_TEXT_UNICODE_ODD_LENGTH equ 0200h
  IS_TEXT_UNICODE_DBCS_LEADBYTE equ 0400h
  IS_TEXT_UNICODE_NULL_BYTES equ 1000h
  IS_TEXT_UNICODE_UNICODE_MASK equ 000Fh
  IS_TEXT_UNICODE_REVERSE_MASK equ 00F0h
  IS_TEXT_UNICODE_NOT_UNICODE_MASK equ 0F00h
  IS_TEXT_UNICODE_NOT_ASCII_MASK equ 0F000h
  COMPRESSION_FORMAT_NONE equ 0000h
  COMPRESSION_FORMAT_DEFAULT equ 0001h
  COMPRESSION_FORMAT_LZNT1 equ 0002h
  COMPRESSION_FORMAT_XPRESS equ 0003h
  COMPRESSION_FORMAT_XPRESS_HUFF equ 0004h
  COMPRESSION_ENGINE_STANDARD equ 0000h
  COMPRESSION_ENGINE_MAXIMUM equ 0100h
  COMPRESSION_ENGINE_HIBER equ 0200h
  if Defined(_DBG_MEMCPY_INLINE_) and  not Defined(MIDL_PASS) and  not Defined(_MEMCPY_INLINE_) and  not Defined(_CRTBLD)
    _MEMCPY_INLINE_ equ <>
    memcpy equ <memcpy_inline>
  endif
  RtlEqualMemory macro Destination, Source, Length_
    exitm <(! memcmp ((Destination), (Source), (Length_)))>
  endm
  RtlMoveMemory macro Destination, Source, Length_
    exitm <memmove ((Destination), (Source), (Length_))>
  endm
  RtlCopyMemory macro Destination, Source, Length_
    exitm <memcpy ((Destination), (Source), (Length_))>
  endm
  RtlFillMemory macro Destination, Length_, Fill
    exitm <memset ((Destination), (Fill), (Length_))>
  endm
  RtlZeroMemory macro Destination, Length_
    exitm <memset ((Destination), 0, (Length_))>
  endm
  if  not Defined(MIDL_PASS)
    if Defined(_M_AMD64)
    else
      if  not Defined(_M_CEE) and (Defined(_M_ARM) or Defined(_M_ARM64))
        ;[...]
      else
      endif
    endif
  endif
  SEF_DACL_AUTO_INHERIT equ 01h
  SEF_SACL_AUTO_INHERIT equ 02h
  SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT equ 04h
  SEF_AVOID_PRIVILEGE_CHECK equ 08h
  SEF_AVOID_OWNER_CHECK equ 10h
  SEF_DEFAULT_OWNER_FROM_PARENT equ 20h
  SEF_DEFAULT_GROUP_FROM_PARENT equ 40h
  SEF_MACL_NO_WRITE_UP equ 100h
  SEF_MACL_NO_READ_UP equ 200h
  SEF_MACL_NO_EXECUTE_UP equ 400h
  SEF_AI_USE_EXTRA_PARAMS equ 800h
  SEF_AVOID_OWNER_RESTRICTION equ 1000h
  SEF_FORCE_USER_MODE equ 2000h
  SEF_MACL_VALID_FLAGS equ <(SEF_MACL_NO_WRITE_UP or SEF_MACL_NO_READ_UP or SEF_MACL_NO_EXECUTE_UP)>
  MESSAGE_RESOURCE_ENTRY struct
    Length_ WORD ?
    Flags WORD ?
    Text BYTE 1 dup (?)
  MESSAGE_RESOURCE_ENTRY ends
  _MESSAGE_RESOURCE_ENTRY typedef MESSAGE_RESOURCE_ENTRY
  PMESSAGE_RESOURCE_ENTRY typedef ptr MESSAGE_RESOURCE_ENTRY
  MESSAGE_RESOURCE_UNICODE equ 0001h
  MESSAGE_RESOURCE_BLOCK struct
    LowId DWORD ?
    HighId DWORD ?
    OffsetToEntries DWORD ?
  MESSAGE_RESOURCE_BLOCK ends
  _MESSAGE_RESOURCE_BLOCK typedef MESSAGE_RESOURCE_BLOCK
  PMESSAGE_RESOURCE_BLOCK typedef ptr MESSAGE_RESOURCE_BLOCK
  MESSAGE_RESOURCE_DATA struct
    NumberOfBlocks DWORD ?
    Blocks MESSAGE_RESOURCE_BLOCK 1 dup (<>)
  MESSAGE_RESOURCE_DATA ends
  _MESSAGE_RESOURCE_DATA typedef MESSAGE_RESOURCE_DATA
  PMESSAGE_RESOURCE_DATA typedef ptr MESSAGE_RESOURCE_DATA
  OSVERSIONINFOA struct
    dwOSVersionInfoSize DWORD ?
    dwMajorVersion DWORD ?
    dwMinorVersion DWORD ?
    dwBuildNumber DWORD ?
    dwPlatformId DWORD ?
    szCSDVersion CHAR 128 dup (?)
  OSVERSIONINFOA ends
  _OSVERSIONINFOA typedef OSVERSIONINFOA
  POSVERSIONINFOA typedef ptr OSVERSIONINFOA
  LPOSVERSIONINFOA typedef ptr OSVERSIONINFOA
  OSVERSIONINFOW struct
    dwOSVersionInfoSize DWORD ?
    dwMajorVersion DWORD ?
    dwMinorVersion DWORD ?
    dwBuildNumber DWORD ?
    dwPlatformId DWORD ?
    szCSDVersion WCHAR 128 dup (?)
  OSVERSIONINFOW ends
  _OSVERSIONINFOW typedef OSVERSIONINFOW
  POSVERSIONINFOW typedef ptr OSVERSIONINFOW
  LPOSVERSIONINFOW typedef ptr OSVERSIONINFOW
  RTL_OSVERSIONINFOW typedef OSVERSIONINFOW
  PRTL_OSVERSIONINFOW typedef ptr OSVERSIONINFOW
  ifdef UNICODE
    OSVERSIONINFO typedef OSVERSIONINFOW
    POSVERSIONINFO typedef POSVERSIONINFOW
    LPOSVERSIONINFO typedef LPOSVERSIONINFOW
  else
    OSVERSIONINFO typedef OSVERSIONINFOA
    POSVERSIONINFO typedef POSVERSIONINFOA
    LPOSVERSIONINFO typedef LPOSVERSIONINFOA
  endif
  OSVERSIONINFOEXA struct
    dwOSVersionInfoSize DWORD ?
    dwMajorVersion DWORD ?
    dwMinorVersion DWORD ?
    dwBuildNumber DWORD ?
    dwPlatformId DWORD ?
    szCSDVersion CHAR 128 dup (?)
    wServicePackMajor WORD ?
    wServicePackMinor WORD ?
    wSuiteMask WORD ?
    wProductType BYTE ?
    wReserved BYTE ?
  OSVERSIONINFOEXA ends
  _OSVERSIONINFOEXA typedef OSVERSIONINFOEXA
  POSVERSIONINFOEXA typedef ptr OSVERSIONINFOEXA
  LPOSVERSIONINFOEXA typedef ptr OSVERSIONINFOEXA
  OSVERSIONINFOEXW struct
    dwOSVersionInfoSize DWORD ?
    dwMajorVersion DWORD ?
    dwMinorVersion DWORD ?
    dwBuildNumber DWORD ?
    dwPlatformId DWORD ?
    szCSDVersion WCHAR 128 dup (?)
    wServicePackMajor WORD ?
    wServicePackMinor WORD ?
    wSuiteMask WORD ?
    wProductType BYTE ?
    wReserved BYTE ?
  OSVERSIONINFOEXW ends
  _OSVERSIONINFOEXW typedef OSVERSIONINFOEXW
  POSVERSIONINFOEXW typedef ptr OSVERSIONINFOEXW
  LPOSVERSIONINFOEXW typedef ptr OSVERSIONINFOEXW
  RTL_OSVERSIONINFOEXW typedef OSVERSIONINFOEXW
  PRTL_OSVERSIONINFOEXW typedef ptr OSVERSIONINFOEXW
  ifdef UNICODE
    OSVERSIONINFOEX typedef OSVERSIONINFOEXW
    POSVERSIONINFOEX typedef POSVERSIONINFOEXW
    LPOSVERSIONINFOEX typedef LPOSVERSIONINFOEXW
  else
    OSVERSIONINFOEX typedef OSVERSIONINFOEXA
    POSVERSIONINFOEX typedef POSVERSIONINFOEXA
    LPOSVERSIONINFOEX typedef LPOSVERSIONINFOEXA
  endif
  VER_EQUAL equ 1
  VER_GREATER equ 2
  VER_GREATER_EQUAL equ 3
  VER_LESS equ 4
  VER_LESS_EQUAL equ 5
  VER_AND equ 6
  VER_OR equ 7
  VER_CONDITION_MASK equ 7
  VER_NUM_BITS_PER_CONDITION_MASK equ 3
  VER_MINORVERSION equ 0000001h
  VER_MAJORVERSION equ 0000002h
  VER_BUILDNUMBER equ 0000004h
  VER_PLATFORMID equ 0000008h
  VER_SERVICEPACKMINOR equ 0000010h
  VER_SERVICEPACKMAJOR equ 0000020h
  VER_SUITENAME equ 0000040h
  VER_PRODUCT_TYPE equ 0000080h
  VER_NT_WORKSTATION equ 0000001h
  VER_NT_DOMAIN_CONTROLLER equ 0000002h
  VER_NT_SERVER equ 0000003h
  VER_PLATFORM_WIN32s equ 0
  VER_PLATFORM_WIN32_WINDOWS equ 1
  VER_PLATFORM_WIN32_NT equ 2
  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP or WINAPI_PARTITION_SYSTEM)
    VER_SET_CONDITION macro _m_, _t_, _c_
      exitm <((_m_) = VerSetConditionMask ((_m_), (_t_), (_c_)))>
    endm
    if  not Defined(_WINBASE_) and  not Defined(MIDL_PASS)
      if (NTDDI_VERSION ge NTDDI_WIN2K)
        @DefProto DllImport, VerSetConditionMask, WIN_STD_CALL_CONV,, <:ULONGLONG, :DWORD, :BYTE>, 16
      endif
    endif
  endif
  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP or WINAPI_PARTITION_SYSTEM)
    if (NTDDI_VERSION ge NTDDI_VISTA)
      @DefProto DllImport, RtlGetProductInfo, WIN_STD_CALL_CONV,, <:DWORD, :DWORD, :DWORD, :DWORD, :PDWORD>, 20
    endif
  endif
  RTL_UMS_VERSION equ 0100h
  RTL_UMS_THREAD_INFO_CLASS typedef SDWORD
  UmsThreadInvalidInfoClass equ 0
  UmsThreadUserContext equ 1
  UmsThreadPriority equ 2
  UmsThreadAffinity equ 3
  UmsThreadTeb equ 4
  UmsThreadIsSuspended equ 5
  UmsThreadIsTerminated equ 6
  UmsThreadMaxInfoClass equ 7
  _RTL_UMS_THREAD_INFO_CLASS typedef RTL_UMS_THREAD_INFO_CLASS
  PRTL_UMS_THREAD_INFO_CLASS typedef ptr RTL_UMS_THREAD_INFO_CLASS
  RTL_UMS_SCHEDULER_REASON typedef SDWORD
  UmsSchedulerStartup equ 0
  UmsSchedulerThreadBlocked equ 1
  UmsSchedulerThreadYield equ 2
  _RTL_UMS_SCHEDULER_REASON typedef RTL_UMS_SCHEDULER_REASON
  PRTL_UMS_SCHEDULER_REASON typedef ptr RTL_UMS_SCHEDULER_REASON
  RTL_UMS_SCHEDULER_ENTRY_POINT typedef proto :RTL_UMS_SCHEDULER_REASON, :ULONG_PTR, :PVOID
  PRTL_UMS_SCHEDULER_ENTRY_POINT typedef ptr RTL_UMS_SCHEDULER_ENTRY_POINT
  if  not Defined(IS_VALIDATION_ENABLED)
    if (NTDDI_VERSION ge NTDDI_WIN8)
      IS_VALIDATION_ENABLED macro C_, L
        exitm <((L) and (C_))>
      endm
      VRL_PREDEFINED_CLASS_BEGIN equ (1 shl 0)
      VRL_CUSTOM_CLASS_BEGIN equ (1 shl 8)
      VRL_CLASS_CONSISTENCY equ (VRL_PREDEFINED_CLASS_BEGIN shl 0)
      VRL_ENABLE_KERNEL_BREAKS equ (1 shl 31)
    endif
  endif
  if (NTDDI_VERSION ge NTDDI_WIN8)
    CTMF_INCLUDE_APPCONTAINER equ 00000001h
    CTMF_INCLUDE_LPAC equ 00000002h
    CTMF_VALID_FLAGS equ <(CTMF_INCLUDE_APPCONTAINER or CTMF_INCLUDE_LPAC)>
  endif
  if (NTDDI_VERSION ge NTDDI_WIN8)
    if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP or WINAPI_PARTITION_SYSTEM)
      @DefProto DllImport, RtlCrc32, WIN_STD_CALL_CONV,, <:ptr, :size_t, :DWORD>, 12
      @DefProto DllImport, RtlCrc64, WIN_STD_CALL_CONV,, <:ptr, :size_t, :ULONGLONG>, 16
    endif
  endif
  if (NTDDI_VERSION ge NTDDI_WINTHRESHOLD)
    OS_DEPLOYEMENT_STATE_VALUES typedef SDWORD
    OS_DEPLOYMENT_STANDARD equ 1
    OS_DEPLOYMENT_COMPACT equ 2
    _OS_DEPLOYEMENT_STATE_VALUES typedef OS_DEPLOYEMENT_STATE_VALUES
    @DefProto DllImport, RtlOsDeploymentState, WIN_STD_CALL_CONV,, <:DWORD>, 4
  endif
  if (NTDDI_VERSION ge NTDDI_WIN10_RS2) and Defined(_AMD64_)
    NV_MEMORY_RANGE struct
      BaseAddress POINTER ?
      Length_ SIZE_T ?
    NV_MEMORY_RANGE ends
    _NV_MEMORY_RANGE typedef NV_MEMORY_RANGE
    PNV_MEMORY_RANGE typedef ptr NV_MEMORY_RANGE
    FLUSH_NV_MEMORY_IN_FLAG_NO_DRAIN equ 00000001h
    FLUSH_NV_MEMORY_DEFAULT_TOKEN equ -1
    @DefProto DllImport, RtlGetNonVolatileToken, WIN_STD_CALL_CONV,, <:PVOID, :SIZE_T, :ptr PVOID>, 12
    @DefProto DllImport, RtlFreeNonVolatileToken, WIN_STD_CALL_CONV,, <:PVOID>, 4
    @DefProto DllImport, RtlFlushNonVolatileMemory, WIN_STD_CALL_CONV,, <:PVOID, :PVOID, :SIZE_T, :DWORD>, 16
    @DefProto DllImport, RtlDrainNonVolatileFlush, WIN_STD_CALL_CONV,, <:PVOID>, 4
    @DefProto DllImport, RtlWriteNonVolatileMemory, WIN_STD_CALL_CONV,, <:PVOID, :ptr VOID, :ptr VOID, :SIZE_T, :DWORD>, 20
    @DefProto DllImport, RtlFlushNonVolatileMemoryRanges, WIN_STD_CALL_CONV,, <:PVOID, :PNV_MEMORY_RANGE, :SIZE_T, :DWORD>, 16
  endif
  if (NTDDI_VERSION ge NTDDI_WIN10_RS2)
    RTL_CORRELATION_VECTOR_STRING_LENGTH equ 129
    RTL_CORRELATION_VECTOR_VERSION_1 equ (1)
    RTL_CORRELATION_VECTOR_VERSION_2 equ (2)
    RTL_CORRELATION_VECTOR_VERSION_CURRENT equ <RTL_CORRELATION_VECTOR_VERSION_2>
    RTL_CORRELATION_VECTOR_V1_PREFIX_LENGTH equ 16
    RTL_CORRELATION_VECTOR_V1_LENGTH equ 64
    RTL_CORRELATION_VECTOR_V2_PREFIX_LENGTH equ 22
    RTL_CORRELATION_VECTOR_V2_LENGTH equ 128
    CORRELATION_VECTOR struct
      Version CHAR ?
      Vector CHAR RTL_CORRELATION_VECTOR_STRING_LENGTH dup (?)
    CORRELATION_VECTOR ends
    PCORRELATION_VECTOR typedef ptr CORRELATION_VECTOR
    TraceLoggingCORRELATION_VECTOR macro cv
      exitm <TraceLoggingString ((cv).Vector, "__TlgCV__")>
    endm
    @DefProto DllImport, RtlInitializeCorrelationVector, WIN_STD_CALL_CONV,, <:PCORRELATION_VECTOR, :SDWORD, :ptr GUID>, 12
    @DefProto DllImport, RtlIncrementCorrelationVector, WIN_STD_CALL_CONV,, <:PCORRELATION_VECTOR>, 4
    @DefProto DllImport, RtlExtendCorrelationVector, WIN_STD_CALL_CONV,, <:PCORRELATION_VECTOR>, 4
    @DefProto DllImport, RtlValidateCorrelationVector, WIN_STD_CALL_CONV,, <:PCORRELATION_VECTOR>, 4
  endif
  if (NTDDI_VERSION ge NTDDI_WIN10_RS4)
    CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG struct
      Size_ DWORD ?
      TriggerId PCWSTR ?
    CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG ends
    _CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG typedef CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG
    PCUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG typedef ptr CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG
    if  not Defined(MIDL_PASS)
    endif
    RtlRaiseCustomSystemEventTrigger proto WIN_STD_CALL_CONV :PCUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG
  endif
  IMAGE_POLICY_METADATA_VERSION equ 1
  IMAGE_POLICY_SECTION_NAME equ <".tPolicy">
  IMAGE_POLICY_METADATA_NAME equ <__ImagePolicyMetadata>
  IMAGE_POLICY_ENTRY_TYPE typedef SDWORD
  ImagePolicyEntryTypeNone equ 0
  ImagePolicyEntryTypeBool equ 1
  ImagePolicyEntryTypeInt8 equ 2
  ImagePolicyEntryTypeUInt8 equ 3
  ImagePolicyEntryTypeInt16 equ 4
  ImagePolicyEntryTypeUInt16 equ 5
  ImagePolicyEntryTypeInt32 equ 6
  ImagePolicyEntryTypeUInt32 equ 7
  ImagePolicyEntryTypeInt64 equ 8
  ImagePolicyEntryTypeUInt64 equ 9
  ImagePolicyEntryTypeAnsiString equ 10
  ImagePolicyEntryTypeUnicodeString equ 11
  ImagePolicyEntryTypeOverride equ 12
  ImagePolicyEntryTypeMaximum equ 13
  _IMAGE_POLICY_ENTRY_TYPE typedef IMAGE_POLICY_ENTRY_TYPE
  IMAGE_POLICY_ID typedef SDWORD
  ImagePolicyIdNone equ 0
  ImagePolicyIdEtw equ 1
  ImagePolicyIdDebug equ 2
  ImagePolicyIdCrashDump equ 3
  ImagePolicyIdCrashDumpKey equ 4
  ImagePolicyIdCrashDumpKeyGuid equ 5
  ImagePolicyIdParentSd equ 6
  ImagePolicyIdParentSdRev equ 7
  ImagePolicyIdSvn equ 8
  ImagePolicyIdDeviceId equ 9
  ImagePolicyIdCapability equ 10
  ImagePolicyIdScenarioId equ 11
  ImagePolicyIdMaximum equ 12
  _IMAGE_POLICY_ID typedef IMAGE_POLICY_ID
  IMAGE_POLICY_ENTRY struct
    Type_ IMAGE_POLICY_ENTRY_TYPE ?
    PolicyId IMAGE_POLICY_ID ?
    union u
      None POINTER ?
      BoolValue BOOLEAN ?
      Int8Value INT8 ?
      UInt8Value UINT8 ?
      Int16Value INT16 ?
      UInt16Value UINT16 ?
      Int32Value INT32 ?
      UInt32Value UINT32 ?
      Int64Value INT64 ?
      UInt64Value UINT64 ?
      AnsiStringValue PCSTR ?
      UnicodeStringValue PCWSTR ?
    ends
  IMAGE_POLICY_ENTRY ends
  _IMAGE_POLICY_ENTRY typedef IMAGE_POLICY_ENTRY
  PCIMAGE_POLICY_ENTRY typedef ptr IMAGE_POLICY_ENTRY
  IMAGE_POLICY_METADATA struct
    Version BYTE ?
    Reserved0 BYTE 7 dup (?)
    ApplicationId ULONGLONG ?
    Policies IMAGE_POLICY_ENTRY 0 dup (<>)
  IMAGE_POLICY_METADATA ends
  _IMAGE_POLICY_METADATA typedef IMAGE_POLICY_METADATA
  PCIMAGE_POLICY_METADATA typedef ptr IMAGE_POLICY_METADATA
  IMAGE_POLICY_START macro _ApplicationId_
    exitm <__pragma (const_seg (push, IMAGE_POLICY_SECTION_NAME)) ; EXTERN_C __declspec(dllexport) const IMAGE_POLICY_METADATA IMAGE_POLICY_METADATA_NAME = { IMAGE_POLICY_METADATA_VERSION, { 0 }, _ApplicationId_, {>
  endm
  IMAGE_POLICY_END macro
    exitm <{ ImagePolicyEntryTypeNone, ImagePolicyIdNone, NULL } } } ; __pragma (const_seg (pop))>
  endm
  IMAGE_POLICY_BOOL macro _PolicyId_, _Value_
    exitm <{ ImagePolicyEntryTypeBool, _PolicyId_, (const VOID *) _Value_ },>
  endm
  IMAGE_POLICY_INT8 macro _PolicyId_, _Value_
    exitm <{ ImagePolicyEntryTypeInt8, _PolicyId_, (const VOID *) _Value_ },>
  endm
  IMAGE_POLICY_UINT8 macro _PolicyId_, _Value_
    exitm <{ ImagePolicyEntryTypeUInt8, _PolicyId_, (const VOID *) _Value_ },>
  endm
  IMAGE_POLICY_INT16 macro _PolicyId_, _Value_
    exitm <{ ImagePolicyEntryTypeInt16, _PolicyId_, (const VOID *) _Value_ },>
  endm
  IMAGE_POLICY_UINT16 macro _PolicyId_, _Value_
    exitm <{ ImagePolicyEntryTypeUInt16, _PolicyId_, (const VOID *) _Value_ },>
  endm
  IMAGE_POLICY_INT32 macro _PolicyId_, _Value_
    exitm <{ ImagePolicyEntryTypeInt32, _PolicyId_, (const VOID *) _Value_ },>
  endm
  IMAGE_POLICY_UINT32 macro _PolicyId_, _Value_
    exitm <{ ImagePolicyEntryTypeUInt32, _PolicyId_, (const VOID *) _Value_ },>
  endm
  IMAGE_POLICY_INT64 macro _PolicyId_, _Value_
    exitm <{ ImagePolicyEntryTypeInt64, _PolicyId_, (const VOID *) _Value_ },>
  endm
  IMAGE_POLICY_UINT64 macro _PolicyId_, _Value_
    exitm <{ ImagePolicyEntryTypeUInt64, _PolicyId_, (const VOID *) _Value_ },>
  endm
  IMAGE_POLICY_ANSI_STRING macro _PolicyId_, _Value_
    exitm <{ ImagePolicyEntryTypeAnsiString, _PolicyId_, _Value_ },>
  endm
  IMAGE_POLICY_UNICODE_STRING macro _PolicyId_, _Value_
    exitm <{ ImagePolicyEntryTypeUnicodeString, _PolicyId_, _Value_ },>
  endm
  IMAGE_POLICY_OVERRIDE macro _PolicyId_
    exitm <{ ImagePolicyEntryTypeOverride, _PolicyId_, 0 },>
  endm
  RTL_CRITICAL_SECTION_DEBUG struct
    Type_ WORD ?
    CreatorBackTraceIndex WORD ?
    CriticalSection POINTER ?
    ProcessLocksList LIST_ENTRY <>
    EntryCount DWORD ?
    ContentionCount DWORD ?
    Flags DWORD ?
    CreatorBackTraceIndexHigh WORD ?
    SpareWORD WORD ?
  RTL_CRITICAL_SECTION_DEBUG ends
  _RTL_CRITICAL_SECTION_DEBUG typedef RTL_CRITICAL_SECTION_DEBUG
  PRTL_CRITICAL_SECTION_DEBUG typedef ptr RTL_CRITICAL_SECTION_DEBUG
  RTL_RESOURCE_DEBUG typedef RTL_CRITICAL_SECTION_DEBUG
  PRTL_RESOURCE_DEBUG typedef ptr RTL_CRITICAL_SECTION_DEBUG
  RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO equ 01000000h
  RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN equ 02000000h
  RTL_CRITICAL_SECTION_FLAG_STATIC_INIT equ 04000000h
  RTL_CRITICAL_SECTION_FLAG_RESOURCE_TYPE equ 08000000h
  RTL_CRITICAL_SECTION_FLAG_FORCE_DEBUG_INFO equ 10000000h
  RTL_CRITICAL_SECTION_ALL_FLAG_BITS equ 0FF000000h
  RTL_CRITICAL_SECTION_FLAG_RESERVED equ <>
  ;(RTL_CRITICAL_SECTION_ALL_FLAG_BITS and (not (RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO or RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN or
  ;RTL_CRITICAL_SECTION_FLAG_STATIC_INIT or RTL_CRITICAL_SECTION_FLAG_RESOURCE_TYPE or RTL_CRITICAL_SECTION_FLAG_FORCE_DEBUG_INFO)))
  RTL_CRITICAL_SECTION_DEBUG_FLAG_STATIC_INIT equ 00000001h
  RTL_CRITICAL_SECTION struct
    DebugInfo PRTL_CRITICAL_SECTION_DEBUG ?
    LockCount LONG ?
    RecursionCount LONG ?
    OwningThread HANDLE ?
    LockSemaphore HANDLE ?
    SpinCount ULONG_PTR ?
  RTL_CRITICAL_SECTION ends
  _RTL_CRITICAL_SECTION typedef RTL_CRITICAL_SECTION
  PRTL_CRITICAL_SECTION typedef ptr RTL_CRITICAL_SECTION
  RTL_SRWLOCK struct
    Ptr_ PVOID ?
  RTL_SRWLOCK ends
  _RTL_SRWLOCK typedef RTL_SRWLOCK
  PRTL_SRWLOCK typedef ptr RTL_SRWLOCK
  RTL_SRWLOCK_INIT equ { 0 }
  RTL_CONDITION_VARIABLE struct
    Ptr_ PVOID ?
  RTL_CONDITION_VARIABLE ends
  _RTL_CONDITION_VARIABLE typedef RTL_CONDITION_VARIABLE
  PRTL_CONDITION_VARIABLE typedef ptr RTL_CONDITION_VARIABLE
  RTL_CONDITION_VARIABLE_INIT equ { 0 }
  RTL_CONDITION_VARIABLE_LOCKMODE_SHARED equ 1h
  TYPE_APCFUNC typedef proto WIN_STD_CALL_CONV :ULONG_PTR
  PAPCFUNC typedef ptr TYPE_APCFUNC
  TYPE_VECTORED_EXCEPTION_HANDLER typedef proto WIN_STD_CALL_CONV :ptr _EXCEPTION_POINTERS
  PVECTORED_EXCEPTION_HANDLER typedef ptr TYPE_VECTORED_EXCEPTION_HANDLER
  HEAP_INFORMATION_CLASS typedef SDWORD
  HeapCompatibilityInformation equ 0
  HeapEnableTerminationOnCorruption equ 1
  if ((NTDDI_VERSION gt NTDDI_WINBLUE) or (NTDDI_VERSION eq NTDDI_WINBLUE and Defined(WINBLUE_KBSPRING14)))

    HeapOptimizeResources equ 3
  endif

  _HEAP_INFORMATION_CLASS typedef HEAP_INFORMATION_CLASS
  if ((NTDDI_VERSION gt NTDDI_WINBLUE) or (NTDDI_VERSION eq NTDDI_WINBLUE and Defined(WINBLUE_KBSPRING14)))
    HEAP_OPTIMIZE_RESOURCES_CURRENT_VERSION equ 1
    HEAP_OPTIMIZE_RESOURCES_INFORMATION struct
      Version DWORD ?
      Flags DWORD ?
    HEAP_OPTIMIZE_RESOURCES_INFORMATION ends
    _HEAP_OPTIMIZE_RESOURCES_INFORMATION typedef HEAP_OPTIMIZE_RESOURCES_INFORMATION
    PHEAP_OPTIMIZE_RESOURCES_INFORMATION typedef ptr HEAP_OPTIMIZE_RESOURCES_INFORMATION
  endif
  WT_EXECUTEDEFAULT equ 00000000h
  WT_EXECUTEINIOTHREAD equ 00000001h
  WT_EXECUTEINUITHREAD equ 00000002h
  WT_EXECUTEINWAITTHREAD equ 00000004h
  WT_EXECUTEONLYONCE equ 00000008h
  WT_EXECUTEINTIMERTHREAD equ 00000020h
  WT_EXECUTELONGFUNCTION equ 00000010h
  WT_EXECUTEINPERSISTENTIOTHREAD equ 00000040h
  WT_EXECUTEINPERSISTENTTHREAD equ 00000080h
  WT_TRANSFER_IMPERSONATION equ 00000100h
  WT_SET_MAX_THREADPOOL_THREADS macro Flags, Limit
    exitm <((Flags) or (Limit) shl 16)>
  endm
  TYPE_WAITORTIMERCALLBACKFUNC typedef proto WIN_STD_CALL_CONV :PVOID, :BOOLEAN
  WAITORTIMERCALLBACKFUNC typedef ptr TYPE_WAITORTIMERCALLBACKFUNC
  TYPE_WORKERCALLBACKFUNC typedef proto WIN_STD_CALL_CONV :PVOID
  WORKERCALLBACKFUNC typedef ptr TYPE_WORKERCALLBACKFUNC
  TYPE_APC_CALLBACK_FUNCTION typedef proto WIN_STD_CALL_CONV :DWORD, :PVOID, :PVOID
  APC_CALLBACK_FUNCTION typedef ptr TYPE_APC_CALLBACK_FUNCTION
  WAITORTIMERCALLBACK typedef WAITORTIMERCALLBACKFUNC
  TYPE_FLS_CALLBACK_FUNCTION typedef proto WIN_STD_CALL_CONV :PVOID
  PFLS_CALLBACK_FUNCTION typedef ptr TYPE_FLS_CALLBACK_FUNCTION
  TYPE_SECURE_MEMORY_CACHE_CALLBACK typedef proto WIN_STD_CALL_CONV :PVOID, :SIZE_T
  PSECURE_MEMORY_CACHE_CALLBACK typedef ptr TYPE_SECURE_MEMORY_CACHE_CALLBACK
  WT_EXECUTEINLONGTHREAD equ 00000010h
  WT_EXECUTEDELETEWAIT equ 00000008h
  ACTIVATION_CONTEXT_INFO_CLASS typedef SDWORD
  ActivationContextBasicInformation equ 1
  ActivationContextDetailedInformation equ 2
  AssemblyDetailedInformationInActivationContext equ 3
  FileInformationInAssemblyOfAssemblyInActivationContext equ 4
  RunlevelInformationInActivationContext equ 5
  CompatibilityInformationInActivationContext equ 6
  ActivationContextManifestResourceName equ 7
  MaxActivationContextInfoClass equ 8
  AssemblyDetailedInformationInActivationContxt equ 3
  FileInformationInAssemblyOfAssemblyInActivationContxt equ 4
  _ACTIVATION_CONTEXT_INFO_CLASS typedef ACTIVATION_CONTEXT_INFO_CLASS
  ACTIVATIONCONTEXTINFOCLASS equ <ACTIVATION_CONTEXT_INFO_CLASS>
  ACTIVATION_CONTEXT_QUERY_INDEX struct
    ulAssemblyIndex DWORD ?
    ulFileIndexInAssembly DWORD ?
  ACTIVATION_CONTEXT_QUERY_INDEX ends
  _ACTIVATION_CONTEXT_QUERY_INDEX typedef ACTIVATION_CONTEXT_QUERY_INDEX
  PACTIVATION_CONTEXT_QUERY_INDEX typedef ptr ACTIVATION_CONTEXT_QUERY_INDEX
  PCACTIVATION_CONTEXT_QUERY_INDEX typedef ptr _ACTIVATION_CONTEXT_QUERY_INDEX
  ACTIVATION_CONTEXT_PATH_TYPE_NONE equ 1
  ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE equ 2
  ACTIVATION_CONTEXT_PATH_TYPE_URL equ 3
  ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF equ 4
  ASSEMBLY_FILE_DETAILED_INFORMATION struct
    ulFlags DWORD ?
    ulFilenameLength DWORD ?
    ulPathLength DWORD ?
    lpFileName PCWSTR ?
    lpFilePath PCWSTR ?
  ASSEMBLY_FILE_DETAILED_INFORMATION ends
  _ASSEMBLY_FILE_DETAILED_INFORMATION typedef ASSEMBLY_FILE_DETAILED_INFORMATION
  PASSEMBLY_FILE_DETAILED_INFORMATION typedef ptr ASSEMBLY_FILE_DETAILED_INFORMATION
  PCASSEMBLY_FILE_DETAILED_INFORMATION typedef ptr ASSEMBLY_FILE_DETAILED_INFORMATION
  _ASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION equ <_ASSEMBLY_FILE_DETAILED_INFORMATION>
  ASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION equ <ASSEMBLY_FILE_DETAILED_INFORMATION>
  PASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION equ <PASSEMBLY_FILE_DETAILED_INFORMATION>
  PCASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION equ <PCASSEMBLY_FILE_DETAILED_INFORMATION>
  ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION struct
    ulFlags DWORD ?
    ulEncodedAssemblyIdentityLength DWORD ?
    ulManifestPathType DWORD ?
    ulManifestPathLength DWORD ?
    liManifestLastWriteTime LARGE_INTEGER <>
    ulPolicyPathType DWORD ?
    ulPolicyPathLength DWORD ?
    liPolicyLastWriteTime LARGE_INTEGER <>
    ulMetadataSatelliteRosterIndex DWORD ?
    ulManifestVersionMajor DWORD ?
    ulManifestVersionMinor DWORD ?
    ulPolicyVersionMajor DWORD ?
    ulPolicyVersionMinor DWORD ?
    ulAssemblyDirectoryNameLength DWORD ?
    lpAssemblyEncodedAssemblyIdentity PCWSTR ?
    lpAssemblyManifestPath PCWSTR ?
    lpAssemblyPolicyPath PCWSTR ?
    lpAssemblyDirectoryName PCWSTR ?
    ulFileCount DWORD ?
  ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION ends
  _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION typedef ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
  PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION typedef ptr ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
  PCACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION typedef ptr _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
  ACTCTX_REQUESTED_RUN_LEVEL typedef SDWORD
  ACTCTX_RUN_LEVEL_UNSPECIFIED equ 0
  ACTCTX_RUN_LEVEL_AS_INVOKER equ 1
  ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE equ 2
  ACTCTX_RUN_LEVEL_REQUIRE_ADMIN equ 3
  ACTCTX_RUN_LEVEL_NUMBERS equ 4
  ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION struct
    ulFlags DWORD ?
    RunLevel ACTCTX_REQUESTED_RUN_LEVEL ?
    UiAccess DWORD ?
  ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION ends
  _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION typedef ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION
  PACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION typedef ptr ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION
  PCACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION typedef ptr _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE typedef SDWORD
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN equ 0
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS equ 1
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION equ 2
  COMPATIBILITY_CONTEXT_ELEMENT struct
    Id GUID <>
    Type_ ACTCTX_COMPATIBILITY_ELEMENT_TYPE ?
  COMPATIBILITY_CONTEXT_ELEMENT ends
  _COMPATIBILITY_CONTEXT_ELEMENT typedef COMPATIBILITY_CONTEXT_ELEMENT
  PCOMPATIBILITY_CONTEXT_ELEMENT typedef ptr COMPATIBILITY_CONTEXT_ELEMENT
  PCCOMPATIBILITY_CONTEXT_ELEMENT typedef ptr _COMPATIBILITY_CONTEXT_ELEMENT
  ifdef _MSC_EXTENSIONS
    if _MSC_VER ge 1200
    endif
    ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION struct
      ElementCount DWORD ?
      Elements COMPATIBILITY_CONTEXT_ELEMENT 0 dup (<>)
    ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION ends
    _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION typedef ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION
    PACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION typedef ptr ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION
    if _MSC_VER ge 1200
    endif
    PCACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION typedef ptr _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION
  endif
  SUPPORTED_OS_INFO struct
    MajorVersion WORD ?
    MinorVersion WORD ?
  SUPPORTED_OS_INFO ends
  _SUPPORTED_OS_INFO typedef SUPPORTED_OS_INFO
  PSUPPORTED_OS_INFO typedef ptr SUPPORTED_OS_INFO
  ACTIVATION_CONTEXT_DETAILED_INFORMATION struct
    dwFlags DWORD ?
    ulFormatVersion DWORD ?
    ulAssemblyCount DWORD ?
    ulRootManifestPathType DWORD ?
    ulRootManifestPathChars DWORD ?
    ulRootConfigurationPathType DWORD ?
    ulRootConfigurationPathChars DWORD ?
    ulAppDirPathType DWORD ?
    ulAppDirPathChars DWORD ?
    lpRootManifestPath PCWSTR ?
    lpRootConfigurationPath PCWSTR ?
    lpAppDirPath PCWSTR ?
  ACTIVATION_CONTEXT_DETAILED_INFORMATION ends
  _ACTIVATION_CONTEXT_DETAILED_INFORMATION typedef ACTIVATION_CONTEXT_DETAILED_INFORMATION
  PACTIVATION_CONTEXT_DETAILED_INFORMATION typedef ptr ACTIVATION_CONTEXT_DETAILED_INFORMATION
  PCACTIVATION_CONTEXT_DETAILED_INFORMATION typedef ptr _ACTIVATION_CONTEXT_DETAILED_INFORMATION
  CREATE_BOUNDARY_DESCRIPTOR_ADD_APPCONTAINER_SID equ 1h
  HARDWARE_COUNTER_DATA struct
    Type_ HARDWARE_COUNTER_TYPE ?
    Reserved DWORD ?
    Value DWORD64 ?
  HARDWARE_COUNTER_DATA ends
  _HARDWARE_COUNTER_DATA typedef HARDWARE_COUNTER_DATA
  PHARDWARE_COUNTER_DATA typedef ptr HARDWARE_COUNTER_DATA
  PERFORMANCE_DATA_VERSION equ 1
  PERFORMANCE_DATA struct
    Size_ WORD ?
    Version BYTE ?
    HwCountersCount BYTE ?
    ContextSwitchCount DWORD ?
    WaitReasonBitMap DWORD64 ?
    CycleTime DWORD64 ?
    RetryCount DWORD ?
    Reserved DWORD ?
    HwCounters HARDWARE_COUNTER_DATA MAX_HW_COUNTERS dup (<>)
  PERFORMANCE_DATA ends
  _PERFORMANCE_DATA typedef PERFORMANCE_DATA
  PPERFORMANCE_DATA typedef ptr PERFORMANCE_DATA
  READ_THREAD_PROFILING_FLAG_DISPATCHING equ 00000001h
  READ_THREAD_PROFILING_FLAG_HARDWARE_COUNTERS equ 00000002h
  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
    if (NTDDI_VERSION ge NTDDI_WINTHRESHOLD)
      UNIFIEDBUILDREVISION_KEY equ <L("\Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion")>
      UNIFIEDBUILDREVISION_VALUE equ <L("UBR")>
      UNIFIEDBUILDREVISION_MIN equ 00000000h
      DEVICEFAMILYDEVICEFORM_KEY equ <L("\Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion\OEM")>
      DEVICEFAMILYDEVICEFORM_VALUE equ <L("DeviceForm")>
      DEVICEFAMILYINFOENUM_UAP equ 00000000h
      DEVICEFAMILYINFOENUM_WINDOWS_8X equ 00000001h
      DEVICEFAMILYINFOENUM_WINDOWS_PHONE_8X equ 00000002h
      DEVICEFAMILYINFOENUM_DESKTOP equ 00000003h
      DEVICEFAMILYINFOENUM_MOBILE equ 00000004h
      DEVICEFAMILYINFOENUM_XBOX equ 00000005h
      DEVICEFAMILYINFOENUM_TEAM equ 00000006h
      DEVICEFAMILYINFOENUM_IOT equ 00000007h
      DEVICEFAMILYINFOENUM_IOT_HEADLESS equ 00000008h
      DEVICEFAMILYINFOENUM_SERVER equ 00000009h
      DEVICEFAMILYINFOENUM_HOLOGRAPHIC equ 0000000Ah
      DEVICEFAMILYINFOENUM_XBOXSRA equ 0000000Bh
      DEVICEFAMILYINFOENUM_XBOXERA equ 0000000Ch
      DEVICEFAMILYINFOENUM_SERVER_NANO equ 0000000Dh
      DEVICEFAMILYINFOENUM_8828080 equ 0000000Eh
      DEVICEFAMILYINFOENUM_7067329 equ 0000000Fh
      DEVICEFAMILYINFOENUM_MAX equ 0000000Fh
      DEVICEFAMILYDEVICEFORM_UNKNOWN equ 00000000h
      DEVICEFAMILYDEVICEFORM_PHONE equ 00000001h
      DEVICEFAMILYDEVICEFORM_TABLET equ 00000002h
      DEVICEFAMILYDEVICEFORM_DESKTOP equ 00000003h
      DEVICEFAMILYDEVICEFORM_NOTEBOOK equ 00000004h
      DEVICEFAMILYDEVICEFORM_CONVERTIBLE equ 00000005h
      DEVICEFAMILYDEVICEFORM_DETACHABLE equ 00000006h
      DEVICEFAMILYDEVICEFORM_ALLINONE equ 00000007h
      DEVICEFAMILYDEVICEFORM_STICKPC equ 00000008h
      DEVICEFAMILYDEVICEFORM_PUCK equ 00000009h
      DEVICEFAMILYDEVICEFORM_LARGESCREEN equ 0000000Ah
      DEVICEFAMILYDEVICEFORM_HMD equ 0000000Bh
      DEVICEFAMILYDEVICEFORM_INDUSTRY_HANDHELD equ 0000000Ch
      DEVICEFAMILYDEVICEFORM_INDUSTRY_TABLET equ 0000000Dh
      DEVICEFAMILYDEVICEFORM_BANKING equ 0000000Eh
      DEVICEFAMILYDEVICEFORM_BUILDING_AUTOMATION equ 0000000Fh
      DEVICEFAMILYDEVICEFORM_DIGITAL_SIGNAGE equ 00000010h
      DEVICEFAMILYDEVICEFORM_GAMING equ 00000011h
      DEVICEFAMILYDEVICEFORM_HOME_AUTOMATION equ 00000012h
      DEVICEFAMILYDEVICEFORM_INDUSTRIAL_AUTOMATION equ 00000013h
      DEVICEFAMILYDEVICEFORM_KIOSK equ 00000014h
      DEVICEFAMILYDEVICEFORM_MAKER_BOARD equ 00000015h
      DEVICEFAMILYDEVICEFORM_MEDICAL equ 00000016h
      DEVICEFAMILYDEVICEFORM_NETWORKING equ 00000017h
      DEVICEFAMILYDEVICEFORM_POINT_OF_SERVICE equ 00000018h
      DEVICEFAMILYDEVICEFORM_PRINTING equ 00000019h
      DEVICEFAMILYDEVICEFORM_THIN_CLIENT equ 0000001Ah
      DEVICEFAMILYDEVICEFORM_TOY equ 0000001Bh
      DEVICEFAMILYDEVICEFORM_VENDING equ 0000001Ch
      DEVICEFAMILYDEVICEFORM_INDUSTRY_OTHER equ 0000001Dh
      DEVICEFAMILYDEVICEFORM_XBOX_ONE equ 0000001Eh
      DEVICEFAMILYDEVICEFORM_XBOX_ONE_S equ 0000001Fh
      DEVICEFAMILYDEVICEFORM_XBOX_ONE_X equ 00000020h
      DEVICEFAMILYDEVICEFORM_XBOX_ONE_X_DEVKIT equ 00000021h
      DEVICEFAMILYDEVICEFORM_MAX equ 00000021h
      RtlGetDeviceFamilyInfoEnum proto WIN_STD_CALL_CONV :ptr ULONGLONG, :ptr DWORD, :ptr DWORD
      RtlConvertDeviceFamilyInfoToString proto WIN_STD_CALL_CONV :PDWORD, :PDWORD, :PWSTR, :PWSTR
      RtlSwitchedVVI proto WIN_STD_CALL_CONV :PRTL_OSVERSIONINFOEXW, :DWORD, :ULONGLONG
    endif
  endif
  DLL_PROCESS_ATTACH equ 1
  DLL_THREAD_ATTACH equ 2
  DLL_THREAD_DETACH equ 3
  DLL_PROCESS_DETACH equ 0
  EVENTLOG_SEQUENTIAL_READ equ 0001h
  EVENTLOG_SEEK_READ equ 0002h
  EVENTLOG_FORWARDS_READ equ 0004h
  EVENTLOG_BACKWARDS_READ equ 0008h
  EVENTLOG_SUCCESS equ 0000h
  EVENTLOG_ERROR_TYPE equ 0001h
  EVENTLOG_WARNING_TYPE equ 0002h
  EVENTLOG_INFORMATION_TYPE equ 0004h
  EVENTLOG_AUDIT_SUCCESS equ 0008h
  EVENTLOG_AUDIT_FAILURE equ 0010h
  EVENTLOG_START_PAIRED_EVENT equ 0001h
  EVENTLOG_END_PAIRED_EVENT equ 0002h
  EVENTLOG_END_ALL_PAIRED_EVENTS equ 0004h
  EVENTLOG_PAIRED_EVENT_ACTIVE equ 0008h
  EVENTLOG_PAIRED_EVENT_INACTIVE equ 0010h
  EVENTLOGRECORD struct
    Length_ DWORD ?
    Reserved DWORD ?
    RecordNumber DWORD ?
    TimeGenerated DWORD ?
    TimeWritten DWORD ?
    EventID DWORD ?
    EventType WORD ?
    NumStrings WORD ?
    EventCategory WORD ?
    ReservedFlags WORD ?
    ClosingRecordNumber DWORD ?
    StringOffset DWORD ?
    UserSidLength DWORD ?
    UserSidOffset DWORD ?
    DataLength DWORD ?
    DataOffset DWORD ?
  EVENTLOGRECORD ends
  _EVENTLOGRECORD typedef EVENTLOGRECORD
  PEVENTLOGRECORD typedef ptr EVENTLOGRECORD
  MAXLOGICALLOGNAMESIZE equ 256
  if _MSC_VER ge 1200
  endif
  if Defined(_MSC_EXTENSIONS)
    _EVENTSFORLOGFILE struct
      ulSize DWORD ?
      szLogicalLogFile WCHAR MAXLOGICALLOGNAMESIZE dup (?)
      ulNumRecords DWORD ?
      pEventLogRecords EVENTLOGRECORD 0 dup (<>)
    _EVENTSFORLOGFILE ends
    _PACKEDEVENTINFO struct
      ulSize DWORD ?
      ulNumEventsForLogFile DWORD ?
      ulOffsets DWORD 0 dup (?)
    _PACKEDEVENTINFO ends

    EVENTSFORLOGFILE typedef _EVENTSFORLOGFILE
    PEVENTSFORLOGFILE typedef ptr _EVENTSFORLOGFILE

    PACKEDEVENTINFO typedef _PACKEDEVENTINFO
    PPACKEDEVENTINFO typedef ptr _PACKEDEVENTINFO

  endif
  if _MSC_VER ge 1200
  else
  endif
  KEY_QUERY_VALUE equ 0001h
  KEY_SET_VALUE equ 0002h
  KEY_CREATE_SUB_KEY equ 0004h
  KEY_ENUMERATE_SUB_KEYS equ 0008h
  KEY_NOTIFY equ 0010h
  KEY_CREATE_LINK equ 0020h
  KEY_WOW64_32KEY equ 0200h
  KEY_WOW64_64KEY equ 0100h
  KEY_WOW64_RES equ 0300h
  KEY_READ equ <((STANDARD_RIGHTS_READ or KEY_QUERY_VALUE or KEY_ENUMERATE_SUB_KEYS or KEY_NOTIFY) and (not SYNCHRONIZE))>
  KEY_WRITE equ <((STANDARD_RIGHTS_WRITE or KEY_SET_VALUE or KEY_CREATE_SUB_KEY) and (not SYNCHRONIZE))>
  KEY_EXECUTE equ <((KEY_READ) and (not SYNCHRONIZE))>
  KEY_ALL_ACCESS equ <((STANDARD_RIGHTS_ALL or KEY_QUERY_VALUE or KEY_SET_VALUE or KEY_CREATE_SUB_KEY or KEY_ENUMERATE_SUB_KEYS or KEY_NOTIFY or KEY_CREATE_LINK) and (not SYNCHRONIZE))>
  REG_OPTION_RESERVED equ 00000000h
  REG_OPTION_NON_VOLATILE equ 00000000h
  REG_OPTION_VOLATILE equ 00000001h
  REG_OPTION_CREATE_LINK equ 00000002h
  REG_OPTION_BACKUP_RESTORE equ 00000004h
  REG_OPTION_OPEN_LINK equ 00000008h
  REG_OPTION_DONT_VIRTUALIZE equ 00000010h
  REG_LEGAL_OPTION equ <(REG_OPTION_RESERVED or REG_OPTION_NON_VOLATILE or REG_OPTION_VOLATILE or REG_OPTION_CREATE_LINK or REG_OPTION_BACKUP_RESTORE or REG_OPTION_OPEN_LINK or REG_OPTION_DONT_VIRTUALIZE)>
  REG_OPEN_LEGAL_OPTION equ <(REG_OPTION_RESERVED or REG_OPTION_BACKUP_RESTORE or REG_OPTION_OPEN_LINK or REG_OPTION_DONT_VIRTUALIZE)>
  REG_CREATED_NEW_KEY equ 00000001h
  REG_OPENED_EXISTING_KEY equ 00000002h
  REG_STANDARD_FORMAT equ 1
  REG_LATEST_FORMAT equ 2
  REG_NO_COMPRESSION equ 4
  REG_WHOLE_HIVE_VOLATILE equ 00000001h
  REG_REFRESH_HIVE equ 00000002h
  REG_NO_LAZY_FLUSH equ 00000004h
  REG_FORCE_RESTORE equ 00000008h
  REG_APP_HIVE equ 00000010h
  REG_PROCESS_PRIVATE equ 00000020h
  REG_START_JOURNAL equ 00000040h
  REG_HIVE_EXACT_FILE_GROWTH equ 00000080h
  REG_HIVE_NO_RM equ 00000100h
  REG_HIVE_SINGLE_LOG equ 00000200h
  REG_BOOT_HIVE equ 00000400h
  REG_LOAD_HIVE_OPEN_HANDLE equ 00000800h
  REG_FLUSH_HIVE_FILE_GROWTH equ 00001000h
  REG_OPEN_READ_ONLY equ 00002000h
  REG_IMMUTABLE equ 00004000h
  REG_APP_HIVE_OPEN_READ_ONLY equ <(REG_OPEN_READ_ONLY)>
  REG_FORCE_UNLOAD equ 1
  REG_UNLOAD_LEGAL_FLAGS equ <(REG_FORCE_UNLOAD)>
  REG_NOTIFY_CHANGE_NAME equ 00000001h
  REG_NOTIFY_CHANGE_ATTRIBUTES equ 00000002h
  REG_NOTIFY_CHANGE_LAST_SET equ 00000004h
  REG_NOTIFY_CHANGE_SECURITY equ 00000008h
  REG_NOTIFY_THREAD_AGNOSTIC equ 10000000h
  REG_LEGAL_CHANGE_FILTER equ <(REG_NOTIFY_CHANGE_NAME or REG_NOTIFY_CHANGE_ATTRIBUTES or REG_NOTIFY_CHANGE_LAST_SET or REG_NOTIFY_CHANGE_SECURITY or REG_NOTIFY_THREAD_AGNOSTIC)>
  REG_NONE equ 0
  REG_SZ equ 1
  REG_EXPAND_SZ equ 2
  REG_BINARY equ 3
  REG_DWORD equ 4
  REG_DWORD_LITTLE_ENDIAN equ 4
  REG_DWORD_BIG_ENDIAN equ 5
  REG_LINK equ 6
  REG_MULTI_SZ equ 7
  REG_RESOURCE_LIST equ 8
  REG_FULL_RESOURCE_DESCRIPTOR equ 9
  REG_RESOURCE_REQUIREMENTS_LIST equ 10
  REG_QWORD equ 11
  REG_QWORD_LITTLE_ENDIAN equ 11
  SERVICE_KERNEL_DRIVER equ 00000001h
  SERVICE_FILE_SYSTEM_DRIVER equ 00000002h
  SERVICE_ADAPTER equ 00000004h
  SERVICE_RECOGNIZER_DRIVER equ 00000008h
  SERVICE_DRIVER equ <(SERVICE_KERNEL_DRIVER or SERVICE_FILE_SYSTEM_DRIVER or SERVICE_RECOGNIZER_DRIVER)>
  SERVICE_WIN32_OWN_PROCESS equ 00000010h
  SERVICE_WIN32_SHARE_PROCESS equ 00000020h
  SERVICE_WIN32 equ <(SERVICE_WIN32_OWN_PROCESS or SERVICE_WIN32_SHARE_PROCESS)>
  SERVICE_USER_SERVICE equ 00000040h
  SERVICE_USERSERVICE_INSTANCE equ 00000080h
  SERVICE_USER_SHARE_PROCESS equ <(SERVICE_USER_SERVICE or SERVICE_WIN32_SHARE_PROCESS)>
  SERVICE_USER_OWN_PROCESS equ <(SERVICE_USER_SERVICE or SERVICE_WIN32_OWN_PROCESS)>
  SERVICE_INTERACTIVE_PROCESS equ 00000100h
  SERVICE_PKG_SERVICE equ 00000200h
  SERVICE_TYPE_ALL equ <(SERVICE_WIN32 or SERVICE_ADAPTER or SERVICE_DRIVER or SERVICE_INTERACTIVE_PROCESS or SERVICE_USER_SERVICE or SERVICE_USERSERVICE_INSTANCE or SERVICE_PKG_SERVICE)>
  SERVICE_BOOT_START equ 00000000h
  SERVICE_SYSTEM_START equ 00000001h
  SERVICE_AUTO_START equ 00000002h
  SERVICE_DEMAND_START equ 00000003h
  SERVICE_DISABLED equ 00000004h
  SERVICE_ERROR_IGNORE equ 00000000h
  SERVICE_ERROR_NORMAL equ 00000001h
  SERVICE_ERROR_SEVERE equ 00000002h
  SERVICE_ERROR_CRITICAL equ 00000003h
  SERVICE_NODE_TYPE typedef SDWORD
  DriverType equ SERVICE_KERNEL_DRIVER
  FileSystemType equ SERVICE_FILE_SYSTEM_DRIVER
  Win32ServiceOwnProcess equ SERVICE_WIN32_OWN_PROCESS
  Win32ServiceShareProcess equ SERVICE_WIN32_SHARE_PROCESS
  AdapterType equ SERVICE_ADAPTER
  RecognizerType equ SERVICE_RECOGNIZER_DRIVER
  _CM_SERVICE_NODE_TYPE typedef SERVICE_NODE_TYPE
  SERVICE_LOAD_TYPE typedef SDWORD
  BootLoad equ SERVICE_BOOT_START
  SystemLoad equ SERVICE_SYSTEM_START
  AutoLoad equ SERVICE_AUTO_START
  DemandLoad equ SERVICE_DEMAND_START
  DisableLoad equ SERVICE_DISABLED
  _CM_SERVICE_LOAD_TYPE typedef SERVICE_LOAD_TYPE
  SERVICE_ERROR_TYPE typedef SDWORD
  IgnoreError equ SERVICE_ERROR_IGNORE
  NormalError equ SERVICE_ERROR_NORMAL
  SevereError equ SERVICE_ERROR_SEVERE
  CriticalError equ SERVICE_ERROR_CRITICAL
  _CM_ERROR_CONTROL_TYPE typedef SERVICE_ERROR_TYPE
  CM_SERVICE_NETWORK_BOOT_LOAD equ 00000001h
  CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD equ 00000002h
  CM_SERVICE_USB_DISK_BOOT_LOAD equ 00000004h
  CM_SERVICE_SD_DISK_BOOT_LOAD equ 00000008h
  CM_SERVICE_USB3_DISK_BOOT_LOAD equ 00000010h
  CM_SERVICE_MEASURED_BOOT_LOAD equ 00000020h
  CM_SERVICE_VERIFIER_BOOT_LOAD equ 00000040h
  CM_SERVICE_WINPE_BOOT_LOAD equ 00000080h
  CM_SERVICE_VALID_PROMOTION_MASK equ <>
  ;(CM_SERVICE_NETWORK_BOOT_LOAD or CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD or CM_SERVICE_USB_DISK_BOOT_LOAD or CM_SERVICE_SD_DISK_BOOT_LOAD or
  ;CM_SERVICE_USB3_DISK_BOOT_LOAD or CM_SERVICE_MEASURED_BOOT_LOAD or CM_SERVICE_VERIFIER_BOOT_LOAD or CM_SERVICE_WINPE_BOOT_LOAD)
  ifndef _NTDDTAPE_WINNT_
    _NTDDTAPE_WINNT_ equ <>
    TAPE_ERASE_SHORT equ 0
    TAPE_ERASE_LONG equ 1
    TAPE_ERASE struct
      Type_ DWORD ?
      Immediate BOOLEAN ?
    TAPE_ERASE ends
    _TAPE_ERASE typedef TAPE_ERASE
    PTAPE_ERASE typedef ptr TAPE_ERASE
    TAPE_LOAD equ 0
    TAPE_UNLOAD equ 1
    TAPE_TENSION equ 2
    TAPE_LOCK equ 3
    TAPE_UNLOCK equ 4
    TAPE_FORMAT equ 5
    TAPE_PREPARE struct
      Operation DWORD ?
      Immediate BOOLEAN ?
    TAPE_PREPARE ends
    _TAPE_PREPARE typedef TAPE_PREPARE
    PTAPE_PREPARE typedef ptr TAPE_PREPARE
    TAPE_SETMARKS equ 0
    TAPE_FILEMARKS equ 1
    TAPE_SHORT_FILEMARKS equ 2
    TAPE_LONG_FILEMARKS equ 3
    TAPE_WRITE_MARKS struct
      Type_ DWORD ?
      Count DWORD ?
      Immediate BOOLEAN ?
    TAPE_WRITE_MARKS ends
    _TAPE_WRITE_MARKS typedef TAPE_WRITE_MARKS
    PTAPE_WRITE_MARKS typedef ptr TAPE_WRITE_MARKS
    TAPE_ABSOLUTE_POSITION equ 0
    TAPE_LOGICAL_POSITION equ 1
    TAPE_PSEUDO_LOGICAL_POSITION equ 2
    TAPE_GET_POSITION struct
      Type_ DWORD ?
      Partition DWORD ?
      Offset_ LARGE_INTEGER <>
    TAPE_GET_POSITION ends
    _TAPE_GET_POSITION typedef TAPE_GET_POSITION
    PTAPE_GET_POSITION typedef ptr TAPE_GET_POSITION
    TAPE_REWIND equ 0
    TAPE_ABSOLUTE_BLOCK equ 1
    TAPE_LOGICAL_BLOCK equ 2
    TAPE_PSEUDO_LOGICAL_BLOCK equ 3
    TAPE_SPACE_END_OF_DATA equ 4
    TAPE_SPACE_RELATIVE_BLOCKS equ 5
    TAPE_SPACE_FILEMARKS equ 6
    TAPE_SPACE_SEQUENTIAL_FMKS equ 7
    TAPE_SPACE_SETMARKS equ 8
    TAPE_SPACE_SEQUENTIAL_SMKS equ 9
    TAPE_SET_POSITION struct
      Method_ DWORD ?
      Partition DWORD ?
      Offset_ LARGE_INTEGER <>
      Immediate BOOLEAN ?
    TAPE_SET_POSITION ends
    _TAPE_SET_POSITION typedef TAPE_SET_POSITION
    PTAPE_SET_POSITION typedef ptr TAPE_SET_POSITION
    TAPE_DRIVE_FIXED equ 00000001h
    TAPE_DRIVE_SELECT equ 00000002h
    TAPE_DRIVE_INITIATOR equ 00000004h
    TAPE_DRIVE_ERASE_SHORT equ 00000010h
    TAPE_DRIVE_ERASE_LONG equ 00000020h
    TAPE_DRIVE_ERASE_BOP_ONLY equ 00000040h
    TAPE_DRIVE_ERASE_IMMEDIATE equ 00000080h
    TAPE_DRIVE_TAPE_CAPACITY equ 00000100h
    TAPE_DRIVE_TAPE_REMAINING equ 00000200h
    TAPE_DRIVE_FIXED_BLOCK equ 00000400h
    TAPE_DRIVE_VARIABLE_BLOCK equ 00000800h
    TAPE_DRIVE_WRITE_PROTECT equ 00001000h
    TAPE_DRIVE_EOT_WZ_SIZE equ 00002000h
    TAPE_DRIVE_ECC equ 00010000h
    TAPE_DRIVE_COMPRESSION equ 00020000h
    TAPE_DRIVE_PADDING equ 00040000h
    TAPE_DRIVE_REPORT_SMKS equ 00080000h
    TAPE_DRIVE_GET_ABSOLUTE_BLK equ 00100000h
    TAPE_DRIVE_GET_LOGICAL_BLK equ 00200000h
    TAPE_DRIVE_SET_EOT_WZ_SIZE equ 00400000h
    TAPE_DRIVE_EJECT_MEDIA equ 01000000h
    TAPE_DRIVE_CLEAN_REQUESTS equ 02000000h
    TAPE_DRIVE_SET_CMP_BOP_ONLY equ 04000000h
    TAPE_DRIVE_RESERVED_BIT equ 80000000h
    TAPE_DRIVE_LOAD_UNLOAD equ 80000001h
    TAPE_DRIVE_TENSION equ 80000002h
    TAPE_DRIVE_LOCK_UNLOCK equ 80000004h
    TAPE_DRIVE_REWIND_IMMEDIATE equ 80000008h
    TAPE_DRIVE_SET_BLOCK_SIZE equ 80000010h
    TAPE_DRIVE_LOAD_UNLD_IMMED equ 80000020h
    TAPE_DRIVE_TENSION_IMMED equ 80000040h
    TAPE_DRIVE_LOCK_UNLK_IMMED equ 80000080h
    TAPE_DRIVE_SET_ECC equ 80000100h
    TAPE_DRIVE_SET_COMPRESSION equ 80000200h
    TAPE_DRIVE_SET_PADDING equ 80000400h
    TAPE_DRIVE_SET_REPORT_SMKS equ 80000800h
    TAPE_DRIVE_ABSOLUTE_BLK equ 80001000h
    TAPE_DRIVE_ABS_BLK_IMMED equ 80002000h
    TAPE_DRIVE_LOGICAL_BLK equ 80004000h
    TAPE_DRIVE_LOG_BLK_IMMED equ 80008000h
    TAPE_DRIVE_END_OF_DATA equ 80010000h
    TAPE_DRIVE_RELATIVE_BLKS equ 80020000h
    TAPE_DRIVE_FILEMARKS equ 80040000h
    TAPE_DRIVE_SEQUENTIAL_FMKS equ 80080000h
    TAPE_DRIVE_SETMARKS equ 80100000h
    TAPE_DRIVE_SEQUENTIAL_SMKS equ 80200000h
    TAPE_DRIVE_REVERSE_POSITION equ 80400000h
    TAPE_DRIVE_SPACE_IMMEDIATE equ 80800000h
    TAPE_DRIVE_WRITE_SETMARKS equ 81000000h
    TAPE_DRIVE_WRITE_FILEMARKS equ 82000000h
    TAPE_DRIVE_WRITE_SHORT_FMKS equ 84000000h
    TAPE_DRIVE_WRITE_LONG_FMKS equ 88000000h
    TAPE_DRIVE_WRITE_MARK_IMMED equ 90000000h
    TAPE_DRIVE_FORMAT equ 0A0000000h
    TAPE_DRIVE_FORMAT_IMMEDIATE equ 0C0000000h
    TAPE_DRIVE_HIGH_FEATURES equ 80000000h
    TAPE_GET_DRIVE_PARAMETERS struct
      ECC BOOLEAN ?
      Compression BOOLEAN ?
      DataPadding BOOLEAN ?
      ReportSetmarks BOOLEAN ?
      DefaultBlockSize DWORD ?
      MaximumBlockSize DWORD ?
      MinimumBlockSize DWORD ?
      MaximumPartitionCount DWORD ?
      FeaturesLow DWORD ?
      FeaturesHigh DWORD ?
      EOTWarningZoneSize DWORD ?
    TAPE_GET_DRIVE_PARAMETERS ends
    _TAPE_GET_DRIVE_PARAMETERS typedef TAPE_GET_DRIVE_PARAMETERS
    PTAPE_GET_DRIVE_PARAMETERS typedef ptr TAPE_GET_DRIVE_PARAMETERS
    TAPE_SET_DRIVE_PARAMETERS struct
      ECC BOOLEAN ?
      Compression BOOLEAN ?
      DataPadding BOOLEAN ?
      ReportSetmarks BOOLEAN ?
      EOTWarningZoneSize DWORD ?
    TAPE_SET_DRIVE_PARAMETERS ends
    _TAPE_SET_DRIVE_PARAMETERS typedef TAPE_SET_DRIVE_PARAMETERS
    PTAPE_SET_DRIVE_PARAMETERS typedef ptr TAPE_SET_DRIVE_PARAMETERS
    TAPE_GET_MEDIA_PARAMETERS struct
      Capacity LARGE_INTEGER <>
      Remaining LARGE_INTEGER <>
      BlockSize DWORD ?
      PartitionCount DWORD ?
      WriteProtected BOOLEAN ?
    TAPE_GET_MEDIA_PARAMETERS ends
    _TAPE_GET_MEDIA_PARAMETERS typedef TAPE_GET_MEDIA_PARAMETERS
    PTAPE_GET_MEDIA_PARAMETERS typedef ptr TAPE_GET_MEDIA_PARAMETERS
    TAPE_SET_MEDIA_PARAMETERS struct
      BlockSize DWORD ?
    TAPE_SET_MEDIA_PARAMETERS ends
    _TAPE_SET_MEDIA_PARAMETERS typedef TAPE_SET_MEDIA_PARAMETERS
    PTAPE_SET_MEDIA_PARAMETERS typedef ptr TAPE_SET_MEDIA_PARAMETERS
    TAPE_FIXED_PARTITIONS equ 0
    TAPE_SELECT_PARTITIONS equ 1
    TAPE_INITIATOR_PARTITIONS equ 2
    TAPE_CREATE_PARTITION struct
      Method_ DWORD ?
      Count DWORD ?
      Size_ DWORD ?
    TAPE_CREATE_PARTITION ends
    _TAPE_CREATE_PARTITION typedef TAPE_CREATE_PARTITION
    PTAPE_CREATE_PARTITION typedef ptr TAPE_CREATE_PARTITION
    TAPE_QUERY_DRIVE_PARAMETERS equ 0
    TAPE_QUERY_MEDIA_CAPACITY equ 1
    TAPE_CHECK_FOR_DRIVE_PROBLEM equ 2
    TAPE_QUERY_IO_ERROR_DATA equ 3
    TAPE_QUERY_DEVICE_ERROR_DATA equ 4
    TAPE_WMI_OPERATIONS struct
      Method_ DWORD ?
      DataBufferSize DWORD ?
      DataBuffer PVOID ?
    TAPE_WMI_OPERATIONS ends
    _TAPE_WMI_OPERATIONS typedef TAPE_WMI_OPERATIONS
    PTAPE_WMI_OPERATIONS typedef ptr TAPE_WMI_OPERATIONS
    TAPE_DRIVE_PROBLEM_TYPE typedef SDWORD
    TapeDriveProblemNone equ 0
    TapeDriveReadWriteWarning equ 1
    TapeDriveReadWriteError equ 2
    TapeDriveReadWarning equ 3
    TapeDriveWriteWarning equ 4
    TapeDriveReadError equ 5
    TapeDriveWriteError equ 6
    TapeDriveHardwareError equ 7
    TapeDriveUnsupportedMedia equ 8
    TapeDriveScsiConnectionError equ 9
    TapeDriveTimetoClean equ 10
    TapeDriveCleanDriveNow equ 11
    TapeDriveMediaLifeExpired equ 12
    TapeDriveSnappedTape equ 13
    _TAPE_DRIVE_PROBLEM_TYPE typedef TAPE_DRIVE_PROBLEM_TYPE
  endif
  ifndef _NTTMAPI_
    _NTTMAPI_ equ <>
    ifdef __cplusplus
      ;[...]
    endif
    include ktmtypes.inc
    if _MSC_VER ge 1200
    endif
    TRANSACTIONMANAGER_QUERY_INFORMATION equ 0001h
    TRANSACTIONMANAGER_SET_INFORMATION equ 0002h
    TRANSACTIONMANAGER_RECOVER equ 0004h
    TRANSACTIONMANAGER_RENAME equ 0008h
    TRANSACTIONMANAGER_CREATE_RM equ 0010h
    TRANSACTIONMANAGER_BIND_TRANSACTION equ 0020h
    TRANSACTIONMANAGER_GENERIC_READ equ <(STANDARD_RIGHTS_READ or TRANSACTIONMANAGER_QUERY_INFORMATION)>
    TRANSACTIONMANAGER_GENERIC_WRITE equ <(STANDARD_RIGHTS_WRITE or TRANSACTIONMANAGER_SET_INFORMATION or TRANSACTIONMANAGER_RECOVER or TRANSACTIONMANAGER_RENAME or TRANSACTIONMANAGER_CREATE_RM)>
    TRANSACTIONMANAGER_GENERIC_EXECUTE equ <(STANDARD_RIGHTS_EXECUTE)>
    TRANSACTIONMANAGER_ALL_ACCESS equ <(STANDARD_RIGHTS_REQUIRED or TRANSACTIONMANAGER_GENERIC_READ or TRANSACTIONMANAGER_GENERIC_WRITE or TRANSACTIONMANAGER_GENERIC_EXECUTE or TRANSACTIONMANAGER_BIND_TRANSACTION)>
    TRANSACTION_QUERY_INFORMATION equ 0001h
    TRANSACTION_SET_INFORMATION equ 0002h
    TRANSACTION_ENLIST equ 0004h
    TRANSACTION_COMMIT equ 0008h
    TRANSACTION_ROLLBACK equ 0010h
    TRANSACTION_PROPAGATE equ 0020h
    TRANSACTION_RIGHT_RESERVED1 equ 0040h
    TRANSACTION_GENERIC_READ equ <(STANDARD_RIGHTS_READ or TRANSACTION_QUERY_INFORMATION or SYNCHRONIZE)>
    TRANSACTION_GENERIC_WRITE equ <(STANDARD_RIGHTS_WRITE or TRANSACTION_SET_INFORMATION or TRANSACTION_COMMIT or TRANSACTION_ENLIST or TRANSACTION_ROLLBACK or TRANSACTION_PROPAGATE or SYNCHRONIZE)>
    TRANSACTION_GENERIC_EXECUTE equ <(STANDARD_RIGHTS_EXECUTE or TRANSACTION_COMMIT or TRANSACTION_ROLLBACK or SYNCHRONIZE)>
    TRANSACTION_ALL_ACCESS equ <(STANDARD_RIGHTS_REQUIRED or TRANSACTION_GENERIC_READ or TRANSACTION_GENERIC_WRITE or TRANSACTION_GENERIC_EXECUTE)>
    TRANSACTION_RESOURCE_MANAGER_RIGHTS equ <(TRANSACTION_GENERIC_READ or STANDARD_RIGHTS_WRITE or TRANSACTION_SET_INFORMATION or TRANSACTION_ENLIST or TRANSACTION_ROLLBACK or TRANSACTION_PROPAGATE or SYNCHRONIZE)>
    RESOURCEMANAGER_QUERY_INFORMATION equ 0001h
    RESOURCEMANAGER_SET_INFORMATION equ 0002h
    RESOURCEMANAGER_RECOVER equ 0004h
    RESOURCEMANAGER_ENLIST equ 0008h
    RESOURCEMANAGER_GET_NOTIFICATION equ 0010h
    RESOURCEMANAGER_REGISTER_PROTOCOL equ 0020h
    RESOURCEMANAGER_COMPLETE_PROPAGATION equ 0040h
    RESOURCEMANAGER_GENERIC_READ equ <(STANDARD_RIGHTS_READ or RESOURCEMANAGER_QUERY_INFORMATION or SYNCHRONIZE)>
    RESOURCEMANAGER_GENERIC_WRITE equ <(STANDARD_RIGHTS_WRITE or RESOURCEMANAGER_SET_INFORMATION or RESOURCEMANAGER_RECOVER or RESOURCEMANAGER_ENLIST or RESOURCEMANAGER_GET_NOTIFICATION or RESOURCEMANAGER_REGISTER_PROTOCOL or RESOURCEMANAGER_COMPLETE_PROPAGATION or SYNCHRONIZE)>
    RESOURCEMANAGER_GENERIC_EXECUTE equ <(STANDARD_RIGHTS_EXECUTE or RESOURCEMANAGER_RECOVER or RESOURCEMANAGER_ENLIST or RESOURCEMANAGER_GET_NOTIFICATION or RESOURCEMANAGER_COMPLETE_PROPAGATION or SYNCHRONIZE)>
    RESOURCEMANAGER_ALL_ACCESS equ <(STANDARD_RIGHTS_REQUIRED or RESOURCEMANAGER_GENERIC_READ or RESOURCEMANAGER_GENERIC_WRITE or RESOURCEMANAGER_GENERIC_EXECUTE)>
    ENLISTMENT_QUERY_INFORMATION equ 0001h
    ENLISTMENT_SET_INFORMATION equ 0002h
    ENLISTMENT_RECOVER equ 0004h
    ENLISTMENT_SUBORDINATE_RIGHTS equ 0008h
    ENLISTMENT_SUPERIOR_RIGHTS equ 0010h
    ENLISTMENT_GENERIC_READ equ <(STANDARD_RIGHTS_READ or ENLISTMENT_QUERY_INFORMATION)>
    ENLISTMENT_GENERIC_WRITE equ <(STANDARD_RIGHTS_WRITE or ENLISTMENT_SET_INFORMATION or ENLISTMENT_RECOVER or ENLISTMENT_SUBORDINATE_RIGHTS or ENLISTMENT_SUPERIOR_RIGHTS)>
    ENLISTMENT_GENERIC_EXECUTE equ <(STANDARD_RIGHTS_EXECUTE or ENLISTMENT_RECOVER or ENLISTMENT_SUBORDINATE_RIGHTS or ENLISTMENT_SUPERIOR_RIGHTS)>
    ENLISTMENT_ALL_ACCESS equ <(STANDARD_RIGHTS_REQUIRED or ENLISTMENT_GENERIC_READ or ENLISTMENT_GENERIC_WRITE or ENLISTMENT_GENERIC_EXECUTE)>
    TRANSACTION_OUTCOME typedef SDWORD
    TransactionOutcomeUndetermined equ 1
    TransactionOutcomeCommitted equ 2
    TransactionOutcomeAborted equ 3
    _TRANSACTION_OUTCOME typedef TRANSACTION_OUTCOME
    TRANSACTION_STATE typedef SDWORD
    TransactionStateNormal equ 1
    TransactionStateIndoubt equ 2
    TransactionStateCommittedNotify equ 3
    _TRANSACTION_STATE typedef TRANSACTION_STATE
    TRANSACTION_BASIC_INFORMATION struct
      TransactionId GUID <>
      State DWORD ?
      Outcome DWORD ?
    TRANSACTION_BASIC_INFORMATION ends
    _TRANSACTION_BASIC_INFORMATION typedef TRANSACTION_BASIC_INFORMATION
    PTRANSACTION_BASIC_INFORMATION typedef ptr TRANSACTION_BASIC_INFORMATION
    TRANSACTIONMANAGER_BASIC_INFORMATION struct
      TmIdentity GUID <>
      VirtualClock LARGE_INTEGER <>
    TRANSACTIONMANAGER_BASIC_INFORMATION ends
    _TRANSACTIONMANAGER_BASIC_INFORMATION typedef TRANSACTIONMANAGER_BASIC_INFORMATION
    PTRANSACTIONMANAGER_BASIC_INFORMATION typedef ptr TRANSACTIONMANAGER_BASIC_INFORMATION
    TRANSACTIONMANAGER_LOG_INFORMATION struct
      LogIdentity GUID <>
    TRANSACTIONMANAGER_LOG_INFORMATION ends
    _TRANSACTIONMANAGER_LOG_INFORMATION typedef TRANSACTIONMANAGER_LOG_INFORMATION
    PTRANSACTIONMANAGER_LOG_INFORMATION typedef ptr TRANSACTIONMANAGER_LOG_INFORMATION
    TRANSACTIONMANAGER_LOGPATH_INFORMATION struct
      LogPathLength DWORD ?
      LogPath WCHAR 1 dup (?)
    TRANSACTIONMANAGER_LOGPATH_INFORMATION ends
    _TRANSACTIONMANAGER_LOGPATH_INFORMATION typedef TRANSACTIONMANAGER_LOGPATH_INFORMATION
    PTRANSACTIONMANAGER_LOGPATH_INFORMATION typedef ptr TRANSACTIONMANAGER_LOGPATH_INFORMATION
    TRANSACTIONMANAGER_RECOVERY_INFORMATION struct
      LastRecoveredLsn ULONGLONG ?
    TRANSACTIONMANAGER_RECOVERY_INFORMATION ends
    _TRANSACTIONMANAGER_RECOVERY_INFORMATION typedef TRANSACTIONMANAGER_RECOVERY_INFORMATION
    PTRANSACTIONMANAGER_RECOVERY_INFORMATION typedef ptr TRANSACTIONMANAGER_RECOVERY_INFORMATION
    TRANSACTIONMANAGER_OLDEST_INFORMATION struct
      OldestTransactionGuid GUID <>
    TRANSACTIONMANAGER_OLDEST_INFORMATION ends
    _TRANSACTIONMANAGER_OLDEST_INFORMATION typedef TRANSACTIONMANAGER_OLDEST_INFORMATION
    PTRANSACTIONMANAGER_OLDEST_INFORMATION typedef ptr TRANSACTIONMANAGER_OLDEST_INFORMATION
    TRANSACTION_PROPERTIES_INFORMATION struct
      IsolationLevel DWORD ?
      IsolationFlags DWORD ?
      Timeout LARGE_INTEGER <>
      Outcome DWORD ?
      DescriptionLength DWORD ?
      Description WCHAR 1 dup (?)
    TRANSACTION_PROPERTIES_INFORMATION ends
    _TRANSACTION_PROPERTIES_INFORMATION typedef TRANSACTION_PROPERTIES_INFORMATION
    PTRANSACTION_PROPERTIES_INFORMATION typedef ptr TRANSACTION_PROPERTIES_INFORMATION
    TRANSACTION_BIND_INFORMATION struct
      TmHandle HANDLE ?
    TRANSACTION_BIND_INFORMATION ends
    _TRANSACTION_BIND_INFORMATION typedef TRANSACTION_BIND_INFORMATION
    PTRANSACTION_BIND_INFORMATION typedef ptr TRANSACTION_BIND_INFORMATION
    TRANSACTION_ENLISTMENT_PAIR struct
      EnlistmentId GUID <>
      ResourceManagerId GUID <>
    TRANSACTION_ENLISTMENT_PAIR ends
    _TRANSACTION_ENLISTMENT_PAIR typedef TRANSACTION_ENLISTMENT_PAIR
    PTRANSACTION_ENLISTMENT_PAIR typedef ptr TRANSACTION_ENLISTMENT_PAIR
    TRANSACTION_ENLISTMENTS_INFORMATION struct
      NumberOfEnlistments DWORD ?
      EnlistmentPair TRANSACTION_ENLISTMENT_PAIR 1 dup (<>)
    TRANSACTION_ENLISTMENTS_INFORMATION ends
    _TRANSACTION_ENLISTMENTS_INFORMATION typedef TRANSACTION_ENLISTMENTS_INFORMATION
    PTRANSACTION_ENLISTMENTS_INFORMATION typedef ptr TRANSACTION_ENLISTMENTS_INFORMATION
    TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION struct
      SuperiorEnlistmentPair TRANSACTION_ENLISTMENT_PAIR <>
    TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION ends
    _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION typedef TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION
    PTRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION typedef ptr TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION
    RESOURCEMANAGER_BASIC_INFORMATION struct
      ResourceManagerId GUID <>
      DescriptionLength DWORD ?
      Description WCHAR 1 dup (?)
    RESOURCEMANAGER_BASIC_INFORMATION ends
    _RESOURCEMANAGER_BASIC_INFORMATION typedef RESOURCEMANAGER_BASIC_INFORMATION
    PRESOURCEMANAGER_BASIC_INFORMATION typedef ptr RESOURCEMANAGER_BASIC_INFORMATION
    RESOURCEMANAGER_COMPLETION_INFORMATION struct
      IoCompletionPortHandle HANDLE ?
      CompletionKey ULONG_PTR ?
    RESOURCEMANAGER_COMPLETION_INFORMATION ends
    _RESOURCEMANAGER_COMPLETION_INFORMATION typedef RESOURCEMANAGER_COMPLETION_INFORMATION
    PRESOURCEMANAGER_COMPLETION_INFORMATION typedef ptr RESOURCEMANAGER_COMPLETION_INFORMATION
    TRANSACTION_INFORMATION_CLASS typedef SDWORD
    TransactionBasicInformation equ 0
    TransactionPropertiesInformation equ 1
    TransactionEnlistmentInformation equ 2
    TransactionSuperiorEnlistmentInformation equ 3
    TransactionBindInformation equ 4
    TransactionDTCPrivateInformation equ 5
    _TRANSACTION_INFORMATION_CLASS typedef TRANSACTION_INFORMATION_CLASS
    TRANSACTIONMANAGER_INFORMATION_CLASS typedef SDWORD
    TransactionManagerBasicInformation equ 0
    TransactionManagerLogInformation equ 1
    TransactionManagerLogPathInformation equ 2
    TransactionManagerRecoveryInformation equ 4
    TransactionManagerOnlineProbeInformation equ 3
    TransactionManagerOldestTransactionInformation equ 5
    _TRANSACTIONMANAGER_INFORMATION_CLASS typedef TRANSACTIONMANAGER_INFORMATION_CLASS
    RESOURCEMANAGER_INFORMATION_CLASS typedef SDWORD
    ResourceManagerBasicInformation equ 0
    ResourceManagerCompletionInformation equ 1
    _RESOURCEMANAGER_INFORMATION_CLASS typedef RESOURCEMANAGER_INFORMATION_CLASS
    ENLISTMENT_BASIC_INFORMATION struct
      EnlistmentId GUID <>
      TransactionId GUID <>
      ResourceManagerId GUID <>
    ENLISTMENT_BASIC_INFORMATION ends
    _ENLISTMENT_BASIC_INFORMATION typedef ENLISTMENT_BASIC_INFORMATION
    PENLISTMENT_BASIC_INFORMATION typedef ptr ENLISTMENT_BASIC_INFORMATION
    ENLISTMENT_CRM_INFORMATION struct
      CrmTransactionManagerId GUID <>
      CrmResourceManagerId GUID <>
      CrmEnlistmentId GUID <>
    ENLISTMENT_CRM_INFORMATION ends
    _ENLISTMENT_CRM_INFORMATION typedef ENLISTMENT_CRM_INFORMATION
    PENLISTMENT_CRM_INFORMATION typedef ptr ENLISTMENT_CRM_INFORMATION
    ENLISTMENT_INFORMATION_CLASS typedef SDWORD
    EnlistmentBasicInformation equ 0
    EnlistmentRecoveryInformation equ 1
    EnlistmentCrmInformation equ 2
    _ENLISTMENT_INFORMATION_CLASS typedef ENLISTMENT_INFORMATION_CLASS
    TRANSACTION_LIST_ENTRY struct
      UOW_ UOW <>
    TRANSACTION_LIST_ENTRY ends
    _TRANSACTION_LIST_ENTRY typedef TRANSACTION_LIST_ENTRY
    PTRANSACTION_LIST_ENTRY typedef ptr TRANSACTION_LIST_ENTRY
    TRANSACTION_LIST_INFORMATION struct
      NumberOfTransactions DWORD ?
      TransactionInformation TRANSACTION_LIST_ENTRY 1 dup (<>)
    TRANSACTION_LIST_INFORMATION ends
    _TRANSACTION_LIST_INFORMATION typedef TRANSACTION_LIST_INFORMATION
    PTRANSACTION_LIST_INFORMATION typedef ptr TRANSACTION_LIST_INFORMATION
    KTMOBJECT_TYPE typedef SDWORD
    KTMOBJECT_TRANSACTION equ 0
    KTMOBJECT_TRANSACTION_MANAGER equ 1
    KTMOBJECT_RESOURCE_MANAGER equ 2
    KTMOBJECT_ENLISTMENT equ 3
    KTMOBJECT_INVALID equ 4
    _KTMOBJECT_TYPE typedef KTMOBJECT_TYPE
    PKTMOBJECT_TYPE typedef ptr KTMOBJECT_TYPE
    KTMOBJECT_CURSOR struct
      LastQuery GUID <>
      ObjectIdCount DWORD ?
      ObjectIds GUID 1 dup (<>)
    KTMOBJECT_CURSOR ends
    _KTMOBJECT_CURSOR typedef KTMOBJECT_CURSOR
    PKTMOBJECT_CURSOR typedef ptr KTMOBJECT_CURSOR
    if _MSC_VER ge 1200
    endif
    ifdef __cplusplus
      ;[...]
    endif
  endif
  TP_VERSION typedef DWORD
  PTP_VERSION typedef ptr DWORD
  TP_CALLBACK_INSTANCE typedef _TP_CALLBACK_INSTANCE
  PTP_CALLBACK_INSTANCE typedef ptr _TP_CALLBACK_INSTANCE
  TYPE_TP_SIMPLE_CALLBACK typedef proto WIN_STD_CALL_CONV :PTP_CALLBACK_INSTANCE, :PVOID
  PTP_SIMPLE_CALLBACK typedef ptr TYPE_TP_SIMPLE_CALLBACK
  TP_POOL typedef _TP_POOL
  PTP_POOL typedef ptr _TP_POOL
  TP_CALLBACK_PRIORITY typedef SDWORD
  TP_CALLBACK_PRIORITY_HIGH equ 0
  TP_CALLBACK_PRIORITY_NORMAL equ 1
  TP_CALLBACK_PRIORITY_LOW equ 2
  TP_CALLBACK_PRIORITY_INVALID equ 3
  TP_CALLBACK_PRIORITY_COUNT equ TP_CALLBACK_PRIORITY_INVALID
  _TP_CALLBACK_PRIORITY typedef TP_CALLBACK_PRIORITY
  TP_POOL_STACK_INFORMATION struct
    StackReserve SIZE_T ?
    StackCommit SIZE_T ?
  TP_POOL_STACK_INFORMATION ends
  _TP_POOL_STACK_INFORMATION typedef TP_POOL_STACK_INFORMATION
  PTP_POOL_STACK_INFORMATION typedef ptr TP_POOL_STACK_INFORMATION
  TP_CLEANUP_GROUP typedef _TP_CLEANUP_GROUP
  PTP_CLEANUP_GROUP typedef ptr _TP_CLEANUP_GROUP
  TYPE_TP_CLEANUP_GROUP_CANCEL_CALLBACK typedef proto WIN_STD_CALL_CONV :PVOID, :PVOID
  PTP_CLEANUP_GROUP_CANCEL_CALLBACK typedef ptr TYPE_TP_CLEANUP_GROUP_CANCEL_CALLBACK
  if (_WIN32_WINNT ge _WIN32_WINNT_WIN7)
    TP_CALLBACK_ENVIRON_V3 struct
      Version TP_VERSION ?
      Pool PTP_POOL ?
      CleanupGroup PTP_CLEANUP_GROUP ?
      CleanupGroupCancelCallback PTP_CLEANUP_GROUP_CANCEL_CALLBACK ?
      RaceDll PVOID ?
      ActivationContext POINTER ?
      FinalizationCallback PTP_SIMPLE_CALLBACK ?
      union u
        Flags DWORD ?
        struct s
          s_??36 record LongFunction_??36:1, Persistent_??36:1, Private_??36:30
          s_??36 <>
        ends
      ends
      CallbackPriority TP_CALLBACK_PRIORITY ?
      Size_ DWORD ?
    TP_CALLBACK_ENVIRON_V3 ends
    _TP_CALLBACK_ENVIRON_V3 typedef TP_CALLBACK_ENVIRON_V3
    TP_CALLBACK_ENVIRON typedef TP_CALLBACK_ENVIRON_V3
    PTP_CALLBACK_ENVIRON typedef ptr TP_CALLBACK_ENVIRON_V3
  else
    TP_CALLBACK_ENVIRON_V1 struct
      Version TP_VERSION ?
      Pool PTP_POOL ?
      CleanupGroup PTP_CLEANUP_GROUP ?
      CleanupGroupCancelCallback PTP_CLEANUP_GROUP_CANCEL_CALLBACK ?
      RaceDll PVOID ?
      ActivationContext POINTER ?
      FinalizationCallback PTP_SIMPLE_CALLBACK ?
      union u
        Flags DWORD ?
        struct s
          s_??37 record LongFunction_??37:1, Persistent_??37:1, Private_??37:30
          s_??37 <>
        ends
      ends
    TP_CALLBACK_ENVIRON_V1 ends
    _TP_CALLBACK_ENVIRON_V1 typedef TP_CALLBACK_ENVIRON_V1
    TP_CALLBACK_ENVIRON typedef TP_CALLBACK_ENVIRON_V1
    PTP_CALLBACK_ENVIRON typedef ptr TP_CALLBACK_ENVIRON_V1
  endif
  if  not Defined(MIDL_PASS)
    if (_WIN32_WINNT ge _WIN32_WINNT_WIN7)
    else
    endif
    if (_WIN32_WINNT ge _WIN32_WINNT_WIN7)
    endif
    if (_WIN32_WINNT ge _WIN32_WINNT_WIN7)
    endif
  endif
  TP_WORK typedef _TP_WORK
  PTP_WORK typedef ptr _TP_WORK
  TYPE_TP_WORK_CALLBACK typedef proto WIN_STD_CALL_CONV :PTP_CALLBACK_INSTANCE, :PVOID, :PTP_WORK
  PTP_WORK_CALLBACK typedef ptr TYPE_TP_WORK_CALLBACK
  TP_TIMER typedef _TP_TIMER
  PTP_TIMER typedef ptr _TP_TIMER
  TYPE_TP_TIMER_CALLBACK typedef proto WIN_STD_CALL_CONV :PTP_CALLBACK_INSTANCE, :PVOID, :PTP_TIMER
  PTP_TIMER_CALLBACK typedef ptr TYPE_TP_TIMER_CALLBACK
  TP_WAIT_RESULT typedef DWORD
  TP_WAIT typedef _TP_WAIT
  PTP_WAIT typedef ptr _TP_WAIT
  TYPE_TP_WAIT_CALLBACK typedef proto WIN_STD_CALL_CONV :PTP_CALLBACK_INSTANCE, :PVOID, :PTP_WAIT, :TP_WAIT_RESULT
  PTP_WAIT_CALLBACK typedef ptr TYPE_TP_WAIT_CALLBACK
  TP_IO typedef _TP_IO
  PTP_IO typedef ptr _TP_IO
  if Defined(_M_AMD64) and  not Defined(__midl)
  endif
  if Defined(_M_ARM) and  not Defined(__midl) and  not Defined(_M_CEE_PURE)
    ;[...]
  endif
  if Defined(_M_ARM64) and  not Defined(__midl) and  not Defined(_M_CEE_PURE)
    ;[...]
  endif
  if Defined(_M_IX86) and  not Defined(MIDL_PASS)
    PcTeb equ 18h
    if  not Defined(_M_CEE_PURE)
    endif
  endif
  if (_WIN32_WINNT gt 0500h) or (_WIN32_FUSION ge 0100h) or ISOLATION_AWARE_ENABLED
    ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION equ 1
    ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION equ 2
    ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION equ 3
    ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION equ 4
    ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION equ 5
    ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION equ 6
    ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION equ 7
    ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE equ 8
    ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES equ 9
    ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS equ 10
    ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO equ 11
  endif
  ifdef __cplusplus
    ;[...]
  endif
  if _MSC_VER ge 1200
  else
  endif
endif
