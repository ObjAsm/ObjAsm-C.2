;Include file created by h2incX, Version B.01.01, 15/11/2018 21:48
;(C) 2018-today by Biterider, 2005-2009 by Japheth
;Source file: '\ObjAsm\Projects\h2IncX\header\d3dx9tex.h', last modified: 28/08/2017 14:00
;Creation parameters: 

include d3dx9.inc
ifndef __D3DX9TEX_H__
  __D3DX9TEX_H__ equ <>
  D3DX_FILTER_NONE equ (1 shl 0)
  D3DX_FILTER_POINT equ (2 shl 0)
  D3DX_FILTER_LINEAR equ (3 shl 0)
  D3DX_FILTER_TRIANGLE equ (4 shl 0)
  D3DX_FILTER_BOX equ (5 shl 0)
  D3DX_FILTER_MIRROR_U equ (1 shl 16)
  D3DX_FILTER_MIRROR_V equ (2 shl 16)
  D3DX_FILTER_MIRROR_W equ (4 shl 16)
  D3DX_FILTER_MIRROR equ (7 shl 16)
  D3DX_FILTER_DITHER equ (1 shl 19)
  D3DX_FILTER_DITHER_DIFFUSION equ (2 shl 19)
  D3DX_FILTER_SRGB_IN equ (1 shl 21)
  D3DX_FILTER_SRGB_OUT equ (2 shl 21)
  D3DX_FILTER_SRGB equ (3 shl 21)
  D3DX_SKIP_DDS_MIP_LEVELS_MASK equ 1Fh
  D3DX_SKIP_DDS_MIP_LEVELS_SHIFT equ 26
  D3DX_SKIP_DDS_MIP_LEVELS macro levels, filter
    exitm <((((levels) and D3DX_SKIP_DDS_MIP_LEVELS_MASK) shl D3DX_SKIP_DDS_MIP_LEVELS_SHIFT) or ((filter) == D3DX_DEFAULT ? D3DX_FILTER_BOX : (filter)))>
  endm
  D3DX_NORMALMAP_MIRROR_U equ (1 shl 16)
  D3DX_NORMALMAP_MIRROR_V equ (2 shl 16)
  D3DX_NORMALMAP_MIRROR equ (3 shl 16)
  D3DX_NORMALMAP_INVERTSIGN equ (8 shl 16)
  D3DX_NORMALMAP_COMPUTE_OCCLUSION equ (16 shl 16)
  D3DX_CHANNEL_RED equ (1 shl 0)
  D3DX_CHANNEL_BLUE equ (1 shl 1)
  D3DX_CHANNEL_GREEN equ (1 shl 2)
  D3DX_CHANNEL_ALPHA equ (1 shl 3)
  D3DX_CHANNEL_LUMINANCE equ (1 shl 4)
  D3DXIMAGE_FILEFORMAT typedef SDWORD
  D3DXIFF_BMP equ 0
  D3DXIFF_JPG equ 1
  D3DXIFF_TGA equ 2
  D3DXIFF_PNG equ 3
  D3DXIFF_DDS equ 4
  D3DXIFF_PPM equ 5
  D3DXIFF_DIB equ 6
  D3DXIFF_HDR equ 7
  D3DXIFF_PFM equ 8
  D3DXIFF_FORCE_DWORD equ 7fffffffh
  _D3DXIMAGE_FILEFORMAT typedef D3DXIMAGE_FILEFORMAT
  
  TYPE_LPD3DXFILL2D typedef proto WIN_STD_CALL_CONV :ptr D3DXVECTOR4, :ptr D3DXVECTOR2, :ptr D3DXVECTOR2, :LPVOID
  LPD3DXFILL2D typedef ptr TYPE_LPD3DXFILL2D
  TYPE_LPD3DXFILL3D typedef proto WIN_STD_CALL_CONV :ptr D3DXVECTOR4, :ptr D3DXVECTOR3, :ptr D3DXVECTOR3, :LPVOID
  LPD3DXFILL3D typedef ptr TYPE_LPD3DXFILL3D
;  D3DXIMAGE_INFO struct
;    Width_ UINT ?
;    Height UINT ?
;    Depth UINT ?
;    MipLevels UINT ?
;    Format D3DFORMAT ?
;    ResourceType D3DRESOURCETYPE ?
;    ImageFileFormat D3DXIMAGE_FILEFORMAT ?
;  D3DXIMAGE_INFO ends
;  _D3DXIMAGE_INFO typedef D3DXIMAGE_INFO
  ifdef __cplusplus
    ;[...]
  endif
  D3DXGetImageInfoFromFileA proto WIN_STD_CALL_CONV :LPCSTR, :ptr D3DXIMAGE_INFO
  D3DXGetImageInfoFromFileW proto WIN_STD_CALL_CONV :LPCWSTR, :ptr D3DXIMAGE_INFO
  ifdef UNICODE
    D3DXGetImageInfoFromFile equ <D3DXGetImageInfoFromFileW>
  else
    D3DXGetImageInfoFromFile equ <D3DXGetImageInfoFromFileA>
  endif
  D3DXGetImageInfoFromResourceA proto WIN_STD_CALL_CONV :HMODULE, :LPCSTR, :ptr D3DXIMAGE_INFO
  D3DXGetImageInfoFromResourceW proto WIN_STD_CALL_CONV :HMODULE, :LPCWSTR, :ptr D3DXIMAGE_INFO
  ifdef UNICODE
    D3DXGetImageInfoFromResource equ <D3DXGetImageInfoFromResourceW>
  else
    D3DXGetImageInfoFromResource equ <D3DXGetImageInfoFromResourceA>
  endif
  D3DXGetImageInfoFromFileInMemory proto WIN_STD_CALL_CONV :LPCVOID, :UINT, :ptr D3DXIMAGE_INFO
  D3DXLoadSurfaceFromFileA proto WIN_STD_CALL_CONV :LPDIRECT3DSURFACE9, :ptr PALETTEENTRY, :ptr RECT, :LPCSTR, :ptr RECT, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO
  D3DXLoadSurfaceFromFileW proto WIN_STD_CALL_CONV :LPDIRECT3DSURFACE9, :ptr PALETTEENTRY, :ptr RECT, :LPCWSTR, :ptr RECT, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO
  ifdef UNICODE
    D3DXLoadSurfaceFromFile equ <D3DXLoadSurfaceFromFileW>
  else
    D3DXLoadSurfaceFromFile equ <D3DXLoadSurfaceFromFileA>
  endif
  D3DXLoadSurfaceFromResourceA proto WIN_STD_CALL_CONV :LPDIRECT3DSURFACE9, :ptr PALETTEENTRY, :ptr RECT, :HMODULE, :LPCSTR, :ptr RECT, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO
  D3DXLoadSurfaceFromResourceW proto WIN_STD_CALL_CONV :LPDIRECT3DSURFACE9, :ptr PALETTEENTRY, :ptr RECT, :HMODULE, :LPCWSTR, :ptr RECT, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO
  ifdef UNICODE
    D3DXLoadSurfaceFromResource equ <D3DXLoadSurfaceFromResourceW>
  else
    D3DXLoadSurfaceFromResource equ <D3DXLoadSurfaceFromResourceA>
  endif
  D3DXLoadSurfaceFromFileInMemory proto WIN_STD_CALL_CONV :LPDIRECT3DSURFACE9, :ptr PALETTEENTRY, :ptr RECT, :LPCVOID, :UINT, :ptr RECT, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO
  D3DXLoadSurfaceFromSurface proto WIN_STD_CALL_CONV :LPDIRECT3DSURFACE9, :ptr PALETTEENTRY, :ptr RECT, :LPDIRECT3DSURFACE9, :ptr PALETTEENTRY, :ptr RECT, :DWORD, :D3DCOLOR
  D3DXLoadSurfaceFromMemory proto WIN_STD_CALL_CONV :LPDIRECT3DSURFACE9, :ptr PALETTEENTRY, :ptr RECT, :LPCVOID, :D3DFORMAT, :UINT, :ptr PALETTEENTRY, :ptr RECT, :DWORD, :D3DCOLOR
  D3DXSaveSurfaceToFileA proto WIN_STD_CALL_CONV :LPCSTR, :D3DXIMAGE_FILEFORMAT, :LPDIRECT3DSURFACE9, :ptr PALETTEENTRY, :ptr RECT
  D3DXSaveSurfaceToFileW proto WIN_STD_CALL_CONV :LPCWSTR, :D3DXIMAGE_FILEFORMAT, :LPDIRECT3DSURFACE9, :ptr PALETTEENTRY, :ptr RECT
  ifdef UNICODE
    D3DXSaveSurfaceToFile equ <D3DXSaveSurfaceToFileW>
  else
    D3DXSaveSurfaceToFile equ <D3DXSaveSurfaceToFileA>
  endif
  D3DXSaveSurfaceToFileInMemory proto WIN_STD_CALL_CONV :ptr LPD3DXBUFFER, :D3DXIMAGE_FILEFORMAT, :LPDIRECT3DSURFACE9, :ptr PALETTEENTRY, :ptr RECT
  D3DXLoadVolumeFromFileA proto WIN_STD_CALL_CONV :LPDIRECT3DVOLUME9, :ptr PALETTEENTRY, :ptr D3DBOX, :LPCSTR, :ptr D3DBOX, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO
  D3DXLoadVolumeFromFileW proto WIN_STD_CALL_CONV :LPDIRECT3DVOLUME9, :ptr PALETTEENTRY, :ptr D3DBOX, :LPCWSTR, :ptr D3DBOX, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO
  ifdef UNICODE
    D3DXLoadVolumeFromFile equ <D3DXLoadVolumeFromFileW>
  else
    D3DXLoadVolumeFromFile equ <D3DXLoadVolumeFromFileA>
  endif
  D3DXLoadVolumeFromResourceA proto WIN_STD_CALL_CONV :LPDIRECT3DVOLUME9, :ptr PALETTEENTRY, :ptr D3DBOX, :HMODULE, :LPCSTR, :ptr D3DBOX, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO
  D3DXLoadVolumeFromResourceW proto WIN_STD_CALL_CONV :LPDIRECT3DVOLUME9, :ptr PALETTEENTRY, :ptr D3DBOX, :HMODULE, :LPCWSTR, :ptr D3DBOX, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO
  ifdef UNICODE
    D3DXLoadVolumeFromResource equ <D3DXLoadVolumeFromResourceW>
  else
    D3DXLoadVolumeFromResource equ <D3DXLoadVolumeFromResourceA>
  endif
  D3DXLoadVolumeFromFileInMemory proto WIN_STD_CALL_CONV :LPDIRECT3DVOLUME9, :ptr PALETTEENTRY, :ptr D3DBOX, :LPCVOID, :UINT, :ptr D3DBOX, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO
  D3DXLoadVolumeFromVolume proto WIN_STD_CALL_CONV :LPDIRECT3DVOLUME9, :ptr PALETTEENTRY, :ptr D3DBOX, :LPDIRECT3DVOLUME9, :ptr PALETTEENTRY, :ptr D3DBOX, :DWORD, :D3DCOLOR
  D3DXLoadVolumeFromMemory proto WIN_STD_CALL_CONV :LPDIRECT3DVOLUME9, :ptr PALETTEENTRY, :ptr D3DBOX, :LPCVOID, :D3DFORMAT, :UINT, :UINT, :ptr PALETTEENTRY, :ptr D3DBOX, :DWORD, :D3DCOLOR
  D3DXSaveVolumeToFileA proto WIN_STD_CALL_CONV :LPCSTR, :D3DXIMAGE_FILEFORMAT, :LPDIRECT3DVOLUME9, :ptr PALETTEENTRY, :ptr D3DBOX
  D3DXSaveVolumeToFileW proto WIN_STD_CALL_CONV :LPCWSTR, :D3DXIMAGE_FILEFORMAT, :LPDIRECT3DVOLUME9, :ptr PALETTEENTRY, :ptr D3DBOX
  ifdef UNICODE
    D3DXSaveVolumeToFile equ <D3DXSaveVolumeToFileW>
  else
    D3DXSaveVolumeToFile equ <D3DXSaveVolumeToFileA>
  endif
  D3DXSaveVolumeToFileInMemory proto WIN_STD_CALL_CONV :ptr LPD3DXBUFFER, :D3DXIMAGE_FILEFORMAT, :LPDIRECT3DVOLUME9, :ptr PALETTEENTRY, :ptr D3DBOX
  D3DXCheckTextureRequirements proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :ptr UINT, :ptr UINT, :ptr UINT, :DWORD, :ptr D3DFORMAT, :D3DPOOL
  D3DXCheckCubeTextureRequirements proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :ptr UINT, :ptr UINT, :DWORD, :ptr D3DFORMAT, :D3DPOOL
  D3DXCheckVolumeTextureRequirements proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :ptr UINT, :ptr UINT, :ptr UINT, :ptr UINT, :DWORD, :ptr D3DFORMAT, :D3DPOOL
  D3DXCreateTexture proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :UINT, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :ptr LPDIRECT3DTEXTURE9
  D3DXCreateCubeTexture proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :ptr LPDIRECT3DCUBETEXTURE9
  D3DXCreateVolumeTexture proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :UINT, :UINT, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :ptr LPDIRECT3DVOLUMETEXTURE9
  D3DXCreateTextureFromFileA proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCSTR, :ptr LPDIRECT3DTEXTURE9
  D3DXCreateTextureFromFileW proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCWSTR, :ptr LPDIRECT3DTEXTURE9
  ifdef UNICODE
    D3DXCreateTextureFromFile equ <D3DXCreateTextureFromFileW>
  else
    D3DXCreateTextureFromFile equ <D3DXCreateTextureFromFileA>
  endif
  D3DXCreateCubeTextureFromFileA proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCSTR, :ptr LPDIRECT3DCUBETEXTURE9
  D3DXCreateCubeTextureFromFileW proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCWSTR, :ptr LPDIRECT3DCUBETEXTURE9
  ifdef UNICODE
    D3DXCreateCubeTextureFromFile equ <D3DXCreateCubeTextureFromFileW>
  else
    D3DXCreateCubeTextureFromFile equ <D3DXCreateCubeTextureFromFileA>
  endif
  D3DXCreateVolumeTextureFromFileA proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCSTR, :ptr LPDIRECT3DVOLUMETEXTURE9
  D3DXCreateVolumeTextureFromFileW proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCWSTR, :ptr LPDIRECT3DVOLUMETEXTURE9
  ifdef UNICODE
    D3DXCreateVolumeTextureFromFile equ <D3DXCreateVolumeTextureFromFileW>
  else
    D3DXCreateVolumeTextureFromFile equ <D3DXCreateVolumeTextureFromFileA>
  endif
  D3DXCreateTextureFromResourceA proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :HMODULE, :LPCSTR, :ptr LPDIRECT3DTEXTURE9
  D3DXCreateTextureFromResourceW proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :HMODULE, :LPCWSTR, :ptr LPDIRECT3DTEXTURE9
  ifdef UNICODE
    D3DXCreateTextureFromResource equ <D3DXCreateTextureFromResourceW>
  else
    D3DXCreateTextureFromResource equ <D3DXCreateTextureFromResourceA>
  endif
  D3DXCreateCubeTextureFromResourceA proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :HMODULE, :LPCSTR, :ptr LPDIRECT3DCUBETEXTURE9
  D3DXCreateCubeTextureFromResourceW proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :HMODULE, :LPCWSTR, :ptr LPDIRECT3DCUBETEXTURE9
  ifdef UNICODE
    D3DXCreateCubeTextureFromResource equ <D3DXCreateCubeTextureFromResourceW>
  else
    D3DXCreateCubeTextureFromResource equ <D3DXCreateCubeTextureFromResourceA>
  endif
  D3DXCreateVolumeTextureFromResourceA proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :HMODULE, :LPCSTR, :ptr LPDIRECT3DVOLUMETEXTURE9
  D3DXCreateVolumeTextureFromResourceW proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :HMODULE, :LPCWSTR, :ptr LPDIRECT3DVOLUMETEXTURE9
  ifdef UNICODE
    D3DXCreateVolumeTextureFromResource equ <D3DXCreateVolumeTextureFromResourceW>
  else
    D3DXCreateVolumeTextureFromResource equ <D3DXCreateVolumeTextureFromResourceA>
  endif
  D3DXCreateTextureFromFileExA proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCSTR, :UINT, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :DWORD, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO, :ptr PALETTEENTRY, :ptr LPDIRECT3DTEXTURE9
  D3DXCreateTextureFromFileExW proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCWSTR, :UINT, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :DWORD, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO, :ptr PALETTEENTRY, :ptr LPDIRECT3DTEXTURE9
  ifdef UNICODE
    D3DXCreateTextureFromFileEx equ <D3DXCreateTextureFromFileExW>
  else
    D3DXCreateTextureFromFileEx equ <D3DXCreateTextureFromFileExA>
  endif
  D3DXCreateCubeTextureFromFileExA proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCSTR, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :DWORD, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO, :ptr PALETTEENTRY, :ptr LPDIRECT3DCUBETEXTURE9
  D3DXCreateCubeTextureFromFileExW proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCWSTR, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :DWORD, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO, :ptr PALETTEENTRY, :ptr LPDIRECT3DCUBETEXTURE9
  ifdef UNICODE
    D3DXCreateCubeTextureFromFileEx equ <D3DXCreateCubeTextureFromFileExW>
  else
    D3DXCreateCubeTextureFromFileEx equ <D3DXCreateCubeTextureFromFileExA>
  endif
  D3DXCreateVolumeTextureFromFileExA proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCSTR, :UINT, :UINT, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :DWORD, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO, :ptr PALETTEENTRY, :ptr LPDIRECT3DVOLUMETEXTURE9
  D3DXCreateVolumeTextureFromFileExW proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCWSTR, :UINT, :UINT, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :DWORD, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO, :ptr PALETTEENTRY, :ptr LPDIRECT3DVOLUMETEXTURE9
  ifdef UNICODE
    D3DXCreateVolumeTextureFromFileEx equ <D3DXCreateVolumeTextureFromFileExW>
  else
    D3DXCreateVolumeTextureFromFileEx equ <D3DXCreateVolumeTextureFromFileExA>
  endif
  D3DXCreateTextureFromResourceExA proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :HMODULE, :LPCSTR, :UINT, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :DWORD, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO, :ptr PALETTEENTRY, :ptr LPDIRECT3DTEXTURE9
  D3DXCreateTextureFromResourceExW proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :HMODULE, :LPCWSTR, :UINT, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :DWORD, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO, :ptr PALETTEENTRY, :ptr LPDIRECT3DTEXTURE9
  ifdef UNICODE
    D3DXCreateTextureFromResourceEx equ <D3DXCreateTextureFromResourceExW>
  else
    D3DXCreateTextureFromResourceEx equ <D3DXCreateTextureFromResourceExA>
  endif
  D3DXCreateCubeTextureFromResourceExA proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :HMODULE, :LPCSTR, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :DWORD, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO, :ptr PALETTEENTRY, :ptr LPDIRECT3DCUBETEXTURE9
  D3DXCreateCubeTextureFromResourceExW proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :HMODULE, :LPCWSTR, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :DWORD, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO, :ptr PALETTEENTRY, :ptr LPDIRECT3DCUBETEXTURE9
  ifdef UNICODE
    D3DXCreateCubeTextureFromResourceEx equ <D3DXCreateCubeTextureFromResourceExW>
  else
    D3DXCreateCubeTextureFromResourceEx equ <D3DXCreateCubeTextureFromResourceExA>
  endif
  D3DXCreateVolumeTextureFromResourceExA proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :HMODULE, :LPCSTR, :UINT, :UINT, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :DWORD, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO, :ptr PALETTEENTRY, :ptr LPDIRECT3DVOLUMETEXTURE9
  D3DXCreateVolumeTextureFromResourceExW proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :HMODULE, :LPCWSTR, :UINT, :UINT, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :DWORD, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO, :ptr PALETTEENTRY, :ptr LPDIRECT3DVOLUMETEXTURE9
  ifdef UNICODE
    D3DXCreateVolumeTextureFromResourceEx equ <D3DXCreateVolumeTextureFromResourceExW>
  else
    D3DXCreateVolumeTextureFromResourceEx equ <D3DXCreateVolumeTextureFromResourceExA>
  endif
  D3DXCreateTextureFromFileInMemory proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCVOID, :UINT, :ptr LPDIRECT3DTEXTURE9
  D3DXCreateCubeTextureFromFileInMemory proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCVOID, :UINT, :ptr LPDIRECT3DCUBETEXTURE9
  D3DXCreateVolumeTextureFromFileInMemory proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCVOID, :UINT, :ptr LPDIRECT3DVOLUMETEXTURE9
  D3DXCreateTextureFromFileInMemoryEx proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCVOID, :UINT, :UINT, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :DWORD, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO, :ptr PALETTEENTRY, :ptr LPDIRECT3DTEXTURE9
  D3DXCreateCubeTextureFromFileInMemoryEx proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCVOID, :UINT, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :DWORD, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO, :ptr PALETTEENTRY, :ptr LPDIRECT3DCUBETEXTURE9
  D3DXCreateVolumeTextureFromFileInMemoryEx proto WIN_STD_CALL_CONV :LPDIRECT3DDEVICE9, :LPCVOID, :UINT, :UINT, :UINT, :UINT, :UINT, :DWORD, :D3DFORMAT, :D3DPOOL, :DWORD, :DWORD, :D3DCOLOR, :ptr D3DXIMAGE_INFO, :ptr PALETTEENTRY, :ptr LPDIRECT3DVOLUMETEXTURE9
  D3DXSaveTextureToFileA proto WIN_STD_CALL_CONV :LPCSTR, :D3DXIMAGE_FILEFORMAT, :LPDIRECT3DBASETEXTURE9, :ptr PALETTEENTRY
  D3DXSaveTextureToFileW proto WIN_STD_CALL_CONV :LPCWSTR, :D3DXIMAGE_FILEFORMAT, :LPDIRECT3DBASETEXTURE9, :ptr PALETTEENTRY
  ifdef UNICODE
    D3DXSaveTextureToFile equ <D3DXSaveTextureToFileW>
  else
    D3DXSaveTextureToFile equ <D3DXSaveTextureToFileA>
  endif
  D3DXSaveTextureToFileInMemory proto WIN_STD_CALL_CONV :ptr LPD3DXBUFFER, :D3DXIMAGE_FILEFORMAT, :LPDIRECT3DBASETEXTURE9, :ptr PALETTEENTRY
  D3DXFilterTexture proto WIN_STD_CALL_CONV :LPDIRECT3DBASETEXTURE9, :ptr PALETTEENTRY, :UINT, :DWORD
  D3DXFilterCubeTexture equ <D3DXFilterTexture>
  D3DXFilterVolumeTexture equ <D3DXFilterTexture>
  D3DXFillTexture proto WIN_STD_CALL_CONV :LPDIRECT3DTEXTURE9, :LPD3DXFILL2D, :LPVOID
  D3DXFillCubeTexture proto WIN_STD_CALL_CONV :LPDIRECT3DCUBETEXTURE9, :LPD3DXFILL3D, :LPVOID
  D3DXFillVolumeTexture proto WIN_STD_CALL_CONV :LPDIRECT3DVOLUMETEXTURE9, :LPD3DXFILL3D, :LPVOID
  D3DXFillTextureTX proto WIN_STD_CALL_CONV :LPDIRECT3DTEXTURE9, :LPD3DXTEXTURESHADER
  D3DXFillCubeTextureTX proto WIN_STD_CALL_CONV :LPDIRECT3DCUBETEXTURE9, :LPD3DXTEXTURESHADER
  D3DXFillVolumeTextureTX proto WIN_STD_CALL_CONV :LPDIRECT3DVOLUMETEXTURE9, :LPD3DXTEXTURESHADER
  D3DXComputeNormalMap proto WIN_STD_CALL_CONV :LPDIRECT3DTEXTURE9, :LPDIRECT3DTEXTURE9, :ptr PALETTEENTRY, :DWORD, :DWORD, :FLOAT
  ifdef __cplusplus
    ;[...]
  endif
endif

