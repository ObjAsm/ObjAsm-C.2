;Include file created by h2inc+ version C.2.0 on (UTC) 15/06/2024 16:37:44
;(C) G. Friedrich April 2024
;Source file: d:\objasm\projects\x\h2inc+\h\um_10.0.22621.0\ntddndis.h
;             Created on (UTC) 22/05/2024 17:57:08
;             Last modified on (UTC) 21/02/2024 18:15:28
;Errors = 0
;Warnings = 1

ifndef _NTDDNDIS_
  _NTDDNDIS_ equ <>
  if _MSC_VER gt 1000
  endif
  include winapifamily.inc
  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP or WINAPI_PARTITION_SYSTEM or WINAPI_PARTITION_GAMES)
    if _MSC_VER ge 1200
    endif
    ifdef __cplusplus
      ;[...]
    endif
    if ((NTDDI_VERSION ge NTDDI_VISTA) or NDIS_SUPPORT_NDIS6)
      include ifdef.inc
      include devpkey.inc
      include pciprop.inc
    endif
    NDIS_INCLUDE_LEGACY_NAMES equ <>
    include ndis
    include ndis
    IOCTL_NDIS_QUERY_GLOBAL_STATS equ _NDIS_CONTROL_CODE (0, METHOD_OUT_DIRECT)
    IOCTL_NDIS_QUERY_ALL_STATS equ _NDIS_CONTROL_CODE (1, METHOD_OUT_DIRECT)
    IOCTL_NDIS_DO_PNP_OPERATION equ _NDIS_CONTROL_CODE (2, METHOD_BUFFERED)
    IOCTL_NDIS_QUERY_SELECTED_STATS equ _NDIS_CONTROL_CODE (3, METHOD_OUT_DIRECT)
    IOCTL_NDIS_ENUMERATE_INTERFACES equ _NDIS_CONTROL_CODE (4, METHOD_BUFFERED)
    IOCTL_NDIS_ADD_TDI_DEVICE equ _NDIS_CONTROL_CODE (5, METHOD_BUFFERED)
    IOCTL_NDIS_GET_LOG_DATA equ _NDIS_CONTROL_CODE (7, METHOD_OUT_DIRECT)
    IOCTL_NDIS_GET_VERSION equ _NDIS_CONTROL_CODE (8, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED1 equ _NDIS_CONTROL_CODE (9, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED2 equ _NDIS_CONTROL_CODE (0Ah, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED3 equ _NDIS_CONTROL_CODE (0Bh, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED4 equ _NDIS_CONTROL_CODE (0Ch, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED5 equ CTL_CODE(FILE_DEVICE_PHYSICAL_NETCARD, 0Dh, METHOD_BUFFERED, FILE_ANY_ACCESS)
    IOCTL_NDIS_RESERVED6 equ CTL_CODE(FILE_DEVICE_PHYSICAL_NETCARD, 0Eh, METHOD_BUFFERED, FILE_WRITE_ACCESS)
    IOCTL_NDIS_RESERVED7 equ _NDIS_CONTROL_CODE (0Fh, METHOD_OUT_DIRECT)
    IOCTL_NDIS_RESERVED8 equ _NDIS_CONTROL_CODE (10h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED9 equ _NDIS_CONTROL_CODE (11h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED10 equ _NDIS_CONTROL_CODE (12h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED11 equ _NDIS_CONTROL_CODE (13h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED12 equ _NDIS_CONTROL_CODE (14h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED13 equ _NDIS_CONTROL_CODE (15h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED14 equ _NDIS_CONTROL_CODE (16h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED15 equ _NDIS_CONTROL_CODE (17h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED16 equ _NDIS_CONTROL_CODE (18h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED17 equ _NDIS_CONTROL_CODE (19h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED18 equ _NDIS_CONTROL_CODE (1Ah, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED19 equ _NDIS_CONTROL_CODE (1Bh, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED20 equ _NDIS_CONTROL_CODE (1Ch, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED21 equ _NDIS_CONTROL_CODE (1Dh, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED22 equ _NDIS_CONTROL_CODE (1Eh, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED23 equ _NDIS_CONTROL_CODE (1Fh, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED24 equ _NDIS_CONTROL_CODE (20h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED25 equ _NDIS_CONTROL_CODE (21h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED26 equ _NDIS_CONTROL_CODE (22h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED27 equ _NDIS_CONTROL_CODE (23h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED28 equ _NDIS_CONTROL_CODE (24h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED29 equ _NDIS_CONTROL_CODE (25h, METHOD_BUFFERED)
    IOCTL_NDIS_RESERVED30 equ _NDIS_CONTROL_CODE (26h, METHOD_BUFFERED)
    include ndis
    NDIS_STATISTICS_VALUE struct
      Oid NDIS_OID ?
      DataLength ULONG ?
      Data UCHAR 1 dup (?)
    NDIS_STATISTICS_VALUE ends
    _NDIS_STATISTICS_VALUE typedef NDIS_STATISTICS_VALUE
    PNDIS_STATISTICS_VALUE typedef ptr NDIS_STATISTICS_VALUE
    if ((NTDDI_VERSION ge NTDDI_VISTA) or NDIS_SUPPORT_NDIS6)
      NDIS_STATISTICS_VALUE_EX struct
        Oid NDIS_OID ?
        DataLength ULONG ?
        Length_ ULONG ?
        Data UCHAR 1 dup (?)
      NDIS_STATISTICS_VALUE_EX ends
      _NDIS_STATISTICS_VALUE_EX typedef NDIS_STATISTICS_VALUE_EX
      PNDIS_STATISTICS_VALUE_EX typedef ptr NDIS_STATISTICS_VALUE_EX
    endif
    NDIS_VAR_DATA_DESC struct
      Length_ USHORT ?
      MaximumLength USHORT ?
      Offset_ ULONG_PTR ?
    NDIS_VAR_DATA_DESC ends
    _NDIS_VAR_DATA_DESC typedef NDIS_VAR_DATA_DESC
    PNDIS_VAR_DATA_DESC typedef ptr NDIS_VAR_DATA_DESC
    ifndef GUID_DEFINED
      include guiddef.inc
    endif
    NDIS_OBJECT_TYPE_DEFAULT equ 80h
    NDIS_OBJECT_TYPE_MINIPORT_INIT_PARAMETERS equ 81h
    NDIS_OBJECT_TYPE_SG_DMA_DESCRIPTION equ 83h
    NDIS_OBJECT_TYPE_MINIPORT_INTERRUPT equ 84h
    NDIS_OBJECT_TYPE_DEVICE_OBJECT_ATTRIBUTES equ 85h
    NDIS_OBJECT_TYPE_BIND_PARAMETERS equ 86h
    NDIS_OBJECT_TYPE_OPEN_PARAMETERS equ 87h
    NDIS_OBJECT_TYPE_RSS_CAPABILITIES equ 88h
    NDIS_OBJECT_TYPE_RSS_PARAMETERS equ 89h
    NDIS_OBJECT_TYPE_MINIPORT_DRIVER_CHARACTERISTICS equ 8Ah
    NDIS_OBJECT_TYPE_FILTER_DRIVER_CHARACTERISTICS equ 8Bh
    NDIS_OBJECT_TYPE_FILTER_PARTIAL_CHARACTERISTICS equ 8Ch
    NDIS_OBJECT_TYPE_FILTER_ATTRIBUTES equ 8Dh
    NDIS_OBJECT_TYPE_CLIENT_CHIMNEY_OFFLOAD_GENERIC_CHARACTERISTICS equ 8Eh
    NDIS_OBJECT_TYPE_PROVIDER_CHIMNEY_OFFLOAD_GENERIC_CHARACTERISTICS equ 8Fh
    NDIS_OBJECT_TYPE_CO_PROTOCOL_CHARACTERISTICS equ 90h
    NDIS_OBJECT_TYPE_CO_MINIPORT_CHARACTERISTICS equ 91h
    NDIS_OBJECT_TYPE_MINIPORT_PNP_CHARACTERISTICS equ 92h
    NDIS_OBJECT_TYPE_CLIENT_CHIMNEY_OFFLOAD_CHARACTERISTICS equ 93h
    NDIS_OBJECT_TYPE_PROVIDER_CHIMNEY_OFFLOAD_CHARACTERISTICS equ 94h
    NDIS_OBJECT_TYPE_PROTOCOL_DRIVER_CHARACTERISTICS equ 95h
    NDIS_OBJECT_TYPE_REQUEST_EX equ 96h
    NDIS_OBJECT_TYPE_TIMER_CHARACTERISTICS equ 97h
    NDIS_OBJECT_TYPE_STATUS_INDICATION equ 98h
    NDIS_OBJECT_TYPE_FILTER_ATTACH_PARAMETERS equ 99h
    NDIS_OBJECT_TYPE_FILTER_PAUSE_PARAMETERS equ 9Ah
    NDIS_OBJECT_TYPE_FILTER_RESTART_PARAMETERS equ 9Bh
    NDIS_OBJECT_TYPE_PORT_CHARACTERISTICS equ 9Ch
    NDIS_OBJECT_TYPE_PORT_STATE equ 9Dh
    NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_REGISTRATION_ATTRIBUTES equ 9Eh
    NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_GENERAL_ATTRIBUTES equ 9Fh
    NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_OFFLOAD_ATTRIBUTES equ 0A0h
    NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_NATIVE_802_11_ATTRIBUTES equ 0A1h
    NDIS_OBJECT_TYPE_RESTART_GENERAL_ATTRIBUTES equ 0A2h
    NDIS_OBJECT_TYPE_PROTOCOL_RESTART_PARAMETERS equ 0A3h
    NDIS_OBJECT_TYPE_MINIPORT_ADD_DEVICE_REGISTRATION_ATTRIBUTES equ 0A4h
    NDIS_OBJECT_TYPE_CO_CALL_MANAGER_OPTIONAL_HANDLERS equ 0A5h
    NDIS_OBJECT_TYPE_CO_CLIENT_OPTIONAL_HANDLERS equ 0A6h
    NDIS_OBJECT_TYPE_OFFLOAD equ 0A7h
    NDIS_OBJECT_TYPE_OFFLOAD_ENCAPSULATION equ 0A8h
    NDIS_OBJECT_TYPE_CONFIGURATION_OBJECT equ 0A9h
    NDIS_OBJECT_TYPE_DRIVER_WRAPPER_OBJECT equ 0AAh
    if (NDIS_SUPPORT_NDIS61)
      NDIS_OBJECT_TYPE_HD_SPLIT_ATTRIBUTES equ 0ABh
    endif
    NDIS_OBJECT_TYPE_NSI_NETWORK_RW_STRUCT equ 0ACh
    NDIS_OBJECT_TYPE_NSI_COMPARTMENT_RW_STRUCT equ 0ADh
    NDIS_OBJECT_TYPE_NSI_INTERFACE_PERSIST_RW_STRUCT equ 0AEh
    if (NDIS_SUPPORT_NDIS61)
      NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_HARDWARE_ASSIST_ATTRIBUTES equ 0AFh
    endif
    if (NDIS_SUPPORT_NDIS620)
      NDIS_OBJECT_TYPE_SHARED_MEMORY_PROVIDER_CHARACTERISTICS equ 0B0h
      NDIS_OBJECT_TYPE_RSS_PROCESSOR_INFO equ 0B1h
    endif
    if (NDIS_SUPPORT_NDIS630)
      NDIS_OBJECT_TYPE_NDK_PROVIDER_CHARACTERISTICS equ 0B2h
      NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_NDK_ATTRIBUTES equ 0B3h
      NDIS_OBJECT_TYPE_MINIPORT_SS_CHARACTERISTICS equ 0B4h
      NDIS_OBJECT_TYPE_QOS_CAPABILITIES equ 0B5h
      NDIS_OBJECT_TYPE_QOS_PARAMETERS equ 0B6h
      NDIS_OBJECT_TYPE_QOS_CLASSIFICATION_ELEMENT equ 0B7h
      NDIS_OBJECT_TYPE_SWITCH_OPTIONAL_HANDLERS equ 0B8h
    endif
    if (NDIS_SUPPORT_NDIS650)
      NDIS_OBJECT_TYPE_PD_TRANSMIT_QUEUE equ 0BEh
      NDIS_OBJECT_TYPE_PD_RECEIVE_QUEUE equ 0BFh
    endif
    if (NDIS_SUPPORT_NDIS650)
      NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_PACKET_DIRECT_ATTRIBUTES equ 0C5h
    endif
    if (NDIS_SUPPORT_NDIS670)
      NDIS_OBJECT_TYPE_MINIPORT_DEVICE_POWER_NOTIFICATION equ 0C6h
    endif
    NDIS_OBJECT_TYPE_RSS_PARAMETERS_V2 equ 0C8h
    NDIS_OBJECT_TYPE_RSS_SET_INDIRECTION_ENTRIES equ 0C9h
    include ndis
    if ((NTDDI_VERSION ge NTDDI_VISTA) or NDIS_SUPPORT_NDIS6)
      NDIS_STATISTICS_FLAGS_VALID_DIRECTED_FRAMES_RCV equ 00000001h
      NDIS_STATISTICS_FLAGS_VALID_MULTICAST_FRAMES_RCV equ 00000002h
      NDIS_STATISTICS_FLAGS_VALID_BROADCAST_FRAMES_RCV equ 00000004h
      NDIS_STATISTICS_FLAGS_VALID_BYTES_RCV equ 00000008h
      NDIS_STATISTICS_FLAGS_VALID_RCV_DISCARDS equ 00000010h
      NDIS_STATISTICS_FLAGS_VALID_RCV_ERROR equ 00000020h
      NDIS_STATISTICS_FLAGS_VALID_DIRECTED_FRAMES_XMIT equ 00000040h
      NDIS_STATISTICS_FLAGS_VALID_MULTICAST_FRAMES_XMIT equ 00000080h
      NDIS_STATISTICS_FLAGS_VALID_BROADCAST_FRAMES_XMIT equ 00000100h
      NDIS_STATISTICS_FLAGS_VALID_BYTES_XMIT equ 00000200h
      NDIS_STATISTICS_FLAGS_VALID_XMIT_ERROR equ 00000400h
      NDIS_STATISTICS_FLAGS_VALID_XMIT_DISCARDS equ 00008000h
      NDIS_STATISTICS_FLAGS_VALID_DIRECTED_BYTES_RCV equ 00010000h
      NDIS_STATISTICS_FLAGS_VALID_MULTICAST_BYTES_RCV equ 00020000h
      NDIS_STATISTICS_FLAGS_VALID_BROADCAST_BYTES_RCV equ 00040000h
      NDIS_STATISTICS_FLAGS_VALID_DIRECTED_BYTES_XMIT equ 00080000h
      NDIS_STATISTICS_FLAGS_VALID_MULTICAST_BYTES_XMIT equ 00100000h
      NDIS_STATISTICS_FLAGS_VALID_BROADCAST_BYTES_XMIT equ 00200000h
      NDIS_STATISTICS_INFO_REVISION_1 equ 1
      NDIS_STATISTICS_INFO struct
        Header NDIS_OBJECT_HEADER ?
        SupportedStatistics ULONG ?
        ifInDiscards ULONG64 ?
        ifInErrors ULONG64 ?
        ifHCInOctets ULONG64 ?
        ifHCInUcastPkts ULONG64 ?
        ifHCInMulticastPkts ULONG64 ?
        ifHCInBroadcastPkts ULONG64 ?
        ifHCOutOctets ULONG64 ?
        ifHCOutUcastPkts ULONG64 ?
        ifHCOutMulticastPkts ULONG64 ?
        ifHCOutBroadcastPkts ULONG64 ?
        ifOutErrors ULONG64 ?
        ifOutDiscards ULONG64 ?
        ifHCInUcastOctets ULONG64 ?
        ifHCInMulticastOctets ULONG64 ?
        ifHCInBroadcastOctets ULONG64 ?
        ifHCOutUcastOctets ULONG64 ?
        ifHCOutMulticastOctets ULONG64 ?
        ifHCOutBroadcastOctets ULONG64 ?
      NDIS_STATISTICS_INFO ends
      _NDIS_STATISTICS_INFO typedef NDIS_STATISTICS_INFO
      PNDIS_STATISTICS_INFO typedef ptr NDIS_STATISTICS_INFO
      NDIS_SIZEOF_STATISTICS_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_STATISTICS_INFO, ifHCOutBroadcastOctets)>
      if (NDIS_SUPPORT_NDIS630)
        NDIS_RSC_STATISTICS_INFO struct
          Header NDIS_OBJECT_HEADER ?
          CoalescedPkts ULONG64 ?
          CoalescedOctets ULONG64 ?
          CoalesceEvents ULONG64 ?
          Aborts ULONG64 ?
        NDIS_RSC_STATISTICS_INFO ends
        _NDIS_RSC_STATISTICS_INFO typedef NDIS_RSC_STATISTICS_INFO
        PNDIS_RSC_STATISTICS_INFO typedef ptr NDIS_RSC_STATISTICS_INFO
        NDIS_RSC_STATISTICS_REVISION_1 equ 1
        NDIS_SIZEOF_RSC_STATISTICS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RSC_STATISTICS_INFO, Aborts)>
      endif
      NDIS_INTERRUPT_MODERATION typedef SDWORD
      NdisInterruptModerationUnknown equ 0
      NdisInterruptModerationNotSupported equ 1
      NdisInterruptModerationEnabled equ 2
      NdisInterruptModerationDisabled equ 3
      _NDIS_INTERRUPT_MODERATION typedef NDIS_INTERRUPT_MODERATION
      PNDIS_INTERRUPT_MODERATION typedef ptr NDIS_INTERRUPT_MODERATION
      NDIS_INTERRUPT_MODERATION_CHANGE_NEEDS_RESET equ 00000001h
      NDIS_INTERRUPT_MODERATION_CHANGE_NEEDS_REINITIALIZE equ 00000002h
      NDIS_INTERRUPT_MODERATION_PARAMETERS_REVISION_1 equ 1
      NDIS_INTERRUPT_MODERATION_PARAMETERS struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        InterruptModeration NDIS_INTERRUPT_MODERATION ?
      NDIS_INTERRUPT_MODERATION_PARAMETERS ends
      _NDIS_INTERRUPT_MODERATION_PARAMETERS typedef NDIS_INTERRUPT_MODERATION_PARAMETERS
      PNDIS_INTERRUPT_MODERATION_PARAMETERS typedef ptr NDIS_INTERRUPT_MODERATION_PARAMETERS
      NDIS_SIZEOF_INTERRUPT_MODERATION_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_INTERRUPT_MODERATION_PARAMETERS, InterruptModeration)>
      NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES_REVISION_1 equ 1
      NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TimeoutArrayLength ULONG ?
        TimeoutArray ULONG 1 dup (?)
      NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES ends
      _NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES typedef NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES
      PNDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES typedef ptr NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES
      NDIS_SIZEOF_TIMEOUT_DPC_REQUEST_CAPABILITIES_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES, TimeoutArray)>
      NDIS_OBJECT_TYPE_PCI_DEVICE_CUSTOM_PROPERTIES_REVISION_1 equ 1
      if ((NTDDI_VERSION ge NTDDI_WIN7) or NDIS_SUPPORT_NDIS620)
        NDIS_OBJECT_TYPE_PCI_DEVICE_CUSTOM_PROPERTIES_REVISION_2 equ 2
      endif
      NDIS_PCI_DEVICE_CUSTOM_PROPERTIES struct
        Header NDIS_OBJECT_HEADER ?
        DeviceType UINT32 ?
        CurrentSpeedAndMode UINT32 ?
        CurrentPayloadSize UINT32 ?
        MaxPayloadSize UINT32 ?
        MaxReadRequestSize UINT32 ?
        CurrentLinkSpeed UINT32 ?
        CurrentLinkWidth UINT32 ?
        MaxLinkSpeed UINT32 ?
        MaxLinkWidth UINT32 ?
        if ((NTDDI_VERSION ge NTDDI_WIN7) or NDIS_SUPPORT_NDIS620)
          PciExpressVersion UINT32 ?
          InterruptType UINT32 ?
          MaxInterruptMessages UINT32 ?
        endif
      NDIS_PCI_DEVICE_CUSTOM_PROPERTIES ends
      _NDIS_PCI_DEVICE_CUSTOM_PROPERTIES typedef NDIS_PCI_DEVICE_CUSTOM_PROPERTIES
      PNDIS_PCI_DEVICE_CUSTOM_PROPERTIES typedef ptr NDIS_PCI_DEVICE_CUSTOM_PROPERTIES
      NDIS_SIZEOF_PCI_DEVICE_CUSTOM_PROPERTIES_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PCI_DEVICE_CUSTOM_PROPERTIES, MaxLinkWidth)>
      if ((NTDDI_VERSION ge NTDDI_WIN7) or NDIS_SUPPORT_NDIS620)
        NDIS_SIZEOF_PCI_DEVICE_CUSTOM_PROPERTIES_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PCI_DEVICE_CUSTOM_PROPERTIES, MaxInterruptMessages)>
      endif
    endif
    OID_GEN_SUPPORTED_LIST equ 00010101h
    OID_GEN_HARDWARE_STATUS equ 00010102h
    OID_GEN_MEDIA_SUPPORTED equ 00010103h
    OID_GEN_MEDIA_IN_USE equ 00010104h
    OID_GEN_MAXIMUM_LOOKAHEAD equ 00010105h
    OID_GEN_MAXIMUM_FRAME_SIZE equ 00010106h
    OID_GEN_LINK_SPEED equ 00010107h
    OID_GEN_TRANSMIT_BUFFER_SPACE equ 00010108h
    OID_GEN_RECEIVE_BUFFER_SPACE equ 00010109h
    OID_GEN_TRANSMIT_BLOCK_SIZE equ 0001010Ah
    OID_GEN_RECEIVE_BLOCK_SIZE equ 0001010Bh
    OID_GEN_VENDOR_ID equ 0001010Ch
    OID_GEN_VENDOR_DESCRIPTION equ 0001010Dh
    OID_GEN_CURRENT_PACKET_FILTER equ 0001010Eh
    OID_GEN_CURRENT_LOOKAHEAD equ 0001010Fh
    OID_GEN_DRIVER_VERSION equ 00010110h
    OID_GEN_MAXIMUM_TOTAL_SIZE equ 00010111h
    OID_GEN_PROTOCOL_OPTIONS equ 00010112h
    OID_GEN_MAC_OPTIONS equ 00010113h
    OID_GEN_MEDIA_CONNECT_STATUS equ 00010114h
    OID_GEN_MAXIMUM_SEND_PACKETS equ 00010115h
    OID_GEN_VENDOR_DRIVER_VERSION equ 00010116h
    OID_GEN_SUPPORTED_GUIDS equ 00010117h
    OID_GEN_NETWORK_LAYER_ADDRESSES equ 00010118h
    OID_GEN_TRANSPORT_HEADER_OFFSET equ 00010119h
    OID_GEN_MEDIA_CAPABILITIES equ 00010201h
    OID_GEN_PHYSICAL_MEDIUM equ 00010202h
    if ((NTDDI_VERSION ge NTDDI_VISTA) or NDIS_SUPPORT_NDIS6)
      OID_GEN_RECEIVE_SCALE_CAPABILITIES equ 00010203h
      OID_GEN_RECEIVE_SCALE_PARAMETERS equ 00010204h
      OID_GEN_MAC_ADDRESS equ 00010205h
      OID_GEN_MAX_LINK_SPEED equ 00010206h
      OID_GEN_LINK_STATE equ 00010207h
      OID_GEN_LINK_PARAMETERS equ 00010208h
      OID_GEN_INTERRUPT_MODERATION equ 00010209h
      OID_GEN_NDIS_RESERVED_3 equ 0001020Ah
      OID_GEN_NDIS_RESERVED_4 equ 0001020Bh
      OID_GEN_NDIS_RESERVED_5 equ 0001020Ch
      OID_GEN_ENUMERATE_PORTS equ 0001020Dh
      OID_GEN_PORT_STATE equ 0001020Eh
      OID_GEN_PORT_AUTHENTICATION_PARAMETERS equ 0001020Fh
      OID_GEN_TIMEOUT_DPC_REQUEST_CAPABILITIES equ 00010210h
      OID_GEN_PCI_DEVICE_CUSTOM_PROPERTIES equ 00010211h
      OID_GEN_NDIS_RESERVED_6 equ 00010212h
      OID_GEN_PHYSICAL_MEDIUM_EX equ 00010213h
    endif
    if ((NTDDI_VERSION ge NTDDI_WIN10_RS3) or NDIS_SUPPORT_NDIS680)
      OID_GEN_RECEIVE_SCALE_PARAMETERS_V2 equ 00010214h
    endif
    OID_GEN_MACHINE_NAME equ 0001021Ah
    OID_GEN_RNDIS_CONFIG_PARAMETER equ 0001021Bh
    OID_GEN_VLAN_ID equ 0001021Ch
    if ((NTDDI_VERSION ge NTDDI_VISTA) or NDIS_SUPPORT_NDIS6)
      OID_GEN_RECEIVE_HASH equ 0001021Fh
      OID_GEN_MINIPORT_RESTART_ATTRIBUTES equ 0001021Dh
      if (NDIS_SUPPORT_NDIS61)
        OID_GEN_HD_SPLIT_PARAMETERS equ 0001021Eh
        OID_GEN_HD_SPLIT_CURRENT_CONFIG equ 00010220h
      endif
      OID_GEN_PROMISCUOUS_MODE equ 00010280h
      OID_GEN_LAST_CHANGE equ 00010281h
      OID_GEN_DISCONTINUITY_TIME equ 00010282h
      OID_GEN_OPERATIONAL_STATUS equ 00010283h
      OID_GEN_XMIT_LINK_SPEED equ 00010284h
      OID_GEN_RCV_LINK_SPEED equ 00010285h
      OID_GEN_UNKNOWN_PROTOS equ 00010286h
      OID_GEN_INTERFACE_INFO equ 00010287h
      OID_GEN_ADMIN_STATUS equ 00010288h
      OID_GEN_ALIAS equ 00010289h
      OID_GEN_MEDIA_CONNECT_STATUS_EX equ 0001028Ah
      OID_GEN_LINK_SPEED_EX equ 0001028Bh
      OID_GEN_MEDIA_DUPLEX_STATE equ 0001028Ch
      OID_GEN_IP_OPER_STATUS equ 0001028Dh
      OID_WWAN_DRIVER_CAPS equ 0e010100h
      OID_WWAN_DEVICE_CAPS equ 0e010101h
      OID_WWAN_READY_INFO equ 0e010102h
      OID_WWAN_RADIO_STATE equ 0e010103h
      OID_WWAN_PIN equ 0e010104h
      OID_WWAN_PIN_LIST equ 0e010105h
      OID_WWAN_HOME_PROVIDER equ 0e010106h
      OID_WWAN_PREFERRED_PROVIDERS equ 0e010107h
      OID_WWAN_VISIBLE_PROVIDERS equ 0e010108h
      OID_WWAN_REGISTER_STATE equ 0e010109h
      OID_WWAN_PACKET_SERVICE equ 0e01010ah
      OID_WWAN_SIGNAL_STATE equ 0e01010bh
      OID_WWAN_CONNECT equ 0e01010ch
      OID_WWAN_PROVISIONED_CONTEXTS equ 0e01010dh
      OID_WWAN_SERVICE_ACTIVATION equ 0e01010eh
      OID_WWAN_SMS_CONFIGURATION equ 0e01010fh
      OID_WWAN_SMS_READ equ 0e010110h
      OID_WWAN_SMS_SEND equ 0e010111h
      OID_WWAN_SMS_DELETE equ 0e010112h
      OID_WWAN_SMS_STATUS equ 0e010113h
      OID_WWAN_VENDOR_SPECIFIC equ 0e010114h
    endif
    if ((NTDDI_VERSION ge NTDDI_WIN8) or NDIS_SUPPORT_NDIS630)
      OID_WWAN_AUTH_CHALLENGE equ 0e010115h
      OID_WWAN_ENUMERATE_DEVICE_SERVICES equ 0e010116h
      OID_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS equ 0e010117h
      OID_WWAN_DEVICE_SERVICE_COMMAND equ 0e010118h
      OID_WWAN_USSD equ 0e010119h
      OID_WWAN_PIN_EX equ 0e010121h
      OID_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS equ 0e010122h
      OID_WWAN_DEVICE_SERVICE_SESSION equ 0e010123h
      OID_WWAN_DEVICE_SERVICE_SESSION_WRITE equ 0e010124h
      OID_WWAN_PREFERRED_MULTICARRIER_PROVIDERS equ 0e010125h
      OID_WWAN_CREATE_MAC equ 0e010126h
      OID_WWAN_DELETE_MAC equ 0e010127h
    endif
    if ((NTDDI_VERSION ge NTDDI_WINTHRESHOLD) or NDIS_SUPPORT_NDIS650)
      OID_WWAN_UICC_FILE_STATUS equ 0e010128h
      OID_WWAN_UICC_ACCESS_BINARY equ 0e010129h
      OID_WWAN_UICC_ACCESS_RECORD equ 0e01012ah
      OID_WWAN_PIN_EX2 equ 0e01012bh
      OID_WWAN_MBIM_VERSION equ 0e01012ch
      OID_WWAN_SYS_CAPS equ 0e01012dh
      OID_WWAN_DEVICE_CAPS_EX equ 0e01012eh
      OID_WWAN_SYS_SLOTMAPPINGS equ 0e01012fh
      OID_WWAN_SLOT_INFO_STATUS equ 0e010130h
      OID_WWAN_DEVICE_BINDINGS equ 0e010131h
      OID_WWAN_REGISTER_STATE_EX equ 0e010132h
      OID_WWAN_IMS_VOICE_STATE equ 0e010133h
      OID_WWAN_SIGNAL_STATE_EX equ 0e010134h
      OID_WWAN_LOCATION_STATE equ 0e010135h
      OID_WWAN_NITZ equ 0e010136h
      OID_WWAN_NETWORK_IDLE_HINT equ 0e010137h
    endif
    if ((NTDDI_VERSION ge NTDDI_WIN10) or NDIS_SUPPORT_NDIS651)
      OID_WWAN_PRESHUTDOWN equ 0e010138h
    endif
    if ((NTDDI_VERSION ge NTDDI_WIN10_RS1) or NDIS_SUPPORT_NDIS660)
      OID_WWAN_UICC_ATR equ 0e010139h
      OID_WWAN_UICC_OPEN_CHANNEL equ 0e01013ah
      OID_WWAN_UICC_CLOSE_CHANNEL equ 0e01013bh
      OID_WWAN_UICC_APDU equ 0e01013ch
      OID_WWAN_UICC_TERMINAL_CAPABILITY equ 0e01013dh
      OID_WWAN_PS_MEDIA_CONFIG equ 0e01013eh
    endif
    if ((NTDDI_VERSION ge NTDDI_WIN10_RS2) or NDIS_SUPPORT_NDIS670)
      OID_WWAN_SAR_CONFIG equ 0e01013fh
      OID_WWAN_SAR_TRANSMISSION_STATUS equ 0e010140h
      OID_WWAN_NETWORK_BLACKLIST equ 0e010141h
      OID_WWAN_LTE_ATTACH_CONFIG equ 0e010142h
      OID_WWAN_LTE_ATTACH_STATUS equ 0e010143h
    endif
    if ((NTDDI_VERSION ge NTDDI_WIN10_RS3) or NDIS_SUPPORT_NDIS680)
      OID_WWAN_MODEM_CONFIG_INFO equ 0e010144h
      OID_WWAN_PCO equ 0e010145h
      OID_WWAN_UICC_RESET equ 0e010146h
      OID_WWAN_DEVICE_RESET equ 0e010147h
      OID_WWAN_BASE_STATIONS_INFO equ 0e010148h
    endif
    if ((NTDDI_VERSION ge NTDDI_WIN10_RS4) or NDIS_SUPPORT_NDIS680)
      OID_WWAN_MPDP equ 0e010149h
    endif
    if ((NTDDI_VERSION ge NTDDI_WIN10_19H1) or NDIS_SUPPORT_NDIS683)
      OID_WWAN_UICC_APP_LIST equ 0e01014ah
      OID_WWAN_MODEM_LOGGING_CONFIG equ 0e01014bh
    endif
    if ((NTDDI_VERSION ge NTDDI_WIN10_VB) or NDIS_SUPPORT_NDIS684)
      OID_WWAN_REGISTER_PARAMS equ 0e01014ch
      OID_WWAN_NETWORK_PARAMS equ 0e01014dh
    endif
    if (NTDDI_VERSION ge NTDDI_WIN10_CO)
      OID_WWAN_UE_POLICY equ 0e01014eh
    endif
    OID_GEN_XMIT_OK equ 00020101h
    OID_GEN_RCV_OK equ 00020102h
    OID_GEN_XMIT_ERROR equ 00020103h
    OID_GEN_RCV_ERROR equ 00020104h
    OID_GEN_RCV_NO_BUFFER equ 00020105h
    if ((NTDDI_VERSION ge NTDDI_VISTA) or NDIS_SUPPORT_NDIS6)
      OID_GEN_STATISTICS equ 00020106h
    endif
    OID_GEN_DIRECTED_BYTES_XMIT equ 00020201h
    OID_GEN_DIRECTED_FRAMES_XMIT equ 00020202h
    OID_GEN_MULTICAST_BYTES_XMIT equ 00020203h
    OID_GEN_MULTICAST_FRAMES_XMIT equ 00020204h
    OID_GEN_BROADCAST_BYTES_XMIT equ 00020205h
    OID_GEN_BROADCAST_FRAMES_XMIT equ 00020206h
    OID_GEN_DIRECTED_BYTES_RCV equ 00020207h
    OID_GEN_DIRECTED_FRAMES_RCV equ 00020208h
    OID_GEN_MULTICAST_BYTES_RCV equ 00020209h
    OID_GEN_MULTICAST_FRAMES_RCV equ 0002020Ah
    OID_GEN_BROADCAST_BYTES_RCV equ 0002020Bh
    OID_GEN_BROADCAST_FRAMES_RCV equ 0002020Ch
    OID_GEN_RCV_CRC_ERROR equ 0002020Dh
    OID_GEN_TRANSMIT_QUEUE_LENGTH equ 0002020Eh
    OID_GEN_GET_TIME_CAPS equ 0002020Fh
    OID_GEN_GET_NETCARD_TIME equ 00020210h
    OID_GEN_NETCARD_LOAD equ 00020211h
    OID_GEN_DEVICE_PROFILE equ 00020212h
    OID_GEN_INIT_TIME_MS equ 00020213h
    OID_GEN_RESET_COUNTS equ 00020214h
    OID_GEN_MEDIA_SENSE_COUNTS equ 00020215h
    OID_GEN_FRIENDLY_NAME equ 00020216h
    OID_GEN_NDIS_RESERVED_1 equ 00020217h
    OID_GEN_NDIS_RESERVED_2 equ 00020218h
    OID_GEN_NDIS_RESERVED_5 equ 0001020Ch
    if ((NTDDI_VERSION ge NTDDI_VISTA) or NDIS_SUPPORT_NDIS6)
      OID_GEN_BYTES_RCV equ 00020219h
      OID_GEN_BYTES_XMIT equ 0002021Ah
      OID_GEN_RCV_DISCARDS equ 0002021Bh
      OID_GEN_XMIT_DISCARDS equ 0002021Ch
    endif
    if (NTDDI_VERSION ge NTDDI_WIN8) or NDIS_SUPPORT_NDIS630
      OID_TCP_RSC_STATISTICS equ 0002021Dh
      OID_GEN_NDIS_RESERVED_7 equ 0002021Eh
    endif
    OID_GEN_CO_SUPPORTED_LIST equ <OID_GEN_SUPPORTED_LIST>
    OID_GEN_CO_HARDWARE_STATUS equ <OID_GEN_HARDWARE_STATUS>
    OID_GEN_CO_MEDIA_SUPPORTED equ <OID_GEN_MEDIA_SUPPORTED>
    OID_GEN_CO_MEDIA_IN_USE equ <OID_GEN_MEDIA_IN_USE>
    OID_GEN_CO_LINK_SPEED equ <OID_GEN_LINK_SPEED>
    OID_GEN_CO_VENDOR_ID equ <OID_GEN_VENDOR_ID>
    OID_GEN_CO_VENDOR_DESCRIPTION equ <OID_GEN_VENDOR_DESCRIPTION>
    OID_GEN_CO_DRIVER_VERSION equ <OID_GEN_DRIVER_VERSION>
    OID_GEN_CO_PROTOCOL_OPTIONS equ <OID_GEN_PROTOCOL_OPTIONS>
    OID_GEN_CO_MAC_OPTIONS equ <OID_GEN_MAC_OPTIONS>
    OID_GEN_CO_MEDIA_CONNECT_STATUS equ <OID_GEN_MEDIA_CONNECT_STATUS>
    OID_GEN_CO_VENDOR_DRIVER_VERSION equ <OID_GEN_VENDOR_DRIVER_VERSION>
    OID_GEN_CO_SUPPORTED_GUIDS equ <OID_GEN_SUPPORTED_GUIDS>
    OID_GEN_CO_GET_TIME_CAPS equ <OID_GEN_GET_TIME_CAPS>
    OID_GEN_CO_GET_NETCARD_TIME equ <OID_GEN_GET_NETCARD_TIME>
    OID_GEN_CO_MINIMUM_LINK_SPEED equ 00020120h
    OID_GEN_CO_XMIT_PDUS_OK equ <OID_GEN_XMIT_OK>
    OID_GEN_CO_RCV_PDUS_OK equ <OID_GEN_RCV_OK>
    OID_GEN_CO_XMIT_PDUS_ERROR equ <OID_GEN_XMIT_ERROR>
    OID_GEN_CO_RCV_PDUS_ERROR equ <OID_GEN_RCV_ERROR>
    OID_GEN_CO_RCV_PDUS_NO_BUFFER equ <OID_GEN_RCV_NO_BUFFER>
    OID_GEN_CO_RCV_CRC_ERROR equ <OID_GEN_RCV_CRC_ERROR>
    OID_GEN_CO_TRANSMIT_QUEUE_LENGTH equ <OID_GEN_TRANSMIT_QUEUE_LENGTH>
    OID_GEN_CO_BYTES_XMIT equ <OID_GEN_DIRECTED_BYTES_XMIT>
    OID_GEN_CO_BYTES_RCV equ <OID_GEN_DIRECTED_BYTES_RCV>
    OID_GEN_CO_NETCARD_LOAD equ <OID_GEN_NETCARD_LOAD>
    OID_GEN_CO_DEVICE_PROFILE equ <OID_GEN_DEVICE_PROFILE>
    OID_GEN_CO_BYTES_XMIT_OUTSTANDING equ 00020221h
    if (NDIS_SUPPORT_NDIS686)
      OID_KDNET_ENUMERATE_PFS equ 00020222h
      OID_KDNET_ADD_PF equ 00020223h
      OID_KDNET_REMOVE_PF equ 00020224h
      OID_KDNET_QUERY_PF_INFORMATION equ 00020225h
    endif
    OID_802_3_PERMANENT_ADDRESS equ 01010101h
    OID_802_3_CURRENT_ADDRESS equ 01010102h
    OID_802_3_MULTICAST_LIST equ 01010103h
    OID_802_3_MAXIMUM_LIST_SIZE equ 01010104h
    OID_802_3_MAC_OPTIONS equ 01010105h
    NDIS_802_3_MAC_OPTION_PRIORITY equ 00000001h
    OID_802_3_RCV_ERROR_ALIGNMENT equ 01020101h
    OID_802_3_XMIT_ONE_COLLISION equ 01020102h
    OID_802_3_XMIT_MORE_COLLISIONS equ 01020103h
    OID_802_3_XMIT_DEFERRED equ 01020201h
    OID_802_3_XMIT_MAX_COLLISIONS equ 01020202h
    OID_802_3_RCV_OVERRUN equ 01020203h
    OID_802_3_XMIT_UNDERRUN equ 01020204h
    OID_802_3_XMIT_HEARTBEAT_FAILURE equ 01020205h
    OID_802_3_XMIT_TIMES_CRS_LOST equ 01020206h
    OID_802_3_XMIT_LATE_COLLISIONS equ 01020207h
    if ((NTDDI_VERSION ge NTDDI_VISTA) or NDIS_SUPPORT_NDIS6)
      OID_802_3_ADD_MULTICAST_ADDRESS equ 01010208h
      OID_802_3_DELETE_MULTICAST_ADDRESS equ 01010209h
    endif
    OID_802_5_PERMANENT_ADDRESS equ 02010101h
    OID_802_5_CURRENT_ADDRESS equ 02010102h
    OID_802_5_CURRENT_FUNCTIONAL equ 02010103h
    OID_802_5_CURRENT_GROUP equ 02010104h
    OID_802_5_LAST_OPEN_STATUS equ 02010105h
    OID_802_5_CURRENT_RING_STATUS equ 02010106h
    OID_802_5_CURRENT_RING_STATE equ 02010107h
    OID_802_5_LINE_ERRORS equ 02020101h
    OID_802_5_LOST_FRAMES equ 02020102h
    OID_802_5_BURST_ERRORS equ 02020201h
    OID_802_5_AC_ERRORS equ 02020202h
    OID_802_5_ABORT_DELIMETERS equ 02020203h
    OID_802_5_FRAME_COPIED_ERRORS equ 02020204h
    OID_802_5_FREQUENCY_ERRORS equ 02020205h
    OID_802_5_TOKEN_ERRORS equ 02020206h
    OID_802_5_INTERNAL_ERRORS equ 02020207h
    OID_FDDI_LONG_PERMANENT_ADDR equ 03010101h
    OID_FDDI_LONG_CURRENT_ADDR equ 03010102h
    OID_FDDI_LONG_MULTICAST_LIST equ 03010103h
    OID_FDDI_LONG_MAX_LIST_SIZE equ 03010104h
    OID_FDDI_SHORT_PERMANENT_ADDR equ 03010105h
    OID_FDDI_SHORT_CURRENT_ADDR equ 03010106h
    OID_FDDI_SHORT_MULTICAST_LIST equ 03010107h
    OID_FDDI_SHORT_MAX_LIST_SIZE equ 03010108h
    OID_FDDI_ATTACHMENT_TYPE equ 03020101h
    OID_FDDI_UPSTREAM_NODE_LONG equ 03020102h
    OID_FDDI_DOWNSTREAM_NODE_LONG equ 03020103h
    OID_FDDI_FRAME_ERRORS equ 03020104h
    OID_FDDI_FRAMES_LOST equ 03020105h
    OID_FDDI_RING_MGT_STATE equ 03020106h
    OID_FDDI_LCT_FAILURES equ 03020107h
    OID_FDDI_LEM_REJECTS equ 03020108h
    OID_FDDI_LCONNECTION_STATE equ 03020109h
    OID_FDDI_SMT_STATION_ID equ 03030201h
    OID_FDDI_SMT_OP_VERSION_ID equ 03030202h
    OID_FDDI_SMT_HI_VERSION_ID equ 03030203h
    OID_FDDI_SMT_LO_VERSION_ID equ 03030204h
    OID_FDDI_SMT_MANUFACTURER_DATA equ 03030205h
    OID_FDDI_SMT_USER_DATA equ 03030206h
    OID_FDDI_SMT_MIB_VERSION_ID equ 03030207h
    OID_FDDI_SMT_MAC_CT equ 03030208h
    OID_FDDI_SMT_NON_MASTER_CT equ 03030209h
    OID_FDDI_SMT_MASTER_CT equ 0303020Ah
    OID_FDDI_SMT_AVAILABLE_PATHS equ 0303020Bh
    OID_FDDI_SMT_CONFIG_CAPABILITIES equ 0303020Ch
    OID_FDDI_SMT_CONFIG_POLICY equ 0303020Dh
    OID_FDDI_SMT_CONNECTION_POLICY equ 0303020Eh
    OID_FDDI_SMT_T_NOTIFY equ 0303020Fh
    OID_FDDI_SMT_STAT_RPT_POLICY equ 03030210h
    OID_FDDI_SMT_TRACE_MAX_EXPIRATION equ 03030211h
    OID_FDDI_SMT_PORT_INDEXES equ 03030212h
    OID_FDDI_SMT_MAC_INDEXES equ 03030213h
    OID_FDDI_SMT_BYPASS_PRESENT equ 03030214h
    OID_FDDI_SMT_ECM_STATE equ 03030215h
    OID_FDDI_SMT_CF_STATE equ 03030216h
    OID_FDDI_SMT_HOLD_STATE equ 03030217h
    OID_FDDI_SMT_REMOTE_DISCONNECT_FLAG equ 03030218h
    OID_FDDI_SMT_STATION_STATUS equ 03030219h
    OID_FDDI_SMT_PEER_WRAP_FLAG equ 0303021Ah
    OID_FDDI_SMT_MSG_TIME_STAMP equ 0303021Bh
    OID_FDDI_SMT_TRANSITION_TIME_STAMP equ 0303021Ch
    OID_FDDI_SMT_SET_COUNT equ 0303021Dh
    OID_FDDI_SMT_LAST_SET_STATION_ID equ 0303021Eh
    OID_FDDI_MAC_FRAME_STATUS_FUNCTIONS equ 0303021Fh
    OID_FDDI_MAC_BRIDGE_FUNCTIONS equ 03030220h
    OID_FDDI_MAC_T_MAX_CAPABILITY equ 03030221h
    OID_FDDI_MAC_TVX_CAPABILITY equ 03030222h
    OID_FDDI_MAC_AVAILABLE_PATHS equ 03030223h
    OID_FDDI_MAC_CURRENT_PATH equ 03030224h
    OID_FDDI_MAC_UPSTREAM_NBR equ 03030225h
    OID_FDDI_MAC_DOWNSTREAM_NBR equ 03030226h
    OID_FDDI_MAC_OLD_UPSTREAM_NBR equ 03030227h
    OID_FDDI_MAC_OLD_DOWNSTREAM_NBR equ 03030228h
    OID_FDDI_MAC_DUP_ADDRESS_TEST equ 03030229h
    OID_FDDI_MAC_REQUESTED_PATHS equ 0303022Ah
    OID_FDDI_MAC_DOWNSTREAM_PORT_TYPE equ 0303022Bh
    OID_FDDI_MAC_INDEX equ 0303022Ch
    OID_FDDI_MAC_SMT_ADDRESS equ 0303022Dh
    OID_FDDI_MAC_LONG_GRP_ADDRESS equ 0303022Eh
    OID_FDDI_MAC_SHORT_GRP_ADDRESS equ 0303022Fh
    OID_FDDI_MAC_T_REQ equ 03030230h
    OID_FDDI_MAC_T_NEG equ 03030231h
    OID_FDDI_MAC_T_MAX equ 03030232h
    OID_FDDI_MAC_TVX_VALUE equ 03030233h
    OID_FDDI_MAC_T_PRI0 equ 03030234h
    OID_FDDI_MAC_T_PRI1 equ 03030235h
    OID_FDDI_MAC_T_PRI2 equ 03030236h
    OID_FDDI_MAC_T_PRI3 equ 03030237h
    OID_FDDI_MAC_T_PRI4 equ 03030238h
    OID_FDDI_MAC_T_PRI5 equ 03030239h
    OID_FDDI_MAC_T_PRI6 equ 0303023Ah
    OID_FDDI_MAC_FRAME_CT equ 0303023Bh
    OID_FDDI_MAC_COPIED_CT equ 0303023Ch
    OID_FDDI_MAC_TRANSMIT_CT equ 0303023Dh
    OID_FDDI_MAC_TOKEN_CT equ 0303023Eh
    OID_FDDI_MAC_ERROR_CT equ 0303023Fh
    OID_FDDI_MAC_LOST_CT equ 03030240h
    OID_FDDI_MAC_TVX_EXPIRED_CT equ 03030241h
    OID_FDDI_MAC_NOT_COPIED_CT equ 03030242h
    OID_FDDI_MAC_LATE_CT equ 03030243h
    OID_FDDI_MAC_RING_OP_CT equ 03030244h
    OID_FDDI_MAC_FRAME_ERROR_THRESHOLD equ 03030245h
    OID_FDDI_MAC_FRAME_ERROR_RATIO equ 03030246h
    OID_FDDI_MAC_NOT_COPIED_THRESHOLD equ 03030247h
    OID_FDDI_MAC_NOT_COPIED_RATIO equ 03030248h
    OID_FDDI_MAC_RMT_STATE equ 03030249h
    OID_FDDI_MAC_DA_FLAG equ 0303024Ah
    OID_FDDI_MAC_UNDA_FLAG equ 0303024Bh
    OID_FDDI_MAC_FRAME_ERROR_FLAG equ 0303024Ch
    OID_FDDI_MAC_NOT_COPIED_FLAG equ 0303024Dh
    OID_FDDI_MAC_MA_UNITDATA_AVAILABLE equ 0303024Eh
    OID_FDDI_MAC_HARDWARE_PRESENT equ 0303024Fh
    OID_FDDI_MAC_MA_UNITDATA_ENABLE equ 03030250h
    OID_FDDI_PATH_INDEX equ 03030251h
    OID_FDDI_PATH_RING_LATENCY equ 03030252h
    OID_FDDI_PATH_TRACE_STATUS equ 03030253h
    OID_FDDI_PATH_SBA_PAYLOAD equ 03030254h
    OID_FDDI_PATH_SBA_OVERHEAD equ 03030255h
    OID_FDDI_PATH_CONFIGURATION equ 03030256h
    OID_FDDI_PATH_T_R_MODE equ 03030257h
    OID_FDDI_PATH_SBA_AVAILABLE equ 03030258h
    OID_FDDI_PATH_TVX_LOWER_BOUND equ 03030259h
    OID_FDDI_PATH_T_MAX_LOWER_BOUND equ 0303025Ah
    OID_FDDI_PATH_MAX_T_REQ equ 0303025Bh
    OID_FDDI_PORT_MY_TYPE equ 0303025Ch
    OID_FDDI_PORT_NEIGHBOR_TYPE equ 0303025Dh
    OID_FDDI_PORT_CONNECTION_POLICIES equ 0303025Eh
    OID_FDDI_PORT_MAC_INDICATED equ 0303025Fh
    OID_FDDI_PORT_CURRENT_PATH equ 03030260h
    OID_FDDI_PORT_REQUESTED_PATHS equ 03030261h
    OID_FDDI_PORT_MAC_PLACEMENT equ 03030262h
    OID_FDDI_PORT_AVAILABLE_PATHS equ 03030263h
    OID_FDDI_PORT_MAC_LOOP_TIME equ 03030264h
    OID_FDDI_PORT_PMD_CLASS equ 03030265h
    OID_FDDI_PORT_CONNECTION_CAPABILITIES equ 03030266h
    OID_FDDI_PORT_INDEX equ 03030267h
    OID_FDDI_PORT_MAINT_LS equ 03030268h
    OID_FDDI_PORT_BS_FLAG equ 03030269h
    OID_FDDI_PORT_PC_LS equ 0303026Ah
    OID_FDDI_PORT_EB_ERROR_CT equ 0303026Bh
    OID_FDDI_PORT_LCT_FAIL_CT equ 0303026Ch
    OID_FDDI_PORT_LER_ESTIMATE equ 0303026Dh
    OID_FDDI_PORT_LEM_REJECT_CT equ 0303026Eh
    OID_FDDI_PORT_LEM_CT equ 0303026Fh
    OID_FDDI_PORT_LER_CUTOFF equ 03030270h
    OID_FDDI_PORT_LER_ALARM equ 03030271h
    OID_FDDI_PORT_CONNNECT_STATE equ 03030272h
    OID_FDDI_PORT_PCM_STATE equ 03030273h
    OID_FDDI_PORT_PC_WITHHOLD equ 03030274h
    OID_FDDI_PORT_LER_FLAG equ 03030275h
    OID_FDDI_PORT_HARDWARE_PRESENT equ 03030276h
    OID_FDDI_SMT_STATION_ACTION equ 03030277h
    OID_FDDI_PORT_ACTION equ 03030278h
    OID_FDDI_IF_DESCR equ 03030279h
    OID_FDDI_IF_TYPE equ 0303027Ah
    OID_FDDI_IF_MTU equ 0303027Bh
    OID_FDDI_IF_SPEED equ 0303027Ch
    OID_FDDI_IF_PHYS_ADDRESS equ 0303027Dh
    OID_FDDI_IF_ADMIN_STATUS equ 0303027Eh
    OID_FDDI_IF_OPER_STATUS equ 0303027Fh
    OID_FDDI_IF_LAST_CHANGE equ 03030280h
    OID_FDDI_IF_IN_OCTETS equ 03030281h
    OID_FDDI_IF_IN_UCAST_PKTS equ 03030282h
    OID_FDDI_IF_IN_NUCAST_PKTS equ 03030283h
    OID_FDDI_IF_IN_DISCARDS equ 03030284h
    OID_FDDI_IF_IN_ERRORS equ 03030285h
    OID_FDDI_IF_IN_UNKNOWN_PROTOS equ 03030286h
    OID_FDDI_IF_OUT_OCTETS equ 03030287h
    OID_FDDI_IF_OUT_UCAST_PKTS equ 03030288h
    OID_FDDI_IF_OUT_NUCAST_PKTS equ 03030289h
    OID_FDDI_IF_OUT_DISCARDS equ 0303028Ah
    OID_FDDI_IF_OUT_ERRORS equ 0303028Bh
    OID_FDDI_IF_OUT_QLEN equ 0303028Ch
    OID_FDDI_IF_SPECIFIC equ 0303028Dh
    OID_WAN_PERMANENT_ADDRESS equ 04010101h
    OID_WAN_CURRENT_ADDRESS equ 04010102h
    OID_WAN_QUALITY_OF_SERVICE equ 04010103h
    OID_WAN_PROTOCOL_TYPE equ 04010104h
    OID_WAN_MEDIUM_SUBTYPE equ 04010105h
    OID_WAN_HEADER_FORMAT equ 04010106h
    OID_WAN_GET_INFO equ 04010107h
    OID_WAN_SET_LINK_INFO equ 04010108h
    OID_WAN_GET_LINK_INFO equ 04010109h
    OID_WAN_LINE_COUNT equ 0401010Ah
    OID_WAN_PROTOCOL_CAPS equ 0401010Bh
    OID_WAN_GET_BRIDGE_INFO equ 0401020Ah
    OID_WAN_SET_BRIDGE_INFO equ 0401020Bh
    OID_WAN_GET_COMP_INFO equ 0401020Ch
    OID_WAN_SET_COMP_INFO equ 0401020Dh
    OID_WAN_GET_STATS_INFO equ 0401020Eh
    OID_WAN_CO_GET_INFO equ 04010180h
    OID_WAN_CO_SET_LINK_INFO equ 04010181h
    OID_WAN_CO_GET_LINK_INFO equ 04010182h
    OID_WAN_CO_GET_COMP_INFO equ 04010280h
    OID_WAN_CO_SET_COMP_INFO equ 04010281h
    OID_WAN_CO_GET_STATS_INFO equ 04010282h
    OID_LTALK_CURRENT_NODE_ID equ 05010102h
    OID_LTALK_IN_BROADCASTS equ 05020101h
    OID_LTALK_IN_LENGTH_ERRORS equ 05020102h
    OID_LTALK_OUT_NO_HANDLERS equ 05020201h
    OID_LTALK_COLLISIONS equ 05020202h
    OID_LTALK_DEFERS equ 05020203h
    OID_LTALK_NO_DATA_ERRORS equ 05020204h
    OID_LTALK_RANDOM_CTS_ERRORS equ 05020205h
    OID_LTALK_FCS_ERRORS equ 05020206h
    OID_ARCNET_PERMANENT_ADDRESS equ 06010101h
    OID_ARCNET_CURRENT_ADDRESS equ 06010102h
    OID_ARCNET_RECONFIGURATIONS equ 06020201h
    OID_TAPI_ACCEPT equ 07030101h
    OID_TAPI_ANSWER equ 07030102h
    OID_TAPI_CLOSE equ 07030103h
    OID_TAPI_CLOSE_CALL equ 07030104h
    OID_TAPI_CONDITIONAL_MEDIA_DETECTION equ 07030105h
    OID_TAPI_CONFIG_DIALOG equ 07030106h
    OID_TAPI_DEV_SPECIFIC equ 07030107h
    OID_TAPI_DIAL equ 07030108h
    OID_TAPI_DROP equ 07030109h
    OID_TAPI_GET_ADDRESS_CAPS equ 0703010Ah
    OID_TAPI_GET_ADDRESS_ID equ 0703010Bh
    OID_TAPI_GET_ADDRESS_STATUS equ 0703010Ch
    OID_TAPI_GET_CALL_ADDRESS_ID equ 0703010Dh
    OID_TAPI_GET_CALL_INFO equ 0703010Eh
    OID_TAPI_GET_CALL_STATUS equ 0703010Fh
    OID_TAPI_GET_DEV_CAPS equ 07030110h
    OID_TAPI_GET_DEV_CONFIG equ 07030111h
    OID_TAPI_GET_EXTENSION_ID equ 07030112h
    OID_TAPI_GET_ID equ 07030113h
    OID_TAPI_GET_LINE_DEV_STATUS equ 07030114h
    OID_TAPI_MAKE_CALL equ 07030115h
    OID_TAPI_NEGOTIATE_EXT_VERSION equ 07030116h
    OID_TAPI_OPEN equ 07030117h
    OID_TAPI_PROVIDER_INITIALIZE equ 07030118h
    OID_TAPI_PROVIDER_SHUTDOWN equ 07030119h
    OID_TAPI_SECURE_CALL equ 0703011Ah
    OID_TAPI_SELECT_EXT_VERSION equ 0703011Bh
    OID_TAPI_SEND_USER_USER_INFO equ 0703011Ch
    OID_TAPI_SET_APP_SPECIFIC equ 0703011Dh
    OID_TAPI_SET_CALL_PARAMS equ 0703011Eh
    OID_TAPI_SET_DEFAULT_MEDIA_DETECTION equ 0703011Fh
    OID_TAPI_SET_DEV_CONFIG equ 07030120h
    OID_TAPI_SET_MEDIA_MODE equ 07030121h
    OID_TAPI_SET_STATUS_MESSAGES equ 07030122h
    OID_TAPI_GATHER_DIGITS equ 07030123h
    OID_TAPI_MONITOR_DIGITS equ 07030124h
    OID_ATM_SUPPORTED_VC_RATES equ 08010101h
    OID_ATM_SUPPORTED_SERVICE_CATEGORY equ 08010102h
    OID_ATM_SUPPORTED_AAL_TYPES equ 08010103h
    OID_ATM_HW_CURRENT_ADDRESS equ 08010104h
    OID_ATM_MAX_ACTIVE_VCS equ 08010105h
    OID_ATM_MAX_ACTIVE_VCI_BITS equ 08010106h
    OID_ATM_MAX_ACTIVE_VPI_BITS equ 08010107h
    OID_ATM_MAX_AAL0_PACKET_SIZE equ 08010108h
    OID_ATM_MAX_AAL1_PACKET_SIZE equ 08010109h
    OID_ATM_MAX_AAL34_PACKET_SIZE equ 0801010Ah
    OID_ATM_MAX_AAL5_PACKET_SIZE equ 0801010Bh
    OID_ATM_SIGNALING_VPIVCI equ 08010201h
    OID_ATM_ASSIGNED_VPI equ 08010202h
    OID_ATM_ACQUIRE_ACCESS_NET_RESOURCES equ 08010203h
    OID_ATM_RELEASE_ACCESS_NET_RESOURCES equ 08010204h
    OID_ATM_ILMI_VPIVCI equ 08010205h
    OID_ATM_DIGITAL_BROADCAST_VPIVCI equ 08010206h
    OID_ATM_GET_NEAREST_FLOW equ 08010207h
    OID_ATM_ALIGNMENT_REQUIRED equ 08010208h
    OID_ATM_LECS_ADDRESS equ 08010209h
    OID_ATM_SERVICE_ADDRESS equ 0801020Ah
    OID_ATM_CALL_PROCEEDING equ 0801020Bh
    OID_ATM_CALL_ALERTING equ 0801020Ch
    OID_ATM_PARTY_ALERTING equ 0801020Dh
    OID_ATM_CALL_NOTIFY equ 0801020Eh
    OID_ATM_MY_IP_NM_ADDRESS equ 0801020Fh
    OID_ATM_RCV_CELLS_OK equ 08020101h
    OID_ATM_XMIT_CELLS_OK equ 08020102h
    OID_ATM_RCV_CELLS_DROPPED equ 08020103h
    OID_ATM_RCV_INVALID_VPI_VCI equ 08020201h
    OID_ATM_CELLS_HEC_ERROR equ 08020202h
    OID_ATM_RCV_REASSEMBLY_ERROR equ 08020203h
    OID_802_11_BSSID equ 0D010101h
    OID_802_11_SSID equ 0D010102h
    OID_802_11_NETWORK_TYPES_SUPPORTED equ 0D010203h
    OID_802_11_NETWORK_TYPE_IN_USE equ 0D010204h
    OID_802_11_TX_POWER_LEVEL equ 0D010205h
    OID_802_11_RSSI equ 0D010206h
    OID_802_11_RSSI_TRIGGER equ 0D010207h
    OID_802_11_INFRASTRUCTURE_MODE equ 0D010108h
    OID_802_11_FRAGMENTATION_THRESHOLD equ 0D010209h
    OID_802_11_RTS_THRESHOLD equ 0D01020Ah
    OID_802_11_NUMBER_OF_ANTENNAS equ 0D01020Bh
    OID_802_11_RX_ANTENNA_SELECTED equ 0D01020Ch
    OID_802_11_TX_ANTENNA_SELECTED equ 0D01020Dh
    OID_802_11_SUPPORTED_RATES equ 0D01020Eh
    OID_802_11_DESIRED_RATES equ 0D010210h
    OID_802_11_CONFIGURATION equ 0D010211h
    OID_802_11_STATISTICS equ 0D020212h
    OID_802_11_ADD_WEP equ 0D010113h
    OID_802_11_REMOVE_WEP equ 0D010114h
    OID_802_11_DISASSOCIATE equ 0D010115h
    OID_802_11_POWER_MODE equ 0D010216h
    OID_802_11_BSSID_LIST equ 0D010217h
    OID_802_11_AUTHENTICATION_MODE equ 0D010118h
    OID_802_11_PRIVACY_FILTER equ 0D010119h
    OID_802_11_BSSID_LIST_SCAN equ 0D01011Ah
    OID_802_11_WEP_STATUS equ 0D01011Bh
    OID_802_11_ENCRYPTION_STATUS equ <OID_802_11_WEP_STATUS>
    OID_802_11_RELOAD_DEFAULTS equ 0D01011Ch
    OID_802_11_ADD_KEY equ 0D01011Dh
    OID_802_11_REMOVE_KEY equ 0D01011Eh
    OID_802_11_ASSOCIATION_INFORMATION equ 0D01011Fh
    OID_802_11_TEST equ 0D010120h
    OID_802_11_MEDIA_STREAM_MODE equ 0D010121h
    OID_802_11_CAPABILITY equ 0D010122h
    OID_802_11_PMKID equ 0D010123h
    OID_802_11_NON_BCAST_SSID_LIST equ 0D010124h
    OID_802_11_RADIO_STATUS equ 0D010125h
    NDIS_ETH_TYPE_IPV4 equ 0800h
    NDIS_ETH_TYPE_ARP equ 0806h
    NDIS_ETH_TYPE_IPV6 equ 86ddh
    NDIS_ETH_TYPE_802_1X equ 888eh
    NDIS_ETH_TYPE_802_1Q equ 8100h
    NDIS_ETH_TYPE_SLOW_PROTOCOL equ 8809h
    NDIS_802_11_LENGTH_SSID equ 32
    NDIS_802_11_LENGTH_RATES equ 8
    NDIS_802_11_LENGTH_RATES_EX equ 16
    NDIS_802_11_STATUS_TYPE typedef SDWORD
    Ndis802_11StatusType_Authentication equ 0
    Ndis802_11StatusType_MediaStreamMode equ 1
    Ndis802_11StatusType_PMKID_CandidateList equ 2
    Ndis802_11StatusTypeMax equ 3
    _NDIS_802_11_STATUS_TYPE typedef NDIS_802_11_STATUS_TYPE
    PNDIS_802_11_STATUS_TYPE typedef ptr NDIS_802_11_STATUS_TYPE
    NDIS_802_11_MAC_ADDRESS struct
      UCHAR 6 dup (?)
    NDIS_802_11_MAC_ADDRESS ends
    NDIS_802_11_STATUS_INDICATION struct
      StatusType NDIS_802_11_STATUS_TYPE ?
    NDIS_802_11_STATUS_INDICATION ends
    _NDIS_802_11_STATUS_INDICATION typedef NDIS_802_11_STATUS_INDICATION
    PNDIS_802_11_STATUS_INDICATION typedef ptr NDIS_802_11_STATUS_INDICATION
    NDIS_802_11_AUTH_REQUEST_AUTH_FIELDS equ 0fh
    NDIS_802_11_AUTH_REQUEST_REAUTH equ 01h
    NDIS_802_11_AUTH_REQUEST_KEYUPDATE equ 02h
    NDIS_802_11_AUTH_REQUEST_PAIRWISE_ERROR equ 06h
    NDIS_802_11_AUTH_REQUEST_GROUP_ERROR equ 0Eh
    NDIS_802_11_AUTHENTICATION_REQUEST struct
      Length_ ULONG ?
      Bssid NDIS_802_11_MAC_ADDRESS ?
      Flags ULONG ?
    NDIS_802_11_AUTHENTICATION_REQUEST ends
    _NDIS_802_11_AUTHENTICATION_REQUEST typedef NDIS_802_11_AUTHENTICATION_REQUEST
    PNDIS_802_11_AUTHENTICATION_REQUEST typedef ptr NDIS_802_11_AUTHENTICATION_REQUEST
    PMKID_CANDIDATE struct
      BSSID NDIS_802_11_MAC_ADDRESS ?
      Flags ULONG ?
    PMKID_CANDIDATE ends
    _PMKID_CANDIDATE typedef PMKID_CANDIDATE
    PPMKID_CANDIDATE typedef ptr PMKID_CANDIDATE
    NDIS_802_11_PMKID_CANDIDATE_LIST struct
      Version ULONG ?
      NumCandidates ULONG ?
      CandidateList PMKID_CANDIDATE 1 dup (<>)
    NDIS_802_11_PMKID_CANDIDATE_LIST ends
    _NDIS_802_11_PMKID_CANDIDATE_LIST typedef NDIS_802_11_PMKID_CANDIDATE_LIST
    PNDIS_802_11_PMKID_CANDIDATE_LIST typedef ptr NDIS_802_11_PMKID_CANDIDATE_LIST
    NDIS_802_11_PMKID_CANDIDATE_PREAUTH_ENABLED equ 01h
    NDIS_802_11_NETWORK_TYPE typedef SDWORD
    Ndis802_11FH equ 0
    Ndis802_11DS equ 1
    Ndis802_11OFDM5 equ 2
    Ndis802_11OFDM24 equ 3
    Ndis802_11Automode equ 4
    Ndis802_11NetworkTypeMax equ 5
    _NDIS_802_11_NETWORK_TYPE typedef NDIS_802_11_NETWORK_TYPE
    PNDIS_802_11_NETWORK_TYPE typedef ptr NDIS_802_11_NETWORK_TYPE
    NDIS_802_11_NETWORK_TYPE_LIST struct
      NumberOfItems ULONG ?
      NetworkType NDIS_802_11_NETWORK_TYPE 1 dup (?)
    NDIS_802_11_NETWORK_TYPE_LIST ends
    _NDIS_802_11_NETWORK_TYPE_LIST typedef NDIS_802_11_NETWORK_TYPE_LIST
    PNDIS_802_11_NETWORK_TYPE_LIST typedef ptr NDIS_802_11_NETWORK_TYPE_LIST
    NDIS_802_11_POWER_MODE typedef SDWORD
    Ndis802_11PowerModeCAM equ 0
    Ndis802_11PowerModeMAX_PSP equ 1
    Ndis802_11PowerModeFast_PSP equ 2
    Ndis802_11PowerModeMax equ 3
    _NDIS_802_11_POWER_MODE typedef NDIS_802_11_POWER_MODE
    PNDIS_802_11_POWER_MODE typedef ptr NDIS_802_11_POWER_MODE
    NDIS_802_11_TX_POWER_LEVEL typedef ULONG
    NDIS_802_11_RSSI typedef LONG
    NDIS_802_11_CONFIGURATION_FH struct
      Length_ ULONG ?
      HopPattern ULONG ?
      HopSet ULONG ?
      DwellTime ULONG ?
    NDIS_802_11_CONFIGURATION_FH ends
    _NDIS_802_11_CONFIGURATION_FH typedef NDIS_802_11_CONFIGURATION_FH
    PNDIS_802_11_CONFIGURATION_FH typedef ptr NDIS_802_11_CONFIGURATION_FH
    NDIS_802_11_CONFIGURATION struct
      Length_ ULONG ?
      BeaconPeriod ULONG ?
      ATIMWindow ULONG ?
      DSConfig ULONG ?
      FHConfig NDIS_802_11_CONFIGURATION_FH <>
    NDIS_802_11_CONFIGURATION ends
    _NDIS_802_11_CONFIGURATION typedef NDIS_802_11_CONFIGURATION
    PNDIS_802_11_CONFIGURATION typedef ptr NDIS_802_11_CONFIGURATION
    NDIS_802_11_STATISTICS struct
      Length_ ULONG ?
      TransmittedFragmentCount LARGE_INTEGER <>
      MulticastTransmittedFrameCount LARGE_INTEGER <>
      FailedCount LARGE_INTEGER <>
      RetryCount LARGE_INTEGER <>
      MultipleRetryCount LARGE_INTEGER <>
      RTSSuccessCount LARGE_INTEGER <>
      RTSFailureCount LARGE_INTEGER <>
      ACKFailureCount LARGE_INTEGER <>
      FrameDuplicateCount LARGE_INTEGER <>
      ReceivedFragmentCount LARGE_INTEGER <>
      MulticastReceivedFrameCount LARGE_INTEGER <>
      FCSErrorCount LARGE_INTEGER <>
      TKIPLocalMICFailures LARGE_INTEGER <>
      TKIPICVErrorCount LARGE_INTEGER <>
      TKIPCounterMeasuresInvoked LARGE_INTEGER <>
      TKIPReplays LARGE_INTEGER <>
      CCMPFormatErrors LARGE_INTEGER <>
      CCMPReplays LARGE_INTEGER <>
      CCMPDecryptErrors LARGE_INTEGER <>
      FourWayHandshakeFailures LARGE_INTEGER <>
      WEPUndecryptableCount LARGE_INTEGER <>
      WEPICVErrorCount LARGE_INTEGER <>
      DecryptSuccessCount LARGE_INTEGER <>
      DecryptFailureCount LARGE_INTEGER <>
    NDIS_802_11_STATISTICS ends
    _NDIS_802_11_STATISTICS typedef NDIS_802_11_STATISTICS
    PNDIS_802_11_STATISTICS typedef ptr NDIS_802_11_STATISTICS
    NDIS_802_11_KEY_INDEX typedef ULONG
    NDIS_802_11_KEY_RSC typedef ULONGLONG
    NDIS_802_11_KEY struct
      Length_ ULONG ?
      KeyIndex ULONG ?
      KeyLength ULONG ?
      BSSID NDIS_802_11_MAC_ADDRESS ?
      KeyRSC NDIS_802_11_KEY_RSC ?
      KeyMaterial UCHAR 1 dup (?)
    NDIS_802_11_KEY ends
    _NDIS_802_11_KEY typedef NDIS_802_11_KEY
    PNDIS_802_11_KEY typedef ptr NDIS_802_11_KEY
    NDIS_802_11_REMOVE_KEY struct
      Length_ ULONG ?
      KeyIndex ULONG ?
      BSSID NDIS_802_11_MAC_ADDRESS ?
    NDIS_802_11_REMOVE_KEY ends
    _NDIS_802_11_REMOVE_KEY typedef NDIS_802_11_REMOVE_KEY
    PNDIS_802_11_REMOVE_KEY typedef ptr NDIS_802_11_REMOVE_KEY
    NDIS_802_11_WEP struct
      Length_ ULONG ?
      KeyIndex ULONG ?
      KeyLength ULONG ?
      KeyMaterial UCHAR 1 dup (?)
    NDIS_802_11_WEP ends
    _NDIS_802_11_WEP typedef NDIS_802_11_WEP
    PNDIS_802_11_WEP typedef ptr NDIS_802_11_WEP
    NDIS_802_11_NETWORK_INFRASTRUCTURE typedef SDWORD
    Ndis802_11IBSS equ 0
    Ndis802_11Infrastructure equ 1
    Ndis802_11AutoUnknown equ 2
    Ndis802_11InfrastructureMax equ 3
    _NDIS_802_11_NETWORK_INFRASTRUCTURE typedef NDIS_802_11_NETWORK_INFRASTRUCTURE
    PNDIS_802_11_NETWORK_INFRASTRUCTURE typedef ptr NDIS_802_11_NETWORK_INFRASTRUCTURE
    NDIS_802_11_AUTHENTICATION_MODE typedef SDWORD
    Ndis802_11AuthModeOpen equ 0
    Ndis802_11AuthModeShared equ 1
    Ndis802_11AuthModeAutoSwitch equ 2
    Ndis802_11AuthModeWPA equ 3
    Ndis802_11AuthModeWPAPSK equ 4
    Ndis802_11AuthModeWPANone equ 5
    Ndis802_11AuthModeWPA2 equ 6
    Ndis802_11AuthModeWPA2PSK equ 7
    Ndis802_11AuthModeWPA3 equ 8
    if (NTDDI_VERSION ge NTDDI_WIN10_FE)
      Ndis802_11AuthModeWPA3Ent192 equ Ndis802_11AuthModeWPA3
    endif
    Ndis802_11AuthModeWPA3SAE equ 1
    if (NDIS_SUPPORT_NDIS684)
      Ndis802_11AuthModeOWE equ 2
    endif
    if (NTDDI_VERSION ge NTDDI_WIN10_FE)
      Ndis802_11AuthModeWPA3Ent equ 3
    endif
    Ndis802_11AuthModeMax equ 4
    _NDIS_802_11_AUTHENTICATION_MODE typedef NDIS_802_11_AUTHENTICATION_MODE
    PNDIS_802_11_AUTHENTICATION_MODE typedef ptr NDIS_802_11_AUTHENTICATION_MODE
    NDIS_802_11_RATES struct
      UCHAR NDIS_802_11_LENGTH_RATES dup (?)
    NDIS_802_11_RATES ends
    NDIS_802_11_RATES_EX struct
      UCHAR NDIS_802_11_LENGTH_RATES_EX dup (?)
    NDIS_802_11_RATES_EX ends
    NDIS_802_11_SSID struct
      SsidLength ULONG ?
      Ssid UCHAR NDIS_802_11_LENGTH_SSID dup (?)
    NDIS_802_11_SSID ends
    _NDIS_802_11_SSID typedef NDIS_802_11_SSID
    PNDIS_802_11_SSID typedef ptr NDIS_802_11_SSID
    NDIS_WLAN_BSSID struct
      Length_ ULONG ?
      MacAddress NDIS_802_11_MAC_ADDRESS ?
      Reserved UCHAR 2 dup (?)
      Ssid NDIS_802_11_SSID <>
      Privacy ULONG ?
      Rssi NDIS_802_11_RSSI ?
      NetworkTypeInUse NDIS_802_11_NETWORK_TYPE ?
      Configuration NDIS_802_11_CONFIGURATION <>
      InfrastructureMode NDIS_802_11_NETWORK_INFRASTRUCTURE ?
      SupportedRates NDIS_802_11_RATES ?
    NDIS_WLAN_BSSID ends
    _NDIS_WLAN_BSSID typedef NDIS_WLAN_BSSID
    PNDIS_WLAN_BSSID typedef ptr NDIS_WLAN_BSSID
    NDIS_802_11_BSSID_LIST struct
      NumberOfItems ULONG ?
      Bssid NDIS_WLAN_BSSID 1 dup (<>)
    NDIS_802_11_BSSID_LIST ends
    _NDIS_802_11_BSSID_LIST typedef NDIS_802_11_BSSID_LIST
    PNDIS_802_11_BSSID_LIST typedef ptr NDIS_802_11_BSSID_LIST
    NDIS_WLAN_BSSID_EX struct
      Length_ ULONG ?
      MacAddress NDIS_802_11_MAC_ADDRESS ?
      Reserved UCHAR 2 dup (?)
      Ssid NDIS_802_11_SSID <>
      Privacy ULONG ?
      Rssi NDIS_802_11_RSSI ?
      NetworkTypeInUse NDIS_802_11_NETWORK_TYPE ?
      Configuration NDIS_802_11_CONFIGURATION <>
      InfrastructureMode NDIS_802_11_NETWORK_INFRASTRUCTURE ?
      SupportedRates NDIS_802_11_RATES_EX ?
      IELength ULONG ?
      IEs UCHAR 1 dup (?)
    NDIS_WLAN_BSSID_EX ends
    _NDIS_WLAN_BSSID_EX typedef NDIS_WLAN_BSSID_EX
    PNDIS_WLAN_BSSID_EX typedef ptr NDIS_WLAN_BSSID_EX
    NDIS_802_11_BSSID_LIST_EX struct
      NumberOfItems ULONG ?
      Bssid NDIS_WLAN_BSSID_EX 1 dup (<>)
    NDIS_802_11_BSSID_LIST_EX ends
    _NDIS_802_11_BSSID_LIST_EX typedef NDIS_802_11_BSSID_LIST_EX
    PNDIS_802_11_BSSID_LIST_EX typedef ptr NDIS_802_11_BSSID_LIST_EX
    NDIS_802_11_FIXED_IEs struct
      Timestamp UCHAR 8 dup (?)
      BeaconInterval USHORT ?
      Capabilities USHORT ?
    NDIS_802_11_FIXED_IEs ends
    _NDIS_802_11_FIXED_IEs typedef NDIS_802_11_FIXED_IEs
    PNDIS_802_11_FIXED_IEs typedef ptr NDIS_802_11_FIXED_IEs
    NDIS_802_11_VARIABLE_IEs struct
      ElementID UCHAR ?
      Length_ UCHAR ?
      data UCHAR 1 dup (?)
    NDIS_802_11_VARIABLE_IEs ends
    _NDIS_802_11_VARIABLE_IEs typedef NDIS_802_11_VARIABLE_IEs
    PNDIS_802_11_VARIABLE_IEs typedef ptr NDIS_802_11_VARIABLE_IEs
    NDIS_802_11_FRAGMENTATION_THRESHOLD typedef ULONG
    NDIS_802_11_RTS_THRESHOLD typedef ULONG
    NDIS_802_11_ANTENNA typedef ULONG
    NDIS_802_11_PRIVACY_FILTER typedef SDWORD
    Ndis802_11PrivFilterAcceptAll equ 0
    Ndis802_11PrivFilter8021xWEP equ 1
    _NDIS_802_11_PRIVACY_FILTER typedef NDIS_802_11_PRIVACY_FILTER
    PNDIS_802_11_PRIVACY_FILTER typedef ptr NDIS_802_11_PRIVACY_FILTER
    NDIS_802_11_WEP_STATUS typedef SDWORD
    Ndis802_11WEPEnabled equ 0
    Ndis802_11Encryption1Enabled equ Ndis802_11WEPEnabled
    Ndis802_11WEPDisabled equ 1
    Ndis802_11EncryptionDisabled equ Ndis802_11WEPDisabled
    Ndis802_11WEPKeyAbsent equ 1
    Ndis802_11Encryption1KeyAbsent equ Ndis802_11WEPKeyAbsent
    Ndis802_11WEPNotSupported equ 1
    Ndis802_11EncryptionNotSupported equ Ndis802_11WEPNotSupported
    Ndis802_11Encryption2Enabled equ 1
    Ndis802_11Encryption2KeyAbsent equ 2
    Ndis802_11Encryption3Enabled equ 3
    Ndis802_11Encryption3KeyAbsent equ 4
    _NDIS_802_11_WEP_STATUS typedef NDIS_802_11_WEP_STATUS
    PNDIS_802_11_WEP_STATUS typedef ptr NDIS_802_11_WEP_STATUS
    NDIS_802_11_ENCRYPTION_STATUS typedef NDIS_802_11_WEP_STATUS
    PNDIS_802_11_ENCRYPTION_STATUS typedef ptr NDIS_802_11_WEP_STATUS
    NDIS_802_11_RELOAD_DEFAULTS typedef SDWORD
    Ndis802_11ReloadWEPKeys equ 0
    _NDIS_802_11_RELOAD_DEFAULTS typedef NDIS_802_11_RELOAD_DEFAULTS
    PNDIS_802_11_RELOAD_DEFAULTS typedef ptr NDIS_802_11_RELOAD_DEFAULTS
    NDIS_802_11_AI_REQFI_CAPABILITIES equ 1
    NDIS_802_11_AI_REQFI_LISTENINTERVAL equ 2
    NDIS_802_11_AI_REQFI_CURRENTAPADDRESS equ 4
    NDIS_802_11_AI_RESFI_CAPABILITIES equ 1
    NDIS_802_11_AI_RESFI_STATUSCODE equ 2
    NDIS_802_11_AI_RESFI_ASSOCIATIONID equ 4
    NDIS_802_11_AI_REQFI struct
      Capabilities USHORT ?
      ListenInterval USHORT ?
      CurrentAPAddress NDIS_802_11_MAC_ADDRESS ?
    NDIS_802_11_AI_REQFI ends
    _NDIS_802_11_AI_REQFI typedef NDIS_802_11_AI_REQFI
    PNDIS_802_11_AI_REQFI typedef ptr NDIS_802_11_AI_REQFI
    NDIS_802_11_AI_RESFI struct
      Capabilities USHORT ?
      StatusCode USHORT ?
      AssociationId USHORT ?
    NDIS_802_11_AI_RESFI ends
    _NDIS_802_11_AI_RESFI typedef NDIS_802_11_AI_RESFI
    PNDIS_802_11_AI_RESFI typedef ptr NDIS_802_11_AI_RESFI
    NDIS_802_11_ASSOCIATION_INFORMATION struct
      Length_ ULONG ?
      AvailableRequestFixedIEs USHORT ?
      RequestFixedIEs NDIS_802_11_AI_REQFI <>
      RequestIELength ULONG ?
      OffsetRequestIEs ULONG ?
      AvailableResponseFixedIEs USHORT ?
      ResponseFixedIEs NDIS_802_11_AI_RESFI <>
      ResponseIELength ULONG ?
      OffsetResponseIEs ULONG ?
    NDIS_802_11_ASSOCIATION_INFORMATION ends
    _NDIS_802_11_ASSOCIATION_INFORMATION typedef NDIS_802_11_ASSOCIATION_INFORMATION
    PNDIS_802_11_ASSOCIATION_INFORMATION typedef ptr NDIS_802_11_ASSOCIATION_INFORMATION
    NDIS_802_11_AUTHENTICATION_EVENT struct
      Status NDIS_802_11_STATUS_INDICATION <>
      Request NDIS_802_11_AUTHENTICATION_REQUEST 1 dup (<>)
    NDIS_802_11_AUTHENTICATION_EVENT ends
    _NDIS_802_11_AUTHENTICATION_EVENT typedef NDIS_802_11_AUTHENTICATION_EVENT
    PNDIS_802_11_AUTHENTICATION_EVENT typedef ptr NDIS_802_11_AUTHENTICATION_EVENT
    NDIS_802_11_TEST struct
      Length_ ULONG ?
      Type_ ULONG ?
      union
        AuthenticationEvent NDIS_802_11_AUTHENTICATION_EVENT <>
        RssiTrigger NDIS_802_11_RSSI ?
      ends
    NDIS_802_11_TEST ends
    _NDIS_802_11_TEST typedef NDIS_802_11_TEST
    PNDIS_802_11_TEST typedef ptr NDIS_802_11_TEST
    NDIS_802_11_MEDIA_STREAM_MODE typedef SDWORD
    Ndis802_11MediaStreamOff equ 0
    Ndis802_11MediaStreamOn equ 1
    _NDIS_802_11_MEDIA_STREAM_MODE typedef NDIS_802_11_MEDIA_STREAM_MODE
    PNDIS_802_11_MEDIA_STREAM_MODE typedef ptr NDIS_802_11_MEDIA_STREAM_MODE
    NDIS_802_11_PMKID_VALUE struct
      UCHAR 16 dup (?)
    NDIS_802_11_PMKID_VALUE ends
    BSSID_INFO struct
      BSSID NDIS_802_11_MAC_ADDRESS ?
      PMKID NDIS_802_11_PMKID_VALUE ?
    BSSID_INFO ends
    _BSSID_INFO typedef BSSID_INFO
    PBSSID_INFO typedef ptr BSSID_INFO
    NDIS_802_11_PMKID struct
      Length_ ULONG ?
      BSSIDInfoCount ULONG ?
      BSSIDInfo BSSID_INFO 1 dup (<>)
    NDIS_802_11_PMKID ends
    _NDIS_802_11_PMKID typedef NDIS_802_11_PMKID
    PNDIS_802_11_PMKID typedef ptr NDIS_802_11_PMKID
    NDIS_802_11_AUTHENTICATION_ENCRYPTION struct
      AuthModeSupported NDIS_802_11_AUTHENTICATION_MODE ?
      EncryptStatusSupported NDIS_802_11_ENCRYPTION_STATUS ?
    NDIS_802_11_AUTHENTICATION_ENCRYPTION ends
    _NDIS_802_11_AUTHENTICATION_ENCRYPTION typedef NDIS_802_11_AUTHENTICATION_ENCRYPTION
    PNDIS_802_11_AUTHENTICATION_ENCRYPTION typedef ptr NDIS_802_11_AUTHENTICATION_ENCRYPTION
    NDIS_802_11_CAPABILITY struct
      Length_ ULONG ?
      Version ULONG ?
      NoOfPMKIDs ULONG ?
      NoOfAuthEncryptPairsSupported ULONG ?
      AuthenticationEncryptionSupported NDIS_802_11_AUTHENTICATION_ENCRYPTION 1 dup (<>)
    NDIS_802_11_CAPABILITY ends
    _NDIS_802_11_CAPABILITY typedef NDIS_802_11_CAPABILITY
    PNDIS_802_11_CAPABILITY typedef ptr NDIS_802_11_CAPABILITY
    NDIS_802_11_NON_BCAST_SSID_LIST struct
      NumberOfItems ULONG ?
      Non_Bcast_Ssid NDIS_802_11_SSID 1 dup (<>)
    NDIS_802_11_NON_BCAST_SSID_LIST ends
    _NDIS_802_11_NON_BCAST_SSID_LIST typedef NDIS_802_11_NON_BCAST_SSID_LIST
    PNDIS_802_11_NON_BCAST_SSID_LIST typedef ptr NDIS_802_11_NON_BCAST_SSID_LIST
    NDIS_802_11_RADIO_STATUS typedef SDWORD
    Ndis802_11RadioStatusOn equ 0
    Ndis802_11RadioStatusHardwareOff equ 1
    Ndis802_11RadioStatusSoftwareOff equ 2
    Ndis802_11RadioStatusHardwareSoftwareOff equ 3
    Ndis802_11RadioStatusMax equ 4
    _NDIS_802_11_RADIO_STATUS typedef NDIS_802_11_RADIO_STATUS
    PNDIS_802_11_RADIO_STATUS typedef ptr NDIS_802_11_RADIO_STATUS
    OID_IRDA_RECEIVING equ 0A010100h
    OID_IRDA_TURNAROUND_TIME equ 0A010101h
    OID_IRDA_SUPPORTED_SPEEDS equ 0A010102h
    OID_IRDA_LINK_SPEED equ 0A010103h
    OID_IRDA_MEDIA_BUSY equ 0A010104h
    OID_IRDA_EXTRA_RCV_BOFS equ 0A010200h
    OID_IRDA_RATE_SNIFF equ 0A010201h
    OID_IRDA_UNICAST_LIST equ 0A010202h
    OID_IRDA_MAX_UNICAST_LIST_SIZE equ 0A010203h
    OID_IRDA_MAX_RECEIVE_WINDOW_SIZE equ 0A010204h
    OID_IRDA_MAX_SEND_WINDOW_SIZE equ 0A010205h
    OID_IRDA_RESERVED1 equ 0A01020Ah
    OID_IRDA_RESERVED2 equ 0A01020Fh
    OID_1394_LOCAL_NODE_INFO equ 0C010101h
    OID_1394_VC_INFO equ 0C010102h
    OID_CO_ADD_PVC equ 0FE000001h
    OID_CO_DELETE_PVC equ 0FE000002h
    OID_CO_GET_CALL_INFORMATION equ 0FE000003h
    OID_CO_ADD_ADDRESS equ 0FE000004h
    OID_CO_DELETE_ADDRESS equ 0FE000005h
    OID_CO_GET_ADDRESSES equ 0FE000006h
    OID_CO_ADDRESS_CHANGE equ 0FE000007h
    OID_CO_SIGNALING_ENABLED equ 0FE000008h
    OID_CO_SIGNALING_DISABLED equ 0FE000009h
    OID_CO_AF_CLOSE equ 0FE00000Ah
    OID_CO_TAPI_CM_CAPS equ 0FE001001h
    OID_CO_TAPI_LINE_CAPS equ 0FE001002h
    OID_CO_TAPI_ADDRESS_CAPS equ 0FE001003h
    OID_CO_TAPI_TRANSLATE_TAPI_CALLPARAMS equ 0FE001004h
    OID_CO_TAPI_TRANSLATE_NDIS_CALLPARAMS equ 0FE001005h
    OID_CO_TAPI_TRANSLATE_TAPI_SAP equ 0FE001006h
    OID_CO_TAPI_GET_CALL_DIAGNOSTICS equ 0FE001007h
    OID_CO_TAPI_REPORT_DIGITS equ 0FE001008h
    OID_CO_TAPI_DONT_REPORT_DIGITS equ 0FE001009h
    OID_PNP_CAPABILITIES equ 0FD010100h
    OID_PNP_SET_POWER equ 0FD010101h
    OID_PNP_QUERY_POWER equ 0FD010102h
    OID_PNP_ADD_WAKE_UP_PATTERN equ 0FD010103h
    OID_PNP_REMOVE_WAKE_UP_PATTERN equ 0FD010104h
    OID_PNP_WAKE_UP_PATTERN_LIST equ 0FD010105h
    OID_PNP_ENABLE_WAKE_UP equ 0FD010106h
    OID_PNP_WAKE_UP_OK equ 0FD020200h
    OID_PNP_WAKE_UP_ERROR equ 0FD020201h
    if ((NTDDI_VERSION ge NTDDI_WIN7) or NDIS_SUPPORT_NDIS620)
      OID_PM_CURRENT_CAPABILITIES equ 0FD010107h
      OID_PM_HARDWARE_CAPABILITIES equ 0FD010108h
      OID_PM_PARAMETERS equ 0FD010109h
      OID_PM_ADD_WOL_PATTERN equ 0FD01010Ah
      OID_PM_REMOVE_WOL_PATTERN equ 0FD01010Bh
      OID_PM_WOL_PATTERN_LIST equ 0FD01010Ch
      OID_PM_ADD_PROTOCOL_OFFLOAD equ 0FD01010Dh
      OID_PM_GET_PROTOCOL_OFFLOAD equ 0FD01010Eh
      OID_PM_REMOVE_PROTOCOL_OFFLOAD equ 0FD01010Fh
      OID_PM_PROTOCOL_OFFLOAD_LIST equ 0FD010110h
      OID_PM_RESERVED_1 equ 0FD010111h
      OID_RECEIVE_FILTER_HARDWARE_CAPABILITIES equ 00010221h
      OID_RECEIVE_FILTER_GLOBAL_PARAMETERS equ 00010222h
      OID_RECEIVE_FILTER_ALLOCATE_QUEUE equ 00010223h
      OID_RECEIVE_FILTER_FREE_QUEUE equ 00010224h
      OID_RECEIVE_FILTER_ENUM_QUEUES equ 00010225h
      OID_RECEIVE_FILTER_QUEUE_PARAMETERS equ 00010226h
      OID_RECEIVE_FILTER_SET_FILTER equ 00010227h
      OID_RECEIVE_FILTER_CLEAR_FILTER equ 00010228h
      OID_RECEIVE_FILTER_ENUM_FILTERS equ 00010229h
      OID_RECEIVE_FILTER_PARAMETERS equ 0001022Ah
      OID_RECEIVE_FILTER_QUEUE_ALLOCATION_COMPLETE equ 0001022Bh
      OID_RECEIVE_FILTER_CURRENT_CAPABILITIES equ 0001022Dh
      OID_NIC_SWITCH_HARDWARE_CAPABILITIES equ 0001022Eh
      OID_NIC_SWITCH_CURRENT_CAPABILITIES equ 0001022Fh
      if (NDIS_SUPPORT_NDIS630)
        OID_RECEIVE_FILTER_MOVE_FILTER equ 00010230h
      endif
      OID_VLAN_RESERVED1 equ 00010231h
      OID_VLAN_RESERVED2 equ 00010232h
      OID_VLAN_RESERVED3 equ 00010233h
      OID_VLAN_RESERVED4 equ 00010234h
      if (NDIS_SUPPORT_NDIS630)
        OID_PACKET_COALESCING_FILTER_MATCH_COUNT equ 00010235h
      endif
    endif
    if ((NTDDI_VERSION ge NTDDI_WIN8) or NDIS_SUPPORT_NDIS630)
      OID_NIC_SWITCH_CREATE_SWITCH equ 00010237h
      OID_NIC_SWITCH_PARAMETERS equ 00010238h
      OID_NIC_SWITCH_DELETE_SWITCH equ 00010239h
      OID_NIC_SWITCH_ENUM_SWITCHES equ 00010240h
      OID_NIC_SWITCH_CREATE_VPORT equ 00010241h
      OID_NIC_SWITCH_VPORT_PARAMETERS equ 00010242h
      OID_NIC_SWITCH_ENUM_VPORTS equ 00010243h
      OID_NIC_SWITCH_DELETE_VPORT equ 00010244h
      OID_NIC_SWITCH_ALLOCATE_VF equ 00010245h
      OID_NIC_SWITCH_FREE_VF equ 00010246h
      OID_NIC_SWITCH_VF_PARAMETERS equ 00010247h
      OID_NIC_SWITCH_ENUM_VFS equ 00010248h
      OID_SRIOV_HARDWARE_CAPABILITIES equ 00010249h
      OID_SRIOV_CURRENT_CAPABILITIES equ 00010250h
      OID_SRIOV_READ_VF_CONFIG_SPACE equ 00010251h
      OID_SRIOV_WRITE_VF_CONFIG_SPACE equ 00010252h
      OID_SRIOV_READ_VF_CONFIG_BLOCK equ 00010253h
      OID_SRIOV_WRITE_VF_CONFIG_BLOCK equ 00010254h
      OID_SRIOV_RESET_VF equ 00010255h
      OID_SRIOV_SET_VF_POWER_STATE equ 00010256h
      OID_SRIOV_VF_VENDOR_DEVICE_ID equ 00010257h
      OID_SRIOV_PROBED_BARS equ 00010258h
      OID_SRIOV_BAR_RESOURCES equ 00010259h
      OID_SRIOV_PF_LUID equ 00010260h
      OID_SRIOV_CONFIG_STATE equ 00010261h
      OID_SRIOV_VF_SERIAL_NUMBER equ 00010262h
      if (NDIS_SUPPORT_NDIS670)
        OID_SRIOV_OVERLYING_ADAPTER_INFO equ 00010268h
      endif
      OID_SRIOV_VF_INVALIDATE_CONFIG_BLOCK equ 00010269h
      OID_SWITCH_PROPERTY_ADD equ 00010263h
      OID_SWITCH_PROPERTY_UPDATE equ 00010264h
      OID_SWITCH_PROPERTY_DELETE equ 00010265h
      OID_SWITCH_PROPERTY_ENUM equ 00010266h
      OID_SWITCH_FEATURE_STATUS_QUERY equ 00010267h
      OID_SWITCH_NIC_REQUEST equ 00010270h
      OID_SWITCH_PORT_PROPERTY_ADD equ 00010271h
      OID_SWITCH_PORT_PROPERTY_UPDATE equ 00010272h
      OID_SWITCH_PORT_PROPERTY_DELETE equ 00010273h
      OID_SWITCH_PORT_PROPERTY_ENUM equ 00010274h
      OID_SWITCH_PARAMETERS equ 00010275h
      OID_SWITCH_PORT_ARRAY equ 00010276h
      OID_SWITCH_NIC_ARRAY equ 00010277h
      OID_SWITCH_PORT_CREATE equ 00010278h
      OID_SWITCH_PORT_DELETE equ 00010279h
      OID_SWITCH_NIC_CREATE equ 0001027Ah
      OID_SWITCH_NIC_CONNECT equ 0001027Bh
      OID_SWITCH_NIC_DISCONNECT equ 0001027Ch
      OID_SWITCH_NIC_DELETE equ 0001027Dh
      OID_SWITCH_PORT_FEATURE_STATUS_QUERY equ 0001027Eh
      OID_SWITCH_PORT_TEARDOWN equ 0001027Fh
      OID_SWITCH_NIC_SAVE equ 00010290h
      OID_SWITCH_NIC_SAVE_COMPLETE equ 00010291h
      OID_SWITCH_NIC_RESTORE equ 00010292h
      OID_SWITCH_NIC_RESTORE_COMPLETE equ 00010293h
      OID_SWITCH_NIC_UPDATED equ 00010294h
      OID_SWITCH_PORT_UPDATED equ 00010295h
    endif
    if (NDIS_SUPPORT_NDIS650)
      OID_SWITCH_NIC_DIRECT_REQUEST equ 00010296h
      OID_SWITCH_NIC_SUSPEND equ 00010297h
      OID_SWITCH_NIC_RESUME equ 00010298h
    endif
    if (NTDDI_VERSION ge NTDDI_WIN10_RS3) or (NDIS_SUPPORT_NDIS680)
      OID_SWITCH_NIC_SUSPENDED_LM_SOURCE_STARTED equ 00010299h
      OID_SWITCH_NIC_SUSPENDED_LM_SOURCE_FINISHED equ 0001029Ah
      OID_GEN_RSS_SET_INDIRECTION_TABLE_ENTRIES equ 000102C0h
    endif
    if (NTDDI_VERSION ge NTDDI_WINBLUE) or (NDIS_SUPPORT_NDIS640)
      OID_GEN_ISOLATION_PARAMETERS equ 00010300h
    endif
    if (NDIS_SUPPORT_NDIS650)
      OID_GFT_HARDWARE_CAPABILITIES equ 00010401h
      OID_GFT_CURRENT_CAPABILITIES equ 00010402h
      OID_GFT_GLOBAL_PARAMETERS equ 00010403h
      OID_GFT_CREATE_TABLE equ 00010404h
      OID_GFT_DELETE_TABLE equ 00010405h
      OID_GFT_ENUM_TABLES equ 00010406h
      OID_GFT_ALLOCATE_COUNTERS equ 00010407h
      OID_GFT_FREE_COUNTERS equ 00010408h
      OID_GFT_ENUM_COUNTERS equ 00010409h
      OID_GFT_COUNTER_VALUES equ 0001040Ah
      OID_GFT_STATISTICS equ 0001040Bh
      OID_GFT_ADD_FLOW_ENTRIES equ 0001040Ch
      OID_GFT_DELETE_FLOW_ENTRIES equ 0001040Dh
      OID_GFT_ENUM_FLOW_ENTRIES equ 0001040Eh
      OID_GFT_ACTIVATE_FLOW_ENTRIES equ 0001040Fh
      OID_GFT_DEACTIVATE_FLOW_ENTRIES equ 00010410h
      OID_GFT_FLOW_ENTRY_PARAMETERS equ 00010411h
      OID_GFT_EXACT_MATCH_PROFILE equ 00010412h
      OID_GFT_HEADER_TRANSPOSITION_PROFILE equ 00010413h
      OID_GFT_WILDCARD_MATCH_PROFILE equ 00010414h
      OID_GFT_ENUM_PROFILES equ 00010415h
      OID_GFT_DELETE_PROFILE equ 00010416h
      OID_GFT_VPORT_PARAMETERS equ 00010417h
      OID_GFT_CREATE_LOGICAL_VPORT equ 00010418h
      OID_GFT_DELETE_LOGICAL_VPORT equ 00010419h
      OID_GFT_ENUM_LOGICAL_VPORTS equ 0001041Ah
      OID_QOS_OFFLOAD_HARDWARE_CAPABILITIES equ 00010601h
      OID_QOS_OFFLOAD_CURRENT_CAPABILITIES equ 00010602h
      OID_QOS_OFFLOAD_CREATE_SQ equ 00010603h
      OID_QOS_OFFLOAD_DELETE_SQ equ 00010604h
      OID_QOS_OFFLOAD_UPDATE_SQ equ 00010605h
      OID_QOS_OFFLOAD_ENUM_SQS equ 00010606h
      if (NDIS_SUPPORT_NDIS684)
        OID_QOS_OFFLOAD_SQ_STATS equ 00010607h
      endif
      OID_PD_OPEN_PROVIDER equ 00010501h
      OID_PD_CLOSE_PROVIDER equ 00010502h
      OID_PD_QUERY_CURRENT_CONFIG equ 00010503h
    endif
    NDIS_PNP_WAKE_UP_MAGIC_PACKET equ 00000001h
    NDIS_PNP_WAKE_UP_PATTERN_MATCH equ 00000002h
    NDIS_PNP_WAKE_UP_LINK_CHANGE equ 00000004h
    OID_TCP_TASK_OFFLOAD equ 0FC010201h
    OID_TCP_TASK_IPSEC_ADD_SA equ 0FC010202h
    OID_TCP_TASK_IPSEC_DELETE_SA equ 0FC010203h
    OID_TCP_SAN_SUPPORT equ 0FC010204h
    OID_TCP_TASK_IPSEC_ADD_UDPESP_SA equ 0FC010205h
    OID_TCP_TASK_IPSEC_DELETE_UDPESP_SA equ 0FC010206h
    OID_TCP4_OFFLOAD_STATS equ 0FC010207h
    OID_TCP6_OFFLOAD_STATS equ 0FC010208h
    OID_IP4_OFFLOAD_STATS equ 0FC010209h
    OID_IP6_OFFLOAD_STATS equ 0FC01020Ah
    OID_TCP_OFFLOAD_CURRENT_CONFIG equ 0FC01020Bh
    OID_TCP_OFFLOAD_PARAMETERS equ 0FC01020Ch
    OID_TCP_OFFLOAD_HARDWARE_CAPABILITIES equ 0FC01020Dh
    OID_TCP_CONNECTION_OFFLOAD_CURRENT_CONFIG equ 0FC01020Eh
    OID_TCP_CONNECTION_OFFLOAD_HARDWARE_CAPABILITIES equ 0FC01020Fh
    OID_OFFLOAD_ENCAPSULATION equ 0101010Ah
    if (NDIS_SUPPORT_NDIS61)
      OID_TCP_TASK_IPSEC_OFFLOAD_V2_ADD_SA equ 0FC030202h
      OID_TCP_TASK_IPSEC_OFFLOAD_V2_DELETE_SA equ 0FC030203h
      OID_TCP_TASK_IPSEC_OFFLOAD_V2_UPDATE_SA equ 0FC030204h
    endif
    if (NDIS_SUPPORT_NDIS630)
      OID_TCP_TASK_IPSEC_OFFLOAD_V2_ADD_SA_EX equ 0FC030205h
    endif
    OID_FFP_SUPPORT equ 0FC010210h
    OID_FFP_FLUSH equ 0FC010211h
    OID_FFP_CONTROL equ 0FC010212h
    OID_FFP_PARAMS equ 0FC010213h
    OID_FFP_DATA equ 0FC010214h
    OID_FFP_DRIVER_STATS equ 0FC020210h
    OID_FFP_ADAPTER_STATS equ 0FC020211h
    OID_TCP_CONNECTION_OFFLOAD_PARAMETERS equ 0FC030201h
    if ((NTDDI_VERSION ge NTDDI_WIN7) or NDIS_SUPPORT_NDIS620)
      OID_TUNNEL_INTERFACE_SET_OID equ 0f010106h
      OID_TUNNEL_INTERFACE_RELEASE_OID equ 0f010107h
    endif
    OID_QOS_RESERVED1 equ 0FB010100h
    OID_QOS_RESERVED2 equ 0FB010101h
    OID_QOS_RESERVED3 equ 0FB010102h
    OID_QOS_RESERVED4 equ 0FB010103h
    OID_QOS_RESERVED5 equ 0FB010104h
    OID_QOS_RESERVED6 equ 0FB010105h
    OID_QOS_RESERVED7 equ 0FB010106h
    OID_QOS_RESERVED8 equ 0FB010107h
    OID_QOS_RESERVED9 equ 0FB010108h
    OID_QOS_RESERVED10 equ 0FB010109h
    OID_QOS_RESERVED11 equ 0FB01010Ah
    OID_QOS_RESERVED12 equ 0FB01010Bh
    OID_QOS_RESERVED13 equ 0FB01010Ch
    OID_QOS_RESERVED14 equ 0FB01010Dh
    OID_QOS_RESERVED15 equ 0FB01010Eh
    OID_QOS_RESERVED16 equ 0FB01010Fh
    OID_QOS_RESERVED17 equ 0FB010110h
    OID_QOS_RESERVED18 equ 0FB010111h
    OID_QOS_RESERVED19 equ 0FB010112h
    OID_QOS_RESERVED20 equ 0FB010113h
    if ((NTDDI_VERSION ge NTDDI_WINTHRESHOLD) or NDIS_SUPPORT_NDIS650)
      OID_XBOX_ACC_RESERVED0 equ 0FA000000h
    endif
    NDIS_CO_DEVICE_PROFILE struct
      DeviceDescription NDIS_VAR_DATA_DESC <>
      DevSpecificInfo NDIS_VAR_DATA_DESC <>
      ulTAPISupplementaryPassThru ULONG ?
      ulAddressModes ULONG ?
      ulNumAddresses ULONG ?
      ulBearerModes ULONG ?
      ulMaxTxRate ULONG ?
      ulMinTxRate ULONG ?
      ulMaxRxRate ULONG ?
      ulMinRxRate ULONG ?
      ulMediaModes ULONG ?
      ulGenerateToneModes ULONG ?
      ulGenerateToneMaxNumFreq ULONG ?
      ulGenerateDigitModes ULONG ?
      ulMonitorToneMaxNumFreq ULONG ?
      ulMonitorToneMaxNumEntries ULONG ?
      ulMonitorDigitModes ULONG ?
      ulGatherDigitsMinTimeout ULONG ?
      ulGatherDigitsMaxTimeout ULONG ?
      ulDevCapFlags ULONG ?
      ulMaxNumActiveCalls ULONG ?
      ulAnswerMode ULONG ?
      ulUUIAcceptSize ULONG ?
      ulUUIAnswerSize ULONG ?
      ulUUIMakeCallSize ULONG ?
      ulUUIDropSize ULONG ?
      ulUUISendUserUserInfoSize ULONG ?
      ulUUICallInfoSize ULONG ?
    NDIS_CO_DEVICE_PROFILE ends
    PNDIS_CO_DEVICE_PROFILE typedef ptr NDIS_CO_DEVICE_PROFILE
    ifndef IP_EXPORT_INCLUDED
      IPAddr typedef ULONG
      IPMask typedef ULONG
    endif
    SPI_TYPE typedef ULONG
    OFFLOAD_OPERATION_E typedef SDWORD
    AUTHENTICATE equ 1
    ENCRYPT equ 2
    _OFFLOAD_OPERATION_E typedef OFFLOAD_OPERATION_E

    OFFLOAD_ALGO_INFO struct
      algoIdentifier ULONG ?
      algoKeylen ULONG ?
      algoRounds ULONG ?
    OFFLOAD_ALGO_INFO ends
    _OFFLOAD_ALGO_INFO typedef OFFLOAD_ALGO_INFO
    POFFLOAD_ALGO_INFO typedef ptr OFFLOAD_ALGO_INFO
    OFFLOAD_CONF_ALGO typedef SDWORD
    OFFLOAD_IPSEC_CONF_NONE equ 0
    OFFLOAD_IPSEC_CONF_DES equ 1
    OFFLOAD_IPSEC_CONF_RESERVED equ 2
    OFFLOAD_IPSEC_CONF_3_DES equ 3
    OFFLOAD_IPSEC_CONF_MAX equ 4
    _OFFLOAD_CONF_ALGO typedef OFFLOAD_CONF_ALGO

    OFFLOAD_INTEGRITY_ALGO typedef SDWORD
    OFFLOAD_IPSEC_INTEGRITY_NONE equ 0
    OFFLOAD_IPSEC_INTEGRITY_MD5 equ 1
    OFFLOAD_IPSEC_INTEGRITY_SHA equ 2
    OFFLOAD_IPSEC_INTEGRITY_MAX equ 3
    _OFFLOAD_INTEGRITY_ALGO typedef OFFLOAD_INTEGRITY_ALGO

    OFFLOAD_SECURITY_ASSOCIATION struct
      Operation OFFLOAD_OPERATION_E ?
      SPI SPI_TYPE ?
      IntegrityAlgo OFFLOAD_ALGO_INFO <>
      ConfAlgo OFFLOAD_ALGO_INFO <>
      Reserved OFFLOAD_ALGO_INFO <>
    OFFLOAD_SECURITY_ASSOCIATION ends
    _OFFLOAD_SECURITY_ASSOCIATION typedef OFFLOAD_SECURITY_ASSOCIATION
    POFFLOAD_SECURITY_ASSOCIATION typedef ptr OFFLOAD_SECURITY_ASSOCIATION
    OFFLOAD_MAX_SAS equ 3
    OFFLOAD_INBOUND_SA equ 0001h
    OFFLOAD_OUTBOUND_SA equ 0002h
    OFFLOAD_IPSEC_ADD_SA struct
      SrcAddr IPAddr ?
      SrcMask IPMask ?
      DestAddr IPAddr ?
      DestMask IPMask ?
      Protocol ULONG ?
      SrcPort USHORT ?
      DestPort USHORT ?
      SrcTunnelAddr IPAddr ?
      DestTunnelAddr IPAddr ?
      Flags USHORT ?
      NumSAs SHORT_ ?
      SecAssoc OFFLOAD_SECURITY_ASSOCIATION OFFLOAD_MAX_SAS dup (<>)
      OffloadHandle HANDLE ?
      KeyLen ULONG ?
      KeyMat UCHAR 1 dup (?)
    OFFLOAD_IPSEC_ADD_SA ends
    _OFFLOAD_IPSEC_ADD_SA typedef OFFLOAD_IPSEC_ADD_SA
    POFFLOAD_IPSEC_ADD_SA typedef ptr OFFLOAD_IPSEC_ADD_SA
    OFFLOAD_IPSEC_DELETE_SA struct
      OffloadHandle HANDLE ?
    OFFLOAD_IPSEC_DELETE_SA ends
    _OFFLOAD_IPSEC_DELETE_SA typedef OFFLOAD_IPSEC_DELETE_SA
    POFFLOAD_IPSEC_DELETE_SA typedef ptr OFFLOAD_IPSEC_DELETE_SA
    UDP_ENCAP_TYPE typedef SDWORD
    OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_IKE equ 0
    OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_OTHER equ 1
    _UDP_ENCAP_TYPE typedef UDP_ENCAP_TYPE
    PUDP_ENCAP_TYPE typedef ptr UDP_ENCAP_TYPE
    OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY struct
      UdpEncapType UDP_ENCAP_TYPE ?
      DstEncapPort USHORT ?
    OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY ends
    _OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY typedef OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY
    POFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY typedef ptr OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY
    OFFLOAD_IPSEC_ADD_UDPESP_SA struct
      SrcAddr IPAddr ?
      SrcMask IPMask ?
      DstAddr IPAddr ?
      DstMask IPMask ?
      Protocol ULONG ?
      SrcPort USHORT ?
      DstPort USHORT ?
      SrcTunnelAddr IPAddr ?
      DstTunnelAddr IPAddr ?
      Flags USHORT ?
      NumSAs SHORT_ ?
      SecAssoc OFFLOAD_SECURITY_ASSOCIATION OFFLOAD_MAX_SAS dup (<>)
      OffloadHandle HANDLE ?
      EncapTypeEntry OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY <>
      EncapTypeEntryOffldHandle HANDLE ?
      KeyLen ULONG ?
      KeyMat UCHAR 1 dup (?)
    OFFLOAD_IPSEC_ADD_UDPESP_SA ends
    _OFFLOAD_IPSEC_ADD_UDPESP_SA typedef OFFLOAD_IPSEC_ADD_UDPESP_SA
    POFFLOAD_IPSEC_ADD_UDPESP_SA typedef ptr OFFLOAD_IPSEC_ADD_UDPESP_SA
    OFFLOAD_IPSEC_DELETE_UDPESP_SA struct
      OffloadHandle HANDLE ?
      EncapTypeEntryOffldHandle HANDLE ?
    OFFLOAD_IPSEC_DELETE_UDPESP_SA ends
    _OFFLOAD_IPSEC_DELETE_UDPESP_SA typedef OFFLOAD_IPSEC_DELETE_UDPESP_SA
    POFFLOAD_IPSEC_DELETE_UDPESP_SA typedef ptr OFFLOAD_IPSEC_DELETE_UDPESP_SA
    NDIS_VLAN_ID typedef ULONG
    NDIS_MEDIUM typedef SDWORD
    NdisMedium802_3 equ 0
    NdisMedium802_5 equ 1
    NdisMediumFddi equ 2
    NdisMediumWan equ 3
    NdisMediumLocalTalk equ 4
    NdisMediumDix equ 5
    NdisMediumArcnetRaw equ 6
    NdisMediumArcnet878_2 equ 7
    NdisMediumAtm equ 8
    NdisMediumWirelessWan equ 9
    NdisMediumIrda equ 10
    NdisMediumBpc equ 11
    NdisMediumCoWan equ 12
    NdisMedium1394 equ 13
    NdisMediumInfiniBand equ 14
    if ((NTDDI_VERSION ge NTDDI_VISTA) or NDIS_SUPPORT_NDIS6)
      NdisMediumTunnel equ 15
      NdisMediumNative802_11 equ 16
      NdisMediumLoopback equ 17
    endif
    if (NTDDI_VERSION ge NTDDI_WIN7)
      NdisMediumWiMAX equ 18
      NdisMediumIP equ 19
    endif
    NdisMediumMax equ 20
    _NDIS_MEDIUM typedef NDIS_MEDIUM
    PNDIS_MEDIUM typedef ptr NDIS_MEDIUM
    NDIS_PHYSICAL_MEDIUM typedef SDWORD
    NdisPhysicalMediumUnspecified equ 0
    NdisPhysicalMediumWirelessLan equ 1
    NdisPhysicalMediumCableModem equ 2
    NdisPhysicalMediumPhoneLine equ 3
    NdisPhysicalMediumPowerLine equ 4
    NdisPhysicalMediumDSL equ 5
    NdisPhysicalMediumFibreChannel equ 6
    NdisPhysicalMedium1394 equ 7
    NdisPhysicalMediumWirelessWan equ 8
    NdisPhysicalMediumNative802_11 equ 9
    NdisPhysicalMediumBluetooth equ 10
    NdisPhysicalMediumInfiniband equ 11
    NdisPhysicalMediumWiMax equ 12
    NdisPhysicalMediumUWB equ 13
    NdisPhysicalMedium802_3 equ 14
    NdisPhysicalMedium802_5 equ 15
    NdisPhysicalMediumIrda equ 16
    NdisPhysicalMediumWiredWAN equ 17
    NdisPhysicalMediumWiredCoWan equ 18
    NdisPhysicalMediumOther equ 19
    NdisPhysicalMediumNative802_15_4 equ 20
    NdisPhysicalMediumMax equ 21
    _NDIS_PHYSICAL_MEDIUM typedef NDIS_PHYSICAL_MEDIUM
    PNDIS_PHYSICAL_MEDIUM typedef ptr NDIS_PHYSICAL_MEDIUM
    NDIS_PROTOCOL_ID_DEFAULT equ 00h
    NDIS_PROTOCOL_ID_TCP_IP equ 02h
    NDIS_PROTOCOL_ID_IP6 equ 03h
    NDIS_PROTOCOL_ID_IPX equ 06h
    NDIS_PROTOCOL_ID_NBF equ 07h
    NDIS_PROTOCOL_ID_MAX equ 0Fh
    NDIS_PROTOCOL_ID_MASK equ 0Fh
    TRANSPORT_HEADER_OFFSET struct
      ProtocolType USHORT ?
      HeaderOffset USHORT ?
    TRANSPORT_HEADER_OFFSET ends
    _TRANSPORT_HEADER_OFFSET typedef TRANSPORT_HEADER_OFFSET
    PTRANSPORT_HEADER_OFFSET typedef ptr TRANSPORT_HEADER_OFFSET
    NETWORK_ADDRESS struct
      AddressLength USHORT ?
      AddressType USHORT ?
      Address UCHAR 1 dup (?)
    NETWORK_ADDRESS ends
    _NETWORK_ADDRESS typedef NETWORK_ADDRESS
    PNETWORK_ADDRESS typedef ptr NETWORK_ADDRESS
    NETWORK_ADDRESS_LIST struct
      AddressCount LONG ?
      AddressType USHORT ?
      Address NETWORK_ADDRESS 1 dup (<>)
    NETWORK_ADDRESS_LIST ends
    _NETWORK_ADDRESS_LIST typedef NETWORK_ADDRESS_LIST
    PNETWORK_ADDRESS_LIST typedef ptr NETWORK_ADDRESS_LIST
    NETWORK_ADDRESS_IP struct
      sin_port USHORT ?
      in_addr ULONG ?
      sin_zero UCHAR 8 dup (?)
    NETWORK_ADDRESS_IP ends
    _NETWORK_ADDRESS_IP typedef NETWORK_ADDRESS_IP
    PNETWORK_ADDRESS_IP typedef ptr NETWORK_ADDRESS_IP
    NETWORK_ADDRESS_LENGTH_IP equ <sizeof(NETWORK_ADDRESS_IP)>
    NETWORK_ADDRESS_IP6 struct
      sin6_port USHORT ?
      sin6_flowinfo ULONG ?
      sin6_addr USHORT 8 dup (?)
      sin6_scope_id ULONG ?
    NETWORK_ADDRESS_IP6 ends
    _NETWORK_ADDRESS_IP6 typedef NETWORK_ADDRESS_IP6
    PNETWORK_ADDRESS_IP6 typedef ptr NETWORK_ADDRESS_IP6
    NETWORK_ADDRESS_LENGTH_IP6 equ <sizeof(NETWORK_ADDRESS_IP6)>
    NETWORK_ADDRESS_IPX struct
      NetworkAddress ULONG ?
      NodeAddress UCHAR 6 dup (?)
      Socket USHORT ?
    NETWORK_ADDRESS_IPX ends
    _NETWORK_ADDRESS_IPX typedef NETWORK_ADDRESS_IPX
    PNETWORK_ADDRESS_IPX typedef ptr NETWORK_ADDRESS_IPX
    NETWORK_ADDRESS_LENGTH_IPX equ <sizeof(NETWORK_ADDRESS_IPX)>
    NDIS_HARDWARE_STATUS typedef SDWORD
    NdisHardwareStatusReady equ 0
    NdisHardwareStatusInitializing equ 1
    NdisHardwareStatusReset equ 2
    NdisHardwareStatusClosing equ 3
    NdisHardwareStatusNotReady equ 4
    _NDIS_HARDWARE_STATUS typedef NDIS_HARDWARE_STATUS
    PNDIS_HARDWARE_STATUS typedef ptr NDIS_HARDWARE_STATUS
    GEN_GET_TIME_CAPS struct
      Flags ULONG ?
      ClockPrecision ULONG ?
    GEN_GET_TIME_CAPS ends
    _GEN_GET_TIME_CAPS typedef GEN_GET_TIME_CAPS
    PGEN_GET_TIME_CAPS typedef ptr GEN_GET_TIME_CAPS
    READABLE_LOCAL_CLOCK equ 00000001h
    CLOCK_NETWORK_DERIVED equ 00000002h
    CLOCK_PRECISION equ 00000004h
    RECEIVE_TIME_INDICATION_CAPABLE equ 00000008h
    TIMED_SEND_CAPABLE equ 00000010h
    TIME_STAMP_CAPABLE equ 00000020h
    GEN_GET_NETCARD_TIME struct
      ReadTime ULONGLONG ?
    GEN_GET_NETCARD_TIME ends
    _GEN_GET_NETCARD_TIME typedef GEN_GET_NETCARD_TIME
    PGEN_GET_NETCARD_TIME typedef ptr GEN_GET_NETCARD_TIME
    NDIS_PM_PACKET_PATTERN struct
      Priority ULONG ?
      Reserved ULONG ?
      MaskSize ULONG ?
      PatternOffset ULONG ?
      PatternSize ULONG ?
      PatternFlags ULONG ?
    NDIS_PM_PACKET_PATTERN ends
    _NDIS_PM_PACKET_PATTERN typedef NDIS_PM_PACKET_PATTERN
    PNDIS_PM_PACKET_PATTERN typedef ptr NDIS_PM_PACKET_PATTERN
    NDIS_DEVICE_POWER_STATE typedef SDWORD
    NdisDeviceStateUnspecified equ 0
    NdisDeviceStateD0 equ 1
    NdisDeviceStateD1 equ 2
    NdisDeviceStateD2 equ 3
    NdisDeviceStateD3 equ 4
    NdisDeviceStateMaximum equ 5
    _NDIS_DEVICE_POWER_STATE typedef NDIS_DEVICE_POWER_STATE
    PNDIS_DEVICE_POWER_STATE typedef ptr NDIS_DEVICE_POWER_STATE
    NDIS_PM_WAKE_UP_CAPABILITIES struct
      MinMagicPacketWakeUp NDIS_DEVICE_POWER_STATE ?
      MinPatternWakeUp NDIS_DEVICE_POWER_STATE ?
      MinLinkChangeWakeUp NDIS_DEVICE_POWER_STATE ?
    NDIS_PM_WAKE_UP_CAPABILITIES ends
    _NDIS_PM_WAKE_UP_CAPABILITIES typedef NDIS_PM_WAKE_UP_CAPABILITIES
    PNDIS_PM_WAKE_UP_CAPABILITIES typedef ptr NDIS_PM_WAKE_UP_CAPABILITIES
    NDIS_DEVICE_WAKE_UP_ENABLE equ 00000001h
    NDIS_DEVICE_WAKE_ON_PATTERN_MATCH_ENABLE equ 00000002h
    NDIS_DEVICE_WAKE_ON_MAGIC_PACKET_ENABLE equ 00000004h
    NDIS_PNP_CAPABILITIES struct
      Flags ULONG ?
      WakeUpCapabilities NDIS_PM_WAKE_UP_CAPABILITIES <>
    NDIS_PNP_CAPABILITIES ends
    _NDIS_PNP_CAPABILITIES typedef NDIS_PNP_CAPABILITIES
    PNDIS_PNP_CAPABILITIES typedef ptr NDIS_PNP_CAPABILITIES
    NDIS_FDDI_ATTACHMENT_TYPE typedef SDWORD
    NdisFddiTypeIsolated equ 1
    NdisFddiTypeLocalA equ 2
    NdisFddiTypeLocalB equ 3
    NdisFddiTypeLocalAB equ 4
    NdisFddiTypeLocalS equ 5
    NdisFddiTypeWrapA equ 6
    NdisFddiTypeWrapB equ 7
    NdisFddiTypeWrapAB equ 8
    NdisFddiTypeWrapS equ 9
    NdisFddiTypeCWrapA equ 10
    NdisFddiTypeCWrapB equ 11
    NdisFddiTypeCWrapS equ 12
    NdisFddiTypeThrough equ 13
    _NDIS_FDDI_ATTACHMENT_TYPE typedef NDIS_FDDI_ATTACHMENT_TYPE
    PNDIS_FDDI_ATTACHMENT_TYPE typedef ptr NDIS_FDDI_ATTACHMENT_TYPE
    NDIS_FDDI_RING_MGT_STATE typedef SDWORD
    NdisFddiRingIsolated equ 1
    NdisFddiRingNonOperational equ 2
    NdisFddiRingOperational equ 3
    NdisFddiRingDetect equ 4
    NdisFddiRingNonOperationalDup equ 5
    NdisFddiRingOperationalDup equ 6
    NdisFddiRingDirected equ 7
    NdisFddiRingTrace equ 8
    _NDIS_FDDI_RING_MGT_STATE typedef NDIS_FDDI_RING_MGT_STATE
    PNDIS_FDDI_RING_MGT_STATE typedef ptr NDIS_FDDI_RING_MGT_STATE
    NDIS_FDDI_LCONNECTION_STATE typedef SDWORD
    NdisFddiStateOff equ 1
    NdisFddiStateBreak equ 2
    NdisFddiStateTrace equ 3
    NdisFddiStateConnect equ 4
    NdisFddiStateNext equ 5
    NdisFddiStateSignal equ 6
    NdisFddiStateJoin equ 7
    NdisFddiStateVerify equ 8
    NdisFddiStateActive equ 9
    NdisFddiStateMaintenance equ 10
    _NDIS_FDDI_LCONNECTION_STATE typedef NDIS_FDDI_LCONNECTION_STATE
    PNDIS_FDDI_LCONNECTION_STATE typedef ptr NDIS_FDDI_LCONNECTION_STATE
    NDIS_WAN_MEDIUM_SUBTYPE typedef SDWORD
    NdisWanMediumHub equ 0
    NdisWanMediumX_25 equ 1
    NdisWanMediumIsdn equ 2
    NdisWanMediumSerial equ 3
    NdisWanMediumFrameRelay equ 4
    NdisWanMediumAtm equ 5
    NdisWanMediumSonet equ 6
    NdisWanMediumSW56K equ 7
    NdisWanMediumPPTP equ 8
    NdisWanMediumL2TP equ 9
    NdisWanMediumIrda equ 10
    NdisWanMediumParallel equ 11
    NdisWanMediumPppoe equ 12
    if (NTDDI_VERSION ge NTDDI_VISTA)
      NdisWanMediumSSTP equ 13
      NdisWanMediumAgileVPN equ 14
    endif
    if (NTDDI_VERSION ge NTDDI_WINBLUE)
      NdisWanMediumGre equ 15
    endif
    NdisWanMediumSubTypeMax equ 16
    _NDIS_WAN_MEDIUM_SUBTYPE typedef NDIS_WAN_MEDIUM_SUBTYPE
    PNDIS_WAN_MEDIUM_SUBTYPE typedef ptr NDIS_WAN_MEDIUM_SUBTYPE
    NDIS_WAN_HEADER_FORMAT typedef SDWORD
    NdisWanHeaderNative equ 0
    NdisWanHeaderEthernet equ 1
    _NDIS_WAN_HEADER_FORMAT typedef NDIS_WAN_HEADER_FORMAT
    PNDIS_WAN_HEADER_FORMAT typedef ptr NDIS_WAN_HEADER_FORMAT
    NDIS_WAN_QUALITY typedef SDWORD
    NdisWanRaw equ 0
    NdisWanErrorControl equ 1
    NdisWanReliable equ 2
    _NDIS_WAN_QUALITY typedef NDIS_WAN_QUALITY
    PNDIS_WAN_QUALITY typedef ptr NDIS_WAN_QUALITY
    NDIS_WAN_PROTOCOL_CAPS struct
      Flags ULONG ?
      Reserved ULONG ?
    NDIS_WAN_PROTOCOL_CAPS ends
    _NDIS_WAN_PROTOCOL_CAPS typedef NDIS_WAN_PROTOCOL_CAPS
    PNDIS_WAN_PROTOCOL_CAPS typedef ptr NDIS_WAN_PROTOCOL_CAPS
    WAN_PROTOCOL_KEEPS_STATS equ 00000001h
    NDIS_802_5_RING_STATE typedef SDWORD
    NdisRingStateOpened equ 1
    NdisRingStateClosed equ 2
    NdisRingStateOpening equ 3
    NdisRingStateClosing equ 4
    NdisRingStateOpenFailure equ 5
    NdisRingStateRingFailure equ 6
    _NDIS_802_5_RING_STATE typedef NDIS_802_5_RING_STATE
    PNDIS_802_5_RING_STATE typedef ptr NDIS_802_5_RING_STATE
    NDIS_MEDIA_STATE typedef SDWORD
    NdisMediaStateConnected equ 0
    NdisMediaStateDisconnected equ 1
    _NDIS_MEDIA_STATE typedef NDIS_MEDIA_STATE
    PNDIS_MEDIA_STATE typedef ptr NDIS_MEDIA_STATE
    Priority_802_3 typedef ULONG
    NDIS_CO_LINK_SPEED struct
      Outbound ULONG ?
      Inbound ULONG ?
    NDIS_CO_LINK_SPEED ends
    _NDIS_CO_LINK_SPEED typedef NDIS_CO_LINK_SPEED
    PNDIS_CO_LINK_SPEED typedef ptr NDIS_CO_LINK_SPEED
    if ((NTDDI_VERSION ge NTDDI_VISTA) or NDIS_SUPPORT_NDIS6)
      NDIS_LINK_SPEED struct
        XmitLinkSpeed ULONG64 ?
        RcvLinkSpeed ULONG64 ?
      NDIS_LINK_SPEED ends
      _NDIS_LINK_SPEED typedef NDIS_LINK_SPEED
      PNDIS_LINK_SPEED typedef ptr NDIS_LINK_SPEED
      NDIS_LINK_SPEED_UNKNOWN equ <NET_IF_LINK_SPEED_UNKNOWN>
    endif
    include ndis
    if ((NTDDI_VERSION ge NTDDI_VISTA) or NDIS_SUPPORT_NDIS6)
      ifndef __WINDOT11_H__
        include windot11.inc
      endif
    endif
    NDIS_GUID struct
      Guid GUID <>
      union
        Oid NDIS_OID ?
        Status NDIS_STATUS ?
      ends
      Size_ ULONG ?
      Flags ULONG ?
    NDIS_GUID ends
    _NDIS_GUID typedef NDIS_GUID
    PNDIS_GUID typedef ptr NDIS_GUID
    fNDIS_GUID_TO_OID equ 00000001h
    fNDIS_GUID_TO_STATUS equ 00000002h
    fNDIS_GUID_ANSI_STRING equ 00000004h
    fNDIS_GUID_UNICODE_STRING equ 00000008h
    fNDIS_GUID_ARRAY equ 00000010h
    fNDIS_GUID_ALLOW_READ equ 00000020h
    fNDIS_GUID_ALLOW_WRITE equ 00000040h
    fNDIS_GUID_METHOD equ 00000080h
    fNDIS_GUID_NDIS_RESERVED equ 00000100h
    fNDIS_GUID_SUPPORT_COMMON_HEADER equ 00000200h
    NDIS_PACKET_TYPE_DIRECTED equ 00000001h
    NDIS_PACKET_TYPE_MULTICAST equ 00000002h
    NDIS_PACKET_TYPE_ALL_MULTICAST equ 00000004h
    NDIS_PACKET_TYPE_BROADCAST equ 00000008h
    NDIS_PACKET_TYPE_SOURCE_ROUTING equ 00000010h
    NDIS_PACKET_TYPE_PROMISCUOUS equ 00000020h
    NDIS_PACKET_TYPE_SMT equ 00000040h
    NDIS_PACKET_TYPE_ALL_LOCAL equ 00000080h
    NDIS_PACKET_TYPE_GROUP equ 00001000h
    NDIS_PACKET_TYPE_ALL_FUNCTIONAL equ 00002000h
    NDIS_PACKET_TYPE_FUNCTIONAL equ 00004000h
    NDIS_PACKET_TYPE_MAC_FRAME equ 00008000h
    NDIS_PACKET_TYPE_NO_LOCAL equ 00010000h
    NDIS_RING_SIGNAL_LOSS equ 00008000h
    NDIS_RING_HARD_ERROR equ 00004000h
    NDIS_RING_SOFT_ERROR equ 00002000h
    NDIS_RING_TRANSMIT_BEACON equ 00001000h
    NDIS_RING_LOBE_WIRE_FAULT equ 00000800h
    NDIS_RING_AUTO_REMOVAL_ERROR equ 00000400h
    NDIS_RING_REMOVE_RECEIVED equ 00000200h
    NDIS_RING_COUNTER_OVERFLOW equ 00000100h
    NDIS_RING_SINGLE_STATION equ 00000080h
    NDIS_RING_RING_RECOVERY equ 00000040h
    NDIS_PROT_OPTION_ESTIMATED_LENGTH equ 00000001h
    NDIS_PROT_OPTION_NO_LOOPBACK equ 00000002h
    NDIS_PROT_OPTION_NO_RSVD_ON_RCVPKT equ 00000004h
    NDIS_PROT_OPTION_SEND_RESTRICTED equ 00000008h
    NDIS_MAC_OPTION_COPY_LOOKAHEAD_DATA equ 00000001h
    NDIS_MAC_OPTION_RECEIVE_SERIALIZED equ 00000002h
    NDIS_MAC_OPTION_TRANSFERS_NOT_PEND equ 00000004h
    NDIS_MAC_OPTION_NO_LOOPBACK equ 00000008h
    NDIS_MAC_OPTION_FULL_DUPLEX equ 00000010h
    NDIS_MAC_OPTION_EOTX_INDICATION equ 00000020h
    NDIS_MAC_OPTION_8021P_PRIORITY equ 00000040h
    NDIS_MAC_OPTION_SUPPORTS_MAC_ADDRESS_OVERWRITE equ 00000080h
    NDIS_MAC_OPTION_RECEIVE_AT_DPC equ 00000100h
    NDIS_MAC_OPTION_8021Q_VLAN equ 00000200h
    NDIS_MAC_OPTION_RESERVED equ 80000000h
    NDIS_MEDIA_CAP_TRANSMIT equ 00000001h
    NDIS_MEDIA_CAP_RECEIVE equ 00000002h
    NDIS_CO_MAC_OPTION_DYNAMIC_LINK_SPEED equ 00000001h
    NDIS_IRDA_PACKET_INFO struct
      ExtraBOFs ULONG ?
      MinTurnAroundTime ULONG ?
    NDIS_IRDA_PACKET_INFO ends
    _NDIS_IRDA_PACKET_INFO typedef NDIS_IRDA_PACKET_INFO
    PNDIS_IRDA_PACKET_INFO typedef ptr NDIS_IRDA_PACKET_INFO
    if ((NTDDI_VERSION ge NTDDI_VISTA) or NDIS_SUPPORT_NDIS6)
      NDIS_MAKE_NET_LUID macro _pNetLuid, _IfType, _NetLuidIndex
        exitm <{ (_pNetLuid) - Info.IfType = _IfType ; (_pNetLuid) - Info.NetLuidIndex = _NetLuidIndex ; (_pNetLuid) - Info.Reserved = 0 ; }>
      endm
      NDIS_IF_MAX_STRING_SIZE equ <IF_MAX_STRING_SIZE>
      NDIS_IF_COUNTED_STRING typedef IF_COUNTED_STRING
      PNDIS_IF_COUNTED_STRING typedef ptr IF_COUNTED_STRING
      NDIS_MAX_PHYS_ADDRESS_LENGTH equ <IF_MAX_PHYS_ADDRESS_LENGTH>
      NDIS_IF_PHYSICAL_ADDRESS typedef IF_PHYSICAL_ADDRESS
      PNDIS_IF_PHYSICAL_ADDRESS typedef ptr IF_PHYSICAL_ADDRESS
      NDIS_MEDIA_CONNECT_STATE typedef NET_IF_MEDIA_CONNECT_STATE
      PNDIS_MEDIA_CONNECT_STATE typedef ptr NET_IF_MEDIA_CONNECT_STATE
      NDIS_MEDIA_DUPLEX_STATE typedef NET_IF_MEDIA_DUPLEX_STATE
      PNDIS_MEDIA_DUPLEX_STATE typedef ptr NET_IF_MEDIA_DUPLEX_STATE
      NDIS_SUPPORTED_PAUSE_FUNCTIONS typedef SDWORD
      NdisPauseFunctionsUnsupported equ 0
      NdisPauseFunctionsSendOnly equ 1
      NdisPauseFunctionsReceiveOnly equ 2
      NdisPauseFunctionsSendAndReceive equ 3
      NdisPauseFunctionsUnknown equ 4
      _NDIS_SUPPORTED_PAUSE_FUNCTIONS typedef NDIS_SUPPORTED_PAUSE_FUNCTIONS
      PNDIS_SUPPORTED_PAUSE_FUNCTIONS typedef ptr NDIS_SUPPORTED_PAUSE_FUNCTIONS
      NDIS_LINK_STATE_XMIT_LINK_SPEED_AUTO_NEGOTIATED equ 00000001h
      NDIS_LINK_STATE_RCV_LINK_SPEED_AUTO_NEGOTIATED equ 00000002h
      NDIS_LINK_STATE_DUPLEX_AUTO_NEGOTIATED equ 00000004h
      NDIS_LINK_STATE_PAUSE_FUNCTIONS_AUTO_NEGOTIATED equ 00000008h
      NDIS_LINK_STATE_REVISION_1 equ 1
      NDIS_LINK_STATE struct
        Header NDIS_OBJECT_HEADER ?
        MediaConnectState NDIS_MEDIA_CONNECT_STATE ?
        MediaDuplexState NDIS_MEDIA_DUPLEX_STATE ?
        XmitLinkSpeed ULONG64 ?
        RcvLinkSpeed ULONG64 ?
        PauseFunctions NDIS_SUPPORTED_PAUSE_FUNCTIONS ?
        AutoNegotiationFlags ULONG ?
      NDIS_LINK_STATE ends
      _NDIS_LINK_STATE typedef NDIS_LINK_STATE
      PNDIS_LINK_STATE typedef ptr NDIS_LINK_STATE
      NDIS_SIZEOF_LINK_STATE_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_LINK_STATE, AutoNegotiationFlags)>
      NDIS_LINK_PARAMETERS_REVISION_1 equ 1
      NDIS_LINK_PARAMETERS struct
        Header NDIS_OBJECT_HEADER ?
        MediaDuplexState NDIS_MEDIA_DUPLEX_STATE ?
        XmitLinkSpeed ULONG64 ?
        RcvLinkSpeed ULONG64 ?
        PauseFunctions NDIS_SUPPORTED_PAUSE_FUNCTIONS ?
        AutoNegotiationFlags ULONG ?
      NDIS_LINK_PARAMETERS ends
      _NDIS_LINK_PARAMETERS typedef NDIS_LINK_PARAMETERS
      PNDIS_LINK_PARAMETERS typedef ptr NDIS_LINK_PARAMETERS
      NDIS_SIZEOF_LINK_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_LINK_PARAMETERS, AutoNegotiationFlags)>
      NDIS_OPER_STATE_REVISION_1 equ 1
      NDIS_OPER_STATE struct
        Header NDIS_OBJECT_HEADER ?
        OperationalStatus NET_IF_OPER_STATUS ?
        OperationalStatusFlags ULONG ?
      NDIS_OPER_STATE ends
      _NDIS_OPER_STATE typedef NDIS_OPER_STATE
      PNDIS_OPER_STATE typedef ptr NDIS_OPER_STATE
      NDIS_SIZEOF_OPER_STATE_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_OPER_STATE, OperationalStatusFlags)>
      NDIS_IP_OPER_STATUS struct
        AddressFamily ULONG ?
        OperationalStatus NET_IF_OPER_STATUS ?
        OperationalStatusFlags ULONG ?
      NDIS_IP_OPER_STATUS ends
      _NDIS_IP_OPER_STATUS typedef NDIS_IP_OPER_STATUS
      PNDIS_IP_OPER_STATUS typedef ptr NDIS_IP_OPER_STATUS
      MAXIMUM_IP_OPER_STATUS_ADDRESS_FAMILIES_SUPPORTED equ 32
      NDIS_IP_OPER_STATUS_INFO_REVISION_1 equ 1
      NDIS_IP_OPER_STATUS_INFO struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        NumberofAddressFamiliesReturned ULONG ?
        IpOperationalStatus NDIS_IP_OPER_STATUS MAXIMUM_IP_OPER_STATUS_ADDRESS_FAMILIES_SUPPORTED dup (<>)
      NDIS_IP_OPER_STATUS_INFO ends
      _NDIS_IP_OPER_STATUS_INFO typedef NDIS_IP_OPER_STATUS_INFO
      PNDIS_IP_OPER_STATUS_INFO typedef ptr NDIS_IP_OPER_STATUS_INFO
      NDIS_SIZEOF_IP_OPER_STATUS_INFO_REVISION_1 equ <FIELD_OFFSET (NDIS_IP_OPER_STATUS_INFO, IpOperationalStatus) + MAXIMUM_IP_OPER_STATUS_ADDRESS_FAMILIES_SUPPORTED * sizeof(NDIS_IP_OPER_STATUS)>
      NDIS_IP_OPER_STATE_REVISION_1 equ 1
      NDIS_IP_OPER_STATE struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        IpOperationalStatus NDIS_IP_OPER_STATUS <>
      NDIS_IP_OPER_STATE ends
      _NDIS_IP_OPER_STATE typedef NDIS_IP_OPER_STATE
      PNDIS_IP_OPER_STATE typedef ptr NDIS_IP_OPER_STATE
      NDIS_SIZEOF_IP_OPER_STATE_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_IP_OPER_STATE, IpOperationalStatus)>
      NDIS_OFFLOAD_PARAMETERS_NO_CHANGE equ 0
      NDIS_OFFLOAD_PARAMETERS_TX_RX_DISABLED equ 1
      NDIS_OFFLOAD_PARAMETERS_TX_ENABLED_RX_DISABLED equ 2
      NDIS_OFFLOAD_PARAMETERS_RX_ENABLED_TX_DISABLED equ 3
      NDIS_OFFLOAD_PARAMETERS_TX_RX_ENABLED equ 4
      NDIS_OFFLOAD_PARAMETERS_LSOV1_DISABLED equ 1
      NDIS_OFFLOAD_PARAMETERS_LSOV1_ENABLED equ 2
      NDIS_OFFLOAD_PARAMETERS_IPSECV1_DISABLED equ 1
      NDIS_OFFLOAD_PARAMETERS_IPSECV1_AH_ENABLED equ 2
      NDIS_OFFLOAD_PARAMETERS_IPSECV1_ESP_ENABLED equ 3
      NDIS_OFFLOAD_PARAMETERS_IPSECV1_AH_AND_ESP_ENABLED equ 4
      NDIS_OFFLOAD_PARAMETERS_LSOV2_DISABLED equ 1
      NDIS_OFFLOAD_PARAMETERS_LSOV2_ENABLED equ 2
      if (NDIS_SUPPORT_NDIS61)
        NDIS_OFFLOAD_PARAMETERS_IPSECV2_DISABLED equ 1
        NDIS_OFFLOAD_PARAMETERS_IPSECV2_AH_ENABLED equ 2
        NDIS_OFFLOAD_PARAMETERS_IPSECV2_ESP_ENABLED equ 3
        NDIS_OFFLOAD_PARAMETERS_IPSECV2_AH_AND_ESP_ENABLED equ 4
      endif
      if (NDIS_SUPPORT_NDIS630)
        NDIS_OFFLOAD_PARAMETERS_RSC_DISABLED equ 1
        NDIS_OFFLOAD_PARAMETERS_RSC_ENABLED equ 2
        NDIS_ENCAPSULATION_TYPE_GRE_MAC equ 00000001h
        if (NDIS_SUPPORT_NDIS650)
          NDIS_ENCAPSULATION_TYPE_VXLAN equ 00000002h
        endif
      endif
      NDIS_OFFLOAD_PARAMETERS_CONNECTION_OFFLOAD_DISABLED equ 1
      NDIS_OFFLOAD_PARAMETERS_CONNECTION_OFFLOAD_ENABLED equ 2
      if (NDIS_SUPPORT_NDIS683)
        NDIS_OFFLOAD_PARAMETERS_USO_DISABLED equ 1
        NDIS_OFFLOAD_PARAMETERS_USO_ENABLED equ 2
      endif
      NDIS_OFFLOAD_PARAMETERS_REVISION_1 equ 1
      if (NDIS_SUPPORT_NDIS61)
        NDIS_OFFLOAD_PARAMETERS_REVISION_2 equ 2
      endif
      if (NDIS_SUPPORT_NDIS630)
        NDIS_OFFLOAD_PARAMETERS_REVISION_3 equ 3
      endif
      if (NDIS_SUPPORT_NDIS650)
        NDIS_OFFLOAD_PARAMETERS_REVISION_4 equ 4
      endif
      if (NDIS_SUPPORT_NDIS683)
        NDIS_OFFLOAD_PARAMETERS_REVISION_5 equ 5
      endif
      if (NDIS_SUPPORT_NDIS630)
        NDIS_OFFLOAD_PARAMETERS_SKIP_REGISTRY_UPDATE equ 00000001h
      endif
      NDIS_OFFLOAD_PARAMETERS struct
        Header NDIS_OBJECT_HEADER ?
        IPv4Checksum UCHAR ?
        TCPIPv4Checksum UCHAR ?
        UDPIPv4Checksum UCHAR ?
        TCPIPv6Checksum UCHAR ?
        UDPIPv6Checksum UCHAR ?
        LsoV1 UCHAR ?
        IPsecV1 UCHAR ?
        LsoV2IPv4 UCHAR ?
        LsoV2IPv6 UCHAR ?
        TcpConnectionIPv4 UCHAR ?
        TcpConnectionIPv6 UCHAR ?
        Flags ULONG ?
        if (NDIS_SUPPORT_NDIS61)
          IPsecV2 UCHAR ?
          IPsecV2IPv4 UCHAR ?
        endif
        if (NDIS_SUPPORT_NDIS630)
          struct
            RscIPv4 UCHAR ?
            RscIPv6 UCHAR ?
          ends
          struct
            EncapsulatedPacketTaskOffload UCHAR ?
            EncapsulationTypes UCHAR ?
          ends
        endif
        if (NDIS_SUPPORT_NDIS650)
          union EncapsulationProtocolParameters
            struct VxlanParameters
              VxlanUDPPortNumber USHORT ?
            ends
            Value ULONG ?
          ends
        endif
        if (NDIS_SUPPORT_NDIS683)
          struct UdpSegmentation
            IPv4 UCHAR ?
            IPv6 UCHAR ?
          ends
        endif
      NDIS_OFFLOAD_PARAMETERS ends
      _NDIS_OFFLOAD_PARAMETERS typedef NDIS_OFFLOAD_PARAMETERS
      PNDIS_OFFLOAD_PARAMETERS typedef ptr NDIS_OFFLOAD_PARAMETERS
      NDIS_SIZEOF_OFFLOAD_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_OFFLOAD_PARAMETERS, Flags)>
      if (NDIS_SUPPORT_NDIS61)
        NDIS_SIZEOF_OFFLOAD_PARAMETERS_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_OFFLOAD_PARAMETERS, IPsecV2IPv4)>
      endif
      if (NDIS_SUPPORT_NDIS630)
        NDIS_SIZEOF_OFFLOAD_PARAMETERS_REVISION_3 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_OFFLOAD_PARAMETERS, EncapsulationTypes)>
      endif
      if (NDIS_SUPPORT_NDIS650)
        NDIS_SIZEOF_OFFLOAD_PARAMETERS_REVISION_4 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_OFFLOAD_PARAMETERS, EncapsulationProtocolParameters)>
      endif
      if (NDIS_SUPPORT_NDIS683)
        NDIS_SIZEOF_OFFLOAD_PARAMETERS_REVISION_5 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_OFFLOAD_PARAMETERS, UdpSegmentation)>
      endif
      include ndis
      NDIS_TCP_LARGE_SEND_OFFLOAD_V1 struct
        struct IPv4
          Encapsulation ULONG ?
          MaxOffLoadSize ULONG ?
          MinSegmentCount ULONG ?
          IPv4_REC record IPv4_REC_Filler:28, IPv4_REC_IpOptions:2, IPv4_REC_TcpOptions:2
          IPv4_BITS IPv4_REC <>
        ends
      NDIS_TCP_LARGE_SEND_OFFLOAD_V1 ends
      _NDIS_TCP_LARGE_SEND_OFFLOAD_V1 typedef NDIS_TCP_LARGE_SEND_OFFLOAD_V1
      PNDIS_TCP_LARGE_SEND_OFFLOAD_V1 typedef ptr NDIS_TCP_LARGE_SEND_OFFLOAD_V1
      NDIS_TCP_IP_CHECKSUM_OFFLOAD struct
        struct IPv4Transmit
          Encapsulation ULONG ?
          IPv4Transmit_REC record IPv4Transmit_REC_Filler:22, IPv4Transmit_REC_IpChecksum:2, IPv4Transmit_REC_UdpChecksum:2, IPv4Transmit_REC_TcpChecksum:2, IPv4Transmit_REC_TcpOptionsSupported:2, IPv4Transmit_REC_IpOptionsSupported:2
          IPv4Transmit_BITS IPv4Transmit_REC <>
        ends
        struct IPv4Receive
          Encapsulation ULONG ?
          IPv4Receive_REC record IPv4Receive_REC_Filler:22, IPv4Receive_REC_IpChecksum:2, IPv4Receive_REC_UdpChecksum:2, IPv4Receive_REC_TcpChecksum:2, IPv4Receive_REC_TcpOptionsSupported:2, IPv4Receive_REC_IpOptionsSupported:2
          IPv4Receive_BITS IPv4Receive_REC <>
        ends
        struct IPv6Transmit
          Encapsulation ULONG ?
          IPv6Transmit_REC record IPv6Transmit_REC_Filler:24, IPv6Transmit_REC_UdpChecksum:2, IPv6Transmit_REC_TcpChecksum:2, IPv6Transmit_REC_TcpOptionsSupported:2, IPv6Transmit_REC_IpExtensionHeadersSupported:2
          IPv6Transmit_BITS IPv6Transmit_REC <>
        ends
        struct IPv6Receive
          Encapsulation ULONG ?
          IPv6Receive_REC record IPv6Receive_REC_Filler:24, IPv6Receive_REC_UdpChecksum:2, IPv6Receive_REC_TcpChecksum:2, IPv6Receive_REC_TcpOptionsSupported:2, IPv6Receive_REC_IpExtensionHeadersSupported:2
          IPv6Receive_BITS IPv6Receive_REC <>
        ends
      NDIS_TCP_IP_CHECKSUM_OFFLOAD ends
      _NDIS_TCP_IP_CHECKSUM_OFFLOAD typedef NDIS_TCP_IP_CHECKSUM_OFFLOAD
      PNDIS_TCP_IP_CHECKSUM_OFFLOAD typedef ptr NDIS_TCP_IP_CHECKSUM_OFFLOAD
      NDIS_IPSEC_OFFLOAD_V1 struct
        struct Supported
          Encapsulation ULONG ?
          AhEspCombined ULONG ?
          TransportTunnelCombined ULONG ?
          IPv4Options ULONG ?
          Flags ULONG ?
        ends
        struct IPv4AH
          IPv4AH_REC record IPv4AH_REC_Filler:20, IPv4AH_REC_Receive:2, IPv4AH_REC_Send:2, IPv4AH_REC_Tunnel:2, IPv4AH_REC_Transport:2, IPv4AH_REC_Sha_1:2, IPv4AH_REC_Md5:2
          IPv4AH_BITS IPv4AH_REC <>
        ends
        struct IPv4ESP
          IPv4ESP_REC record IPv4ESP_REC_Filler:16, IPv4ESP_REC_Receive:2, IPv4ESP_REC_Send:2, IPv4ESP_REC_Tunnel:2, IPv4ESP_REC_Transport:2, IPv4ESP_REC_NullEsp:2, IPv4ESP_REC_TripleDes:2, IPv4ESP_REC_Reserved:2, IPv4ESP_REC_Des:2
          IPv4ESP_BITS IPv4ESP_REC <>
        ends
      NDIS_IPSEC_OFFLOAD_V1 ends
      _NDIS_IPSEC_OFFLOAD_V1 typedef NDIS_IPSEC_OFFLOAD_V1
      PNDIS_IPSEC_OFFLOAD_V1 typedef ptr NDIS_IPSEC_OFFLOAD_V1
      NDIS_TCP_LARGE_SEND_OFFLOAD_V2 struct
        struct IPv4
          Encapsulation ULONG ?
          MaxOffLoadSize ULONG ?
          MinSegmentCount ULONG ?
        ends
        struct IPv6
          Encapsulation ULONG ?
          MaxOffLoadSize ULONG ?
          MinSegmentCount ULONG ?
          IPv6_REC record IPv6_REC_Filler:28, IPv6_REC_TcpOptionsSupported:2, IPv6_REC_IpExtensionHeadersSupported:2
          IPv6_BITS IPv6_REC <>
        ends
      NDIS_TCP_LARGE_SEND_OFFLOAD_V2 ends
      _NDIS_TCP_LARGE_SEND_OFFLOAD_V2 typedef NDIS_TCP_LARGE_SEND_OFFLOAD_V2
      PNDIS_TCP_LARGE_SEND_OFFLOAD_V2 typedef ptr NDIS_TCP_LARGE_SEND_OFFLOAD_V2
      if (NDIS_SUPPORT_NDIS61)
        IPSEC_OFFLOAD_V2_AUTHENTICATION_MD5 equ 00000001h
        IPSEC_OFFLOAD_V2_AUTHENTICATION_SHA_1 equ 00000002h
        IPSEC_OFFLOAD_V2_AUTHENTICATION_SHA_256 equ 00000004h
        IPSEC_OFFLOAD_V2_AUTHENTICATION_AES_GCM_128 equ 00000008h
        IPSEC_OFFLOAD_V2_AUTHENTICATION_AES_GCM_192 equ 00000010h
        IPSEC_OFFLOAD_V2_AUTHENTICATION_AES_GCM_256 equ 00000020h
        IPSEC_OFFLOAD_V2_ENCRYPTION_NONE equ 00000001h
        IPSEC_OFFLOAD_V2_ENCRYPTION_DES_CBC equ 00000002h
        IPSEC_OFFLOAD_V2_ENCRYPTION_3_DES_CBC equ 00000004h
        IPSEC_OFFLOAD_V2_ENCRYPTION_AES_GCM_128 equ 00000008h
        IPSEC_OFFLOAD_V2_ENCRYPTION_AES_GCM_192 equ 00000010h
        IPSEC_OFFLOAD_V2_ENCRYPTION_AES_GCM_256 equ 00000020h
        IPSEC_OFFLOAD_V2_ENCRYPTION_AES_CBC_128 equ 00000040h
        IPSEC_OFFLOAD_V2_ENCRYPTION_AES_CBC_192 equ 00000080h
        IPSEC_OFFLOAD_V2_ENCRYPTION_AES_CBC_256 equ 00000100h
        NDIS_IPSEC_OFFLOAD_V2 struct
          Encapsulation ULONG ?
          IPv6Supported BOOLEAN ?
          IPv4Options BOOLEAN ?
          IPv6NonIPsecExtensionHeaders BOOLEAN ?
          Ah_ BOOLEAN ?
          Esp_ BOOLEAN ?
          AhEspCombined BOOLEAN ?
          Transport BOOLEAN ?
          Tunnel BOOLEAN ?
          TransportTunnelCombined BOOLEAN ?
          LsoSupported BOOLEAN ?
          ExtendedSequenceNumbers BOOLEAN ?
          UdpEsp ULONG ?
          AuthenticationAlgorithms ULONG ?
          EncryptionAlgorithms ULONG ?
          SaOffloadCapacity ULONG ?
        NDIS_IPSEC_OFFLOAD_V2 ends
        _NDIS_IPSEC_OFFLOAD_V2 typedef NDIS_IPSEC_OFFLOAD_V2
        PNDIS_IPSEC_OFFLOAD_V2 typedef ptr NDIS_IPSEC_OFFLOAD_V2
      endif
      if (NDIS_SUPPORT_NDIS630)
        NDIS_TCP_RECV_SEG_COALESCE_OFFLOAD struct
          struct IPv4
            Enabled BOOLEAN ?
          ends
          struct IPv6
            Enabled BOOLEAN ?
          ends
        NDIS_TCP_RECV_SEG_COALESCE_OFFLOAD ends
        _NDIS_TCP_RECV_SEG_COALESCE_OFFLOAD typedef NDIS_TCP_RECV_SEG_COALESCE_OFFLOAD
        PNDIS_TCP_RECV_SEG_COALESCE_OFFLOAD typedef ptr NDIS_TCP_RECV_SEG_COALESCE_OFFLOAD
        NDIS_TCP_RECV_SEG_COALESC_OFFLOAD_REVISION_1 equ 1
        NDIS_SIZEOF_TCP_RECV_SEG_COALESC_OFFLOAD_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_TCP_RECV_SEG_COALESCE_OFFLOAD, IPv6.Enabled)>
        NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_NOT_SUPPORTED equ 00000000h
        NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_INNER_IPV4 equ 00000001h
        NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_OUTER_IPV4 equ 00000002h
        NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_INNER_IPV6 equ 00000004h
        NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_OUTER_IPV6 equ 00000008h
        NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD struct
          if (NDIS_SUPPORT_NDIS685)
          endif
            NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_REC record NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_REC_Reserved:8, NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_REC_UsoSupported:4, NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_REC_VmqSupported:4, NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_REC_RssSupported:4, NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_REC_LsoV2Supported:4, NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_REC_ReceiveChecksumOffloadSupported:4, NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_REC_TransmitChecksumOffloadSupported:4
            NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_BITS NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_REC <>
          endif
          MaxHeaderSizeSupported ULONG ?
        NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD ends
        _NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD typedef NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD
        PNDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD typedef ptr NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD
        NDIS_SIZEOF_ENCAPSULATED_PACKET_TASK_OFFLOAD_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD, MaxHeaderSizeSupported)>
      endif
      if (NDIS_SUPPORT_NDIS650)
        NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2 struct
          if (NDIS_SUPPORT_NDIS685)
          else
          endif
            NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2_REC record NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2_REC_Reserved:12, NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2_REC_Reserved:8, NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2_REC_UsoSupported:4, NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2_REC_VmqSupported:4, NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2_REC_RssSupported:4, NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2_REC_Filler1:20, NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2_REC_LsoV2Supported:4, NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2_REC_ReceiveChecksumOffloadSupported:4, NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2_REC_TransmitChecksumOffloadSupported:4
            NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2_BITS NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2_REC <>
          endif
          MaxHeaderSizeSupported ULONG ?
          union EncapsulationProtocolInfo
            struct VxlanInfo
              VxlanUDPPortNumber USHORT ?
              VxlanInfo_REC record VxlanInfo_REC_Filler:15, VxlanInfo_REC_VxlanUDPPortNumberConfigurable:1
              VxlanInfo_BITS VxlanInfo_REC <>
            ends
            Value ULONG ?
          ends
          Reserved1 ULONG ?
          Reserved2 ULONG ?
        NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2 ends
        _NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2 typedef NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2
        PNDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2 typedef ptr NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2
      endif
      if (NDIS_SUPPORT_NDIS670)
        NDIS_RFC6877_464XLAT_OFFLOAD_OPTIONS typedef SDWORD
        NDIS_RFC6877_464XLAT_OFFLOAD_NOT_SUPPORTED equ 0
        NDIS_RFC6877_464XLAT_OFFLOAD_DISABLED equ 1
        NDIS_RFC6877_464XLAT_OFFLOAD_ENABLED equ 2
        NDIS_RFC6877_464XLAT_OFFLOAD_ON_DEMAND equ 3
        _NDIS_RFC6877_464XLAT_OFFLOAD_OPTIONS typedef NDIS_RFC6877_464XLAT_OFFLOAD_OPTIONS

        NDIS_RFC6877_464XLAT_OFFLOAD struct
          XlatOffload NDIS_RFC6877_464XLAT_OFFLOAD_OPTIONS ?
          Flags ULONG ?
        NDIS_RFC6877_464XLAT_OFFLOAD ends
        _NDIS_RFC6877_464XLAT_OFFLOAD typedef NDIS_RFC6877_464XLAT_OFFLOAD
        PNDIS_RFC6877_464XLAT_OFFLOAD typedef ptr NDIS_RFC6877_464XLAT_OFFLOAD
      endif
      if (NDIS_SUPPORT_NDIS683)
        NDIS_UDP_SEGMENTATION_OFFLOAD struct
          struct IPv4
            Encapsulation ULONG ?
            MaxOffLoadSize ULONG ?
            IPv4_REC record IPv4_REC_Filler:26, IPv4_REC_MinSegmentCount:6
            IPv4_BITS IPv4_REC <>
            if (NDIS_SUPPORT_NDIS684)
              IPv4_REC record IPv4_REC_Filler:6, IPv4_REC_Reserved:25, IPv4_REC_SubMssFinalSegmentSupported:1
              IPv4_BITS IPv4_REC <>
            else
              IPv4_REC record IPv4_REC_Filler:6, IPv4_REC_Reserved:26
              IPv4_BITS IPv4_REC <>
            endif
          ends
          struct IPv6
            Encapsulation ULONG ?
            MaxOffLoadSize ULONG ?
            if (NDIS_SUPPORT_NDIS684)
            else
            endif
            IPv6_REC record IPv6_REC_Reserved2:30, IPv6_REC_IpExtensionHeadersSupported:2, IPv6_REC_Filler1:6, IPv6_REC_Reserved1:26, IPv6_REC_Reserved1:25, IPv6_REC_SubMssFinalSegmentSupported:1, IPv6_REC_MinSegmentCount:6
            IPv6_BITS IPv6_REC <>
          ends
        NDIS_UDP_SEGMENTATION_OFFLOAD ends
        _NDIS_UDP_SEGMENTATION_OFFLOAD typedef NDIS_UDP_SEGMENTATION_OFFLOAD
        PNDIS_UDP_SEGMENTATION_OFFLOAD typedef ptr NDIS_UDP_SEGMENTATION_OFFLOAD
      endif
      NDIS_OFFLOAD_FLAGS_GROUP_CHECKSUM_CAPABILITIES equ 00000001h
      if (NDIS_SUPPORT_NDIS630)
        IPSEC_OFFLOAD_V2_AND_TCP_CHECKSUM_COEXISTENCE equ 00000002h
        IPSEC_OFFLOAD_V2_AND_UDP_CHECKSUM_COEXISTENCE equ 00000004h
      endif
      NDIS_OFFLOAD_REVISION_1 equ 1
      if (NDIS_SUPPORT_NDIS61)
        NDIS_OFFLOAD_REVISION_2 equ 2
      endif
      if (NDIS_SUPPORT_NDIS630)
        NDIS_OFFLOAD_REVISION_3 equ 3
      endif
      if (NDIS_SUPPORT_NDIS650)
        NDIS_OFFLOAD_REVISION_4 equ 4
      endif
      if (NDIS_SUPPORT_NDIS670)
        NDIS_OFFLOAD_REVISION_5 equ 5
      endif
      if (NDIS_SUPPORT_NDIS683)
        NDIS_OFFLOAD_REVISION_6 equ 6
      endif
      if (NDIS_SUPPORT_NDIS685)
        NDIS_OFFLOAD_REVISION_7 equ 7
      endif
      NDIS_OFFLOAD struct
        Header NDIS_OBJECT_HEADER ?
        Checksum NDIS_TCP_IP_CHECKSUM_OFFLOAD <>
        LsoV1 NDIS_TCP_LARGE_SEND_OFFLOAD_V1 <>
        IPsecV1 NDIS_IPSEC_OFFLOAD_V1 <>
        LsoV2 NDIS_TCP_LARGE_SEND_OFFLOAD_V2 <>
        Flags ULONG ?
        if (NDIS_SUPPORT_NDIS61)
          IPsecV2 NDIS_IPSEC_OFFLOAD_V2 <>
        endif
        if (NDIS_SUPPORT_NDIS630)
          Rsc NDIS_TCP_RECV_SEG_COALESCE_OFFLOAD <>
          EncapsulatedPacketTaskOffloadGre NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD <>
        endif
        if (NDIS_SUPPORT_NDIS650)
          EncapsulatedPacketTaskOffloadVxlan NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_V2 <>
          EncapsulationTypes UCHAR ?
        endif
        if (NDIS_SUPPORT_NDIS670)
          Rfc6877Xlat NDIS_RFC6877_464XLAT_OFFLOAD <>
        endif
        if (NDIS_SUPPORT_NDIS683)
          UdpSegmentation NDIS_UDP_SEGMENTATION_OFFLOAD <>
        endif
      NDIS_OFFLOAD ends
      _NDIS_OFFLOAD typedef NDIS_OFFLOAD
      PNDIS_OFFLOAD typedef ptr NDIS_OFFLOAD
      NDIS_SIZEOF_NDIS_OFFLOAD_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_OFFLOAD, Flags)>
      if (NDIS_SUPPORT_NDIS61)
        NDIS_SIZEOF_NDIS_OFFLOAD_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_OFFLOAD, IPsecV2)>
      endif
      if (NDIS_SUPPORT_NDIS630)
        NDIS_SIZEOF_NDIS_OFFLOAD_REVISION_3 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_OFFLOAD, EncapsulatedPacketTaskOffloadGre)>
      endif
      if (NDIS_SUPPORT_NDIS650)
        NDIS_SIZEOF_NDIS_OFFLOAD_REVISION_4 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_OFFLOAD, EncapsulationTypes)>
      endif
      if (NDIS_SUPPORT_NDIS670)
        NDIS_SIZEOF_NDIS_OFFLOAD_REVISION_5 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_OFFLOAD, Rfc6877Xlat)>
      endif
      if (NDIS_SUPPORT_NDIS683)
        NDIS_SIZEOF_NDIS_OFFLOAD_REVISION_6 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_OFFLOAD, UdpSegmentation)>
      endif
      if (NDIS_SUPPORT_NDIS685)
        NDIS_SIZEOF_NDIS_OFFLOAD_REVISION_7 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_OFFLOAD, UdpSegmentation)>
      endif
      NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1 struct
        struct IPv4
          Encapsulation ULONG ?
          MaxOffLoadSize ULONG ?
          MinSegmentCount ULONG ?
          TcpOptions ULONG ?
          IpOptions ULONG ?
        ends
      NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1 ends
      _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1 typedef NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1
      PNDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1 typedef ptr NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1
      NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD struct
        struct IPv4Transmit
          Encapsulation ULONG ?
          IpOptionsSupported ULONG ?
          TcpOptionsSupported ULONG ?
          TcpChecksum ULONG ?
          UdpChecksum ULONG ?
          IpChecksum ULONG ?
        ends
        struct IPv4Receive
          Encapsulation ULONG ?
          IpOptionsSupported ULONG ?
          TcpOptionsSupported ULONG ?
          TcpChecksum ULONG ?
          UdpChecksum ULONG ?
          IpChecksum ULONG ?
        ends
        struct IPv6Transmit
          Encapsulation ULONG ?
          IpExtensionHeadersSupported ULONG ?
          TcpOptionsSupported ULONG ?
          TcpChecksum ULONG ?
          UdpChecksum ULONG ?
        ends
        struct IPv6Receive
          Encapsulation ULONG ?
          IpExtensionHeadersSupported ULONG ?
          TcpOptionsSupported ULONG ?
          TcpChecksum ULONG ?
          UdpChecksum ULONG ?
        ends
      NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD ends
      _NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD typedef NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD
      PNDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD typedef ptr NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD
      NDIS_WMI_IPSEC_OFFLOAD_V1 struct
        struct Supported
          Encapsulation ULONG ?
          AhEspCombined ULONG ?
          TransportTunnelCombined ULONG ?
          IPv4Options ULONG ?
          Flags ULONG ?
        ends
        struct IPv4AH
          Md5 ULONG ?
          Sha_1 ULONG ?
          Transport ULONG ?
          Tunnel ULONG ?
          Send ULONG ?
          Receive ULONG ?
        ends
        struct IPv4ESP
          Des ULONG ?
          Reserved ULONG ?
          TripleDes ULONG ?
          NullEsp ULONG ?
          Transport ULONG ?
          Tunnel ULONG ?
          Send ULONG ?
          Receive ULONG ?
        ends
      NDIS_WMI_IPSEC_OFFLOAD_V1 ends
      _NDIS_WMI_IPSEC_OFFLOAD_V1 typedef NDIS_WMI_IPSEC_OFFLOAD_V1
      PNDIS_WMI_IPSEC_OFFLOAD_V1 typedef ptr NDIS_WMI_IPSEC_OFFLOAD_V1
      NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2 struct
        struct IPv4
          Encapsulation ULONG ?
          MaxOffLoadSize ULONG ?
          MinSegmentCount ULONG ?
        ends
        struct IPv6
          Encapsulation ULONG ?
          MaxOffLoadSize ULONG ?
          MinSegmentCount ULONG ?
          IpExtensionHeadersSupported ULONG ?
          TcpOptionsSupported ULONG ?
        ends
      NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2 ends
      _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2 typedef NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2
      PNDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2 typedef ptr NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2
      NDIS_WMI_OFFLOAD struct
        Header NDIS_OBJECT_HEADER ?
        Checksum NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD <>
        LsoV1 NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1 <>
        IPsecV1 NDIS_WMI_IPSEC_OFFLOAD_V1 <>
        LsoV2 NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2 <>
        Flags ULONG ?
        if (NDIS_SUPPORT_NDIS61)
          IPsecV2 NDIS_IPSEC_OFFLOAD_V2 <>
        endif
        if (NDIS_SUPPORT_NDIS630)
          Rsc NDIS_TCP_RECV_SEG_COALESCE_OFFLOAD <>
          EncapsulatedPacketTaskOffloadGre NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD <>
        endif
        if (NDIS_SUPPORT_NDIS683)
          UdpSegmentation NDIS_UDP_SEGMENTATION_OFFLOAD <>
        endif
      NDIS_WMI_OFFLOAD ends
      _NDIS_WMI_OFFLOAD typedef NDIS_WMI_OFFLOAD
      PNDIS_WMI_OFFLOAD typedef ptr NDIS_WMI_OFFLOAD
      NDIS_SIZEOF_NDIS_WMI_OFFLOAD_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_WMI_OFFLOAD, Flags)>
      if (NDIS_SUPPORT_NDIS61)
        NDIS_SIZEOF_NDIS_WMI_OFFLOAD_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_WMI_OFFLOAD, IPsecV2)>
      endif
      if (NDIS_SUPPORT_NDIS630)
        NDIS_SIZEOF_NDIS_WMI_OFFLOAD_REVISION_3 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_WMI_OFFLOAD, EncapsulatedPacketTaskOffloadGre)>
      endif
      if (NDIS_SUPPORT_NDIS683)
        NDIS_SIZEOF_NDIS_WMI_OFFLOAD_REVISION_4 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_WMI_OFFLOAD, UdpSegmentation)>
      endif
      NDIS_TCP_CONNECTION_OFFLOAD_REVISION_1 equ 1
      if (NDIS_SUPPORT_NDIS61)
        NDIS_TCP_CONNECTION_OFFLOAD_REVISION_2 equ 2
      endif
      NDIS_TCP_CONNECTION_OFFLOAD struct
        Header NDIS_OBJECT_HEADER ?
        Encapsulation ULONG ?
        if (NDIS_SUPPORT_NDIS61)
        endif
          NDIS_TCP_CONNECTION_OFFLOAD_REC record NDIS_TCP_CONNECTION_OFFLOAD_REC_Filler:20, NDIS_TCP_CONNECTION_OFFLOAD_REC_CongestionAlgorithm:4, NDIS_TCP_CONNECTION_OFFLOAD_REC_SupportSack:2, NDIS_TCP_CONNECTION_OFFLOAD_REC_SupportIPv6ExtensionHeaders:2, NDIS_TCP_CONNECTION_OFFLOAD_REC_SupportIPv6:2, NDIS_TCP_CONNECTION_OFFLOAD_REC_SupportIPv4:2
          NDIS_TCP_CONNECTION_OFFLOAD_BITS NDIS_TCP_CONNECTION_OFFLOAD_REC <>
        endif
        TcpConnectionOffloadCapacity ULONG ?
        Flags ULONG ?
      NDIS_TCP_CONNECTION_OFFLOAD ends
      _NDIS_TCP_CONNECTION_OFFLOAD typedef NDIS_TCP_CONNECTION_OFFLOAD
      PNDIS_TCP_CONNECTION_OFFLOAD typedef ptr NDIS_TCP_CONNECTION_OFFLOAD
      NDIS_SIZEOF_TCP_CONNECTION_OFFLOAD_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_TCP_CONNECTION_OFFLOAD, Flags)>
      if (NDIS_SUPPORT_NDIS61)
        NDIS_SIZEOF_TCP_CONNECTION_OFFLOAD_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_TCP_CONNECTION_OFFLOAD, Flags)>
      endif
      NDIS_WMI_TCP_CONNECTION_OFFLOAD struct
        Header NDIS_OBJECT_HEADER ?
        Encapsulation ULONG ?
        SupportIPv4 ULONG ?
        SupportIPv6 ULONG ?
        SupportIPv6ExtensionHeaders ULONG ?
        SupportSack ULONG ?
        TcpConnectionOffloadCapacity ULONG ?
        Flags ULONG ?
      NDIS_WMI_TCP_CONNECTION_OFFLOAD ends
      _NDIS_WMI_TCP_CONNECTION_OFFLOAD typedef NDIS_WMI_TCP_CONNECTION_OFFLOAD
      PNDIS_WMI_TCP_CONNECTION_OFFLOAD typedef ptr NDIS_WMI_TCP_CONNECTION_OFFLOAD
      NDIS_SIZEOF_WMI_TCP_CONNECTION_OFFLOAD_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_WMI_TCP_CONNECTION_OFFLOAD, Flags)>
      include ndis
      NDIS_PORT_AUTHORIZATION_STATE typedef SDWORD
      NdisPortAuthorizationUnknown equ 0
      NdisPortAuthorized equ 1
      NdisPortUnauthorized equ 2
      NdisPortReauthorizing equ 3
      _NDIS_PORT_AUTHORIZATION_STATE typedef NDIS_PORT_AUTHORIZATION_STATE
      PNDIS_PORT_AUTHORIZATION_STATE typedef ptr NDIS_PORT_AUTHORIZATION_STATE
      NDIS_PORT_CONTROL_STATE typedef SDWORD
      NdisPortControlStateUnknown equ 0
      NdisPortControlStateControlled equ 1
      NdisPortControlStateUncontrolled equ 2
      _NDIS_PORT_CONTROL_STATE typedef NDIS_PORT_CONTROL_STATE
      PNDIS_PORT_CONTROL_STATE typedef ptr NDIS_PORT_CONTROL_STATE
      ifdef NDIS_INCLUDE_LEGACY_NAMES
        NDIS_PORT_CONTROLL_STATE typedef NDIS_PORT_CONTROL_STATE
        PNDIS_PORT_CONTROLL_STATE typedef PNDIS_PORT_CONTROL_STATE
      endif
      NDIS_PORT_AUTHENTICATION_PARAMETERS_REVISION_1 equ 1
      NDIS_PORT_AUTHENTICATION_PARAMETERS struct
        Header NDIS_OBJECT_HEADER ?
        SendControlState NDIS_PORT_CONTROL_STATE ?
        RcvControlState NDIS_PORT_CONTROL_STATE ?
        SendAuthorizationState NDIS_PORT_AUTHORIZATION_STATE ?
        RcvAuthorizationState NDIS_PORT_AUTHORIZATION_STATE ?
      NDIS_PORT_AUTHENTICATION_PARAMETERS ends
      _NDIS_PORT_AUTHENTICATION_PARAMETERS typedef NDIS_PORT_AUTHENTICATION_PARAMETERS
      PNDIS_PORT_AUTHENTICATION_PARAMETERS typedef ptr NDIS_PORT_AUTHENTICATION_PARAMETERS
      NDIS_SIZEOF_PORT_AUTHENTICATION_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PORT_AUTHENTICATION_PARAMETERS, RcvAuthorizationState)>
      NDIS_NETWORK_CHANGE_TYPE typedef SDWORD
      NdisPossibleNetworkChange equ 1
      NdisDefinitelyNetworkChange equ 2
      NdisNetworkChangeFromMediaConnect equ 3
      NdisNetworkChangeMax equ 4
      _NDIS_NETWORK_CHANGE_TYPE typedef NDIS_NETWORK_CHANGE_TYPE
      PNDIS_NETWORK_CHANGE_TYPE typedef ptr NDIS_NETWORK_CHANGE_TYPE
      NDIS_WMI_DEFAULT_METHOD_ID equ 1
      NDIS_WMI_OBJECT_TYPE_SET equ 01h
      NDIS_WMI_OBJECT_TYPE_METHOD equ 02h
      NDIS_WMI_OBJECT_TYPE_EVENT equ 03h
      NDIS_WMI_OBJECT_TYPE_ENUM_ADAPTER equ 04h
      NDIS_WMI_OBJECT_TYPE_OUTPUT_INFO equ 05h
      NDIS_WMI_METHOD_HEADER_REVISION_1 equ 1
      NDIS_WMI_METHOD_HEADER struct
        Header NDIS_OBJECT_HEADER ?
        PortNumber NDIS_PORT_NUMBER ?
        NetLuid NET_LUID <>
        RequestId ULONG64 ?
        Timeout ULONG ?
        Padding UCHAR 4 dup (?)
      NDIS_WMI_METHOD_HEADER ends
      _NDIS_WMI_METHOD_HEADER typedef NDIS_WMI_METHOD_HEADER
      PNDIS_WMI_METHOD_HEADER typedef ptr NDIS_WMI_METHOD_HEADER
      NDIS_SIZEOF_WMI_METHOD_HEADER_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_WMI_METHOD_HEADER, Padding)>
      NDIS_WMI_SET_HEADER_REVISION_1 equ 1
      NDIS_WMI_SET_HEADER struct
        Header NDIS_OBJECT_HEADER ?
        PortNumber NDIS_PORT_NUMBER ?
        NetLuid NET_LUID <>
        RequestId ULONG64 ?
        Timeout ULONG ?
        Padding UCHAR 4 dup (?)
      NDIS_WMI_SET_HEADER ends
      _NDIS_WMI_SET_HEADER typedef NDIS_WMI_SET_HEADER
      PNDIS_WMI_SET_HEADER typedef ptr NDIS_WMI_SET_HEADER
      NDIS_SIZEOF_WMI_SET_HEADER_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_WMI_SET_HEADER, Padding)>
      NDIS_WMI_EVENT_HEADER_REVISION_1 equ 1
      NDIS_WMI_EVENT_HEADER struct
        Header NDIS_OBJECT_HEADER ?
        IfIndex NET_IFINDEX ?
        NetLuid NET_LUID <>
        RequestId ULONG64 ?
        PortNumber NDIS_PORT_NUMBER ?
        DeviceNameLength ULONG ?
        DeviceNameOffset ULONG ?
        Padding UCHAR 4 dup (?)
      NDIS_WMI_EVENT_HEADER ends
      _NDIS_WMI_EVENT_HEADER typedef NDIS_WMI_EVENT_HEADER
      PNDIS_WMI_EVENT_HEADER typedef ptr NDIS_WMI_EVENT_HEADER
      NDIS_SIZEOF_WMI_EVENT_HEADER_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_WMI_EVENT_HEADER, Padding)>
      NDIS_WMI_ENUM_ADAPTER_REVISION_1 equ 1
      NDIS_WMI_ENUM_ADAPTER struct
        Header NDIS_OBJECT_HEADER ?
        IfIndex NET_IFINDEX ?
        NetLuid NET_LUID <>
        DeviceNameLength USHORT ?
        DeviceName CHAR 1 dup (?)
      NDIS_WMI_ENUM_ADAPTER ends
      _NDIS_WMI_ENUM_ADAPTER typedef NDIS_WMI_ENUM_ADAPTER
      PNDIS_WMI_ENUM_ADAPTER typedef ptr NDIS_WMI_ENUM_ADAPTER
      NDIS_SIZEOF_WMI_ENUM_ADAPTER_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_WMI_ENUM_ADAPTER, DeviceName)>
      NDIS_DEVICE_TYPE_ENDPOINT equ 00000001h
      if (NDIS_SUPPORT_NDIS61)
        NDIS_HD_SPLIT_PARAMETERS_REVISION_1 equ 1
        NDIS_HD_SPLIT_PARAMETERS struct
          Header NDIS_OBJECT_HEADER ?
          HDSplitCombineFlags ULONG ?
        NDIS_HD_SPLIT_PARAMETERS ends
        _NDIS_HD_SPLIT_PARAMETERS typedef NDIS_HD_SPLIT_PARAMETERS
        PNDIS_HD_SPLIT_PARAMETERS typedef ptr NDIS_HD_SPLIT_PARAMETERS
        NDIS_SIZEOF_HD_SPLIT_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_HD_SPLIT_PARAMETERS, HDSplitCombineFlags)>
        NDIS_HD_SPLIT_COMBINE_ALL_HEADERS equ 00000001h
        NDIS_HD_SPLIT_CURRENT_CONFIG_REVISION_1 equ 1
        NDIS_HD_SPLIT_CURRENT_CONFIG struct
          Header NDIS_OBJECT_HEADER ?
          HardwareCapabilities ULONG ?
          CurrentCapabilities ULONG ?
          HDSplitFlags ULONG ?
          HDSplitCombineFlags ULONG ?
          BackfillSize ULONG ?
          MaxHeaderSize ULONG ?
        NDIS_HD_SPLIT_CURRENT_CONFIG ends
        _NDIS_HD_SPLIT_CURRENT_CONFIG typedef NDIS_HD_SPLIT_CURRENT_CONFIG
        PNDIS_HD_SPLIT_CURRENT_CONFIG typedef ptr NDIS_HD_SPLIT_CURRENT_CONFIG
        NDIS_SIZEOF_HD_SPLIT_CURRENT_CONFIG_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_HD_SPLIT_CURRENT_CONFIG, MaxHeaderSize)>
        NDIS_HD_SPLIT_CAPS_SUPPORTS_HEADER_DATA_SPLIT equ 00000001h
        NDIS_HD_SPLIT_CAPS_SUPPORTS_IPV4_OPTIONS equ 00000002h
        NDIS_HD_SPLIT_CAPS_SUPPORTS_IPV6_EXTENSION_HEADERS equ 00000004h
        NDIS_HD_SPLIT_CAPS_SUPPORTS_TCP_OPTIONS equ 00000008h
        NDIS_HD_SPLIT_ENABLE_HEADER_DATA_SPLIT equ 00000001h
      endif
      NDIS_WMI_OUTPUT_INFO_REVISION_1 equ 1 ;
      NDIS_WMI_OUTPUT_INFO struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        SupportedRevision UCHAR ?
        DataOffset ULONG ?
      NDIS_WMI_OUTPUT_INFO ends
      PNDIS_WMI_OUTPUT_INFO typedef ptr NDIS_WMI_OUTPUT_INFO
      NDIS_SIZEOF_WMI_OUTPUT_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_WMI_OUTPUT_INFO, DataOffset)>
      if (NDIS_SUPPORT_NDIS620)
        NDIS_PM_WOL_BITMAP_PATTERN_SUPPORTED equ 00000001h
        NDIS_PM_WOL_MAGIC_PACKET_SUPPORTED equ 00000002h
        NDIS_PM_WOL_IPV4_TCP_SYN_SUPPORTED equ 00000004h
        NDIS_PM_WOL_IPV6_TCP_SYN_SUPPORTED equ 00000008h
        NDIS_PM_WOL_IPV4_DEST_ADDR_WILDCARD_SUPPORTED equ 00000200h
        NDIS_PM_WOL_IPV6_DEST_ADDR_WILDCARD_SUPPORTED equ 00000800h
        NDIS_PM_WOL_EAPOL_REQUEST_ID_MESSAGE_SUPPORTED equ 00010000h
        NDIS_PM_PROTOCOL_OFFLOAD_ARP_SUPPORTED equ 00000001h
        NDIS_PM_PROTOCOL_OFFLOAD_NS_SUPPORTED equ 00000002h
        NDIS_PM_PROTOCOL_OFFLOAD_80211_RSN_REKEY_SUPPORTED equ 00000080h
        if (NDIS_SUPPORT_NDIS630)
          NDIS_PM_WAKE_ON_MEDIA_CONNECT_SUPPORTED equ 00000001h
          NDIS_PM_WAKE_ON_MEDIA_DISCONNECT_SUPPORTED equ 00000002h
        endif
        if (NDIS_SUPPORT_NDIS630)
          NDIS_WLAN_WAKE_ON_NLO_DISCOVERY_SUPPORTED equ 00000001h
          NDIS_WLAN_WAKE_ON_AP_ASSOCIATION_LOST_SUPPORTED equ 00000002h
          NDIS_WLAN_WAKE_ON_GTK_HANDSHAKE_ERROR_SUPPORTED equ 00000004h
          NDIS_WLAN_WAKE_ON_4WAY_HANDSHAKE_REQUEST_SUPPORTED equ 00000008h
        endif
        if (NDIS_SUPPORT_NDIS630)
          NDIS_WWAN_WAKE_ON_REGISTER_STATE_SUPPORTED equ 00000001h
          NDIS_WWAN_WAKE_ON_SMS_RECEIVE_SUPPORTED equ 00000002h
          NDIS_WWAN_WAKE_ON_USSD_RECEIVE_SUPPORTED equ 00000004h
          NDIS_WWAN_WAKE_ON_PACKET_STATE_SUPPORTED equ 00000008h
          NDIS_WWAN_WAKE_ON_UICC_CHANGE_SUPPORTED equ 00000010h
        endif
        if (NDIS_SUPPORT_NDIS630)
          NDIS_PM_WAKE_PACKET_INDICATION_SUPPORTED equ 00000001h
          NDIS_PM_SELECTIVE_SUSPEND_SUPPORTED equ 00000002h
        endif
        NDIS_PM_WOL_BITMAP_PATTERN_ENABLED equ 00000001h
        NDIS_PM_WOL_MAGIC_PACKET_ENABLED equ 00000002h
        NDIS_PM_WOL_IPV4_TCP_SYN_ENABLED equ 00000004h
        NDIS_PM_WOL_IPV6_TCP_SYN_ENABLED equ 00000008h
        NDIS_PM_WOL_IPV4_DEST_ADDR_WILDCARD_ENABLED equ 00000200h
        NDIS_PM_WOL_IPV6_DEST_ADDR_WILDCARD_ENABLED equ 00000800h
        NDIS_PM_WOL_EAPOL_REQUEST_ID_MESSAGE_ENABLED equ 00010000h
        NDIS_PM_PROTOCOL_OFFLOAD_ARP_ENABLED equ 00000001h
        NDIS_PM_PROTOCOL_OFFLOAD_NS_ENABLED equ 00000002h
        NDIS_PM_PROTOCOL_OFFLOAD_80211_RSN_REKEY_ENABLED equ 00000080h
        NDIS_PM_WAKE_ON_LINK_CHANGE_ENABLED equ 00000001h
        if (NDIS_SUPPORT_NDIS630)
          NDIS_PM_WAKE_ON_MEDIA_DISCONNECT_ENABLED equ 00000002h
          NDIS_PM_SELECTIVE_SUSPEND_ENABLED equ 00000010h
        endif
        if (NDIS_SUPPORT_NDIS630)
          NDIS_WLAN_WAKE_ON_NLO_DISCOVERY_ENABLED equ 00000001h
          NDIS_WLAN_WAKE_ON_AP_ASSOCIATION_LOST_ENABLED equ 00000002h
          NDIS_WLAN_WAKE_ON_GTK_HANDSHAKE_ERROR_ENABLED equ 00000004h
          NDIS_WLAN_WAKE_ON_4WAY_HANDSHAKE_REQUEST_ENABLED equ 00000008h
        endif
        if (NDIS_SUPPORT_NDIS630)
          NDIS_WWAN_WAKE_ON_REGISTER_STATE_ENABLED equ 00000001h
          NDIS_WWAN_WAKE_ON_SMS_RECEIVE_ENABLED equ 00000002h
          NDIS_WWAN_WAKE_ON_USSD_RECEIVE_ENABLED equ 00000004h
        endif
        if (NDIS_SUPPORT_NDIS650)
          NDIS_WWAN_WAKE_ON_PACKET_STATE_ENABLED equ 00000008h
          NDIS_WWAN_WAKE_ON_UICC_CHANGE_ENABLED equ 00000010h
        endif
        NDIS_PM_WOL_PRIORITY_LOWEST equ 0FFFFFFFFh
        NDIS_PM_WOL_PRIORITY_NORMAL equ 10000000h
        NDIS_PM_WOL_PRIORITY_HIGHEST equ 00000001h
        NDIS_PM_PROTOCOL_OFFLOAD_PRIORITY_LOWEST equ 0FFFFFFFFh
        NDIS_PM_PROTOCOL_OFFLOAD_PRIORITY_NORMAL equ 10000000h
        NDIS_PM_PROTOCOL_OFFLOAD_PRIORITY_HIGHEST equ 00000001h
        NDIS_PM_WOL_PACKET typedef SDWORD
        NdisPMWoLPacketUnspecified equ 0
        NdisPMWoLPacketBitmapPattern equ 1
        NdisPMWoLPacketMagicPacket equ 2
        NdisPMWoLPacketIPv4TcpSyn equ 3
        NdisPMWoLPacketIPv6TcpSyn equ 4
        NdisPMWoLPacketEapolRequestIdMessage equ 5
        NdisPMWoLPacketMaximum equ 6
        _NDIS_PM_WOL_PACKET typedef NDIS_PM_WOL_PACKET
        PNDIS_PM_WOL_PACKET typedef ptr NDIS_PM_WOL_PACKET
        NDIS_PM_PROTOCOL_OFFLOAD_TYPE typedef SDWORD
        NdisPMProtocolOffloadIdUnspecified equ 0
        NdisPMProtocolOffloadIdIPv4ARP equ 1
        NdisPMProtocolOffloadIdIPv6NS equ 2
        NdisPMProtocolOffload80211RSNRekey equ 3
        if (NDIS_SUPPORT_NDIS684)
          NdisPMProtocolOffload80211RSNRekeyV2 equ 4
        endif
        NdisPMProtocolOffloadIdMaximum equ 5
        _NDIS_PM_PROTOCOL_OFFLOAD_TYPE typedef NDIS_PM_PROTOCOL_OFFLOAD_TYPE
        PNDIS_PM_PROTOCOL_OFFLOAD_TYPE typedef ptr NDIS_PM_PROTOCOL_OFFLOAD_TYPE
        NDIS_PM_MAX_STRING_SIZE equ 64
        NDIS_PM_COUNTED_STRING struct
          Length_ USHORT ?
          String WCHAR NDIS_PM_MAX_STRING_SIZE + 1 dup (?)
        NDIS_PM_COUNTED_STRING ends
        _NDIS_PM_COUNTED_STRING typedef NDIS_PM_COUNTED_STRING
        PNDIS_PM_COUNTED_STRING typedef ptr NDIS_PM_COUNTED_STRING
        NDIS_PM_CAPABILITIES_REVISION_1 equ 1
        if (NDIS_SUPPORT_NDIS630)
          NDIS_PM_CAPABILITIES_REVISION_2 equ 2
        endif
        NDIS_PM_CAPABILITIES struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          SupportedWoLPacketPatterns ULONG ?
          NumTotalWoLPatterns ULONG ?
          MaxWoLPatternSize ULONG ?
          MaxWoLPatternOffset ULONG ?
          MaxWoLPacketSaveBuffer ULONG ?
          SupportedProtocolOffloads ULONG ?
          NumArpOffloadIPv4Addresses ULONG ?
          NumNSOffloadIPv6Addresses ULONG ?
          MinMagicPacketWakeUp NDIS_DEVICE_POWER_STATE ?
          MinPatternWakeUp NDIS_DEVICE_POWER_STATE ?
          MinLinkChangeWakeUp NDIS_DEVICE_POWER_STATE ?
          if (NDIS_SUPPORT_NDIS630)
            SupportedWakeUpEvents ULONG ?
            MediaSpecificWakeUpEvents ULONG ?
          endif
        NDIS_PM_CAPABILITIES ends
        _NDIS_PM_CAPABILITIES typedef NDIS_PM_CAPABILITIES
        PNDIS_PM_CAPABILITIES typedef ptr NDIS_PM_CAPABILITIES
        NDIS_SIZEOF_NDIS_PM_CAPABILITIES_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PM_CAPABILITIES, MinLinkChangeWakeUp)>
        if (NDIS_SUPPORT_NDIS630)
          NDIS_SIZEOF_NDIS_PM_CAPABILITIES_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PM_CAPABILITIES, MediaSpecificWakeUpEvents)>
        endif
        NDIS_PM_PARAMETERS_REVISION_1 equ 1
        if (NDIS_SUPPORT_NDIS630)
          NDIS_PM_PARAMETERS_REVISION_2 equ 2
        endif
        NDIS_PM_PARAMETERS struct
          Header NDIS_OBJECT_HEADER ?
          EnabledWoLPacketPatterns ULONG ?
          EnabledProtocolOffloads ULONG ?
          WakeUpFlags ULONG ?
          if (NDIS_SUPPORT_NDIS630)
            MediaSpecificWakeUpEvents ULONG ?
          endif
        NDIS_PM_PARAMETERS ends
        _NDIS_PM_PARAMETERS typedef NDIS_PM_PARAMETERS
        PNDIS_PM_PARAMETERS typedef ptr NDIS_PM_PARAMETERS
        NDIS_SIZEOF_NDIS_PM_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PM_PARAMETERS, WakeUpFlags)>
        if (NDIS_SUPPORT_NDIS630)
          NDIS_SIZEOF_NDIS_PM_PARAMETERS_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PM_PARAMETERS, MediaSpecificWakeUpEvents)>
        endif
        EAPOL_REQUEST_ID_WOL_FLAG_MUST_ENCRYPT equ 00000001h
        NDIS_PM_MAX_PATTERN_ID equ 0000FFFFh
        NDIS_PM_PRIVATE_PATTERN_ID equ 00000001h
        NDIS_PM_WOL_PATTERN_REVISION_1 equ 1
        if (NDIS_SUPPORT_NDIS630)
          NDIS_PM_WOL_PATTERN_REVISION_2 equ 2
        endif
        NDIS_PM_WOL_PATTERN struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          Priority ULONG ?
          WoLPacketType NDIS_PM_WOL_PACKET ?
          FriendlyName NDIS_PM_COUNTED_STRING <>
          PatternId ULONG ?
          NextWoLPatternOffset ULONG ?
          union WoLPattern
            struct IPv4TcpSynParameters
              Flags ULONG ?
              IPv4SourceAddress UCHAR 4 dup (?)
              IPv4DestAddress UCHAR 4 dup (?)
              TCPSourcePortNumber USHORT ?
              TCPDestPortNumber USHORT ?
            ends
            struct IPv6TcpSynParameters
              Flags ULONG ?
              IPv6SourceAddress UCHAR 16 dup (?)
              IPv6DestAddress UCHAR 16 dup (?)
              TCPSourcePortNumber USHORT ?
              TCPDestPortNumber USHORT ?
            ends
            struct EapolRequestIdMessageParameters
              Flags ULONG ?
            ends
            struct WoLBitMapPattern
              Flags ULONG ?
              MaskOffset ULONG ?
              MaskSize ULONG ?
              PatternOffset ULONG ?
              PatternSize ULONG ?
            ends
          ends
        NDIS_PM_WOL_PATTERN ends
        _NDIS_PM_WOL_PATTERN typedef NDIS_PM_WOL_PATTERN
        PNDIS_PM_WOL_PATTERN typedef ptr NDIS_PM_WOL_PATTERN
        NDIS_SIZEOF_NDIS_PM_WOL_PATTERN_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PM_WOL_PATTERN, WoLPattern)>
        if (NDIS_SUPPORT_NDIS630)
          NDIS_SIZEOF_NDIS_PM_WOL_PATTERN_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PM_WOL_PATTERN, WoLPattern)>
        endif
        DOT11_RSN_KCK_LENGTH equ 16
        DOT11_RSN_KEK_LENGTH equ 16
        if (NDIS_SUPPORT_NDIS684)
          DOT11_RSN_MAX_CIPHER_KEY_LENGTH equ 32
        endif
        NDIS_PM_PROTOCOL_OFFLOAD_REVISION_1 equ 1
        if (NDIS_SUPPORT_NDIS684)
          NDIS_PM_PROTOCOL_OFFLOAD_REVISION_2 equ 2
        endif
        NDIS_PM_PROTOCOL_OFFLOAD struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          Priority ULONG ?
          ProtocolOffloadType NDIS_PM_PROTOCOL_OFFLOAD_TYPE ?
          FriendlyName NDIS_PM_COUNTED_STRING <>
          ProtocolOffloadId ULONG ?
          NextProtocolOffloadOffset ULONG ?
          union ProtocolOffloadParameters
            struct IPv4ARPParameters
              Flags ULONG ?
              RemoteIPv4Address UCHAR 4 dup (?)
              HostIPv4Address UCHAR 4 dup (?)
              MacAddress UCHAR 6 dup (?)
            ends
            struct IPv6NSParameters
              Flags ULONG ?
              RemoteIPv6Address UCHAR 16 dup (?)
              SolicitedNodeIPv6Address UCHAR 16 dup (?)
              MacAddress UCHAR 6 dup (?)
              TargetIPv6Addresses UCHAR 2 * 16 dup (?)
            ends
            struct Dot11RSNRekeyParameters
              Flags ULONG ?
              KCK UCHAR DOT11_RSN_KCK_LENGTH dup (?)
              KEK UCHAR DOT11_RSN_KEK_LENGTH dup (?)
              KeyReplayCounter ULONGLONG ?
            ends
            if (NDIS_SUPPORT_NDIS684)
              struct Dot11RSNRekeyParametersV2
                Flags ULONG ?
                KeyReplayCounter ULONGLONG ?
                AuthAlgo ULONG ?
                KCKLength ULONG ?
                KEKLength ULONG ?
                KCK UCHAR DOT11_RSN_MAX_CIPHER_KEY_LENGTH dup (?)
                KEK UCHAR DOT11_RSN_MAX_CIPHER_KEY_LENGTH dup (?)
              ends
            endif
          ends
        NDIS_PM_PROTOCOL_OFFLOAD ends
        _NDIS_PM_PROTOCOL_OFFLOAD typedef NDIS_PM_PROTOCOL_OFFLOAD
        PNDIS_PM_PROTOCOL_OFFLOAD typedef ptr NDIS_PM_PROTOCOL_OFFLOAD
        NDIS_SIZEOF_NDIS_PM_PROTOCOL_OFFLOAD_REVISION_1 equ 0F0h
        if (NDIS_SUPPORT_NDIS684)
          NDIS_SIZEOF_NDIS_PM_PROTOCOL_OFFLOAD_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PM_PROTOCOL_OFFLOAD, ProtocolOffloadParameters)>
        endif
        if (NDIS_SUPPORT_NDIS630)
          NDIS_PM_WAKE_REASON_TYPE typedef SDWORD
          NdisWakeReasonUnspecified equ 0000h
          NdisWakeReasonPacket equ 0001h
          NdisWakeReasonMediaDisconnect equ 0002h
          NdisWakeReasonMediaConnect equ 0003h
          NdisWakeReasonWlanNLODiscovery equ 1000h
          NdisWakeReasonWlanAPAssociationLost equ 1001h
          NdisWakeReasonWlanGTKHandshakeError equ 1002h
          NdisWakeReasonWlan4WayHandshakeRequest equ 1003h
          NdisWakeReasonWwanRegisterState equ 2000h
          NdisWakeReasonWwanSMSReceive equ 2001h
          NdisWakeReasonWwanUSSDReceive equ 2002h
          if (NDIS_SUPPORT_NDIS684)
            NdisWakeReasonWwanPacketState equ 2004h
            NdisWakeReasonWwanUiccChange equ 2005h
          endif
          _NDIS_PM_WAKE_REASON_TYPE typedef NDIS_PM_WAKE_REASON_TYPE
          PNDIS_PM_WAKE_REASON_TYPE typedef ptr NDIS_PM_WAKE_REASON_TYPE
          NDIS_PM_WAKE_REASON_REVISION_1 equ 1
          NDIS_PM_WAKE_REASON struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            WakeReason NDIS_PM_WAKE_REASON_TYPE ?
            InfoBufferOffset ULONG ?
            InfoBufferSize ULONG ?
          NDIS_PM_WAKE_REASON ends
          _NDIS_PM_WAKE_REASON typedef NDIS_PM_WAKE_REASON
          PNDIS_PM_WAKE_REASON typedef ptr NDIS_PM_WAKE_REASON
          NDIS_SIZEOF_PM_WAKE_REASON_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PM_WAKE_REASON, InfoBufferSize)>
          NDIS_PM_WAKE_PACKET_REVISION_1 equ 1
          NDIS_PM_WAKE_PACKET struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            PatternId ULONG ?
            PatternFriendlyName NDIS_PM_COUNTED_STRING <>
            OriginalPacketSize ULONG ?
            SavedPacketSize ULONG ?
            SavedPacketOffset ULONG ?
          NDIS_PM_WAKE_PACKET ends
          _NDIS_PM_WAKE_PACKET typedef NDIS_PM_WAKE_PACKET
          PNDIS_PM_WAKE_PACKET typedef ptr NDIS_PM_WAKE_PACKET
          NDIS_SIZEOF_PM_WAKE_PACKET_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PM_WAKE_PACKET, SavedPacketOffset)>
        endif
        NDIS_PM_ADMIN_CONFIG_STATE typedef SDWORD
        NdisPMAdminConfigUnspecified equ 0
        NdisPMAdminConfigDisabled equ 1
        NdisPMAdminConfigEnabled equ 2
        _NDIS_PM_ADMIN_CONFIG_STATE typedef NDIS_PM_ADMIN_CONFIG_STATE
        PNDIS_PM_ADMIN_CONFIG_STATE typedef ptr NDIS_PM_ADMIN_CONFIG_STATE
        NDIS_WMI_PM_ADMIN_CONFIG_REVISION_1 equ 1
        NDIS_WMI_PM_ADMIN_CONFIG struct
          Header NDIS_OBJECT_HEADER ?
          WakeOnPattern NDIS_PM_ADMIN_CONFIG_STATE ?
          WakeOnMagicPacket NDIS_PM_ADMIN_CONFIG_STATE ?
          DeviceSleepOnDisconnect NDIS_PM_ADMIN_CONFIG_STATE ?
          PMARPOffload NDIS_PM_ADMIN_CONFIG_STATE ?
          PMNSOffload NDIS_PM_ADMIN_CONFIG_STATE ?
          PMWiFiRekeyOffload NDIS_PM_ADMIN_CONFIG_STATE ?
        NDIS_WMI_PM_ADMIN_CONFIG ends
        _NDIS_WMI_PM_ADMIN_CONFIG typedef NDIS_WMI_PM_ADMIN_CONFIG
        PNDIS_WMI_PM_ADMIN_CONFIG typedef ptr NDIS_WMI_PM_ADMIN_CONFIG
        NDIS_SIZEOF_WMI_PM_ADMIN_CONFIG_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_WMI_PM_ADMIN_CONFIG, PMWiFiRekeyOffload)>
        NDIS_PM_CAPABILITY_STATE typedef SDWORD
        NdisPMAdminConfigUnsupported equ 0
        NdisPMAdminConfigInactive equ 1
        NdisPMAdminConfigActive equ 2
        _NDIS_PM_CAPABILITY_STATE typedef NDIS_PM_CAPABILITY_STATE
        PNDIS_PM_CAPABILITY_STATE typedef ptr NDIS_PM_CAPABILITY_STATE
        NDIS_WMI_PM_ACTIVE_CAPABILITIES_REVISION_1 equ 1
        NDIS_WMI_PM_ACTIVE_CAPABILITIES struct
          Header NDIS_OBJECT_HEADER ?
          WakeOnPattern NDIS_PM_CAPABILITY_STATE ?
          WakeOnMagicPacket NDIS_PM_CAPABILITY_STATE ?
          DeviceSleepOnDisconnect NDIS_PM_CAPABILITY_STATE ?
          PMARPOffload NDIS_PM_CAPABILITY_STATE ?
          PMNSOffload NDIS_PM_CAPABILITY_STATE ?
          PMWiFiRekeyOffload NDIS_PM_CAPABILITY_STATE ?
        NDIS_WMI_PM_ACTIVE_CAPABILITIES ends
        _NDIS_WMI_PM_ACTIVE_CAPABILITIES typedef NDIS_WMI_PM_ACTIVE_CAPABILITIES
        PNDIS_WMI_PM_ACTIVE_CAPABILITIES typedef ptr NDIS_WMI_PM_ACTIVE_CAPABILITIES
        NDIS_SIZEOF_WMI_PM_ACTIVE_CAPABILITIES_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_WMI_PM_ACTIVE_CAPABILITIES, PMWiFiRekeyOffload)>
        NDIS_RECEIVE_FILTER_MAC_HEADER_SUPPORTED equ 00000001h
        NDIS_RECEIVE_FILTER_IPV4_HEADER_SUPPORTED equ 00000002h
        NDIS_RECEIVE_FILTER_IPV6_HEADER_SUPPORTED equ 00000004h
        NDIS_RECEIVE_FILTER_ARP_HEADER_SUPPORTED equ 00000008h
        NDIS_RECEIVE_FILTER_UDP_HEADER_SUPPORTED equ 00000010h
        NDIS_RECEIVE_FILTER_MAC_HEADER_DEST_ADDR_SUPPORTED equ 00000001h
        NDIS_RECEIVE_FILTER_MAC_HEADER_SOURCE_ADDR_SUPPORTED equ 00000002h
        NDIS_RECEIVE_FILTER_MAC_HEADER_PROTOCOL_SUPPORTED equ 00000004h
        NDIS_RECEIVE_FILTER_MAC_HEADER_VLAN_ID_SUPPORTED equ 00000008h
        NDIS_RECEIVE_FILTER_MAC_HEADER_PRIORITY_SUPPORTED equ 00000010h
        NDIS_RECEIVE_FILTER_MAC_HEADER_PACKET_TYPE_SUPPORTED equ 00000020h
        NDIS_RECEIVE_FILTER_ARP_HEADER_OPERATION_SUPPORTED equ 00000001h
        NDIS_RECEIVE_FILTER_ARP_HEADER_SPA_SUPPORTED equ 00000002h
        NDIS_RECEIVE_FILTER_ARP_HEADER_TPA_SUPPORTED equ 00000004h
        NDIS_RECEIVE_FILTER_IPV4_HEADER_PROTOCOL_SUPPORTED equ 00000001h
        NDIS_RECEIVE_FILTER_IPV6_HEADER_PROTOCOL_SUPPORTED equ 00000001h
        NDIS_RECEIVE_FILTER_UDP_HEADER_DEST_PORT_SUPPORTED equ 00000001h
        NDIS_RECEIVE_FILTER_TEST_HEADER_FIELD_EQUAL_SUPPORTED equ 00000001h
        NDIS_RECEIVE_FILTER_TEST_HEADER_FIELD_MASK_EQUAL_SUPPORTED equ 00000002h
        NDIS_RECEIVE_FILTER_TEST_HEADER_FIELD_NOT_EQUAL_SUPPORTED equ 00000004h
        NDIS_RECEIVE_FILTER_MSI_X_SUPPORTED equ 00000001h
        NDIS_RECEIVE_FILTER_VM_QUEUE_SUPPORTED equ 00000002h
        NDIS_RECEIVE_FILTER_LOOKAHEAD_SPLIT_SUPPORTED equ 00000004h
        if (NDIS_SUPPORT_NDIS630)
          NDIS_RECEIVE_FILTER_DYNAMIC_PROCESSOR_AFFINITY_CHANGE_SUPPORTED equ 00000008h
          NDIS_RECEIVE_FILTER_INTERRUPT_VECTOR_COALESCING_SUPPORTED equ 00000010h
          NDIS_RECEIVE_FILTER_IMPLAT_MIN_OF_QUEUES_MODE equ 00000040h
          NDIS_RECEIVE_FILTER_IMPLAT_SUM_OF_QUEUES_MODE equ 00000080h
          NDIS_RECEIVE_FILTER_PACKET_COALESCING_SUPPORTED_ON_DEFAULT_QUEUE equ 00000100h
          NDIS_RECEIVE_FILTER_ANY_VLAN_SUPPORTED equ 00000020h
        endif
        if (NDIS_SUPPORT_NDIS680)
          NDIS_RECEIVE_FILTER_DYNAMIC_PROCESSOR_AFFINITY_CHANGE_FOR_DEFAULT_QUEUE_SUPPORTED equ 00000040h
        endif
        NDIS_RECEIVE_FILTER_VMQ_FILTERS_ENABLED equ 00000001h
        NDIS_RECEIVE_FILTER_PACKET_COALESCING_FILTERS_ENABLED equ 00000002h
        NDIS_RECEIVE_FILTER_VM_QUEUES_ENABLED equ 00000001h
        NDIS_RECEIVE_FILTER_CAPABILITIES_REVISION_1 equ 1
        if (NDIS_SUPPORT_NDIS630)
          NDIS_RECEIVE_FILTER_CAPABILITIES_REVISION_2 equ 2
        endif
        NDIS_RECEIVE_FILTER_CAPABILITIES struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          EnabledFilterTypes ULONG ?
          EnabledQueueTypes ULONG ?
          NumQueues ULONG ?
          SupportedQueueProperties ULONG ?
          SupportedFilterTests ULONG ?
          SupportedHeaders ULONG ?
          SupportedMacHeaderFields ULONG ?
          MaxMacHeaderFilters ULONG ?
          MaxQueueGroups ULONG ?
          MaxQueuesPerQueueGroup ULONG ?
          MinLookaheadSplitSize ULONG ?
          MaxLookaheadSplitSize ULONG ?
          if (NDIS_SUPPORT_NDIS630)
            SupportedARPHeaderFields ULONG ?
            SupportedIPv4HeaderFields ULONG ?
            SupportedIPv6HeaderFields ULONG ?
            SupportedUdpHeaderFields ULONG ?
            MaxFieldTestsPerPacketCoalescingFilter ULONG ?
            MaxPacketCoalescingFilters ULONG ?
            NdisReserved ULONG ?
          endif
        NDIS_RECEIVE_FILTER_CAPABILITIES ends
        _NDIS_RECEIVE_FILTER_CAPABILITIES typedef NDIS_RECEIVE_FILTER_CAPABILITIES
        PNDIS_RECEIVE_FILTER_CAPABILITIES typedef ptr NDIS_RECEIVE_FILTER_CAPABILITIES
        NDIS_SIZEOF_RECEIVE_FILTER_CAPABILITIES_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_FILTER_CAPABILITIES, MaxLookaheadSplitSize)>
        if (NDIS_SUPPORT_NDIS630)
          NDIS_SIZEOF_RECEIVE_FILTER_CAPABILITIES_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_FILTER_CAPABILITIES, NdisReserved)>
        endif
        if (NDIS_SUPPORT_NDIS630)
          NDIS_NIC_SWITCH_CAPS_VLAN_SUPPORTED equ 00000001h
          NDIS_NIC_SWITCH_CAPS_PER_VPORT_INTERRUPT_MODERATION_SUPPORTED equ 00000002h
          NDIS_NIC_SWITCH_CAPS_ASYMMETRIC_QUEUE_PAIRS_FOR_NONDEFAULT_VPORT_SUPPORTED equ 00000004h
          NDIS_NIC_SWITCH_CAPS_VF_RSS_SUPPORTED equ 00000008h
          NDIS_NIC_SWITCH_CAPS_SINGLE_VPORT_POOL equ 00000010h
          if (NDIS_SUPPORT_NDIS650)
            NDIS_NIC_SWITCH_CAPS_RSS_PARAMETERS_PER_PF_VPORT_SUPPORTED equ 00000020h
          endif
          if (NDIS_SUPPORT_NDIS660)
            NDIS_NIC_SWITCH_CAPS_NIC_SWITCH_WITHOUT_IOV_SUPPORTED equ 00000040h
            NDIS_NIC_SWITCH_CAPS_RSS_ON_PF_VPORTS_SUPPORTED equ 00000080h
            NDIS_NIC_SWITCH_CAPS_RSS_PER_PF_VPORT_INDIRECTION_TABLE_SUPPORTED equ 00000100h
            NDIS_NIC_SWITCH_CAPS_RSS_PER_PF_VPORT_HASH_FUNCTION_SUPPORTED equ 00000200h
            NDIS_NIC_SWITCH_CAPS_RSS_PER_PF_VPORT_HASH_TYPE_SUPPORTED equ 00000400h
            NDIS_NIC_SWITCH_CAPS_RSS_PER_PF_VPORT_HASH_KEY_SUPPORTED equ 00000800h
            NDIS_NIC_SWITCH_CAPS_RSS_PER_PF_VPORT_INDIRECTION_TABLE_SIZE_RESTRICTED equ 00001000h
            NDIS_NIC_SWITCH_CAPS_RSS_PER_PF_VPORT_MASK equ <(NDIS_NIC_SWITCH_CAPS_RSS_PER_PF_VPORT_HASH_KEY_SUPPORTED or NDIS_NIC_SWITCH_CAPS_RSS_PER_PF_VPORT_HASH_FUNCTION_SUPPORTED or NDIS_NIC_SWITCH_CAPS_RSS_PER_PF_VPORT_HASH_TYPE_SUPPORTED or NDIS_NIC_SWITCH_CAPS_RSS_PER_PF_VPORT_INDIRECTION_TABLE_SUPPORTED)>
          endif
        endif
        NDIS_NIC_SWITCH_CAPABILITIES_REVISION_1 equ 1
        if (NDIS_SUPPORT_NDIS630)
          NDIS_NIC_SWITCH_CAPABILITIES_REVISION_2 equ 2
        endif
        if (NDIS_SUPPORT_NDIS660)
          NDIS_NIC_SWITCH_CAPABILITIES_REVISION_3 equ 3
        endif
        NDIS_NIC_SWITCH_CAPABILITIES struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          NdisReserved1 ULONG ?
          NumTotalMacAddresses ULONG ?
          NumMacAddressesPerPort ULONG ?
          NumVlansPerPort ULONG ?
          NdisReserved2 ULONG ?
          NdisReserved3 ULONG ?
          if (NDIS_SUPPORT_NDIS630)
            NicSwitchCapabilities ULONG ?
            MaxNumSwitches ULONG ?
            MaxNumVPorts ULONG ?
            NdisReserved4 ULONG ?
            MaxNumVFs ULONG ?
            MaxNumQueuePairs ULONG ?
            NdisReserved5 ULONG ?
            NdisReserved6 ULONG ?
            NdisReserved7 ULONG ?
            MaxNumQueuePairsPerNonDefaultVPort ULONG ?
            NdisReserved8 ULONG ?
            NdisReserved9 ULONG ?
            NdisReserved10 ULONG ?
            NdisReserved11 ULONG ?
            NdisReserved12 ULONG ?
            MaxNumMacAddresses ULONG ?
            NdisReserved13 ULONG ?
            NdisReserved14 ULONG ?
            NdisReserved15 ULONG ?
            NdisReserved16 ULONG ?
            NdisReserved17 ULONG ?
          endif
          if (NDIS_SUPPORT_NDIS660)
            MaxNumRssCapableNonDefaultPFVPorts ULONG ?
            NumberOfIndirectionTableEntriesForDefaultVPort ULONG ?
            NumberOfIndirectionTableEntriesPerNonDefaultPFVPort ULONG ?
            MaxNumQueuePairsForDefaultVPort ULONG ?
          endif
        NDIS_NIC_SWITCH_CAPABILITIES ends
        _NDIS_NIC_SWITCH_CAPABILITIES typedef NDIS_NIC_SWITCH_CAPABILITIES
        PNDIS_NIC_SWITCH_CAPABILITIES typedef ptr NDIS_NIC_SWITCH_CAPABILITIES
        NDIS_SIZEOF_NIC_SWITCH_CAPABILITIES_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_CAPABILITIES, NdisReserved3)>
        if (NDIS_SUPPORT_NDIS630)
          NDIS_SIZEOF_NIC_SWITCH_CAPABILITIES_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_CAPABILITIES, NdisReserved17)>
        endif
        if (NDIS_SUPPORT_NDIS660)
          NDIS_SIZEOF_NIC_SWITCH_CAPABILITIES_REVISION_3 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_CAPABILITIES, MaxNumQueuePairsForDefaultVPort)>
        endif
        NDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS_REVISION_1 equ 1
        NDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          EnabledFilterTypes ULONG ?
          EnabledQueueTypes ULONG ?
        NDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS ends
        _NDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS typedef NDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS
        PNDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS typedef ptr NDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS
        NDIS_SIZEOF_RECEIVE_FILTER_GLOBAL_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS, EnabledQueueTypes)>
        NDIS_RECEIVE_QUEUE_ID typedef ULONG
        PNDIS_RECEIVE_QUEUE_ID typedef ptr ULONG
        NDIS_RECEIVE_QUEUE_GROUP_ID typedef ULONG
        PNDIS_RECEIVE_QUEUE_GROUP_ID typedef ptr ULONG
        NDIS_DEFAULT_RECEIVE_QUEUE_ID equ 0
        NDIS_DEFAULT_RECEIVE_QUEUE_GROUP_ID equ 0
        NDIS_DEFAULT_RECEIVE_FILTER_ID equ 0
        NDIS_RECEIVE_FILTER_ID typedef ULONG
        PNDIS_RECEIVE_FILTER_ID typedef ptr ULONG
        NDIS_RECEIVE_FILTER_TYPE typedef SDWORD
        NdisReceiveFilterTypeUndefined equ 0
        NdisReceiveFilterTypeVMQueue equ 1
        NdisReceiveFilterTypePacketCoalescing equ 2
        NdisReceiveFilterTypeMaximum equ 3
        _NDIS_RECEIVE_FILTER_TYPE typedef NDIS_RECEIVE_FILTER_TYPE
        PNDIS_RECEIVE_FILTER_TYPE typedef ptr NDIS_RECEIVE_FILTER_TYPE
        NDIS_FRAME_HEADER typedef SDWORD
        NdisFrameHeaderUndefined equ 0
        NdisFrameHeaderMac equ 1
        NdisFrameHeaderArp equ 2
        NdisFrameHeaderIPv4 equ 3
        NdisFrameHeaderIPv6 equ 4
        NdisFrameHeaderUdp equ 5
        NdisFrameHeaderMaximum equ 6
        _NDIS_FRAME_HEADER typedef NDIS_FRAME_HEADER
        PNDIS_FRAME_HEADER typedef ptr NDIS_FRAME_HEADER
        NDIS_MAC_HEADER_FIELD typedef SDWORD
        NdisMacHeaderFieldUndefined equ 0
        NdisMacHeaderFieldDestinationAddress equ 1
        NdisMacHeaderFieldSourceAddress equ 2
        NdisMacHeaderFieldProtocol equ 3
        NdisMacHeaderFieldVlanId equ 4
        NdisMacHeaderFieldPriority equ 5
        NdisMacHeaderFieldPacketType equ 6
        NdisMacHeaderFieldMaximum equ 7
        _NDIS_MAC_HEADER_FIELD typedef NDIS_MAC_HEADER_FIELD
        PNDIS_MAC_HEADER_FIELD typedef ptr NDIS_MAC_HEADER_FIELD
        NDIS_MAC_PACKET_TYPE typedef SDWORD
        NdisMacPacketTypeUndefined equ 0
        NdisMacPacketTypeUnicast equ 1
        NdisMacPacketTypeMulticast equ 2
        NdisMacPacketTypeBroadcast equ 3
        NdisMacPacketTypeMaximum equ 4
        _NDIS_MAC_PACKET_TYPE typedef NDIS_MAC_PACKET_TYPE
        PNDIS_MAC_PACKET_TYPE typedef ptr NDIS_MAC_PACKET_TYPE
        NDIS_ARP_HEADER_FIELD typedef SDWORD
        NdisARPHeaderFieldUndefined equ 0
        NdisARPHeaderFieldOperation equ 1
        NdisARPHeaderFieldSPA equ 2
        NdisARPHeaderFieldTPA equ 3
        NdisARPHeaderFieldMaximum equ 4
        _NDIS_ARP_HEADER_FIELD typedef NDIS_ARP_HEADER_FIELD
        PNDIS_ARP_HEADER_FIELD typedef ptr NDIS_ARP_HEADER_FIELD
        NDIS_IPV4_HEADER_FIELD typedef SDWORD
        NdisIPv4HeaderFieldUndefined equ 0
        NdisIPv4HeaderFieldProtocol equ 1
        NdisIPv4HeaderFieldMaximum equ 2
        _NDIS_IPV4_HEADER_FIELD typedef NDIS_IPV4_HEADER_FIELD
        PNDIS_IPV4_HEADER_FIELD typedef ptr NDIS_IPV4_HEADER_FIELD
        NDIS_IPV6_HEADER_FIELD typedef SDWORD
        NdisIPv6HeaderFieldUndefined equ 0
        NdisIPv6HeaderFieldProtocol equ 1
        NdisIPv6HeaderFieldMaximum equ 2
        _NDIS_IPV6_HEADER_FIELD typedef NDIS_IPV6_HEADER_FIELD
        PNDIS_IPV6_HEADER_FIELD typedef ptr NDIS_IPV6_HEADER_FIELD
        NDIS_UDP_HEADER_FIELD typedef SDWORD
        NdisUdpHeaderFieldUndefined equ 0
        NdisUdpHeaderFieldDestinationPort equ 1
        NdisUdpHeaderFieldMaximum equ 2
        _NDIS_UDP_HEADER_FIELD typedef NDIS_UDP_HEADER_FIELD
        PNDIS_UDP_HEADER_FIELD typedef ptr NDIS_UDP_HEADER_FIELD
        NDIS_RECEIVE_FILTER_TEST typedef SDWORD
        NdisReceiveFilterTestUndefined equ 0
        NdisReceiveFilterTestEqual equ 1
        NdisReceiveFilterTestMaskEqual equ 2
        NdisReceiveFilterTestNotEqual equ 3
        NdisReceiveFilterTestMaximum equ 4
        _NDIS_RECEIVE_FILTER_TEST typedef NDIS_RECEIVE_FILTER_TEST
        PNDIS_RECEIVE_FILTER_TEST typedef ptr NDIS_RECEIVE_FILTER_TEST
        NDIS_RECEIVE_FILTER_FIELD_MAC_HEADER_VLAN_UNTAGGED_OR_ZERO equ 00000001h
        NDIS_RECEIVE_FILTER_RESERVED equ 000000FEh
        NDIS_RECEIVE_FILTER_FIELD_PARAMETERS_REVISION_1 equ 1
        if (NDIS_SUPPORT_NDIS630)
          NDIS_RECEIVE_FILTER_FIELD_PARAMETERS_REVISION_2 equ 2
        endif
        NDIS_RECEIVE_FILTER_FIELD_PARAMETERS struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          FrameHeader NDIS_FRAME_HEADER ?
          ReceiveFilterTest NDIS_RECEIVE_FILTER_TEST ?
          union HeaderField
            MacHeaderField NDIS_MAC_HEADER_FIELD ?
            ArpHeaderField NDIS_ARP_HEADER_FIELD ?
            IPv4HeaderField NDIS_IPV4_HEADER_FIELD ?
            IPv6HeaderField NDIS_IPV6_HEADER_FIELD ?
            UdpHeaderField NDIS_UDP_HEADER_FIELD ?
          ends
          union FieldValue
            FieldByteValue UCHAR ?
            FieldShortValue USHORT ?
            FieldLongValue ULONG ?
            FieldLong64Value ULONG64 ?
            FieldByteArrayValue UCHAR 16 dup (?)
          ends
          union ResultValue
            ResultByteValue UCHAR ?
            ResultShortValue USHORT ?
            ResultLongValue ULONG ?
            ResultLong64Value ULONG64 ?
            ResultByteArrayValue UCHAR 16 dup (?)
          ends
        NDIS_RECEIVE_FILTER_FIELD_PARAMETERS ends
        _NDIS_RECEIVE_FILTER_FIELD_PARAMETERS typedef NDIS_RECEIVE_FILTER_FIELD_PARAMETERS
        PNDIS_RECEIVE_FILTER_FIELD_PARAMETERS typedef ptr NDIS_RECEIVE_FILTER_FIELD_PARAMETERS
        NDIS_SIZEOF_RECEIVE_FILTER_FIELD_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_FILTER_FIELD_PARAMETERS, ResultValue)>
        if (NDIS_SUPPORT_NDIS630)
          NDIS_SIZEOF_RECEIVE_FILTER_FIELD_PARAMETERS_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_FILTER_FIELD_PARAMETERS, ResultValue)>
        endif
        include ndis
        NDIS_RECEIVE_FILTER_FLAGS_RESERVED equ 00000001h
        NDIS_RECEIVE_FILTER_PACKET_ENCAPSULATION_GRE equ 00000002h
        if (NDIS_SUPPORT_NDIS650)
          NDIS_RECEIVE_FILTER_PACKET_ENCAPSULATION equ 00000002h
        endif
        NDIS_RECEIVE_FILTER_PARAMETERS_REVISION_1 equ 1
        if (NDIS_SUPPORT_NDIS630)
          NDIS_RECEIVE_FILTER_PARAMETERS_REVISION_2 equ 2
        endif
        NDIS_RECEIVE_FILTER_PARAMETERS struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          FilterType NDIS_RECEIVE_FILTER_TYPE ?
          QueueId NDIS_RECEIVE_QUEUE_ID ?
          FilterId NDIS_RECEIVE_FILTER_ID ?
          FieldParametersArrayOffset ULONG ?
          FieldParametersArrayNumElements ULONG ?
          FieldParametersArrayElementSize ULONG ?
          RequestedFilterIdBitCount ULONG ?
          if (NDIS_SUPPORT_NDIS630)
            MaxCoalescingDelay ULONG ?
            VPortId NDIS_NIC_SWITCH_VPORT_ID ?
          endif
        NDIS_RECEIVE_FILTER_PARAMETERS ends
        _NDIS_RECEIVE_FILTER_PARAMETERS typedef NDIS_RECEIVE_FILTER_PARAMETERS
        PNDIS_RECEIVE_FILTER_PARAMETERS typedef ptr NDIS_RECEIVE_FILTER_PARAMETERS
        NDIS_SIZEOF_RECEIVE_FILTER_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_FILTER_PARAMETERS, RequestedFilterIdBitCount)>
        if (NDIS_SUPPORT_NDIS630)
          NDIS_SIZEOF_RECEIVE_FILTER_PARAMETERS_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_FILTER_PARAMETERS, VPortId)>
        endif
        NDIS_RECEIVE_FILTER_CLEAR_PARAMETERS_REVISION_1 equ 1
        NDIS_RECEIVE_FILTER_CLEAR_PARAMETERS struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          QueueId NDIS_RECEIVE_QUEUE_ID ?
          FilterId NDIS_RECEIVE_FILTER_ID ?
        NDIS_RECEIVE_FILTER_CLEAR_PARAMETERS ends
        _NDIS_RECEIVE_FILTER_CLEAR_PARAMETERS typedef NDIS_RECEIVE_FILTER_CLEAR_PARAMETERS
        PNDIS_RECEIVE_FILTER_CLEAR_PARAMETERS typedef ptr NDIS_RECEIVE_FILTER_CLEAR_PARAMETERS
        NDIS_SIZEOF_RECEIVE_FILTER_CLEAR_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_FILTER_CLEAR_PARAMETERS, FilterId)>
        NDIS_RECEIVE_QUEUE_TYPE typedef SDWORD
        NdisReceiveQueueTypeUnspecified equ 0
        NdisReceiveQueueTypeVMQueue equ 1
        NdisReceiveQueueTypeMaximum equ 2
        _NDIS_RECEIVE_QUEUE_TYPE typedef NDIS_RECEIVE_QUEUE_TYPE
        PNDIS_RECEIVE_QUEUE_TYPE typedef ptr NDIS_RECEIVE_QUEUE_TYPE
        NDIS_RECEIVE_QUEUE_PARAMETERS_PER_QUEUE_RECEIVE_INDICATION equ 00000001h
        NDIS_RECEIVE_QUEUE_PARAMETERS_LOOKAHEAD_SPLIT_REQUIRED equ 00000002h
        NDIS_RECEIVE_QUEUE_PARAMETERS_FLAGS_CHANGED equ 00010000h
        NDIS_RECEIVE_QUEUE_PARAMETERS_PROCESSOR_AFFINITY_CHANGED equ 00020000h
        NDIS_RECEIVE_QUEUE_PARAMETERS_SUGGESTED_RECV_BUFFER_NUMBERS_CHANGED equ 00040000h
        NDIS_RECEIVE_QUEUE_PARAMETERS_NAME_CHANGED equ 00080000h
        if (NDIS_SUPPORT_NDIS630)
          NDIS_RECEIVE_QUEUE_PARAMETERS_INTERRUPT_COALESCING_DOMAIN_ID_CHANGED equ 00100000h
        endif
        if (NDIS_SUPPORT_NDIS650)
          NDIS_RECEIVE_QUEUE_PARAMETERS_QOS_SQ_ID_CHANGED equ 00200000h
        endif
        NDIS_RECEIVE_QUEUE_PARAMETERS_CHANGE_MASK equ 0FFFF0000h
        NDIS_QUEUE_NAME typedef NDIS_IF_COUNTED_STRING
        PNDIS_QUEUE_NAME typedef ptr NDIS_IF_COUNTED_STRING
        NDIS_VM_NAME typedef NDIS_IF_COUNTED_STRING
        PNDIS_VM_NAME typedef ptr NDIS_IF_COUNTED_STRING
        NDIS_VM_FRIENDLYNAME typedef NDIS_IF_COUNTED_STRING
        PNDIS_VM_FRIENDLYNAME typedef ptr NDIS_IF_COUNTED_STRING
        NDIS_SWITCH_PORT_PROPERTY_PROFILE_NAME typedef NDIS_IF_COUNTED_STRING
        PNDIS_SWITCH_PORT_PROPERTY_PROFILE_NAME typedef ptr NDIS_IF_COUNTED_STRING
        NDIS_SWITCH_PORT_PROPERTY_PROFILE_CDN_LABEL typedef NDIS_IF_COUNTED_STRING
        PNDIS_SWITCH_PORT_PROPERTY_PROFILE_CDN_LABEL typedef ptr NDIS_IF_COUNTED_STRING
        NDIS_SWITCH_NAME typedef NDIS_IF_COUNTED_STRING
        PNDIS_SWITCH_NAME typedef ptr NDIS_IF_COUNTED_STRING
        NDIS_SWITCH_FRIENDLYNAME typedef NDIS_IF_COUNTED_STRING
        PNDIS_SWITCH_FRIENDLYNAME typedef ptr NDIS_IF_COUNTED_STRING
        NDIS_SWITCH_PORT_NAME typedef NDIS_IF_COUNTED_STRING
        PNDIS_SWITCH_PORT_NAME typedef ptr NDIS_IF_COUNTED_STRING
        NDIS_SWITCH_PORT_FRIENDLYNAME typedef NDIS_IF_COUNTED_STRING
        PNDIS_SWITCH_PORT_FRIENDLYNAME typedef ptr NDIS_IF_COUNTED_STRING
        NDIS_SWITCH_NIC_NAME typedef NDIS_IF_COUNTED_STRING
        PNDIS_SWITCH_NIC_NAME typedef ptr NDIS_IF_COUNTED_STRING
        NDIS_SWITCH_NIC_FRIENDLYNAME typedef NDIS_IF_COUNTED_STRING
        PNDIS_SWITCH_NIC_FRIENDLYNAME typedef ptr NDIS_IF_COUNTED_STRING
        NDIS_SWITCH_EXTENSION_FRIENDLYNAME typedef NDIS_IF_COUNTED_STRING
        PNDIS_SWITCH_EXTENSION_FRIENDLYNAME typedef ptr NDIS_IF_COUNTED_STRING
        NDIS_VENDOR_NAME typedef NDIS_IF_COUNTED_STRING
        PNDIS_VENDOR_NAME typedef ptr NDIS_IF_COUNTED_STRING
        if (NDIS_SUPPORT_NDIS650)
          NDIS_QOS_SQ_ID typedef ULONG
          PNDIS_QOS_SQ_ID typedef ptr ULONG
        endif
        NDIS_RECEIVE_QUEUE_PARAMETERS_REVISION_1 equ 1
        if (NDIS_SUPPORT_NDIS630)
          NDIS_RECEIVE_QUEUE_PARAMETERS_REVISION_2 equ 2
        endif
        if (NDIS_SUPPORT_NDIS650)
          NDIS_RECEIVE_QUEUE_PARAMETERS_REVISION_3 equ 3
        endif
        NDIS_RECEIVE_QUEUE_PARAMETERS struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          QueueType NDIS_RECEIVE_QUEUE_TYPE ?
          QueueId NDIS_RECEIVE_QUEUE_ID ?
          QueueGroupId NDIS_RECEIVE_QUEUE_GROUP_ID ?
          ProcessorAffinity GROUP_AFFINITY <>
          NumSuggestedReceiveBuffers ULONG ?
          MSIXTableEntry ULONG ?
          LookaheadSize ULONG ?
          VmName NDIS_VM_NAME <>
          QueueName NDIS_QUEUE_NAME <>
          if (NDIS_SUPPORT_NDIS630)
            PortId ULONG ?
            InterruptCoalescingDomainId ULONG ?
          endif
          if (NDIS_SUPPORT_NDIS650)
            QosSqId NDIS_QOS_SQ_ID ?
          endif
        NDIS_RECEIVE_QUEUE_PARAMETERS ends
        _NDIS_RECEIVE_QUEUE_PARAMETERS typedef NDIS_RECEIVE_QUEUE_PARAMETERS
        PNDIS_RECEIVE_QUEUE_PARAMETERS typedef ptr NDIS_RECEIVE_QUEUE_PARAMETERS
        NDIS_SIZEOF_RECEIVE_QUEUE_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_QUEUE_PARAMETERS, QueueName)>
        if (NDIS_SUPPORT_NDIS630)
          NDIS_SIZEOF_RECEIVE_QUEUE_PARAMETERS_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_QUEUE_PARAMETERS, InterruptCoalescingDomainId)>
        endif
        if (NDIS_SUPPORT_NDIS650)
          NDIS_SIZEOF_RECEIVE_QUEUE_PARAMETERS_REVISION_3 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_QUEUE_PARAMETERS, QosSqId)>
        endif
        NDIS_RECEIVE_QUEUE_FREE_PARAMETERS_REVISION_1 equ 1
        NDIS_RECEIVE_QUEUE_FREE_PARAMETERS struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          QueueId NDIS_RECEIVE_QUEUE_ID ?
        NDIS_RECEIVE_QUEUE_FREE_PARAMETERS ends
        _NDIS_RECEIVE_QUEUE_FREE_PARAMETERS typedef NDIS_RECEIVE_QUEUE_FREE_PARAMETERS
        PNDIS_RECEIVE_QUEUE_FREE_PARAMETERS typedef ptr NDIS_RECEIVE_QUEUE_FREE_PARAMETERS
        NDIS_SIZEOF_RECEIVE_QUEUE_FREE_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_QUEUE_FREE_PARAMETERS, QueueId)>
        NDIS_RECEIVE_QUEUE_OPERATIONAL_STATE typedef SDWORD
        NdisReceiveQueueOperationalStateUndefined equ 0
        NdisReceiveQueueOperationalStateRunning equ 1
        NdisReceiveQueueOperationalStatePaused equ 2
        NdisReceiveQueueOperationalStateDmaStopped equ 3
        NdisReceiveQueueOperationalStateMaximum equ 4
        _NDIS_RECEIVE_QUEUE_OPERATIONAL_STATE typedef NDIS_RECEIVE_QUEUE_OPERATIONAL_STATE
        PNDIS_RECEIVE_QUEUE_OPERATIONAL_STATE typedef ptr NDIS_RECEIVE_QUEUE_OPERATIONAL_STATE
        NDIS_RECEIVE_QUEUE_INFO_REVISION_1 equ 1
        if (NDIS_SUPPORT_NDIS630)
          NDIS_RECEIVE_QUEUE_INFO_REVISION_2 equ 2
        endif
        NDIS_RECEIVE_QUEUE_INFO struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          QueueType NDIS_RECEIVE_QUEUE_TYPE ?
          QueueId NDIS_RECEIVE_QUEUE_ID ?
          QueueGroupId NDIS_RECEIVE_QUEUE_GROUP_ID ?
          QueueState NDIS_RECEIVE_QUEUE_OPERATIONAL_STATE ?
          ProcessorAffinity GROUP_AFFINITY <>
          NumSuggestedReceiveBuffers ULONG ?
          MSIXTableEntry ULONG ?
          LookaheadSize ULONG ?
          VmName NDIS_VM_NAME <>
          QueueName NDIS_QUEUE_NAME <>
          if (NDIS_SUPPORT_NDIS630)
            NumFilters ULONG ?
            InterruptCoalescingDomainId ULONG ?
          endif
        NDIS_RECEIVE_QUEUE_INFO ends
        _NDIS_RECEIVE_QUEUE_INFO typedef NDIS_RECEIVE_QUEUE_INFO
        PNDIS_RECEIVE_QUEUE_INFO typedef ptr NDIS_RECEIVE_QUEUE_INFO
        NDIS_SIZEOF_RECEIVE_QUEUE_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_QUEUE_INFO, QueueName)>
        if (NDIS_SUPPORT_NDIS630)
          NDIS_SIZEOF_RECEIVE_QUEUE_INFO_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_QUEUE_INFO, InterruptCoalescingDomainId)>
        endif
        NDIS_RECEIVE_QUEUE_INFO_ARRAY_REVISION_1 equ 1
        NDIS_RECEIVE_QUEUE_INFO_ARRAY struct
          Header NDIS_OBJECT_HEADER ?
          FirstElementOffset ULONG ?
          NumElements ULONG ?
          ElementSize ULONG ?
        NDIS_RECEIVE_QUEUE_INFO_ARRAY ends
        _NDIS_RECEIVE_QUEUE_INFO_ARRAY typedef NDIS_RECEIVE_QUEUE_INFO_ARRAY
        PNDIS_RECEIVE_QUEUE_INFO_ARRAY typedef ptr NDIS_RECEIVE_QUEUE_INFO_ARRAY
        NDIS_SIZEOF_RECEIVE_QUEUE_INFO_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_QUEUE_INFO_ARRAY, ElementSize)>
        NDIS_RECEIVE_FILTER_INFO_REVISION_1 equ 1
        NDIS_RECEIVE_FILTER_INFO struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          FilterType NDIS_RECEIVE_FILTER_TYPE ?
          FilterId NDIS_RECEIVE_FILTER_ID ?
        NDIS_RECEIVE_FILTER_INFO ends
        _NDIS_RECEIVE_FILTER_INFO typedef NDIS_RECEIVE_FILTER_INFO
        PNDIS_RECEIVE_FILTER_INFO typedef ptr NDIS_RECEIVE_FILTER_INFO
        NDIS_SIZEOF_RECEIVE_FILTER_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_FILTER_INFO, FilterId)>
        NDIS_RECEIVE_FILTER_INFO_ARRAY_REVISION_1 equ 1
        if (NDIS_SUPPORT_NDIS630)
          NDIS_RECEIVE_FILTER_INFO_ARRAY_REVISION_2 equ 2
        endif
        if (NDIS_SUPPORT_NDIS630)
          NDIS_RECEIVE_FILTER_INFO_ARRAY_VPORT_ID_SPECIFIED equ 00000001h
        endif
        NDIS_RECEIVE_FILTER_INFO_ARRAY struct
          Header NDIS_OBJECT_HEADER ?
          QueueId NDIS_RECEIVE_QUEUE_ID ?
          FirstElementOffset ULONG ?
          NumElements ULONG ?
          ElementSize ULONG ?
          if (NDIS_SUPPORT_NDIS630)
            Flags ULONG ?
            VPortId NDIS_NIC_SWITCH_VPORT_ID ?
          endif
        NDIS_RECEIVE_FILTER_INFO_ARRAY ends
        _NDIS_RECEIVE_FILTER_INFO_ARRAY typedef NDIS_RECEIVE_FILTER_INFO_ARRAY
        PNDIS_RECEIVE_FILTER_INFO_ARRAY typedef ptr NDIS_RECEIVE_FILTER_INFO_ARRAY
        NDIS_SIZEOF_RECEIVE_FILTER_INFO_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_FILTER_INFO_ARRAY, ElementSize)>
        if (NDIS_SUPPORT_NDIS630)
          NDIS_SIZEOF_RECEIVE_FILTER_INFO_ARRAY_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_FILTER_INFO_ARRAY, VPortId)>
        endif
        NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS_REVISION_1 equ 1
        NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          QueueId NDIS_RECEIVE_QUEUE_ID ?
          CompletionStatus NDIS_STATUS ?
        NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS ends
        _NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS typedef NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS
        PNDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS typedef ptr NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS
        NDIS_SIZEOF_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS, CompletionStatus)>
        NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY_REVISION_1 equ 1
        NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          FirstElementOffset ULONG ?
          NumElements ULONG ?
          ElementSize ULONG ?
        NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY ends
        _NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY typedef NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY
        PNDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY typedef ptr NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY
        NDIS_SIZEOF_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY, ElementSize)>
      endif
      if ((NTDDI_VERSION ge NTDDI_VISTA) or NDIS_SUPPORT_NDIS6)
        NDIS_RECEIVE_SCALE_CAPABILITIES_REVISION_1 equ 1
        if (NDIS_SUPPORT_NDIS630)
          NDIS_RECEIVE_SCALE_CAPABILITIES_REVISION_2 equ 2
        endif
        if (NDIS_SUPPORT_NDIS660)
          NDIS_RECEIVE_SCALE_CAPABILITIES_REVISION_3 equ 3
        endif
        NDIS_RSS_CAPS_HASH_TYPE_TCP_IPV4 equ 00000100h
        NDIS_RSS_CAPS_HASH_TYPE_TCP_IPV6 equ 00000200h
        NDIS_RSS_CAPS_HASH_TYPE_TCP_IPV6_EX equ 00000400h
        if (NDIS_SUPPORT_NDIS680)
          NDIS_RSS_CAPS_HASH_TYPE_UDP_IPV4 equ 00000800h
          NDIS_RSS_CAPS_HASH_TYPE_UDP_IPV6 equ 00001000h
          NDIS_RSS_CAPS_HASH_TYPE_UDP_IPV6_EX equ 00002000h
        endif
        NDIS_RSS_CAPS_MESSAGE_SIGNALED_INTERRUPTS equ 01000000h
        NDIS_RSS_CAPS_CLASSIFICATION_AT_ISR equ 02000000h
        NDIS_RSS_CAPS_CLASSIFICATION_AT_DPC equ 04000000h
        if NDIS_SUPPORT_NDIS620
          NDIS_RSS_CAPS_USING_MSI_X equ 08000000h
        endif
        if (NDIS_SUPPORT_NDIS630)
          NDIS_RSS_CAPS_RSS_AVAILABLE_ON_PORTS equ 10000000h
          NDIS_RSS_CAPS_SUPPORTS_MSI_X equ 20000000h
        endif
        if (NDIS_SUPPORT_NDIS680)
          NDIS_RSS_CAPS_SUPPORTS_INDEPENDENT_ENTRY_MOVE equ 40000000h
        endif
        NDIS_RSS_CAPS_FLAGS typedef ULONG
        NDIS_RECEIVE_SCALE_CAPABILITIES struct
          Header NDIS_OBJECT_HEADER ?
          CapabilitiesFlags NDIS_RSS_CAPS_FLAGS ?
          NumberOfInterruptMessages ULONG ?
          NumberOfReceiveQueues ULONG ?
          if (NDIS_SUPPORT_NDIS630)
            NumberOfIndirectionTableEntries USHORT ?
          endif
        NDIS_RECEIVE_SCALE_CAPABILITIES ends
        _NDIS_RECEIVE_SCALE_CAPABILITIES typedef NDIS_RECEIVE_SCALE_CAPABILITIES
        PNDIS_RECEIVE_SCALE_CAPABILITIES typedef ptr NDIS_RECEIVE_SCALE_CAPABILITIES
        NDIS_SIZEOF_RECEIVE_SCALE_CAPABILITIES_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_SCALE_CAPABILITIES, NumberOfReceiveQueues)>
        if (NDIS_SUPPORT_NDIS630)
          NDIS_SIZEOF_RECEIVE_SCALE_CAPABILITIES_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_SCALE_CAPABILITIES, NumberOfIndirectionTableEntries)>
        endif
        if (NDIS_SUPPORT_NDIS660)
          NDIS_SIZEOF_RECEIVE_SCALE_CAPABILITIES_REVISION_3 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_SCALE_CAPABILITIES, NumberOfIndirectionTableEntries)>
        endif
        include ndis
        NDIS_RSS_PARAM_FLAG_BASE_CPU_UNCHANGED equ 0001h
        NDIS_RSS_PARAM_FLAG_HASH_INFO_UNCHANGED equ 0002h
        NDIS_RSS_PARAM_FLAG_ITABLE_UNCHANGED equ 0004h
        NDIS_RSS_PARAM_FLAG_HASH_KEY_UNCHANGED equ 0008h
        NDIS_RSS_PARAM_FLAG_DISABLE_RSS equ 0010h
        if (NDIS_SUPPORT_NDIS660)
          NDIS_RSS_PARAM_FLAG_DEFAULT_PROCESSOR_UNCHANGED equ 0020h
        endif
        NDIS_RSS_INDIRECTION_TABLE_SIZE_REVISION_1 equ 128
        NDIS_RSS_HASH_SECRET_KEY_SIZE_REVISION_1 equ 40
        NDIS_RECEIVE_SCALE_PARAMETERS_REVISION_1 equ 1
        if NDIS_SUPPORT_NDIS620
          NDIS_RECEIVE_SCALE_PARAMETERS_REVISION_2 equ 2
        endif
        if NDIS_SUPPORT_NDIS660
          NDIS_RECEIVE_SCALE_PARAMETERS_REVISION_3 equ 3
        endif
        NDIS_RECEIVE_SCALE_PARAMETERS struct
          Header NDIS_OBJECT_HEADER ?
          Flags USHORT ?
          BaseCpuNumber USHORT ?
          HashInformation ULONG ?
          IndirectionTableSize USHORT ?
          IndirectionTableOffset ULONG ?
          HashSecretKeySize USHORT ?
          HashSecretKeyOffset ULONG ?
          if NDIS_SUPPORT_NDIS620
            ProcessorMasksOffset ULONG ?
            NumberOfProcessorMasks ULONG ?
            ProcessorMasksEntrySize ULONG ?
          endif
          if NDIS_SUPPORT_NDIS660
            DefaultProcessorNumber PROCESSOR_NUMBER <>
          endif
        NDIS_RECEIVE_SCALE_PARAMETERS ends
        _NDIS_RECEIVE_SCALE_PARAMETERS typedef NDIS_RECEIVE_SCALE_PARAMETERS
        PNDIS_RECEIVE_SCALE_PARAMETERS typedef ptr NDIS_RECEIVE_SCALE_PARAMETERS
        NDIS_SIZEOF_RECEIVE_SCALE_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_SCALE_PARAMETERS, HashSecretKeyOffset)>
        NDIS_RSS_INDIRECTION_TABLE_MAX_SIZE_REVISION_1 equ 128
        NDIS_RSS_HASH_SECRET_KEY_MAX_SIZE_REVISION_1 equ 40
        if NDIS_SUPPORT_NDIS620
          NDIS_SIZEOF_RECEIVE_SCALE_PARAMETERS_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_SCALE_PARAMETERS, ProcessorMasksEntrySize)>
          NDIS_RSS_INDIRECTION_TABLE_MAX_SIZE_REVISION_2 equ (128 * sizeof(PROCESSOR_NUMBER))
          NDIS_RSS_HASH_SECRET_KEY_MAX_SIZE_REVISION_2 equ 40
        endif
        if NDIS_SUPPORT_NDIS660
          NDIS_SIZEOF_RECEIVE_SCALE_PARAMETERS_REVISION_3 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_SCALE_PARAMETERS, DefaultProcessorNumber)>
          NDIS_RSS_INDIRECTION_TABLE_MAX_SIZE_REVISION_3 equ (128 * sizeof(PROCESSOR_NUMBER))
          NDIS_RSS_HASH_SECRET_KEY_MAX_SIZE_REVISION_3 equ 40
        endif
        if NDIS_SUPPORT_NDIS680
          NDIS_RECEIVE_SCALE_PARAMETERS_V2_REVISION_1 equ 1
          NDIS_RECEIVE_SCALE_PARAM_ENABLE_RSS equ 00000001h
          NDIS_RECEIVE_SCALE_PARAM_HASH_INFO_CHANGED equ 00000002h
          NDIS_RECEIVE_SCALE_PARAM_HASH_KEY_CHANGED equ 00000004h
          NDIS_RECEIVE_SCALE_PARAM_NUMBER_OF_QUEUES_CHANGED equ 00000008h
          NDIS_RECEIVE_SCALE_PARAM_NUMBER_OF_ENTRIES_CHANGED equ 00000010h
          NDIS_RECEIVE_SCALE_PARAMETERS_V2 struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            HashInformation ULONG ?
            HashSecretKeySize ULONG ?
            HashSecretKeyOffset ULONG ?
            NumberOfQueues ULONG ?
            NumberOfIndirectionTableEntries ULONG ?
          NDIS_RECEIVE_SCALE_PARAMETERS_V2 ends
          _NDIS_RECEIVE_SCALE_PARAMETERS_V2 typedef NDIS_RECEIVE_SCALE_PARAMETERS_V2
          PNDIS_RECEIVE_SCALE_PARAMETERS_V2 typedef ptr NDIS_RECEIVE_SCALE_PARAMETERS_V2
          NDIS_SIZEOF_RECEIVE_SCALE_PARAMETERS_V2_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_SCALE_PARAMETERS_V2, NumberOfIndirectionTableEntries)>
          NDIS_RSS_SET_INDIRECTION_ENTRY_FLAG_PRIMARY_PROCESSOR equ 00000001h
          NDIS_RSS_SET_INDIRECTION_ENTRY_FLAG_DEFAULT_PROCESSOR equ 00000002h
          NDIS_RSS_SET_INDIRECTION_ENTRY struct
            SwitchId NDIS_NIC_SWITCH_ID ?
            VPortId NDIS_NIC_SWITCH_VPORT_ID ?
            Flags ULONG ?
            IndirectionTableIndex USHORT ?
            TargetProcessorNumber PROCESSOR_NUMBER <>
            EntryStatus NDIS_STATUS ?
          NDIS_RSS_SET_INDIRECTION_ENTRY ends
          _NDIS_RSS_SET_INDIRECTION_ENTRY typedef NDIS_RSS_SET_INDIRECTION_ENTRY
          PNDIS_RSS_SET_INDIRECTION_ENTRY typedef ptr NDIS_RSS_SET_INDIRECTION_ENTRY
          NDIS_SIZEOF_RSS_SET_INDIRECTION_ENTRY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RSS_SET_INDIRECTION_ENTRY, EntryStatus)>
          NDIS_RSS_SET_INDIRECTION_ENTRIES_REVISION_1 equ 1
          NDIS_RSS_SET_INDIRECTION_ENTRIES struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            RssEntrySize ULONG ?
            RssEntryTableOffset ULONG ?
            NumberOfRssEntries ULONG ?
          NDIS_RSS_SET_INDIRECTION_ENTRIES ends
          _NDIS_RSS_SET_INDIRECTION_ENTRIES typedef NDIS_RSS_SET_INDIRECTION_ENTRIES
          PNDIS_RSS_SET_INDIRECTION_ENTRIES typedef ptr NDIS_RSS_SET_INDIRECTION_ENTRIES
          NDIS_SIZEOF_RSS_SET_INDIRECTION_ENTRIES_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RSS_SET_INDIRECTION_ENTRIES, NumberOfRssEntries)>
        endif
        NDIS_RECEIVE_HASH_FLAG_ENABLE_HASH equ 00000001h
        NDIS_RECEIVE_HASH_FLAG_HASH_INFO_UNCHANGED equ 00000002h
        NDIS_RECEIVE_HASH_FLAG_HASH_KEY_UNCHANGED equ 00000004h
        NDIS_RECEIVE_HASH_PARAMETERS_REVISION_1 equ 1
        NDIS_RECEIVE_HASH_PARAMETERS struct
          Header NDIS_OBJECT_HEADER ?
          Flags ULONG ?
          HashInformation ULONG ?
          HashSecretKeySize USHORT ?
          HashSecretKeyOffset ULONG ?
        NDIS_RECEIVE_HASH_PARAMETERS ends
        _NDIS_RECEIVE_HASH_PARAMETERS typedef NDIS_RECEIVE_HASH_PARAMETERS
        PNDIS_RECEIVE_HASH_PARAMETERS typedef ptr NDIS_RECEIVE_HASH_PARAMETERS
        NDIS_SIZEOF_RECEIVE_HASH_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_HASH_PARAMETERS, HashSecretKeyOffset)>
        NDIS_PROCESSOR_VENDOR typedef SDWORD
        NdisProcessorVendorUnknown equ 0
        NdisProcessorVendorGenuinIntel equ 1
        NdisProcessorVendorGenuineIntel equ NdisProcessorVendorGenuinIntel
        NdisProcessorVendorAuthenticAMD equ 1
        _NDIS_PROCESSOR_VENDOR typedef NDIS_PROCESSOR_VENDOR
        PNDIS_PROCESSOR_VENDOR typedef ptr NDIS_PROCESSOR_VENDOR
        if NDIS_SUPPORT_NDIS620
          NDIS_RSS_PROCESSOR struct
            ProcNum PROCESSOR_NUMBER <>
            PreferenceIndex USHORT ?
            Reserved USHORT ?
          NDIS_RSS_PROCESSOR ends
          _NDIS_RSS_PROCESSOR typedef NDIS_RSS_PROCESSOR
          PNDIS_RSS_PROCESSOR typedef ptr NDIS_RSS_PROCESSOR
          NDIS_SIZEOF_RSS_PROCESSOR_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RSS_PROCESSOR, PreferenceIndex)>
          NDIS_RSS_PROCESSOR_INFO_REVISION_1 equ 1
          if (NDIS_SUPPORT_NDIS630)
            NDIS_RSS_PROCESSOR_INFO_REVISION_2 equ 2
            NDIS_RSS_PROFILE typedef SDWORD
            NdisRssProfileClosest equ 1
            NdisRssProfileClosestStatic equ 2
            NdisRssProfileNuma equ 3
            NdisRssProfileNumaStatic equ 4
            NdisRssProfileConservative equ 5
            NdisRssProfileMaximum equ 6
            _NDIS_RSS_PROFILE typedef NDIS_RSS_PROFILE
            PNDIS_RSS_PROFILE typedef ptr NDIS_RSS_PROFILE
          endif
          NDIS_RSS_PROCESSOR_INFO struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            RssBaseProcessor PROCESSOR_NUMBER <>
            MaxNumRssProcessors ULONG ?
            PreferredNumaNode USHORT ?
            RssProcessorArrayOffset ULONG ?
            RssProcessorCount ULONG ?
            RssProcessorEntrySize ULONG ?
            if (NDIS_SUPPORT_NDIS630)
              RssMaxProcessor PROCESSOR_NUMBER <>
              RssProfile NDIS_RSS_PROFILE ?
            endif
          NDIS_RSS_PROCESSOR_INFO ends
          _NDIS_RSS_PROCESSOR_INFO typedef NDIS_RSS_PROCESSOR_INFO
          PNDIS_RSS_PROCESSOR_INFO typedef ptr NDIS_RSS_PROCESSOR_INFO
          NDIS_SIZEOF_RSS_PROCESSOR_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RSS_PROCESSOR_INFO, RssProcessorEntrySize)>
          if (NDIS_SUPPORT_NDIS630)
            NDIS_SIZEOF_RSS_PROCESSOR_INFO_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RSS_PROCESSOR_INFO, RssProfile)>
          endif
          NDIS_PROCESSOR_INFO_EX struct
            ProcNum PROCESSOR_NUMBER <>
            SocketId ULONG ?
            CoreId ULONG ?
            HyperThreadId ULONG ?
            NodeId USHORT ?
            NodeDistance USHORT ?
          NDIS_PROCESSOR_INFO_EX ends
          _NDIS_PROCESSOR_INFO_EX typedef NDIS_PROCESSOR_INFO_EX
          PNDIS_PROCESSOR_INFO_EX typedef ptr NDIS_PROCESSOR_INFO_EX
          NDIS_SYSTEM_PROCESSOR_INFO_EX_REVISION_1 equ 1
          NDIS_SYSTEM_PROCESSOR_INFO_EX struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            ProcessorVendor NDIS_PROCESSOR_VENDOR ?
            NumSockets ULONG ?
            NumCores ULONG ?
            NumCoresPerSocket ULONG ?
            MaxHyperThreadingProcsPerCore ULONG ?
            ProcessorInfoOffset ULONG ?
            NumberOfProcessors ULONG ?
            ProcessorInfoEntrySize ULONG ?
          NDIS_SYSTEM_PROCESSOR_INFO_EX ends
          _NDIS_SYSTEM_PROCESSOR_INFO_EX typedef NDIS_SYSTEM_PROCESSOR_INFO_EX
          PNDIS_SYSTEM_PROCESSOR_INFO_EX typedef ptr NDIS_SYSTEM_PROCESSOR_INFO_EX
          NDIS_SIZEOF_SYSTEM_PROCESSOR_INFO_EX_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SYSTEM_PROCESSOR_INFO_EX, ProcessorInfoEntrySize)>
          NDIS_HYPERVISOR_PARTITION_TYPE typedef SDWORD
          NdisHypervisorPartitionTypeUnknown equ 0
          NdisHypervisorPartitionTypeMsHvParent equ 1
          NdisHypervisorPartitionMsHvChild equ 2
          NdisHypervisorPartitionTypeMax equ 3
          _NDIS_HYPERVISOR_PARTITION_TYPE typedef NDIS_HYPERVISOR_PARTITION_TYPE
          PNDIS_HYPERVISOR_PARTITION_TYPE typedef ptr NDIS_HYPERVISOR_PARTITION_TYPE
          NDIS_HYPERVISOR_INFO_FLAG_HYPERVISOR_PRESENT equ 00000001h
          NDIS_HYPERVISOR_INFO_REVISION_1 equ 1
          NDIS_HYPERVISOR_INFO struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            PartitionType NDIS_HYPERVISOR_PARTITION_TYPE ?
          NDIS_HYPERVISOR_INFO ends
          _NDIS_HYPERVISOR_INFO typedef NDIS_HYPERVISOR_INFO
          PNDIS_HYPERVISOR_INFO typedef ptr NDIS_HYPERVISOR_INFO
          NDIS_SIZEOF_HYPERVISOR_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_HYPERVISOR_INFO, PartitionType)>
          NDIS_WMI_GROUP_AFFINITY struct
            Mask_ ULONG64 ?
            Group_ USHORT ?
            Reserved USHORT 3 dup (?)
          NDIS_WMI_GROUP_AFFINITY ends
          _NDIS_WMI_GROUP_AFFINITY typedef NDIS_WMI_GROUP_AFFINITY
          PNDIS_WMI_GROUP_AFFINITY typedef ptr NDIS_WMI_GROUP_AFFINITY
          NDIS_WMI_RECEIVE_QUEUE_PARAMETERS_REVISION_1 equ 1
          NDIS_WMI_RECEIVE_QUEUE_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            QueueType NDIS_RECEIVE_QUEUE_TYPE ?
            QueueId NDIS_RECEIVE_QUEUE_ID ?
            QueueGroupId NDIS_RECEIVE_QUEUE_GROUP_ID ?
            ProcessorAffinity NDIS_WMI_GROUP_AFFINITY <>
            NumSuggestedReceiveBuffers ULONG ?
            MSIXTableEntry ULONG ?
            LookaheadSize ULONG ?
            VmName NDIS_VM_NAME <>
            QueueName NDIS_QUEUE_NAME <>
          NDIS_WMI_RECEIVE_QUEUE_PARAMETERS ends
          _NDIS_WMI_RECEIVE_QUEUE_PARAMETERS typedef NDIS_WMI_RECEIVE_QUEUE_PARAMETERS
          PNDIS_WMI_RECEIVE_QUEUE_PARAMETERS typedef ptr NDIS_WMI_RECEIVE_QUEUE_PARAMETERS
          NDIS_SIZEOF_WMI_RECEIVE_QUEUE_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_WMI_RECEIVE_QUEUE_PARAMETERS, QueueName)>
          NDIS_WMI_RECEIVE_QUEUE_INFO_REVISION_1 equ 1
          NDIS_WMI_RECEIVE_QUEUE_INFO struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            QueueType NDIS_RECEIVE_QUEUE_TYPE ?
            QueueId NDIS_RECEIVE_QUEUE_ID ?
            QueueGroupId NDIS_RECEIVE_QUEUE_GROUP_ID ?
            QueueState NDIS_RECEIVE_QUEUE_OPERATIONAL_STATE ?
            ProcessorAffinity NDIS_WMI_GROUP_AFFINITY <>
            NumSuggestedReceiveBuffers ULONG ?
            MSIXTableEntry ULONG ?
            LookaheadSize ULONG ?
            VmName NDIS_VM_NAME <>
            QueueName NDIS_QUEUE_NAME <>
          NDIS_WMI_RECEIVE_QUEUE_INFO ends
          _NDIS_WMI_RECEIVE_QUEUE_INFO typedef NDIS_WMI_RECEIVE_QUEUE_INFO
          PNDIS_WMI_RECEIVE_QUEUE_INFO typedef ptr NDIS_WMI_RECEIVE_QUEUE_INFO
          NDIS_SIZEOF_WMI_RECEIVE_QUEUE_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_WMI_RECEIVE_QUEUE_INFO, QueueName)>
        endif
        if (NDIS_SUPPORT_NDIS630)
          include ndkinfo.inc
          NDIS_NDK_PERFORMANCE_COUNTERS struct
            Connect ULONG64 ?
            Accept ULONG64 ?
            ConnectFailure ULONG64 ?
            ConnectionError ULONG64 ?
            ActiveConnection ULONG64 ?
            Reserved01 ULONG64 ?
            Reserved02 ULONG64 ?
            Reserved03 ULONG64 ?
            Reserved04 ULONG64 ?
            Reserved05 ULONG64 ?
            Reserved06 ULONG64 ?
            Reserved07 ULONG64 ?
            Reserved08 ULONG64 ?
            Reserved09 ULONG64 ?
            Reserved10 ULONG64 ?
            Reserved11 ULONG64 ?
            Reserved12 ULONG64 ?
            Reserved13 ULONG64 ?
            Reserved14 ULONG64 ?
            Reserved15 ULONG64 ?
            Reserved16 ULONG64 ?
            Reserved17 ULONG64 ?
            Reserved18 ULONG64 ?
            Reserved19 ULONG64 ?
            Reserved20 ULONG64 ?
            CQError ULONG64 ?
            RDMAInOctets ULONG64 ?
            RDMAOutOctets ULONG64 ?
            RDMAInFrames ULONG64 ?
            RDMAOutFrames ULONG64 ?
          NDIS_NDK_PERFORMANCE_COUNTERS ends
          _NDIS_NDK_PERFORMANCE_COUNTERS typedef NDIS_NDK_PERFORMANCE_COUNTERS
          PNDIS_NDK_PERFORMANCE_COUNTERS typedef ptr NDIS_NDK_PERFORMANCE_COUNTERS
          NDIS_NDK_PERFORMANCE_COUNTER_MASK macro CounterFieldName
            exitm <(1 shl (FIELD_OFFSET(NDIS_NDK_PERFORMANCE_COUNTERS, CounterFieldName) / sizeof(ULONG64)))>
          endm
          NDIS_NDK_CAPABILITIES_REVISION_1 equ 1
          NDIS_NDK_CAPABILITIES struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            MaxQpCount ULONG ?
            MaxCqCount ULONG ?
            MaxMrCount ULONG ?
            MaxPdCount ULONG ?
            MaxInboundReadLimit ULONG ?
            MaxOutboundReadLimit ULONG ?
            MaxMwCount ULONG ?
            MaxSrqCount ULONG ?
            MissingCounterMask ULONG64 ?
            NdkInfo POINTER ?
          NDIS_NDK_CAPABILITIES ends
          _NDIS_NDK_CAPABILITIES typedef NDIS_NDK_CAPABILITIES
          PNDIS_NDK_CAPABILITIES typedef ptr NDIS_NDK_CAPABILITIES
          NDIS_SIZEOF_NDK_CAPABILITIES_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NDK_CAPABILITIES, NdkInfo)>
          OID_NDK_SET_STATE equ 0FC040201h
          OID_NDK_STATISTICS equ 0FC040202h
          OID_NDK_CONNECTIONS equ 0FC040203h
          OID_NDK_LOCAL_ENDPOINTS equ 0FC040204h
          NDK_WMI_ADAPTER_INFO struct
            Version NDK_VERSION <>
            VendorId UINT32 ?
            DeviceId UINT32 ?
            MaxRegistrationSize ULONGLONG ?
            MaxWindowSize ULONGLONG ?
            FRMRPageCount ULONG ?
            MaxInitiatorRequestSge ULONG ?
            MaxReceiveRequestSge ULONG ?
            MaxReadRequestSge ULONG ?
            MaxTransferLength ULONG ?
            MaxInlineDataSize ULONG ?
            MaxInboundReadLimit ULONG ?
            MaxOutboundReadLimit ULONG ?
            MaxReceiveQueueDepth ULONG ?
            MaxInitiatorQueueDepth ULONG ?
            MaxSrqDepth ULONG ?
            MaxCqDepth ULONG ?
            LargeRequestThreshold ULONG ?
            MaxCallerData ULONG ?
            MaxCalleeData ULONG ?
            AdapterFlags ULONG ?
            if (NDIS_SUPPORT_NDIS650)
              RdmaTechnology NDK_RDMA_TECHNOLOGY ?
            endif
          NDK_WMI_ADAPTER_INFO ends
          _NDK_WMI_ADAPTER_INFO typedef NDK_WMI_ADAPTER_INFO
          PNDK_WMI_ADAPTER_INFO typedef ptr NDK_WMI_ADAPTER_INFO
          if (NDIS_SUPPORT_NDIS650)
            NDIS_SIZEOF_NDK_WMI_ADAPTER_INFO_REVISION_1 equ <FIELD_OFFSET (NDK_WMI_ADAPTER_INFO, RdmaTechnology)>
            NDIS_SIZEOF_NDK_WMI_ADAPTER_INFO_REVISION_2 equ <sizeof(NDK_WMI_ADAPTER_INFO)>
          endif
          NDIS_WMI_NDK_CAPABILITIES struct
            MaxQpCount ULONG ?
            MaxCqCount ULONG ?
            MaxMrCount ULONG ?
            MaxPdCount ULONG ?
            MaxInboundReadLimit ULONG ?
            MaxOutboundReadLimit ULONG ?
            MaxMwCount ULONG ?
            MaxSrqCount ULONG ?
            MissingCounterMask ULONG64 ?
            NdkInfo NDK_WMI_ADAPTER_INFO <>
          NDIS_WMI_NDK_CAPABILITIES ends
          _NDIS_WMI_NDK_CAPABILITIES typedef NDIS_WMI_NDK_CAPABILITIES
          PNDIS_WMI_NDK_CAPABILITIES typedef ptr NDIS_WMI_NDK_CAPABILITIES
          if (NDIS_SUPPORT_NDIS650)
            NDIS_SIZEOF_NDK_WMI_CAPABILITIES_REVISION_1 equ <(FIELD_OFFSET (NDIS_WMI_NDK_CAPABILITIES, NdkInfo) + NDIS_SIZEOF_NDK_WMI_ADAPTER_INFO_REVISION_1)>
            NDIS_SIZEOF_NDK_WMI_CAPABILITIES_REVISION_2 equ <(FIELD_OFFSET (NDIS_WMI_NDK_CAPABILITIES, NdkInfo) + NDIS_SIZEOF_NDK_WMI_ADAPTER_INFO_REVISION_2)>
          endif
          DEFINE_GUID GUID_NDIS_NDK_CAPABILITIES, 7969ba4dh, 0dd80h, 4bc7h, 0b3h, 0e6h, 68h, 04h, 39h, 97h, 0e5h, 19h
          DEFINE_GUID GUID_NDIS_NDK_STATE, 530c69c9h, 2f51h, 49deh, 0a1h, 0afh, 08h, 8dh, 54h, 0ffh, 0a4h, 74h
          NDIS_NDK_STATISTICS_INFO_REVISION_1 equ 1
          NDIS_NDK_STATISTICS_INFO struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            CounterSet NDIS_NDK_PERFORMANCE_COUNTERS <>
          NDIS_NDK_STATISTICS_INFO ends
          _NDIS_NDK_STATISTICS_INFO typedef NDIS_NDK_STATISTICS_INFO
          NDIS_SIZEOF_NDK_STATISTICS_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NDK_STATISTICS_INFO, CounterSet)>
          include ws2def.inc
          include ws2ipdef.inc
          NDIS_NDK_CONNECTION_ENTRY struct
            Local_ SOCKADDR_INET <>
            Remote SOCKADDR_INET <>
            UserModeOwner BOOLEAN ?
            OwnerPid ULONG ?
          NDIS_NDK_CONNECTION_ENTRY ends
          _NDIS_NDK_CONNECTION_ENTRY typedef NDIS_NDK_CONNECTION_ENTRY
          NDIS_NDK_CONNECTIONS_REVISION_1 equ 1
          NDIS_NDK_CONNECTIONS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            Count ULONG ?
            NDConnectionsMappedtoTCPConnections BOOLEAN ?
            Connections NDIS_NDK_CONNECTION_ENTRY 1 dup (<>)
          NDIS_NDK_CONNECTIONS ends
          _NDIS_NDK_CONNECTIONS typedef NDIS_NDK_CONNECTIONS
          NDIS_SIZEOF_NDK_CONNECTIONS_REVISION_1 macro n
            exitm <FIELD_OFFSET(NDIS_NDK_CONNECTIONS, Connections [ n ])>
          endm
          NDIS_NDK_LOCAL_ENDPOINT_ENTRY struct
            Local_ SOCKADDR_INET <>
            UserModeOwner BOOLEAN ?
            Listener BOOLEAN ?
            OwnerPid ULONG ?
          NDIS_NDK_LOCAL_ENDPOINT_ENTRY ends
          _NDIS_NDK_LOCAL_ENDPOINT_ENTRY typedef NDIS_NDK_LOCAL_ENDPOINT_ENTRY
          NDIS_NDK_LOCAL_ENDPOINTS_REVISION_1 equ 1
          NDIS_NDK_LOCAL_ENDPOINTS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            Count ULONG ?
            NDLocalEndpointsMappedtoTCPLocalEndpoints BOOLEAN ?
            LocalEndpoints NDIS_NDK_LOCAL_ENDPOINT_ENTRY 1 dup (<>)
          NDIS_NDK_LOCAL_ENDPOINTS ends
          _NDIS_NDK_LOCAL_ENDPOINTS typedef NDIS_NDK_LOCAL_ENDPOINTS
          NDIS_SIZEOF_NDK_LOCAL_ENDPOINTS_REVISION_1 macro n
            exitm <FIELD_OFFSET(NDIS_NDK_LOCAL_ENDPOINTS, LocalEndpoints [ n ])>
          endm
          OID_QOS_HARDWARE_CAPABILITIES equ 0FC050001h
          OID_QOS_CURRENT_CAPABILITIES equ 0FC050002h
          OID_QOS_PARAMETERS equ 0FC050003h
          OID_QOS_OPERATIONAL_PARAMETERS equ 0FC050004h
          OID_QOS_REMOTE_PARAMETERS equ 0FC050005h
          NDIS_QOS_MAXIMUM_PRIORITIES equ 8
          NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES equ 8
          NDIS_QOS_CAPABILITIES_STRICT_TSA_SUPPORTED equ 00000001h
          NDIS_QOS_CAPABILITIES_MACSEC_BYPASS_SUPPORTED equ 00000002h
          NDIS_QOS_CAPABILITIES_CEE_DCBX_SUPPORTED equ 00000004h
          NDIS_QOS_CAPABILITIES_IEEE_DCBX_SUPPORTED equ 00000008h
          NDIS_QOS_CAPABILITIES_REVISION_1 equ 1
          NDIS_QOS_CAPABILITIES struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            MaxNumTrafficClasses ULONG ?
            MaxNumEtsCapableTrafficClasses ULONG ?
            MaxNumPfcEnabledTrafficClasses ULONG ?
          NDIS_QOS_CAPABILITIES ends
          _NDIS_QOS_CAPABILITIES typedef NDIS_QOS_CAPABILITIES
          PNDIS_QOS_CAPABILITIES typedef ptr NDIS_QOS_CAPABILITIES
          NDIS_SIZEOF_QOS_CAPABILITIES_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_QOS_CAPABILITIES, MaxNumPfcEnabledTrafficClasses)>
          NDIS_QOS_CLASSIFICATION_SET_BY_MINIPORT_MASK equ 0FF000000h
          NDIS_QOS_CLASSIFICATION_ENFORCED_BY_MINIPORT equ 01000000h
          NDIS_QOS_CONDITION_RESERVED equ 0h
          NDIS_QOS_CONDITION_DEFAULT equ 1h
          NDIS_QOS_CONDITION_TCP_PORT equ 2h
          NDIS_QOS_CONDITION_UDP_PORT equ 3h
          NDIS_QOS_CONDITION_TCP_OR_UDP_PORT equ 4h
          NDIS_QOS_CONDITION_ETHERTYPE equ 5h
          NDIS_QOS_CONDITION_NETDIRECT_PORT equ 6h
          NDIS_QOS_CONDITION_MAXIMUM equ 7h
          NDIS_QOS_ACTION_PRIORITY equ 0h
          NDIS_QOS_ACTION_MAXIMUM equ 1h
          NDIS_QOS_CLASSIFICATION_ELEMENT_REVISION_1 equ 1
          NDIS_QOS_CLASSIFICATION_ELEMENT struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            ConditionSelector USHORT ?
            ConditionField USHORT ?
            ActionSelector USHORT ?
            ActionField USHORT ?
          NDIS_QOS_CLASSIFICATION_ELEMENT ends
          _NDIS_QOS_CLASSIFICATION_ELEMENT typedef NDIS_QOS_CLASSIFICATION_ELEMENT
          PNDIS_QOS_CLASSIFICATION_ELEMENT typedef ptr NDIS_QOS_CLASSIFICATION_ELEMENT
          NDIS_SIZEOF_QOS_CLASSIFICATION_ELEMENT_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_QOS_CLASSIFICATION_ELEMENT, ActionField)>
          NDIS_QOS_PARAMETERS_ETS_CHANGED equ 00000001h
          NDIS_QOS_PARAMETERS_ETS_CONFIGURED equ 00000002h
          NDIS_QOS_PARAMETERS_PFC_CHANGED equ 00000100h
          NDIS_QOS_PARAMETERS_PFC_CONFIGURED equ 00000200h
          NDIS_QOS_PARAMETERS_CLASSIFICATION_CHANGED equ 00010000h
          NDIS_QOS_PARAMETERS_CLASSIFICATION_CONFIGURED equ 00020000h
          NDIS_QOS_PARAMETERS_WILLING equ 80000000h
          NDIS_QOS_TSA_STRICT equ 0h
          NDIS_QOS_TSA_CBS equ 1h
          NDIS_QOS_TSA_ETS equ 2h
          NDIS_QOS_TSA_MAXIMUM equ 3h
          NDIS_QOS_PARAMETERS_REVISION_1 equ 1
          NDIS_QOS_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            NumTrafficClasses ULONG ?
            PriorityAssignmentTable UCHAR NDIS_QOS_MAXIMUM_PRIORITIES dup (?)
            TcBandwidthAssignmentTable UCHAR NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES dup (?)
            TsaAssignmentTable UCHAR NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES dup (?)
            PfcEnable ULONG ?
            NumClassificationElements ULONG ?
            ClassificationElementSize ULONG ?
            FirstClassificationElementOffset ULONG ?
          NDIS_QOS_PARAMETERS ends
          _NDIS_QOS_PARAMETERS typedef NDIS_QOS_PARAMETERS
          PNDIS_QOS_PARAMETERS typedef ptr NDIS_QOS_PARAMETERS
          NDIS_SIZEOF_QOS_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_QOS_PARAMETERS, FirstClassificationElementOffset)>
          NDIS_NIC_SWITCH_FRIENDLYNAME typedef NDIS_IF_COUNTED_STRING
          PNDIS_NIC_SWITCH_FRIENDLYNAME typedef ptr NDIS_IF_COUNTED_STRING
          NDIS_VPORT_NAME typedef NDIS_IF_COUNTED_STRING
          PNDIS_VPORT_NAME typedef ptr NDIS_IF_COUNTED_STRING
          NDIS_SRIOV_FUNCTION_ID typedef USHORT
          PNDIS_SRIOV_FUNCTION_ID typedef ptr USHORT
          NDIS_VF_RID typedef ULONG
          PNDIS_VF_RID typedef ptr ULONG
          NDIS_PF_FUNCTION_ID equ -1
          NDIS_INVALID_VF_FUNCTION_ID equ -1
          NDIS_INVALID_RID equ -1
          NDIS_DEFAULT_VPORT_ID equ 0
          NDIS_INVALID_VPORT_ID equ -1
          NDIS_DEFAULT_SWITCH_ID equ 0
          NDIS_INVALID_SWITCH_ID equ -1
          NDIS_NIC_SWITCH_TYPE typedef SDWORD
          NdisNicSwitchTypeUnspecified equ 0
          NdisNicSwitchTypeExternal equ 1
          NdisNicSwitchTypeMax equ 2
          _NDIS_NIC_SWITCH_TYPE typedef NDIS_NIC_SWITCH_TYPE
          PNDIS_NIC_SWITCH_TYPE typedef ptr NDIS_NIC_SWITCH_TYPE
          NDIS_NIC_SWITCH_PARAMETERS_CHANGE_MASK equ 0FFFF0000h
          NDIS_NIC_SWITCH_PARAMETERS_SWITCH_NAME_CHANGED equ 00010000h
          NDIS_NIC_SWITCH_PARAMETERS_DEFAULT_NUMBER_OF_QUEUE_PAIRS_FOR_DEFAULT_VPORT equ 1
          NDIS_NIC_SWITCH_PARAMETERS_REVISION_1 equ 1
          if (NDIS_SUPPORT_NDIS660)
            NDIS_NIC_SWITCH_PARAMETERS_REVISION_2 equ 2
          endif
          NDIS_NIC_SWITCH_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            SwitchType NDIS_NIC_SWITCH_TYPE ?
            SwitchId NDIS_NIC_SWITCH_ID ?
            SwitchFriendlyName NDIS_NIC_SWITCH_FRIENDLYNAME <>
            NumVFs ULONG ?
            NdisReserved1 ULONG ?
            NdisReserved2 ULONG ?
            NdisReserved3 ULONG ?
            if (NDIS_SUPPORT_NDIS660)
              NumQueuePairsForDefaultVPort ULONG ?
            endif
          NDIS_NIC_SWITCH_PARAMETERS ends
          _NDIS_NIC_SWITCH_PARAMETERS typedef NDIS_NIC_SWITCH_PARAMETERS
          PNDIS_NIC_SWITCH_PARAMETERS typedef ptr NDIS_NIC_SWITCH_PARAMETERS
          NDIS_SIZEOF_NIC_SWITCH_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_PARAMETERS, NdisReserved3)>
          if (NDIS_SUPPORT_NDIS660)
            NDIS_SIZEOF_NIC_SWITCH_PARAMETERS_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_PARAMETERS, NumQueuePairsForDefaultVPort)>
          endif
          NDIS_NIC_SWITCH_DELETE_SWITCH_PARAMETERS_REVISION_1 equ 1
          NDIS_NIC_SWITCH_DELETE_SWITCH_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            SwitchId NDIS_NIC_SWITCH_ID ?
          NDIS_NIC_SWITCH_DELETE_SWITCH_PARAMETERS ends
          _NDIS_NIC_SWITCH_DELETE_SWITCH_PARAMETERS typedef NDIS_NIC_SWITCH_DELETE_SWITCH_PARAMETERS
          PNDIS_NIC_SWITCH_DELETE_SWITCH_PARAMETERS typedef ptr NDIS_NIC_SWITCH_DELETE_SWITCH_PARAMETERS
          NDIS_SIZEOF_NIC_SWITCH_DELETE_SWITCH_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_DELETE_SWITCH_PARAMETERS, SwitchId)>
          NDIS_NIC_SWITCH_INFO_REVISION_1 equ 1
          NDIS_NIC_SWITCH_INFO struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            SwitchType NDIS_NIC_SWITCH_TYPE ?
            SwitchId NDIS_NIC_SWITCH_ID ?
            SwitchFriendlyName NDIS_NIC_SWITCH_FRIENDLYNAME <>
            NumVFs ULONG ?
            NumAllocatedVFs ULONG ?
            NumVPorts ULONG ?
            NumActiveVPorts ULONG ?
            NumQueuePairsForDefaultVPort ULONG ?
            NumQueuePairsForNonDefaultVPorts ULONG ?
            NumActiveDefaultVPortMacAddresses ULONG ?
            NumActiveNonDefaultVPortMacAddresses ULONG ?
            NumActiveDefaultVPortVlanIds ULONG ?
            NumActiveNonDefaultVPortVlanIds ULONG ?
          NDIS_NIC_SWITCH_INFO ends
          _NDIS_NIC_SWITCH_INFO typedef NDIS_NIC_SWITCH_INFO
          PNDIS_NIC_SWITCH_INFO typedef ptr NDIS_NIC_SWITCH_INFO
          NDIS_SIZEOF_NIC_SWITCH_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_INFO, NumActiveNonDefaultVPortVlanIds)>
          NDIS_NIC_SWITCH_INFO_ARRAY_REVISION_1 equ 1
          NDIS_NIC_SWITCH_INFO_ARRAY struct
            Header NDIS_OBJECT_HEADER ?
            FirstElementOffset ULONG ?
            NumElements ULONG ?
            ElementSize ULONG ?
          NDIS_NIC_SWITCH_INFO_ARRAY ends
          _NDIS_NIC_SWITCH_INFO_ARRAY typedef NDIS_NIC_SWITCH_INFO_ARRAY
          PNDIS_NIC_SWITCH_INFO_ARRAY typedef ptr NDIS_NIC_SWITCH_INFO_ARRAY
          NDIS_SIZEOF_NIC_SWITCH_INFO_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_INFO_ARRAY, ElementSize)>
          NDIS_NIC_SWITCH_VPORT_STATE typedef SDWORD
          NdisNicSwitchVPortStateUndefined equ 0
          NdisNicSwitchVPortStateActivated equ 1
          NdisNicSwitchVPortStateDeactivated equ 2
          NdisNicSwitchVPortStateMaximum equ 3
          _NDIS_NIC_SWITCH_VPORT_STATE typedef NDIS_NIC_SWITCH_VPORT_STATE
          PNDIS_NIC_SWITCH_VPORT_STATE typedef ptr NDIS_NIC_SWITCH_VPORT_STATE
          NDIS_NIC_SWITCH_VPORT_INTERRUPT_MODERATION typedef SDWORD
          NdisNicSwitchVPortInterruptModerationUndefined equ 0
          NdisNicSwitchVPortInterruptModerationAdaptive equ 1
          NdisNicSwitchVPortInterruptModerationOff equ 2
          NdisNicSwitchVPortInterruptModerationLow equ 100
          NdisNicSwitchVPortInterruptModerationMedium equ 200
          NdisNicSwitchVPortInterruptModerationHigh equ 300
          _NDIS_NIC_SWITCH_VPORT_INTERRUPT_MODERATION typedef NDIS_NIC_SWITCH_VPORT_INTERRUPT_MODERATION
          PNDIS_NIC_SWITCH_VPORT_INTERRUPT_MODERATION typedef ptr NDIS_NIC_SWITCH_VPORT_INTERRUPT_MODERATION
          if (NDIS_SUPPORT_NDIS650)
            ifndef _NDIS_SWITCH_PORT_ID
              _NDIS_SWITCH_PORT_ID equ <NDIS_SWITCH_PORT_ID>
              NDIS_SWITCH_PORT_ID typedef UINT32
              PNDIS_SWITCH_PORT_ID typedef ptr UINT32
              NDIS_SWITCH_NIC_INDEX typedef USHORT
              PNDIS_SWITCH_NIC_INDEX typedef ptr USHORT
            else
            endif
            NDIS_NDK_REQUEST_PARAMETERS struct
              RdmaRequested BOOLEAN ?
              SwitchPortId NDIS_SWITCH_PORT_ID ?
              IfIndex NET_IFINDEX ?
              MacAddress UCHAR NDIS_MAX_PHYS_ADDRESS_LENGTH dup (?)
              VlanId UINT32 ?
              NdkReserved NDIS_NDK_CAPABILITIES <>
            NDIS_NDK_REQUEST_PARAMETERS ends
            _NDIS_NDK_REQUEST_PARAMETERS typedef NDIS_NDK_REQUEST_PARAMETERS
            PNDIS_NDK_REQUEST_PARAMETERS typedef ptr NDIS_NDK_REQUEST_PARAMETERS
            NDIS_NDK_RESPONSE_PARAMETERS struct
              CapabilitiesAvailable BOOLEAN ?
              ReceivedCapabilities NDIS_NDK_CAPABILITIES <>
            NDIS_NDK_RESPONSE_PARAMETERS ends
            _NDIS_NDK_RESPONSE_PARAMETERS typedef NDIS_NDK_RESPONSE_PARAMETERS
            PNDIS_NDK_RESPONSE_PARAMETERS typedef ptr NDIS_NDK_RESPONSE_PARAMETERS
            NDIS_NDK_PARAMETERS struct
              NdkRequest NDIS_NDK_REQUEST_PARAMETERS <>
              NdkResponse NDIS_NDK_RESPONSE_PARAMETERS <>
            NDIS_NDK_PARAMETERS ends
            _NDIS_NDK_PARAMETERS typedef NDIS_NDK_PARAMETERS
            PNDIS_NDK_PARAMETERS typedef ptr NDIS_NDK_PARAMETERS
          endif
          NDIS_NIC_SWITCH_VPORT_PARAMS_LOOKAHEAD_SPLIT_ENABLED equ 00000001h
          if (NDIS_SUPPORT_NDIS650)
            NDIS_NIC_SWITCH_VPORT_PARAMS_PACKET_DIRECT_RX_ONLY equ 00000002h
          endif
          NDIS_NIC_SWITCH_VPORT_PARAMS_ENFORCE_MAX_SG_LIST equ 00008000h
          NDIS_NIC_SWITCH_VPORT_PARAMS_CHANGE_MASK equ 0FFFF0000h
          NDIS_NIC_SWITCH_VPORT_PARAMS_FLAGS_CHANGED equ 00010000h
          NDIS_NIC_SWITCH_VPORT_PARAMS_NAME_CHANGED equ 00020000h
          NDIS_NIC_SWITCH_VPORT_PARAMS_INT_MOD_CHANGED equ 00040000h
          NDIS_NIC_SWITCH_VPORT_PARAMS_STATE_CHANGED equ 00080000h
          NDIS_NIC_SWITCH_VPORT_PARAMS_PROCESSOR_AFFINITY_CHANGED equ 00100000h
          if (NDIS_SUPPORT_NDIS650)
            NDIS_NIC_SWITCH_VPORT_PARAMS_NDK_PARAMS_CHANGED equ 00200000h
            NDIS_NIC_SWITCH_VPORT_PARAMS_QOS_SQ_ID_CHANGED equ 00400000h
          endif
          if (NDIS_SUPPORT_NDIS660)
            NDIS_NIC_SWITCH_VPORT_PARAMS_NUM_QUEUE_PAIRS_CHANGED equ 00800000h
          endif
          NDIS_NIC_SWITCH_VPORT_PARAMETERS_REVISION_1 equ 1
          if (NDIS_SUPPORT_NDIS650)
            NDIS_NIC_SWITCH_VPORT_PARAMETERS_REVISION_2 equ 2
          endif
          NDIS_NIC_SWITCH_VPORT_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            SwitchId NDIS_NIC_SWITCH_ID ?
            VPortId NDIS_NIC_SWITCH_VPORT_ID ?
            VPortName NDIS_VPORT_NAME <>
            AttachedFunctionId NDIS_SRIOV_FUNCTION_ID ?
            NumQueuePairs ULONG ?
            InterruptModeration NDIS_NIC_SWITCH_VPORT_INTERRUPT_MODERATION ?
            VPortState NDIS_NIC_SWITCH_VPORT_STATE ?
            ProcessorAffinity GROUP_AFFINITY <>
            LookaheadSize ULONG ?
            if (NDIS_SUPPORT_NDIS650)
              NdkParams NDIS_NDK_PARAMETERS <>
              QosSqId NDIS_QOS_SQ_ID ?
            endif
          NDIS_NIC_SWITCH_VPORT_PARAMETERS ends
          _NDIS_NIC_SWITCH_VPORT_PARAMETERS typedef NDIS_NIC_SWITCH_VPORT_PARAMETERS
          PNDIS_NIC_SWITCH_VPORT_PARAMETERS typedef ptr NDIS_NIC_SWITCH_VPORT_PARAMETERS
          NDIS_SIZEOF_NIC_SWITCH_VPORT_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_VPORT_PARAMETERS, LookaheadSize)>
          if (NDIS_SUPPORT_NDIS650)
            NDIS_SIZEOF_NIC_SWITCH_VPORT_PARAMETERS_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_VPORT_PARAMETERS, QosSqId)>
          endif
          NDIS_NIC_SWITCH_DELETE_VPORT_PARAMETERS_REVISION_1 equ 1
          NDIS_NIC_SWITCH_DELETE_VPORT_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            VPortId NDIS_NIC_SWITCH_VPORT_ID ?
          NDIS_NIC_SWITCH_DELETE_VPORT_PARAMETERS ends
          _NDIS_NIC_SWITCH_DELETE_VPORT_PARAMETERS typedef NDIS_NIC_SWITCH_DELETE_VPORT_PARAMETERS
          PNDIS_NIC_SWITCH_DELETE_VPORT_PARAMETERS typedef ptr NDIS_NIC_SWITCH_DELETE_VPORT_PARAMETERS
          NDIS_SIZEOF_NIC_SWITCH_DELETE_VPORT_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_DELETE_VPORT_PARAMETERS, VPortId)>
          NDIS_NIC_SWITCH_VPORT_INFO_LOOKAHEAD_SPLIT_ENABLED equ 00000001h
          if (NDIS_SUPPORT_NDIS650)
            NDIS_NIC_SWITCH_VPORT_INFO_PACKET_DIRECT_RX_ONLY equ 00000002h
            NDIS_NIC_SWITCH_VPORT_INFO_GFT_ENABLED equ 00000004h
          endif
          NDIS_NIC_SWITCH_VPORT_INFO_REVISION_1 equ 1
          NDIS_NIC_SWITCH_VPORT_INFO struct
            Header NDIS_OBJECT_HEADER ?
            VPortId NDIS_NIC_SWITCH_VPORT_ID ?
            Flags ULONG ?
            SwitchId NDIS_NIC_SWITCH_ID ?
            VPortName NDIS_VPORT_NAME <>
            AttachedFunctionId NDIS_SRIOV_FUNCTION_ID ?
            NumQueuePairs ULONG ?
            InterruptModeration NDIS_NIC_SWITCH_VPORT_INTERRUPT_MODERATION ?
            VPortState NDIS_NIC_SWITCH_VPORT_STATE ?
            ProcessorAffinity GROUP_AFFINITY <>
            LookaheadSize ULONG ?
            NumFilters ULONG ?
          NDIS_NIC_SWITCH_VPORT_INFO ends
          _NDIS_NIC_SWITCH_VPORT_INFO typedef NDIS_NIC_SWITCH_VPORT_INFO
          PNDIS_NIC_SWITCH_VPORT_INFO typedef ptr NDIS_NIC_SWITCH_VPORT_INFO
          NDIS_SIZEOF_NIC_SWITCH_VPORT_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_VPORT_INFO, NumFilters)>
          NDIS_NIC_SWITCH_VPORT_INFO_ARRAY_ENUM_ON_SPECIFIC_FUNCTION equ 00000001h
          NDIS_NIC_SWITCH_VPORT_INFO_ARRAY_ENUM_ON_SPECIFIC_SWITCH equ 00000002h
          NDIS_NIC_SWITCH_VPORT_INFO_ARRAY_REVISION_1 equ 1
          NDIS_NIC_SWITCH_VPORT_INFO_ARRAY struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            SwitchId NDIS_NIC_SWITCH_ID ?
            AttachedFunctionId NDIS_SRIOV_FUNCTION_ID ?
            FirstElementOffset ULONG ?
            NumElements ULONG ?
            ElementSize ULONG ?
          NDIS_NIC_SWITCH_VPORT_INFO_ARRAY ends
          _NDIS_NIC_SWITCH_VPORT_INFO_ARRAY typedef NDIS_NIC_SWITCH_VPORT_INFO_ARRAY
          PNDIS_NIC_SWITCH_VPORT_INFO_ARRAY typedef ptr NDIS_NIC_SWITCH_VPORT_INFO_ARRAY
          NDIS_SIZEOF_NIC_SWITCH_VPORT_INFO_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_VPORT_INFO_ARRAY, ElementSize)>
          NDIS_NIC_SWITCH_VF_PARAMETERS_REVISION_1 equ 1
          NDIS_NIC_SWITCH_VF_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            SwitchId NDIS_NIC_SWITCH_ID ?
            VMName NDIS_VM_NAME <>
            VMFriendlyName NDIS_VM_FRIENDLYNAME <>
            NicName NDIS_SWITCH_NIC_NAME <>
            MacAddressLength USHORT ?
            PermanentMacAddress UCHAR NDIS_MAX_PHYS_ADDRESS_LENGTH dup (?)
            CurrentMacAddress UCHAR NDIS_MAX_PHYS_ADDRESS_LENGTH dup (?)
            VFId NDIS_SRIOV_FUNCTION_ID ?
            RequestorId NDIS_VF_RID ?
          NDIS_NIC_SWITCH_VF_PARAMETERS ends
          _NDIS_NIC_SWITCH_VF_PARAMETERS typedef NDIS_NIC_SWITCH_VF_PARAMETERS
          PNDIS_NIC_SWITCH_VF_PARAMETERS typedef ptr NDIS_NIC_SWITCH_VF_PARAMETERS
          NDIS_SIZEOF_NIC_SWITCH_VF_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_VF_PARAMETERS, RequestorId)>
          NDIS_NIC_SWITCH_FREE_VF_PARAMETERS_REVISION_1 equ 1
          NDIS_NIC_SWITCH_FREE_VF_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            VFId NDIS_SRIOV_FUNCTION_ID ?
          NDIS_NIC_SWITCH_FREE_VF_PARAMETERS ends
          _NDIS_NIC_SWITCH_FREE_VF_PARAMETERS typedef NDIS_NIC_SWITCH_FREE_VF_PARAMETERS
          PNDIS_NIC_SWITCH_FREE_VF_PARAMETERS typedef ptr NDIS_NIC_SWITCH_FREE_VF_PARAMETERS
          NDIS_SIZEOF_NIC_SWITCH_FREE_VF_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_FREE_VF_PARAMETERS, VFId)>
          NDIS_NIC_SWITCH_VF_INFO_REVISION_1 equ 1
          NDIS_NIC_SWITCH_VF_INFO struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            SwitchId NDIS_NIC_SWITCH_ID ?
            VMName NDIS_VM_NAME <>
            VMFriendlyName NDIS_VM_FRIENDLYNAME <>
            NicName NDIS_SWITCH_NIC_NAME <>
            MacAddressLength USHORT ?
            PermanentMacAddress UCHAR NDIS_MAX_PHYS_ADDRESS_LENGTH dup (?)
            CurrentMacAddress UCHAR NDIS_MAX_PHYS_ADDRESS_LENGTH dup (?)
            VFId NDIS_SRIOV_FUNCTION_ID ?
            RequestorId NDIS_VF_RID ?
          NDIS_NIC_SWITCH_VF_INFO ends
          _NDIS_NIC_SWITCH_VF_INFO typedef NDIS_NIC_SWITCH_VF_INFO
          PNDIS_NIC_SWITCH_VF_INFO typedef ptr NDIS_NIC_SWITCH_VF_INFO
          NDIS_SIZEOF_NIC_SWITCH_VF_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_VF_INFO, RequestorId)>
          NDIS_NIC_SWITCH_VF_INFO_ARRAY_ENUM_ON_SPECIFIC_SWITCH equ 00000001h
          NDIS_NIC_SWITCH_VF_INFO_ARRAY_REVISION_1 equ 1
          NDIS_NIC_SWITCH_VF_INFO_ARRAY struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            SwitchId NDIS_NIC_SWITCH_ID ?
            FirstElementOffset ULONG ?
            NumElements ULONG ?
            ElementSize ULONG ?
          NDIS_NIC_SWITCH_VF_INFO_ARRAY ends
          _NDIS_NIC_SWITCH_VF_INFO_ARRAY typedef NDIS_NIC_SWITCH_VF_INFO_ARRAY
          PNDIS_NIC_SWITCH_VF_INFO_ARRAY typedef ptr NDIS_NIC_SWITCH_VF_INFO_ARRAY
          NDIS_SIZEOF_NIC_SWITCH_VF_INFO_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_NIC_SWITCH_VF_INFO_ARRAY, ElementSize)>
          NDIS_SRIOV_CAPS_SRIOV_SUPPORTED equ 00000001h
          NDIS_SRIOV_CAPS_PF_MINIPORT equ 00000002h
          NDIS_SRIOV_CAPS_VF_MINIPORT equ 00000004h
          NDIS_SRIOV_CAPABILITIES_REVISION_1 equ 1
          NDIS_SRIOV_CAPABILITIES struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            SriovCapabilities ULONG ?
          NDIS_SRIOV_CAPABILITIES ends
          _NDIS_SRIOV_CAPABILITIES typedef NDIS_SRIOV_CAPABILITIES
          PNDIS_SRIOV_CAPABILITIES typedef ptr NDIS_SRIOV_CAPABILITIES
          NDIS_SIZEOF_SRIOV_CAPABILITIES_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SRIOV_CAPABILITIES, SriovCapabilities)>
          NDIS_SRIOV_READ_VF_CONFIG_SPACE_PARAMETERS_REVISION_1 equ 1
          NDIS_SRIOV_READ_VF_CONFIG_SPACE_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            VFId NDIS_SRIOV_FUNCTION_ID ?
            Offset_ ULONG ?
            Length_ ULONG ?
            BufferOffset ULONG ?
          NDIS_SRIOV_READ_VF_CONFIG_SPACE_PARAMETERS ends
          _NDIS_SRIOV_READ_VF_CONFIG_SPACE_PARAMETERS typedef NDIS_SRIOV_READ_VF_CONFIG_SPACE_PARAMETERS
          PNDIS_SRIOV_READ_VF_CONFIG_SPACE_PARAMETERS typedef ptr NDIS_SRIOV_READ_VF_CONFIG_SPACE_PARAMETERS
          NDIS_SIZEOF_SRIOV_READ_VF_CONFIG_SPACE_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SRIOV_READ_VF_CONFIG_SPACE_PARAMETERS, BufferOffset)>
          NDIS_SRIOV_WRITE_VF_CONFIG_SPACE_PARAMETERS_REVISION_1 equ 1
          NDIS_SRIOV_WRITE_VF_CONFIG_SPACE_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            VFId NDIS_SRIOV_FUNCTION_ID ?
            Offset_ ULONG ?
            Length_ ULONG ?
            BufferOffset ULONG ?
          NDIS_SRIOV_WRITE_VF_CONFIG_SPACE_PARAMETERS ends
          _NDIS_SRIOV_WRITE_VF_CONFIG_SPACE_PARAMETERS typedef NDIS_SRIOV_WRITE_VF_CONFIG_SPACE_PARAMETERS
          PNDIS_SRIOV_WRITE_VF_CONFIG_SPACE_PARAMETERS typedef ptr NDIS_SRIOV_WRITE_VF_CONFIG_SPACE_PARAMETERS
          NDIS_SIZEOF_SRIOV_WRITE_VF_CONFIG_SPACE_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SRIOV_WRITE_VF_CONFIG_SPACE_PARAMETERS, BufferOffset)>
          NDIS_SRIOV_READ_VF_CONFIG_BLOCK_PARAMETERS_REVISION_1 equ 1
          NDIS_SRIOV_READ_VF_CONFIG_BLOCK_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            VFId NDIS_SRIOV_FUNCTION_ID ?
            BlockId ULONG ?
            Length_ ULONG ?
            BufferOffset ULONG ?
          NDIS_SRIOV_READ_VF_CONFIG_BLOCK_PARAMETERS ends
          _NDIS_SRIOV_READ_VF_CONFIG_BLOCK_PARAMETERS typedef NDIS_SRIOV_READ_VF_CONFIG_BLOCK_PARAMETERS
          PNDIS_SRIOV_READ_VF_CONFIG_BLOCK_PARAMETERS typedef ptr NDIS_SRIOV_READ_VF_CONFIG_BLOCK_PARAMETERS
          NDIS_SIZEOF_SRIOV_READ_VF_CONFIG_BLOCK_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SRIOV_READ_VF_CONFIG_BLOCK_PARAMETERS, BufferOffset)>
          NDIS_SRIOV_WRITE_VF_CONFIG_BLOCK_PARAMETERS_REVISION_1 equ 1
          NDIS_SRIOV_WRITE_VF_CONFIG_BLOCK_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            VFId NDIS_SRIOV_FUNCTION_ID ?
            BlockId ULONG ?
            Length_ ULONG ?
            BufferOffset ULONG ?
          NDIS_SRIOV_WRITE_VF_CONFIG_BLOCK_PARAMETERS ends
          _NDIS_SRIOV_WRITE_VF_CONFIG_BLOCK_PARAMETERS typedef NDIS_SRIOV_WRITE_VF_CONFIG_BLOCK_PARAMETERS
          PNDIS_SRIOV_WRITE_VF_CONFIG_BLOCK_PARAMETERS typedef ptr NDIS_SRIOV_WRITE_VF_CONFIG_BLOCK_PARAMETERS
          NDIS_SIZEOF_SRIOV_WRITE_VF_CONFIG_BLOCK_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SRIOV_WRITE_VF_CONFIG_BLOCK_PARAMETERS, BufferOffset)>
          NDIS_SRIOV_RESET_VF_PARAMETERS_REVISION_1 equ 1
          NDIS_SRIOV_RESET_VF_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            VFId NDIS_SRIOV_FUNCTION_ID ?
          NDIS_SRIOV_RESET_VF_PARAMETERS ends
          _NDIS_SRIOV_RESET_VF_PARAMETERS typedef NDIS_SRIOV_RESET_VF_PARAMETERS
          PNDIS_SRIOV_RESET_VF_PARAMETERS typedef ptr NDIS_SRIOV_RESET_VF_PARAMETERS
          NDIS_SIZEOF_SRIOV_RESET_VF_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SRIOV_RESET_VF_PARAMETERS, VFId)>
          NDIS_SRIOV_SET_VF_POWER_STATE_PARAMETERS_REVISION_1 equ 1
          NDIS_SRIOV_SET_VF_POWER_STATE_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            VFId NDIS_SRIOV_FUNCTION_ID ?
            PowerState NDIS_DEVICE_POWER_STATE ?
            WakeEnable BOOLEAN ?
          NDIS_SRIOV_SET_VF_POWER_STATE_PARAMETERS ends
          _NDIS_SRIOV_SET_VF_POWER_STATE_PARAMETERS typedef NDIS_SRIOV_SET_VF_POWER_STATE_PARAMETERS
          PNDIS_SRIOV_SET_VF_POWER_STATE_PARAMETERS typedef ptr NDIS_SRIOV_SET_VF_POWER_STATE_PARAMETERS
          NDIS_SIZEOF_SRIOV_SET_VF_POWER_STATE_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SRIOV_SET_VF_POWER_STATE_PARAMETERS, WakeEnable)>
          NDIS_SRIOV_CONFIG_STATE_PARAMETERS_REVISION_1 equ 1
          NDIS_SRIOV_CONFIG_STATE_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            BlockId ULONG ?
            Length_ ULONG ?
          NDIS_SRIOV_CONFIG_STATE_PARAMETERS ends
          _NDIS_SRIOV_CONFIG_STATE_PARAMETERS typedef NDIS_SRIOV_CONFIG_STATE_PARAMETERS
          PNDIS_SRIOV_CONFIG_STATE_PARAMETERS typedef ptr NDIS_SRIOV_CONFIG_STATE_PARAMETERS
          NDIS_SIZEOF_SRIOV_CONFIG_STATE_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SRIOV_CONFIG_STATE_PARAMETERS, Length)>
          NDIS_SRIOV_VF_VENDOR_DEVICE_ID_INFO_REVISION_1 equ 1
          NDIS_SRIOV_VF_VENDOR_DEVICE_ID_INFO struct
            Header NDIS_OBJECT_HEADER ?
            VFId NDIS_SRIOV_FUNCTION_ID ?
            VendorId USHORT ?
            DeviceId USHORT ?
          NDIS_SRIOV_VF_VENDOR_DEVICE_ID_INFO ends
          _NDIS_SRIOV_VF_VENDOR_DEVICE_ID_INFO typedef NDIS_SRIOV_VF_VENDOR_DEVICE_ID_INFO
          PNDIS_SRIOV_VF_VENDOR_DEVICE_ID_INFO typedef ptr NDIS_SRIOV_VF_VENDOR_DEVICE_ID_INFO
          NDIS_SIZEOF_SRIOV_VF_VENDOR_DEVICE_ID_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SRIOV_VF_VENDOR_DEVICE_ID_INFO, DeviceId)>
          NDIS_SRIOV_PROBED_BARS_INFO_REVISION_1 equ 1
          NDIS_SRIOV_PROBED_BARS_INFO struct
            Header NDIS_OBJECT_HEADER ?
            BaseRegisterValuesOffset ULONG ?
          NDIS_SRIOV_PROBED_BARS_INFO ends
          _NDIS_SRIOV_PROBED_BARS_INFO typedef NDIS_SRIOV_PROBED_BARS_INFO
          PNDIS_SRIOV_PROBED_BARS_INFO typedef ptr NDIS_SRIOV_PROBED_BARS_INFO
          NDIS_SIZEOF_SRIOV_PROBED_BARS_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SRIOV_PROBED_BARS_INFO, BaseRegisterValuesOffset)>
          NDIS_RECEIVE_FILTER_MOVE_FILTER_PARAMETERS_REVISION_1 equ 1
          NDIS_RECEIVE_FILTER_MOVE_FILTER_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            FilterId NDIS_RECEIVE_FILTER_ID ?
            SourceQueueId NDIS_RECEIVE_QUEUE_ID ?
            SourceVPortId NDIS_NIC_SWITCH_VPORT_ID ?
            DestQueueId NDIS_RECEIVE_QUEUE_ID ?
            DestVPortId NDIS_NIC_SWITCH_VPORT_ID ?
          NDIS_RECEIVE_FILTER_MOVE_FILTER_PARAMETERS ends
          _NDIS_RECEIVE_FILTER_MOVE_FILTER_PARAMETERS typedef NDIS_RECEIVE_FILTER_MOVE_FILTER_PARAMETERS
          PNDIS_RECEIVE_FILTER_MOVE_FILTER_PARAMETERS typedef ptr NDIS_RECEIVE_FILTER_MOVE_FILTER_PARAMETERS
          NDIS_SIZEOF_RECEIVE_FILTER_MOVE_FILTER_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_RECEIVE_FILTER_MOVE_FILTER_PARAMETERS, DestVPortId)>
          NDIS_SRIOV_BAR_RESOURCES_INFO_REVISION_1 equ 1
          NDIS_SRIOV_BAR_RESOURCES_INFO struct
            Header NDIS_OBJECT_HEADER ?
            VFId NDIS_SRIOV_FUNCTION_ID ?
            BarIndex USHORT ?
            BarResourcesOffset ULONG ?
          NDIS_SRIOV_BAR_RESOURCES_INFO ends
          _NDIS_SRIOV_BAR_RESOURCES_INFO typedef NDIS_SRIOV_BAR_RESOURCES_INFO
          PNDIS_SRIOV_BAR_RESOURCES_INFO typedef ptr NDIS_SRIOV_BAR_RESOURCES_INFO
          NDIS_SIZEOF_SRIOV_BAR_RESOURCES_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SRIOV_BAR_RESOURCES_INFO, BarResourcesOffset)>
          NDIS_SRIOV_PF_LUID_INFO_REVISION_1 equ 1
          NDIS_SRIOV_PF_LUID_INFO struct
            Header NDIS_OBJECT_HEADER ?
            Luid LUID <>
          NDIS_SRIOV_PF_LUID_INFO ends
          _NDIS_SRIOV_PF_LUID_INFO typedef NDIS_SRIOV_PF_LUID_INFO
          PNDIS_SRIOV_PF_LUID_INFO typedef ptr NDIS_SRIOV_PF_LUID_INFO
          NDIS_SIZEOF_SRIOV_PF_LUID_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SRIOV_PF_LUID_INFO, Luid)>
          NDIS_SRIOV_VF_SERIAL_NUMBER_INFO_REVISION_1 equ 1
          NDIS_SRIOV_VF_SERIAL_NUMBER_INFO struct
            Header NDIS_OBJECT_HEADER ?
            SerialNumber ULONG ?
          NDIS_SRIOV_VF_SERIAL_NUMBER_INFO ends
          _NDIS_SRIOV_VF_SERIAL_NUMBER_INFO typedef NDIS_SRIOV_VF_SERIAL_NUMBER_INFO
          PNDIS_SRIOV_VF_SERIAL_NUMBER_INFO typedef ptr NDIS_SRIOV_VF_SERIAL_NUMBER_INFO
          NDIS_SIZEOF_SRIOV_VF_SERIAL_NUMBER_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SRIOV_VF_SERIAL_NUMBER_INFO, SerialNumber)>
          NDIS_SRIOV_VF_INVALIDATE_CONFIG_BLOCK_INFO_REVISION_1 equ 1
          NDIS_SRIOV_VF_INVALIDATE_CONFIG_BLOCK_INFO struct
            Header NDIS_OBJECT_HEADER ?
            BlockMask ULONG64 ?
          NDIS_SRIOV_VF_INVALIDATE_CONFIG_BLOCK_INFO ends
          _NDIS_SRIOV_VF_INVALIDATE_CONFIG_BLOCK_INFO typedef NDIS_SRIOV_VF_INVALIDATE_CONFIG_BLOCK_INFO
          PNDIS_SRIOV_VF_INVALIDATE_CONFIG_BLOCK_INFO typedef ptr NDIS_SRIOV_VF_INVALIDATE_CONFIG_BLOCK_INFO
          NDIS_SIZEOF_SRIOV_VF_INVALIDATE_CONFIG_BLOCK_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SRIOV_VF_INVALIDATE_CONFIG_BLOCK_INFO, BlockMask)>
          if (NDIS_SUPPORT_NDIS670)
            NDIS_SRIOV_OVERLYING_ADAPTER_INFO struct
              Header NDIS_OBJECT_HEADER ?
              Flags ULONG ?
              IfIndex ULONG ?
              NdisReserved1 ULONG ?
              NdisReserved2 ULONG ?
            NDIS_SRIOV_OVERLYING_ADAPTER_INFO ends
            _NDIS_SRIOV_OVERLYING_ADAPTER_INFO typedef NDIS_SRIOV_OVERLYING_ADAPTER_INFO
            PNDIS_SRIOV_OVERLYING_ADAPTER_INFO typedef ptr NDIS_SRIOV_OVERLYING_ADAPTER_INFO
            NDIS_SRIOV_OVERLYING_ADAPTER_INFO_VERSION_1 equ 1
            NDIS_SIZEOF_SRIOV_OVERLYING_ADAPTER_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SRIOV_OVERLYING_ADAPTER_INFO, NdisReserved2)>
          endif
          if (NTDDI_VERSION ge NTDDI_WINBLUE) or (NDIS_SUPPORT_NDIS640)
            NDIS_ISOLATION_MODE typedef SDWORD
            NdisIsolationModeNone equ 0
            NdisIsolationModeNativeVirtualSubnet equ 1
            NdisIsolationModeExternalVirtualSubnet equ 2
            NdisIsolationModeVlan equ 3
            _NDIS_ISOLATION_MODE typedef NDIS_ISOLATION_MODE
            PNDIS_ISOLATION_MODE typedef ptr NDIS_ISOLATION_MODE
            NDIS_ROUTING_DOMAIN_ID typedef GUID
            PNDIS_ROUTING_DOMAIN_ID typedef ptr GUID
            NDIS_ISOLATION_NAME_MAX_STRING_SIZE equ 127
            NDIS_ISOLATION_NAME struct
              Length_ USHORT ?
              String WCHAR NDIS_ISOLATION_NAME_MAX_STRING_SIZE + 1 dup (?)
            NDIS_ISOLATION_NAME ends
            _NDIS_ISOLATION_NAME typedef NDIS_ISOLATION_NAME
            NDIS_ISOLATION_ID_NAME typedef NDIS_ISOLATION_NAME
            PNDIS_ISOLATION_ID_NAME typedef ptr NDIS_ISOLATION_NAME
            NDIS_ROUTING_DOMAIN_NAME typedef NDIS_ISOLATION_NAME
            PNDIS_ROUTING_DOMAIN_NAME typedef ptr NDIS_ISOLATION_NAME
            NDIS_ROUTING_DOMAIN_ISOLATION_ENTRY struct
              Header NDIS_OBJECT_HEADER ?
              Flags ULONG ?
              IsolationIdName NDIS_ISOLATION_ID_NAME <>
              union
                struct
                  ANONYMOUS_REC6 record ANONYMOUS_REC6_Filler:8, ANONYMOUS_REC6_VirtualSubnetId:24
                  ANONYMOUS_REC6 <>
                ends
                struct
                  ANONYMOUS_REC7 record ANONYMOUS_REC7_Filler:20, ANONYMOUS_REC7_VlanId:12
                  ANONYMOUS_REC7 <>
                ends
                IsolationId UINT32 ?
              ends
            NDIS_ROUTING_DOMAIN_ISOLATION_ENTRY ends
            _NDIS_ROUTING_DOMAIN_ISOLATION_ENTRY typedef NDIS_ROUTING_DOMAIN_ISOLATION_ENTRY
            PNDIS_ROUTING_DOMAIN_ISOLATION_ENTRY typedef ptr NDIS_ROUTING_DOMAIN_ISOLATION_ENTRY
            NDIS_ROUTING_DOMAIN_ISOLATION_ENTRY_REVISION_1 equ 1
            NDIS_SIZEOF_NDIS_ROUTING_DOMAIN_ISOLATION_ENTRY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_ROUTING_DOMAIN_ISOLATION_ENTRY, IsolationId)>
            NDIS_ROUTING_DOMAIN_ISOLATION_ENTRY_GET_NEXT macro _IsolationInfoEntry_
              exitm <((PNDIS_ROUTING_DOMAIN_ISOLATION_ENTRY) ((PUCHAR) (_IsolationInfoEntry_) + (_IsolationInfoEntry_) - Header.Size))>
            endm
            NDIS_ROUTING_DOMAIN_ENTRY struct
              Header NDIS_OBJECT_HEADER ?
              Flags ULONG ?
              RoutingDomainId NDIS_ROUTING_DOMAIN_ID <>
              RoutingDomainName NDIS_ROUTING_DOMAIN_NAME <>
              NumIsolationEntries ULONG ?
              FirstIsolationEntryOffset ULONG ?
            NDIS_ROUTING_DOMAIN_ENTRY ends
            _NDIS_ROUTING_DOMAIN_ENTRY typedef NDIS_ROUTING_DOMAIN_ENTRY
            PNDIS_ROUTING_DOMAIN_ENTRY typedef ptr NDIS_ROUTING_DOMAIN_ENTRY
            NDIS_ROUTING_DOMAIN_ENTRY_REVISION_1 equ 1
            NDIS_SIZEOF_NDIS_ROUTING_DOMAIN_ENTRY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_ROUTING_DOMAIN_ENTRY, FirstIsolationEntryOffset)>
            NDIS_ROUTING_DOMAIN_ENTRY_GET_NEXT macro _RoutingDomainEntry_
              exitm <((PNDIS_ROUTING_DOMAIN_ENTRY) ((PUCHAR) (_RoutingDomainEntry_) + (_RoutingDomainEntry_) - Header.Size))>
            endm
            NDIS_ROUTING_DOMAIN_ENTRY_GET_FIRST_ISOLATION_ENTRY macro _RoutingDomainEntry_
              exitm <((PNDIS_ROUTING_DOMAIN_ISOLATION_ENTRY) ((PUCHAR) (_RoutingDomainEntry_) + (_RoutingDomainEntry_) - FirstIsolationEntryOffset))>
            endm
            NDIS_ISOLATION_PARAMETERS struct
              Header NDIS_OBJECT_HEADER ?
              Flags ULONG ?
              IsolationMode NDIS_ISOLATION_MODE ?
              AllowUntaggedTraffic BOOLEAN ?
              NumRoutingDomainEntries ULONG ?
              FirstRoutingDomainEntryOffset ULONG ?
            NDIS_ISOLATION_PARAMETERS ends
            _NDIS_ISOLATION_PARAMETERS typedef NDIS_ISOLATION_PARAMETERS
            PNDIS_ISOLATION_PARAMETERS typedef ptr NDIS_ISOLATION_PARAMETERS
            NDIS_ISOLATION_PARAMETERS_REVISION_1 equ 1
            NDIS_SIZEOF_NDIS_ISOLATION_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_ISOLATION_PARAMETERS, FirstRoutingDomainEntryOffset)>
            NDIS_ISOLATION_PARAMETERS_GET_FIRST_ROUTING_DOMAIN_ENTRY macro _MultiTenancyInfo_
              exitm <((PNDIS_ROUTING_DOMAIN_ENTRY) ((PUCHAR) (_MultiTenancyInfo_) + (_MultiTenancyInfo_) - FirstRoutingDomainEntryOffset))>
            endm
          endif
          ifndef _NDIS_SWITCH_PORT_ID
            _NDIS_SWITCH_PORT_ID equ <NDIS_SWITCH_PORT_ID>
            NDIS_SWITCH_PORT_ID typedef UINT32
            PNDIS_SWITCH_PORT_ID typedef ptr UINT32
            NDIS_SWITCH_NIC_INDEX typedef USHORT
            PNDIS_SWITCH_NIC_INDEX typedef ptr USHORT
          else
          endif
          NDIS_SWITCH_OBJECT_INSTANCE_ID typedef GUID
          PNDIS_SWITCH_OBJECT_INSTANCE_ID typedef ptr GUID
          NDIS_SWITCH_OBJECT_ID typedef GUID
          PNDIS_SWITCH_OBJECT_ID typedef ptr GUID
          NDIS_SWITCH_OBJECT_VERSION typedef USHORT
          PNDIS_SWITCH_OBJECT_VERSION typedef ptr USHORT
          NDIS_SWITCH_OBJECT_SERIALIZATION_VERSION typedef USHORT
          PNDIS_SWITCH_OBJECT_SERIALIZATION_VERSION typedef ptr USHORT
          NDIS_SWITCH_OBJECT_SERIALIZATION_VERSION_1 equ 1
          NDIS_SWITCH_PORT_PROPERTY_TYPE typedef SDWORD
          NdisSwitchPortPropertyTypeUndefined equ 0
          NdisSwitchPortPropertyTypeCustom equ 1
          NdisSwitchPortPropertyTypeSecurity equ 2
          NdisSwitchPortPropertyTypeVlan equ 3
          NdisSwitchPortPropertyTypeProfile equ 4
          NdisSwitchPortPropertyTypeIsolation equ 5
          NdisSwitchPortPropertyTypeRoutingDomain equ 6
          NdisSwitchPortPropertyTypeMaximum equ 7
          _NDIS_SWITCH_PORT_PROPERTY_TYPE typedef NDIS_SWITCH_PORT_PROPERTY_TYPE
          PNDIS_SWITCH_PORT_PROPERTY_TYPE typedef ptr NDIS_SWITCH_PORT_PROPERTY_TYPE
          NDIS_SWITCH_PORT_PROPERTY_SECURITY_REVISION_1 equ 1
          if (NDIS_SUPPORT_NDIS640)
            NDIS_SWITCH_PORT_PROPERTY_SECURITY_REVISION_2 equ 2
          endif
          NDIS_SWITCH_PORT_PROPERTY_SECURITY struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            AllowMacSpoofing BOOLEAN ?
            AllowIeeePriorityTag BOOLEAN ?
            VirtualSubnetId UINT32 ?
            AllowTeaming BOOLEAN ?
            if (NDIS_SUPPORT_NDIS640)
              DynamicIPAddressLimit UINT32 ?
            endif
          NDIS_SWITCH_PORT_PROPERTY_SECURITY ends
          _NDIS_SWITCH_PORT_PROPERTY_SECURITY typedef NDIS_SWITCH_PORT_PROPERTY_SECURITY
          PNDIS_SWITCH_PORT_PROPERTY_SECURITY typedef ptr NDIS_SWITCH_PORT_PROPERTY_SECURITY
          NDIS_SIZEOF_NDIS_SWITCH_PORT_PROPERTY_SECURITY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PORT_PROPERTY_SECURITY, AllowTeaming)>
          if (NDIS_SUPPORT_NDIS640)
            NDIS_SIZEOF_NDIS_SWITCH_PORT_PROPERTY_SECURITY_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PORT_PROPERTY_SECURITY, DynamicIPAddressLimit)>
          endif
          NDIS_SWITCH_PORT_VLAN_MODE typedef SDWORD
          NdisSwitchPortVlanModeUnknown equ 0
          NdisSwitchPortVlanModeAccess equ 1
          NdisSwitchPortVlanModeTrunk equ 2
          NdisSwitchPortVlanModePrivate equ 3
          NdisSwitchPortVlanModeMax equ 4
          _NDIS_SWITCH_PORT_VLAN_MODE typedef NDIS_SWITCH_PORT_VLAN_MODE
          PNDIS_SWITCH_PORT_VLAN_MODE typedef ptr NDIS_SWITCH_PORT_VLAN_MODE
          NDIS_SWITCH_PORT_PVLAN_MODE typedef SDWORD
          NdisSwitchPortPvlanModeUndefined equ 0
          NdisSwitchPortPvlanModeIsolated equ 1
          NdisSwitchPortPvlanModeCommunity equ 2
          NdisSwitchPortPvlanModePromiscuous equ 3
          _NDIS_SWITCH_PORT_PVLAN_MODE typedef NDIS_SWITCH_PORT_PVLAN_MODE
          PNDIS_SWITCH_PORT_PVLAN_MODE typedef ptr NDIS_SWITCH_PORT_PVLAN_MODE
          NDIS_SWITCH_PORT_PROPERTY_VLAN_REVISION_1 equ 1
          NDIS_SWITCH_PORT_PROPERTY_VLAN struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            OperationMode NDIS_SWITCH_PORT_VLAN_MODE ?
            union
              struct VlanProperties
                AccessVlanId UINT16 ?
                NativeVlanId UINT16 ?
                PruneVlanIdArray UINT64 64 dup (?)
                TrunkVlanIdArray UINT64 64 dup (?)
              ends
              struct PvlanProperties
                PvlanMode NDIS_SWITCH_PORT_PVLAN_MODE ?
                PrimaryVlanId UINT16 ?
                union
                  SecondaryVlanId UINT16 ?
                  SecondaryVlanIdArray UINT64 64 dup (?)
                ends
              ends
            ends
          NDIS_SWITCH_PORT_PROPERTY_VLAN ends
          _NDIS_SWITCH_PORT_PROPERTY_VLAN typedef NDIS_SWITCH_PORT_PROPERTY_VLAN
          PNDIS_SWITCH_PORT_PROPERTY_VLAN typedef ptr NDIS_SWITCH_PORT_PROPERTY_VLAN
          NDIS_SIZEOF_NDIS_SWITCH_PORT_PROPERTY_VLAN_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PORT_PROPERTY_VLAN, VlanProperties)>
          NDIS_SWITCH_PORT_PROPERTY_PROFILE_REVISION_1 equ 1
          NDIS_SWITCH_PORT_PROPERTY_PROFILE struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            ProfileName NDIS_SWITCH_PORT_PROPERTY_PROFILE_NAME <>
            ProfileId GUID <>
            VendorName NDIS_VENDOR_NAME <>
            VendorId GUID <>
            ProfileData UINT32 ?
            NetCfgInstanceId GUID <>
            struct PciLocation
              PciLocation_REC record PciLocation_REC_PciFunctionNumber:3, PciLocation_REC_PciDeviceNumber:5, PciLocation_REC_PciBusNumber:8, PciLocation_REC_PciSegmentNumber:16
              PciLocation_BITS PciLocation_REC <>
            ends
            CdnLabelId UINT32 ?
            CdnLabel NDIS_SWITCH_PORT_PROPERTY_PROFILE_CDN_LABEL <>
          NDIS_SWITCH_PORT_PROPERTY_PROFILE ends
          _NDIS_SWITCH_PORT_PROPERTY_PROFILE typedef NDIS_SWITCH_PORT_PROPERTY_PROFILE
          PNDIS_SWITCH_PORT_PROPERTY_PROFILE typedef ptr NDIS_SWITCH_PORT_PROPERTY_PROFILE
          NDIS_SIZEOF_NDIS_SWITCH_PORT_PROPERTY_PROFILE_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PORT_PROPERTY_PROFILE, CdnLabel)>
          if (NTDDI_VERSION ge NTDDI_WINBLUE) or (NDIS_SUPPORT_NDIS640)
            NDIS_SWITCH_PORT_PROPERTY_ISOLATION_REVISION_1 equ 1
            NDIS_SWITCH_PORT_PROPERTY_ISOLATION struct
              Header NDIS_OBJECT_HEADER ?
              Flags ULONG ?
              IsolationMode NDIS_ISOLATION_MODE ?
              AllowUntaggedTraffic BOOLEAN ?
              DefaultIsolationId UINT32 ?
            NDIS_SWITCH_PORT_PROPERTY_ISOLATION ends
            _NDIS_SWITCH_PORT_PROPERTY_ISOLATION typedef NDIS_SWITCH_PORT_PROPERTY_ISOLATION
            PNDIS_SWITCH_PORT_PROPERTY_ISOLATION typedef ptr NDIS_SWITCH_PORT_PROPERTY_ISOLATION
            NDIS_SIZEOF_NDIS_SWITCH_PORT_PROPERTY_ISOLATION_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PORT_PROPERTY_ISOLATION, DefaultIsolationId)>
            NDIS_SWITCH_PORT_PROPERTY_ROUTING_DOMAIN_REVISION_1 equ 1
            NDIS_SWITCH_PORT_PROPERTY_ROUTING_DOMAIN struct
              Header NDIS_OBJECT_HEADER ?
              Flags ULONG ?
              RoutingDomainId NDIS_ROUTING_DOMAIN_ID <>
              RoutingDomainName NDIS_ROUTING_DOMAIN_NAME <>
              NumIsolationEntries ULONG ?
              FirstIsolationEntryOffset USHORT ?
            NDIS_SWITCH_PORT_PROPERTY_ROUTING_DOMAIN ends
            _NDIS_SWITCH_PORT_PROPERTY_ROUTING_DOMAIN typedef NDIS_SWITCH_PORT_PROPERTY_ROUTING_DOMAIN
            PNDIS_SWITCH_PORT_PROPERTY_ROUTING_DOMAIN typedef ptr NDIS_SWITCH_PORT_PROPERTY_ROUTING_DOMAIN
            NDIS_SIZEOF_NDIS_SWITCH_PORT_PROPERTY_ROUTING_DOMAIN_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PORT_PROPERTY_ROUTING_DOMAIN, FirstIsolationEntryOffset)>
            NDIS_SWITCH_PORT_PROPERTY_ROUTING_DOMAIN_GET_FIRST_ISOLATION_ENTRY macro _RoutingDomainProperty_
              exitm <((PNDIS_ROUTING_DOMAIN_ISOLATION_ENTRY) ((PUCHAR) (_RoutingDomainProperty_) + (_RoutingDomainProperty_) - FirstIsolationEntryOffset))>
            endm
          endif
          NDIS_SWITCH_PORT_PROPERTY_CUSTOM_REVISION_1 equ 1
          NDIS_SWITCH_PORT_PROPERTY_CUSTOM struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            PropertyBufferLength ULONG ?
            PropertyBufferOffset ULONG ?
          NDIS_SWITCH_PORT_PROPERTY_CUSTOM ends
          _NDIS_SWITCH_PORT_PROPERTY_CUSTOM typedef NDIS_SWITCH_PORT_PROPERTY_CUSTOM
          PNDIS_SWITCH_PORT_PROPERTY_CUSTOM typedef ptr NDIS_SWITCH_PORT_PROPERTY_CUSTOM
          NDIS_SIZEOF_NDIS_SWITCH_PORT_PROPERTY_CUSTOM_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PORT_PROPERTY_CUSTOM, PropertyBufferOffset)>
          NDIS_SWITCH_PORT_PROPERTY_CUSTOM_GET_BUFFER macro _PortPropertyCustom_
            exitm <(((PUCHAR) (_PortPropertyCustom_) + (_PortPropertyCustom_) - PropertyBufferOffset))>
          endm
          NDIS_SWITCH_PORT_PROPERTY_PARAMETERS_REVISION_1 equ 1
          NDIS_SWITCH_PORT_PROPERTY_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            PortId NDIS_SWITCH_PORT_ID ?
            PropertyType NDIS_SWITCH_PORT_PROPERTY_TYPE ?
            PropertyId NDIS_SWITCH_OBJECT_ID <>
            PropertyVersion NDIS_SWITCH_OBJECT_VERSION ?
            SerializationVersion NDIS_SWITCH_OBJECT_SERIALIZATION_VERSION ?
            PropertyInstanceId NDIS_SWITCH_OBJECT_INSTANCE_ID <>
            PropertyBufferLength ULONG ?
            PropertyBufferOffset ULONG ?
            Reserved ULONG ?
          NDIS_SWITCH_PORT_PROPERTY_PARAMETERS ends
          _NDIS_SWITCH_PORT_PROPERTY_PARAMETERS typedef NDIS_SWITCH_PORT_PROPERTY_PARAMETERS
          PNDIS_SWITCH_PORT_PROPERTY_PARAMETERS typedef ptr NDIS_SWITCH_PORT_PROPERTY_PARAMETERS
          NDIS_SIZEOF_NDIS_SWITCH_PORT_PROPERTY_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PORT_PROPERTY_PARAMETERS, Reserved)>
          NDIS_SWITCH_PORT_PROPERTY_PARAMETERS_GET_PROPERTY macro _PortParameters_
            exitm <(((PUCHAR) (_PortParameters_) + (_PortParameters_) - PropertyBufferOffset))>
          endm
          NDIS_SWITCH_CREATE_PROPERTY_VERSION macro _VersionMajor_, _VersionMinor_
            exitm <(((_VersionMajor_) shl 8) + (_VersionMinor_))>
          endm
          NDIS_SWITCH_PORT_PROPERTY_DELETE_PARAMETERS_REVISION_1 equ 1
          NDIS_SWITCH_PORT_PROPERTY_DELETE_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            PortId NDIS_SWITCH_PORT_ID ?
            PropertyType NDIS_SWITCH_PORT_PROPERTY_TYPE ?
            PropertyId NDIS_SWITCH_OBJECT_ID <>
            PropertyInstanceId NDIS_SWITCH_OBJECT_INSTANCE_ID <>
          NDIS_SWITCH_PORT_PROPERTY_DELETE_PARAMETERS ends
          _NDIS_SWITCH_PORT_PROPERTY_DELETE_PARAMETERS typedef NDIS_SWITCH_PORT_PROPERTY_DELETE_PARAMETERS
          PNDIS_SWITCH_PORT_PROPERTY_DELETE_PARAMETERS typedef ptr NDIS_SWITCH_PORT_PROPERTY_DELETE_PARAMETERS
          NDIS_SIZEOF_NDIS_SWITCH_PORT_PROPERTY_DELETE_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PORT_PROPERTY_DELETE_PARAMETERS, PropertyInstanceId)>
          NDIS_SWITCH_PORT_PROPERTY_ENUM_PARAMETERS_REVISION_1 equ 1
          NDIS_SWITCH_PORT_PROPERTY_ENUM_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            PortId NDIS_SWITCH_PORT_ID ?
            PropertyType NDIS_SWITCH_PORT_PROPERTY_TYPE ?
            PropertyId NDIS_SWITCH_OBJECT_ID <>
            SerializationVersion NDIS_SWITCH_OBJECT_SERIALIZATION_VERSION ?
            FirstPropertyOffset ULONG ?
            NumProperties ULONG ?
            Reserved USHORT ?
          NDIS_SWITCH_PORT_PROPERTY_ENUM_PARAMETERS ends
          _NDIS_SWITCH_PORT_PROPERTY_ENUM_PARAMETERS typedef NDIS_SWITCH_PORT_PROPERTY_ENUM_PARAMETERS
          PNDIS_SWITCH_PORT_PROPERTY_ENUM_PARAMETERS typedef ptr NDIS_SWITCH_PORT_PROPERTY_ENUM_PARAMETERS
          NDIS_SIZEOF_NDIS_SWITCH_PORT_PROPERTY_ENUM_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PORT_PROPERTY_ENUM_PARAMETERS, Reserved)>
          NDIS_SWITCH_PORT_PROPERTY_ENUM_PARAMETERS_GET_FIRST_INFO macro _PortEnumParams_
            exitm <((PNDIS_SWITCH_PORT_PROPERTY_ENUM_INFO) ((PUCHAR) (_PortEnumParams_) + (_PortEnumParams_) - FirstPropertyOffset))>
          endm
          NDIS_SWITCH_PORT_PROPERTY_ENUM_INFO_REVISION_1 equ 1
          NDIS_SWITCH_PORT_PROPERTY_ENUM_INFO struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            PropertyVersion NDIS_SWITCH_OBJECT_VERSION ?
            PropertyInstanceId NDIS_SWITCH_OBJECT_INSTANCE_ID <>
            QwordAlignedPropertyBufferLength ULONG ?
            PropertyBufferLength ULONG ?
            PropertyBufferOffset ULONG ?
          NDIS_SWITCH_PORT_PROPERTY_ENUM_INFO ends
          _NDIS_SWITCH_PORT_PROPERTY_ENUM_INFO typedef NDIS_SWITCH_PORT_PROPERTY_ENUM_INFO
          PNDIS_SWITCH_PORT_PROPERTY_ENUM_INFO typedef ptr NDIS_SWITCH_PORT_PROPERTY_ENUM_INFO
          NDIS_SIZEOF_NDIS_SWITCH_PORT_PROPERTY_ENUM_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PORT_PROPERTY_ENUM_INFO, PropertyBufferOffset)>
          NDIS_SWITCH_PORT_PROPERTY_ENUM_INFO_GET_NEXT macro _PortEnumInfo_
            exitm <((PNDIS_SWITCH_PORT_PROPERTY_ENUM_INFO) ((_PortEnumInfo_) + (_PortEnumInfo_) - QwordAlignedPropertyBufferLength + sizeof(NDIS_SWITCH_PORT_PROPERTY_ENUM_INFO)))>
          endm
          NDIS_SWITCH_PORT_PROPERTY_ENUM_INFO_GET_PROPERTY macro _PortEnumInfo_
            exitm <(((PUCHAR) (_PortEnumInfo_) + (_PortEnumInfo_) - PropertyBufferOffset))>
          endm
          NDIS_SWITCH_PORT_FEATURE_STATUS_TYPE typedef SDWORD
          NdisSwitchPortFeatureStatusTypeUndefined equ 0
          NdisSwitchPortFeatureStatusTypeCustom equ 1
          NdisSwitchPortFeatureStatusTypeMaximum equ 2
          _NDIS_SWITCH_PORT_FEATURE_STATUS_TYPE typedef NDIS_SWITCH_PORT_FEATURE_STATUS_TYPE
          PNDIS_SWITCH_PORT_FEATURE_STATUS_TYPE typedef ptr NDIS_SWITCH_PORT_FEATURE_STATUS_TYPE
          NDIS_SWITCH_PORT_FEATURE_STATUS_PARAMETERS_REVISION_1 equ 1
          NDIS_SWITCH_PORT_FEATURE_STATUS_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            PortId NDIS_SWITCH_PORT_ID ?
            FeatureStatusType NDIS_SWITCH_PORT_FEATURE_STATUS_TYPE ?
            FeatureStatusId NDIS_SWITCH_OBJECT_ID <>
            FeatureStatusVersion NDIS_SWITCH_OBJECT_VERSION ?
            SerializationVersion NDIS_SWITCH_OBJECT_SERIALIZATION_VERSION ?
            FeatureStatusInstanceId NDIS_SWITCH_OBJECT_INSTANCE_ID <>
            FeatureStatusBufferLength ULONG ?
            FeatureStatusBufferOffset ULONG ?
            Reserved ULONG ?
          NDIS_SWITCH_PORT_FEATURE_STATUS_PARAMETERS ends
          _NDIS_SWITCH_PORT_FEATURE_STATUS_PARAMETERS typedef NDIS_SWITCH_PORT_FEATURE_STATUS_PARAMETERS
          PNDIS_SWITCH_PORT_FEATURE_STATUS_PARAMETERS typedef ptr NDIS_SWITCH_PORT_FEATURE_STATUS_PARAMETERS
          NDIS_SIZEOF_NDIS_SWITCH_PORT_FEATURE_STATUS_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PORT_FEATURE_STATUS_PARAMETERS, Reserved)>
          NDIS_SWITCH_CREATE_FEATURE_STATUS_VERSION macro _VersionMajor_, _VersionMinor_
            exitm <(((_VersionMajor_) shl 8) + (_VersionMinor_))>
          endm
          NDIS_SWITCH_PORT_FEATURE_STATUS_CUSTOM_REVISION_1 equ 1
          NDIS_SWITCH_PORT_FEATURE_STATUS_CUSTOM struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            FeatureStatusBufferLength ULONG ?
            FeatureStatusBufferOffset ULONG ?
          NDIS_SWITCH_PORT_FEATURE_STATUS_CUSTOM ends
          _NDIS_SWITCH_PORT_FEATURE_STATUS_CUSTOM typedef NDIS_SWITCH_PORT_FEATURE_STATUS_CUSTOM
          PNDIS_SWITCH_PORT_FEATURE_STATUS_CUSTOM typedef ptr NDIS_SWITCH_PORT_FEATURE_STATUS_CUSTOM
          NDIS_SIZEOF_NDIS_SWITCH_PORT_FEATURE_STATUS_CUSTOM_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PORT_FEATURE_STATUS_CUSTOM, FeatureStatusBufferOffset)>
          NDIS_SWITCH_PROPERTY_TYPE typedef SDWORD
          NdisSwitchPropertyTypeUndefined equ 0
          NdisSwitchPropertyTypeCustom equ 1
          NdisSwitchPropertyTypeMaximum equ 2
          _NDIS_SWITCH_PROPERTY_TYPE typedef NDIS_SWITCH_PROPERTY_TYPE
          PNDIS_SWITCH_PROPERTY_TYPE typedef ptr NDIS_SWITCH_PROPERTY_TYPE
          NDIS_SWITCH_PROPERTY_CUSTOM_REVISION_1 equ 1
          NDIS_SWITCH_PROPERTY_CUSTOM struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            PropertyBufferLength ULONG ?
            PropertyBufferOffset ULONG ?
          NDIS_SWITCH_PROPERTY_CUSTOM ends
          _NDIS_SWITCH_PROPERTY_CUSTOM typedef NDIS_SWITCH_PROPERTY_CUSTOM
          PNDIS_SWITCH_PROPERTY_CUSTOM typedef ptr NDIS_SWITCH_PROPERTY_CUSTOM
          NDIS_SIZEOF_NDIS_SWITCH_PROPERTY_CUSTOM_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PROPERTY_CUSTOM, PropertyBufferOffset)>
          NDIS_SWITCH_PROPERTY_CUSTOM_GET_BUFFER macro _SwitchPropertyCustom_
            exitm <(((PUCHAR) (_SwitchPropertyCustom_) + (_SwitchPropertyCustom_) - PropertyBufferOffset))>
          endm
          NDIS_SWITCH_PROPERTY_PARAMETERS_REVISION_1 equ 1
          NDIS_SWITCH_PROPERTY_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            PropertyType NDIS_SWITCH_PROPERTY_TYPE ?
            PropertyId NDIS_SWITCH_OBJECT_ID <>
            PropertyVersion NDIS_SWITCH_OBJECT_VERSION ?
            SerializationVersion NDIS_SWITCH_OBJECT_SERIALIZATION_VERSION ?
            PropertyInstanceId NDIS_SWITCH_OBJECT_INSTANCE_ID <>
            PropertyBufferLength ULONG ?
            PropertyBufferOffset ULONG ?
          NDIS_SWITCH_PROPERTY_PARAMETERS ends
          _NDIS_SWITCH_PROPERTY_PARAMETERS typedef NDIS_SWITCH_PROPERTY_PARAMETERS
          PNDIS_SWITCH_PROPERTY_PARAMETERS typedef ptr NDIS_SWITCH_PROPERTY_PARAMETERS
          NDIS_SIZEOF_NDIS_SWITCH_PROPERTY_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PROPERTY_PARAMETERS, PropertyBufferOffset)>
          NDIS_SWITCH_PROPERTY_PARAMETERS_GET_PROPERTY macro _SwitchParameters_
            exitm <(((PUCHAR) (_SwitchParameters_) + (_SwitchParameters_) - PropertyBufferOffset))>
          endm
          NDIS_SWITCH_PROPERTY_DELETE_PARAMETERS_REVISION_1 equ 1
          NDIS_SWITCH_PROPERTY_DELETE_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            PropertyType NDIS_SWITCH_PROPERTY_TYPE ?
            PropertyId NDIS_SWITCH_OBJECT_ID <>
            PropertyInstanceId NDIS_SWITCH_OBJECT_INSTANCE_ID <>
          NDIS_SWITCH_PROPERTY_DELETE_PARAMETERS ends
          _NDIS_SWITCH_PROPERTY_DELETE_PARAMETERS typedef NDIS_SWITCH_PROPERTY_DELETE_PARAMETERS
          PNDIS_SWITCH_PROPERTY_DELETE_PARAMETERS typedef ptr NDIS_SWITCH_PROPERTY_DELETE_PARAMETERS
          NDIS_SIZEOF_NDIS_SWITCH_PROPERTY_DELETE_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PROPERTY_DELETE_PARAMETERS, PropertyInstanceId)>
          NDIS_SWITCH_PROPERTY_ENUM_INFO_REVISION_1 equ 1
          NDIS_SWITCH_PROPERTY_ENUM_INFO struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            PropertyInstanceId NDIS_SWITCH_OBJECT_INSTANCE_ID <>
            PropertyVersion NDIS_SWITCH_OBJECT_VERSION ?
            QwordAlignedPropertyBufferLength ULONG ?
            PropertyBufferLength ULONG ?
            PropertyBufferOffset ULONG ?
          NDIS_SWITCH_PROPERTY_ENUM_INFO ends
          _NDIS_SWITCH_PROPERTY_ENUM_INFO typedef NDIS_SWITCH_PROPERTY_ENUM_INFO
          PNDIS_SWITCH_PROPERTY_ENUM_INFO typedef ptr NDIS_SWITCH_PROPERTY_ENUM_INFO
          NDIS_SIZEOF_NDIS_SWITCH_PROPERTY_ENUM_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PROPERTY_ENUM_INFO, PropertyBufferOffset)>
          NDIS_SWITCH_PROPERTY_ENUM_INFO_GET_NEXT macro _SwitchEnumInfo_
            exitm <((PNDIS_SWITCH_PROPERTY_ENUM_INFO) ((_SwitchEnumInfo_) + (_SwitchEnumInfo_) - QwordAlignedPropertyBufferLength + sizeof(NDIS_SWITCH_PROPERTY_ENUM_INFO)))>
          endm
          NDIS_SWITCH_PROPERTY_ENUM_INFO_GET_PROPERTY macro _SwitchEnumInfo_
            exitm <(((PUCHAR) (_SwitchEnumInfo_) + (_SwitchEnumInfo_) - PropertyBufferOffset))>
          endm
          NDIS_SWITCH_PROPERTY_ENUM_PARAMETERS_REVISION_1 equ 1
          NDIS_SWITCH_PROPERTY_ENUM_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            PropertyType NDIS_SWITCH_PROPERTY_TYPE ?
            PropertyId NDIS_SWITCH_OBJECT_ID <>
            SerializationVersion NDIS_SWITCH_OBJECT_SERIALIZATION_VERSION ?
            FirstPropertyOffset ULONG ?
            NumProperties ULONG ?
          NDIS_SWITCH_PROPERTY_ENUM_PARAMETERS ends
          _NDIS_SWITCH_PROPERTY_ENUM_PARAMETERS typedef NDIS_SWITCH_PROPERTY_ENUM_PARAMETERS
          PNDIS_SWITCH_PROPERTY_ENUM_PARAMETERS typedef ptr NDIS_SWITCH_PROPERTY_ENUM_PARAMETERS
          NDIS_SIZEOF_NDIS_SWITCH_PROPERTY_ENUM_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PROPERTY_ENUM_PARAMETERS, NumProperties)>
          NDIS_SWITCH_PROPERTY_ENUM_PARAMETERS_GET_FIRST_INFO macro _SwitchEnumParams_
            exitm <((PNDIS_SWITCH_PROPERTY_ENUM_INFO) ((PUCHAR) (_SwitchEnumParams_) + (_SwitchEnumParams_) - FirstPropertyOffset))>
          endm
          NDIS_SWITCH_FEATURE_STATUS_PARAMETERS_REVISION_1 equ 1
          NDIS_SWITCH_FEATURE_STATUS_TYPE typedef SDWORD
          NdisSwitchFeatureStatusTypeUndefined equ 0
          NdisSwitchFeatureStatusTypeCustom equ 1
          NdisSwitchFeatureStatusTypeMaximum equ 2
          _NDIS_SWITCH_FEATURE_STATUS_TYPE typedef NDIS_SWITCH_FEATURE_STATUS_TYPE
          PNDIS_SWITCH_FEATURE_STATUS_TYPE typedef ptr NDIS_SWITCH_FEATURE_STATUS_TYPE
          NDIS_SWITCH_FEATURE_STATUS_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            FeatureStatusType NDIS_SWITCH_FEATURE_STATUS_TYPE ?
            FeatureStatusId NDIS_SWITCH_OBJECT_ID <>
            FeatureStatusInstanceId NDIS_SWITCH_OBJECT_INSTANCE_ID <>
            FeatureStatusVersion NDIS_SWITCH_OBJECT_VERSION ?
            SerializationVersion NDIS_SWITCH_OBJECT_SERIALIZATION_VERSION ?
            FeatureStatusBufferOffset ULONG ?
            FeatureStatusBufferLength ULONG ?
          NDIS_SWITCH_FEATURE_STATUS_PARAMETERS ends
          _NDIS_SWITCH_FEATURE_STATUS_PARAMETERS typedef NDIS_SWITCH_FEATURE_STATUS_PARAMETERS
          PNDIS_SWITCH_FEATURE_STATUS_PARAMETERS typedef ptr NDIS_SWITCH_FEATURE_STATUS_PARAMETERS
          NDIS_SIZEOF_NDIS_SWITCH_FEATURE_STATUS_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_FEATURE_STATUS_PARAMETERS, FeatureStatusBufferLength)>
          NDIS_SWITCH_FEATURE_STATUS_CUSTOM_REVISION_1 equ 1
          NDIS_SWITCH_FEATURE_STATUS_CUSTOM struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            FeatureStatusCustomBufferLength ULONG ?
            FeatureStatusCustomBufferOffset ULONG ?
          NDIS_SWITCH_FEATURE_STATUS_CUSTOM ends
          _NDIS_SWITCH_FEATURE_STATUS_CUSTOM typedef NDIS_SWITCH_FEATURE_STATUS_CUSTOM
          PNDIS_SWITCH_FEATURE_STATUS_CUSTOM typedef ptr NDIS_SWITCH_FEATURE_STATUS_CUSTOM
          NDIS_SIZEOF_NDIS_SWITCH_FEATURE_STATUS_CUSTOM_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_FEATURE_STATUS_CUSTOM, FeatureStatusCustomBufferOffset)>
          NDIS_SWITCH_PARAMETERS_REVISION_1 equ 1
          NDIS_SWITCH_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            SwitchName NDIS_SWITCH_NAME <>
            SwitchFriendlyName NDIS_SWITCH_FRIENDLYNAME <>
            NumSwitchPorts UINT32 ?
            IsActive BOOLEAN ?
          NDIS_SWITCH_PARAMETERS ends
          _NDIS_SWITCH_PARAMETERS typedef NDIS_SWITCH_PARAMETERS
          PNDIS_SWITCH_PARAMETERS typedef ptr NDIS_SWITCH_PARAMETERS
          NDIS_SIZEOF_NDIS_SWITCH_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PARAMETERS, IsActive)>
          NDIS_SWITCH_PORT_TYPE typedef SDWORD
          NdisSwitchPortTypeGeneric equ 0
          NdisSwitchPortTypeExternal equ 1
          NdisSwitchPortTypeSynthetic equ 2
          NdisSwitchPortTypeEmulated equ 3
          NdisSwitchPortTypeInternal equ 4
          _NDIS_SWITCH_PORT_TYPE typedef NDIS_SWITCH_PORT_TYPE

          NDIS_SWITCH_PORT_STATE typedef SDWORD
          NdisSwitchPortStateUnknown equ 0
          NdisSwitchPortStateCreated equ 1
          NdisSwitchPortStateTeardown equ 2
          NdisSwitchPortStateDeleted equ 3
          _NDIS_SWITCH_PORT_STATE typedef NDIS_SWITCH_PORT_STATE

          if (NDIS_SUPPORT_NDIS650)
            NDIS_SWITCH_PORT_PARAMETERS_FLAG_UNTRUSTED_INTERNAL_PORT equ 1h
          endif
          if (NDIS_SUPPORT_NDIS660)
            NDIS_SWITCH_PORT_PARAMETERS_FLAG_RESTORING_PORT equ 2h
          endif
          NDIS_SWITCH_PORT_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            PortId NDIS_SWITCH_PORT_ID ?
            PortName NDIS_SWITCH_PORT_NAME <>
            PortFriendlyName NDIS_SWITCH_PORT_FRIENDLYNAME <>
            PortType NDIS_SWITCH_PORT_TYPE ?
            IsValidationPort BOOLEAN ?
            PortState NDIS_SWITCH_PORT_STATE ?
          NDIS_SWITCH_PORT_PARAMETERS ends
          _NDIS_SWITCH_PORT_PARAMETERS typedef NDIS_SWITCH_PORT_PARAMETERS
          PNDIS_SWITCH_PORT_PARAMETERS typedef ptr NDIS_SWITCH_PORT_PARAMETERS
          NDIS_SWITCH_PORT_PARAMETERS_REVISION_1 equ 1
          NDIS_SIZEOF_NDIS_SWITCH_PORT_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PORT_PARAMETERS, PortState)>
          NDIS_SWITCH_PORT_ARRAY struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            FirstElementOffset USHORT ?
            NumElements ULONG ?
            ElementSize ULONG ?
          NDIS_SWITCH_PORT_ARRAY ends
          _NDIS_SWITCH_PORT_ARRAY typedef NDIS_SWITCH_PORT_ARRAY
          PNDIS_SWITCH_PORT_ARRAY typedef ptr NDIS_SWITCH_PORT_ARRAY
          NDIS_SWITCH_PORT_ARRAY_REVISION_1 equ 1
          NDIS_SIZEOF_NDIS_SWITCH_PORT_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_PORT_ARRAY, ElementSize)>
          NDIS_SWITCH_PORT_AT_ARRAY_INDEX macro _PortArray_, _Index_
            exitm <((PNDIS_SWITCH_PORT_PARAMETERS) ((PUCHAR) (_PortArray_) + (_PortArray_) - FirstElementOffset + ((_PortArray_) - ElementSize * (_Index_))))>
          endm
          if Defined(NDIS_SUPPORT_NDIS640)
            NDIS_SWITCH_NIC_FLAGS_NIC_INITIALIZING equ 00000001h
          endif
          if Defined(NDIS_SUPPORT_NDIS650)
            NDIS_SWITCH_NIC_FLAGS_NIC_SUSPENDED equ 00000002h
          endif
          if Defined(NDIS_SUPPORT_NDIS660)
            NDIS_SWITCH_NIC_FLAGS_MAPPED_NIC_UPDATED equ 00000004h
          endif
          if Defined(NDIS_SUPPORT_NDIS680)
            NDIS_SWITCH_NIC_FLAGS_NIC_SUSPENDED_LM equ 00000010h
          endif
          NDIS_SWITCH_NIC_TYPE typedef SDWORD
          NdisSwitchNicTypeExternal equ 0
          NdisSwitchNicTypeSynthetic equ 1
          NdisSwitchNicTypeEmulated equ 2
          NdisSwitchNicTypeInternal equ 3
          _NDIS_SWITCH_NIC_TYPE typedef NDIS_SWITCH_NIC_TYPE

          NDIS_SWITCH_NIC_STATE typedef SDWORD
          NdisSwitchNicStateUnknown equ 0
          NdisSwitchNicStateCreated equ 1
          NdisSwitchNicStateConnected equ 2
          NdisSwitchNicStateDisconnected equ 3
          NdisSwitchNicStateDeleted equ 4
          _NDIS_SWITCH_NIC_STATE typedef NDIS_SWITCH_NIC_STATE

          NDIS_SWITCH_NIC_PARAMETERS struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            NicName NDIS_SWITCH_NIC_NAME <>
            NicFriendlyName NDIS_SWITCH_NIC_FRIENDLYNAME <>
            PortId NDIS_SWITCH_PORT_ID ?
            NicIndex NDIS_SWITCH_NIC_INDEX ?
            NicType NDIS_SWITCH_NIC_TYPE ?
            NicState NDIS_SWITCH_NIC_STATE ?
            VmName NDIS_VM_NAME <>
            VmFriendlyName NDIS_VM_FRIENDLYNAME <>
            NetCfgInstanceId GUID <>
            MTU ULONG ?
            NumaNodeId USHORT ?
            PermanentMacAddress UCHAR NDIS_MAX_PHYS_ADDRESS_LENGTH dup (?)
            VMMacAddress UCHAR NDIS_MAX_PHYS_ADDRESS_LENGTH dup (?)
            CurrentMacAddress UCHAR NDIS_MAX_PHYS_ADDRESS_LENGTH dup (?)
            VFAssigned BOOLEAN ?
            if Defined(NDIS_SUPPORT_NDIS640)
              NdisReserved ULONG64 2 dup (?)
            endif
          NDIS_SWITCH_NIC_PARAMETERS ends
          _NDIS_SWITCH_NIC_PARAMETERS typedef NDIS_SWITCH_NIC_PARAMETERS
          PNDIS_SWITCH_NIC_PARAMETERS typedef ptr NDIS_SWITCH_NIC_PARAMETERS
          NDIS_SWITCH_NIC_PARAMETERS_REVISION_1 equ 1
          NDIS_SIZEOF_NDIS_SWITCH_NIC_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_NIC_PARAMETERS, VFAssigned)>
          if Defined(NDIS_SUPPORT_NDIS640)
            NDIS_SWITCH_NIC_PARAMETERS_REVISION_2 equ 2
            NDIS_SIZEOF_NDIS_SWITCH_NIC_PARAMETERS_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_NIC_PARAMETERS, NdisReserved)>
          endif
          NDIS_SWITCH_NIC_ARRAY struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            FirstElementOffset USHORT ?
            NumElements ULONG ?
            ElementSize ULONG ?
          NDIS_SWITCH_NIC_ARRAY ends
          _NDIS_SWITCH_NIC_ARRAY typedef NDIS_SWITCH_NIC_ARRAY
          PNDIS_SWITCH_NIC_ARRAY typedef ptr NDIS_SWITCH_NIC_ARRAY
          NDIS_SWITCH_NIC_ARRAY_REVISION_1 equ 1
          NDIS_SIZEOF_NDIS_SWITCH_NIC_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_NIC_ARRAY, ElementSize)>
          NDIS_SWITCH_NIC_AT_ARRAY_INDEX macro _NicArray_, _Index_
            exitm <((PNDIS_SWITCH_NIC_PARAMETERS) ((PUCHAR) (_NicArray_) + (_NicArray_) - FirstElementOffset + ((_NicArray_) - ElementSize * (_Index_))))>
          endm
          NDIS_OID_REQUEST typedef _NDIS_OID_REQUEST
          PNDIS_OID_REQUEST typedef ptr _NDIS_OID_REQUEST
          NDIS_SWITCH_NIC_OID_REQUEST struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            SourcePortId NDIS_SWITCH_PORT_ID ?
            SourceNicIndex NDIS_SWITCH_NIC_INDEX ?
            DestinationPortId NDIS_SWITCH_PORT_ID ?
            DestinationNicIndex NDIS_SWITCH_NIC_INDEX ?
            OidRequest PNDIS_OID_REQUEST ?
          NDIS_SWITCH_NIC_OID_REQUEST ends
          _NDIS_SWITCH_NIC_OID_REQUEST typedef NDIS_SWITCH_NIC_OID_REQUEST
          PNDIS_SWITCH_NIC_OID_REQUEST typedef ptr NDIS_SWITCH_NIC_OID_REQUEST
          NDIS_SWITCH_NIC_OID_REQUEST_REVISION_1 equ 1
          NDIS_SIZEOF_NDIS_SWITCH_NIC_OID_REQUEST_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_NIC_OID_REQUEST, OidRequest)>
          NDIS_SWITCH_NIC_SAVE_STATE struct
            Header NDIS_OBJECT_HEADER ?
            Flags ULONG ?
            PortId NDIS_SWITCH_PORT_ID ?
            NicIndex NDIS_SWITCH_NIC_INDEX ?
            ExtensionId GUID <>
            ExtensionFriendlyName NDIS_SWITCH_EXTENSION_FRIENDLYNAME <>
            FeatureClassId GUID <>
            SaveDataSize USHORT ?
            SaveDataOffset USHORT ?
            if (NDIS_SUPPORT_NDIS650)
              SaveDataSizeOverflow ULONG ?
            endif
          NDIS_SWITCH_NIC_SAVE_STATE ends
          _NDIS_SWITCH_NIC_SAVE_STATE typedef NDIS_SWITCH_NIC_SAVE_STATE
          PNDIS_SWITCH_NIC_SAVE_STATE typedef ptr NDIS_SWITCH_NIC_SAVE_STATE
          NDIS_SWITCH_NIC_SAVE_STATE_REVISION_1 equ 1
          NDIS_SIZEOF_NDIS_SWITCH_NIC_SAVE_STATE_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_NIC_SAVE_STATE, SaveDataOffset)>
          if (NDIS_SUPPORT_NDIS650)
            NDIS_SWITCH_NIC_SAVE_STATE_REVISION_2 equ 2
            NDIS_SIZEOF_NDIS_SWITCH_NIC_SAVE_STATE_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_SWITCH_NIC_SAVE_STATE, SaveDataSizeOverflow)>
          endif
        endif
        NDIS_PORT_STATE_REVISION_1 equ 1
        NDIS_PORT_STATE struct
          Header NDIS_OBJECT_HEADER ?
          MediaConnectState NDIS_MEDIA_CONNECT_STATE ?
          XmitLinkSpeed ULONG64 ?
          RcvLinkSpeed ULONG64 ?
          Direction NET_IF_DIRECTION_TYPE ?
          SendControlState NDIS_PORT_CONTROL_STATE ?
          RcvControlState NDIS_PORT_CONTROL_STATE ?
          SendAuthorizationState NDIS_PORT_AUTHORIZATION_STATE ?
          RcvAuthorizationState NDIS_PORT_AUTHORIZATION_STATE ?
          Flags ULONG ?
        NDIS_PORT_STATE ends
        _NDIS_PORT_STATE typedef NDIS_PORT_STATE
        PNDIS_PORT_STATE typedef ptr NDIS_PORT_STATE
        NDIS_SIZEOF_PORT_STATE_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PORT_STATE, Flags)>
        NDIS_PORT_CHAR_USE_DEFAULT_AUTH_SETTINGS equ 00000001h
        NDIS_PORT_CHARACTERISTICS_REVISION_1 equ 1
        NDIS_PORT_CHARACTERISTICS struct
          Header NDIS_OBJECT_HEADER ?
          PortNumber NDIS_PORT_NUMBER ?
          Flags ULONG ?
          Type_ NDIS_PORT_TYPE ?
          MediaConnectState NDIS_MEDIA_CONNECT_STATE ?
          XmitLinkSpeed ULONG64 ?
          RcvLinkSpeed ULONG64 ?
          Direction NET_IF_DIRECTION_TYPE ?
          SendControlState NDIS_PORT_CONTROL_STATE ?
          RcvControlState NDIS_PORT_CONTROL_STATE ?
          SendAuthorizationState NDIS_PORT_AUTHORIZATION_STATE ?
          RcvAuthorizationState NDIS_PORT_AUTHORIZATION_STATE ?
        NDIS_PORT_CHARACTERISTICS ends
        _NDIS_PORT_CHARACTERISTICS typedef NDIS_PORT_CHARACTERISTICS
        PNDIS_PORT_CHARACTERISTICS typedef ptr NDIS_PORT_CHARACTERISTICS
        NDIS_SIZEOF_PORT_CHARACTERISTICS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PORT_CHARACTERISTICS, RcvAuthorizationState)>
        NDIS_PORT typedef _NDIS_PORT
        PNDIS_PORT typedef ptr _NDIS_PORT
        _NDIS_PORT struct
          Next PNDIS_PORT ?
          NdisReserved PVOID ?
          MiniportReserved PVOID ?
          ProtocolReserved PVOID ?
          PortCharacteristics NDIS_PORT_CHARACTERISTICS <>
        _NDIS_PORT ends
        NDIS_PORT_ARRAY_REVISION_1 equ 1
        NDIS_PORT_ARRAY struct
          Header NDIS_OBJECT_HEADER ?
          NumberOfPorts ULONG ?
          OffsetFirstPort ULONG ?
          ElementSize ULONG ?
          Ports NDIS_PORT_CHARACTERISTICS 1 dup (<>)
        NDIS_PORT_ARRAY ends
        _NDIS_PORT_ARRAY typedef NDIS_PORT_ARRAY
        PNDIS_PORT_ARRAY typedef ptr NDIS_PORT_ARRAY
        NDIS_SIZEOF_PORT_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PORT_ARRAY, Ports)>
      endif
    endif
    if (NDIS_SUPPORT_NDIS650)
      include inaddr.inc
      include in6addr.inc
      ETHERNET_LENGTH_OF_ADDRESS equ 6
      NDIS_GFP_TABLE_TYPE typedef SDWORD
      NdisGfpTableTypeUndefined equ 0
      NdisGfpTableTypeWildcardIngress equ 1
      NdisGfpTableTypeWildcardEgress equ 2
      NdisGfpTableTypeExactMatchIngress equ 3
      NdisGfpTableTypeExactMatchEgress equ 4
      NdisGfpTableTypePacketDirect equ 5
      NdisGfpTableTypeMax equ 6
      _NDIS_GFP_TABLE_TYPE typedef NDIS_GFP_TABLE_TYPE
      PNDIS_GFP_TABLE_TYPE typedef ptr NDIS_GFP_TABLE_TYPE
      NDIS_GFP_HEADER_PRESENT_ETHERNET equ 00000001h
      NDIS_GFP_HEADER_PRESENT_IPV4 equ 00000002h
      NDIS_GFP_HEADER_PRESENT_IPV6 equ 00000004h
      NDIS_GFP_HEADER_PRESENT_TCP equ 00000008h
      NDIS_GFP_HEADER_PRESENT_UDP equ 00000010h
      NDIS_GFP_HEADER_PRESENT_ICMP equ 00000020h
      NDIS_GFP_HEADER_PRESENT_NO_ENCAP equ 00000040h
      NDIS_GFP_HEADER_PRESENT_IP_IN_IP_ENCAP equ 00000080h
      NDIS_GFP_HEADER_PRESENT_IP_IN_GRE_ENCAP equ 00000100h
      NDIS_GFP_HEADER_PRESENT_NVGRE_ENCAP equ 00000200h
      NDIS_GFP_HEADER_PRESENT_VXLAN_ENCAP equ 00000400h
      NDIS_GFP_HEADER_PRESENT_ESP equ 00000800h
      NDIS_GFP_HEADER_FIELD_DEST_MAC_ADDR equ 00000001ULh
      NDIS_GFP_HEADER_FIELD_SRC_MAC_ADDR equ 00000002ULh
      NDIS_GFP_HEADER_FIELD_ETH_TYPE equ 00000004ULh
      NDIS_GFP_HEADER_FIELD_CUSTOMER_VLAN_ID equ 00000008ULh
      NDIS_GFP_HEADER_FIELD_PROVIDER_VLAN_ID equ 00000010ULh
      NDIS_GFP_HEADER_FIELD_8021P_PRIORITY equ 00000020ULh
      NDIS_GFP_HEADER_FIELD_SRC_IP_ADDR equ 00000040ULh
      NDIS_GFP_HEADER_FIELD_DEST_IP_ADDR equ 00000080ULh
      NDIS_GFP_HEADER_FIELD_TTL equ 00000100ULh
      NDIS_GFP_HEADER_FIELD_IP_PROTOCOL equ 00000200ULh
      NDIS_GFP_HEADER_FIELD_IP_DSCP equ 00000400ULh
      NDIS_GFP_HEADER_FIELD_TRANSPORT_SRC_PORT equ 00000800ULh
      NDIS_GFP_HEADER_FIELD_TRANSPORT_DEST_PORT equ 00001000ULh
      NDIS_GFP_HEADER_FIELD_TCP_FLAGS equ 00002000ULh
      NDIS_GFP_HEADER_FIELD_TENANT_ID equ 00004000ULh
      NDIS_GFP_HEADER_FIELD_ENTROPY equ 00008000ULh
      NDIS_GFP_HEADER_FIELD_ICMP_TYPE equ 00010000ULh
      NDIS_GFP_HEADER_FIELD_ICMP_CODE equ 00020000ULh
      NDIS_GFP_HEADER_FIELD_OOB_VLAN equ 00040000ULh
      NDIS_GFP_HEADER_FIELD_OOB_TENANT_ID equ 00080000ULh
      NDIS_GFP_HEADER_FIELD_GRE_PROTOCOL equ 00100000ULh
      NDIS_GFP_ENCAPSULATION_TYPE_NOT_ENCAPSULATED equ 00000001h
      NDIS_GFP_ENCAPSULATION_TYPE_IP_IN_IP equ 00000002h
      NDIS_GFP_ENCAPSULATION_TYPE_IP_IN_GRE equ 00000004h
      NDIS_GFP_ENCAPSULATION_TYPE_NVGRE equ 00000008h
      NDIS_GFP_ENCAPSULATION_TYPE_VXLAN equ 00000010h
      NDIS_GFP_PROFILE_ID typedef ULONG
      PNDIS_GFP_PROFILE_ID typedef ptr ULONG
      NDIS_GFP_UNDEFINED_PROFILE_ID equ 0
      NDIS_GFP_HEADER_GROUP_EXACT_MATCH_PROFILE_IS_TTL_ONE equ 00000001h
      NDIS_GFP_HEADER_GROUP_EXACT_MATCH_PROFILE_REVISION_1 equ 1
      NDIS_GFP_HEADER_GROUP_EXACT_MATCH_PROFILE struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        HeadersPresent ULONG ?
        MatchFields ULONG64 ?
      NDIS_GFP_HEADER_GROUP_EXACT_MATCH_PROFILE ends
      _NDIS_GFP_HEADER_GROUP_EXACT_MATCH_PROFILE typedef NDIS_GFP_HEADER_GROUP_EXACT_MATCH_PROFILE
      PNDIS_GFP_HEADER_GROUP_EXACT_MATCH_PROFILE typedef ptr NDIS_GFP_HEADER_GROUP_EXACT_MATCH_PROFILE
      NDIS_SIZEOF_GFP_HEADER_GROUP_EXACT_MATCH_PROFILE_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFP_HEADER_GROUP_EXACT_MATCH_PROFILE, MatchFields)>
      NDIS_GFP_EXACT_MATCH_PROFILE_RDMA_FLOW equ 00000001h
      NDIS_GFP_EXACT_MATCH_PROFILE_REVISION_1 equ 1
      NDIS_GFP_EXACT_MATCH_PROFILE struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableType NDIS_GFP_TABLE_TYPE ?
        ProfileId NDIS_GFP_PROFILE_ID ?
        NumSupportedEntries ULONG ?
        HeaderGroupExactMatchProfileArrayOffset ULONG ?
        HeaderGroupExactMatchProfileArrayNumElements ULONG ?
        HeaderGroupExactMatchProfileArrayElementSize ULONG ?
      NDIS_GFP_EXACT_MATCH_PROFILE ends
      _NDIS_GFP_EXACT_MATCH_PROFILE typedef NDIS_GFP_EXACT_MATCH_PROFILE
      PNDIS_GFP_EXACT_MATCH_PROFILE typedef ptr NDIS_GFP_EXACT_MATCH_PROFILE
      NDIS_SIZEOF_GFP_EXACT_MATCH_PROFILE_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFP_EXACT_MATCH_PROFILE, HeaderGroupExactMatchProfileArrayElementSize)>
      NDIS_GFP_ETHERNET_HEADER_FIELDS struct
        DestinationMacAddress UINT8 ETHERNET_LENGTH_OF_ADDRESS dup (?)
        SourceMacAddress UINT8 ETHERNET_LENGTH_OF_ADDRESS dup (?)
        EthType UINT16 ?
        CustomerVlanId UINT16 ?
        ProviderVlanId UINT16 ?
        Priority UINT8 ?
      NDIS_GFP_ETHERNET_HEADER_FIELDS ends
      _NDIS_GFP_ETHERNET_HEADER_FIELDS typedef NDIS_GFP_ETHERNET_HEADER_FIELDS
      PNDIS_GFP_ETHERNET_HEADER_FIELDS typedef ptr NDIS_GFP_ETHERNET_HEADER_FIELDS
      NDIS_GFP_HEADER_GROUP_EXACT_MATCH_IS_TTL_ONE equ 00000001h
      NDIS_GFP_HEADER_GROUP_EXACT_MATCH_REVISION_1 equ 1
      NDIS_GFP_HEADER_GROUP_EXACT_MATCH struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        HeadersPresent ULONG ?
        MatchFields ULONG64 ?
        EthernetFields NDIS_GFP_ETHERNET_HEADER_FIELDS <>
        union IPAddress
          struct IPv4Address
            SourceIPAddress IN_ADDR <>
            DestinationIPAddress IN_ADDR <>
          ends
          struct IPv6Address
            SourceIPAddress IN6_ADDR <>
            DestinationIPAddress IN6_ADDR <>
          ends
        ends
        Dscp UINT8 ?
        IPProtocol UINT8 ?
        union TransportOrEncapsulation
          struct Udp
            SourcePort USHORT ?
            DestinationPort USHORT ?
          ends
          struct Tcp
            SourcePort USHORT ?
            DestinationPort USHORT ?
            TcpFlags UINT8 ?
          ends
          struct Icmp
            Type_ UINT8 ?
            Code UINT8 ?
          ends
          struct Encapsulation
            TenantId ULONG ?
            GreProtocol USHORT ?
          ends
        ends
      NDIS_GFP_HEADER_GROUP_EXACT_MATCH ends
      _NDIS_GFP_HEADER_GROUP_EXACT_MATCH typedef NDIS_GFP_HEADER_GROUP_EXACT_MATCH
      PNDIS_GFP_HEADER_GROUP_EXACT_MATCH typedef ptr NDIS_GFP_HEADER_GROUP_EXACT_MATCH
      NDIS_SIZEOF_GFP_HEADER_GROUP_EXACT_MATCH_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFP_HEADER_GROUP_EXACT_MATCH, TransportOrEncapsulation)>
      NDIS_GFP_WILDCARD_MATCH_TYPE typedef SDWORD
      NdisGfpWildcardMatchTypeUndefined equ 0
      NdisGfpWildcardMatchTypeEqual equ 1
      NdisGfpWildcardMatchTypeMaskEqual equ 2
      NdisGfpWildcardMatchTypeInRange equ 3
      NdisGfpWildcardMatchTypeMax equ 4
      _NDIS_GFP_WILDCARD_MATCH_TYPE typedef NDIS_GFP_WILDCARD_MATCH_TYPE
      PNDIS_GFP_WILDCARD_MATCH_TYPE typedef ptr NDIS_GFP_WILDCARD_MATCH_TYPE
      NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH_PROFILE_IS_TTL_ONE equ 00000001h
      NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH_PROFILE_REVISION_1 equ 1
      NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH_PROFILE struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        HeadersPresent ULONG ?
        MatchFields ULONG64 ?
        SourceIPv4AddressMatchType NDIS_GFP_WILDCARD_MATCH_TYPE ?
        DestinationIPv4AddressMatchType NDIS_GFP_WILDCARD_MATCH_TYPE ?
        SourceIPv6AddressMatchType NDIS_GFP_WILDCARD_MATCH_TYPE ?
        DestinationIPv6AddressMatchType NDIS_GFP_WILDCARD_MATCH_TYPE ?
        SourcePortMatchType NDIS_GFP_WILDCARD_MATCH_TYPE ?
        DestinationPortMatchType NDIS_GFP_WILDCARD_MATCH_TYPE ?
        TcpFlags UINT8 ?
      NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH_PROFILE ends
      _NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH_PROFILE typedef NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH_PROFILE
      PNDIS_GFP_HEADER_GROUP_WILDCARD_MATCH_PROFILE typedef ptr NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH_PROFILE
      NDIS_SIZEOF_GFP_HEADER_GROUP_WILDCARD_MATCH_PROFILE_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH_PROFILE, TcpFlags)>
      NDIS_GFP_WILDCARD_MATCH_PROFILE_REVISION_1 equ 1
      NDIS_GFP_WILDCARD_MATCH_PROFILE struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableType NDIS_GFP_TABLE_TYPE ?
        ProfileId NDIS_GFP_PROFILE_ID ?
        NumSupportedEntries ULONG ?
        HeaderGroupWildcardMatchProfileArrayOffset ULONG ?
        HeaderGroupWildcardMatchProfileArrayNumElements ULONG ?
        HeaderGroupWildcardMatchProfileArrayElementSize ULONG ?
      NDIS_GFP_WILDCARD_MATCH_PROFILE ends
      _NDIS_GFP_WILDCARD_MATCH_PROFILE typedef NDIS_GFP_WILDCARD_MATCH_PROFILE
      PNDIS_GFP_WILDCARD_MATCH_PROFILE typedef ptr NDIS_GFP_WILDCARD_MATCH_PROFILE
      NDIS_SIZEOF_GFP_WILDCARD_MATCH_PROFILE_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFP_WILDCARD_MATCH_PROFILE, HeaderGroupWildcardMatchProfileArrayElementSize)>
      NDIS_GFP_IPV4_ADDRESS_WILDCARD_MATCH struct
        MatchType NDIS_GFP_WILDCARD_MATCH_TYPE ?
        IPAddress IN_ADDR <>
        union MatchValue
          PrefixLength ULONG ?
          RangeSize ULONG ?
        ends
      NDIS_GFP_IPV4_ADDRESS_WILDCARD_MATCH ends
      _NDIS_GFP_IPV4_ADDRESS_WILDCARD_MATCH typedef NDIS_GFP_IPV4_ADDRESS_WILDCARD_MATCH
      PNDIS_GFP_IPV4_ADDRESS_WILDCARD_MATCH typedef ptr NDIS_GFP_IPV4_ADDRESS_WILDCARD_MATCH
      NDIS_GFP_IPV4_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH struct
        SourceIPv4Address NDIS_GFP_IPV4_ADDRESS_WILDCARD_MATCH <>
        DestinationIPv4Address NDIS_GFP_IPV4_ADDRESS_WILDCARD_MATCH <>
      NDIS_GFP_IPV4_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH ends
      _NDIS_GFP_IPV4_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH typedef NDIS_GFP_IPV4_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH
      PNDIS_GFP_IPV4_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH typedef ptr NDIS_GFP_IPV4_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH
      NDIS_GFP_IPV6_ADDRESS_WILDCARD_MATCH struct
        MatchType NDIS_GFP_WILDCARD_MATCH_TYPE ?
        IPAddress IN6_ADDR <>
        union MatchValue
          PrefixLength ULONG ?
          RangeSize ULONG ?
        ends
      NDIS_GFP_IPV6_ADDRESS_WILDCARD_MATCH ends
      _NDIS_GFP_IPV6_ADDRESS_WILDCARD_MATCH typedef NDIS_GFP_IPV6_ADDRESS_WILDCARD_MATCH
      PNDIS_GFP_IPV6_ADDRESS_WILDCARD_MATCH typedef ptr NDIS_GFP_IPV6_ADDRESS_WILDCARD_MATCH
      NDIS_GFP_IPV6_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH struct
        SourceIPv6Address NDIS_GFP_IPV6_ADDRESS_WILDCARD_MATCH <>
        DestinationIPv6Address NDIS_GFP_IPV6_ADDRESS_WILDCARD_MATCH <>
      NDIS_GFP_IPV6_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH ends
      _NDIS_GFP_IPV6_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH typedef NDIS_GFP_IPV6_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH
      PNDIS_GFP_IPV6_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH typedef ptr NDIS_GFP_IPV6_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH
      NDIS_GFP_IP_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH union
        IPv4SrcAndDestAddress NDIS_GFP_IPV4_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH <>
        IPv6SrcAndDestAddress NDIS_GFP_IPV6_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH <>
      NDIS_GFP_IP_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH ends
      _NDIS_GFP_IP_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH typedef NDIS_GFP_IP_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH
      PNDIS_GFP_IP_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH typedef ptr NDIS_GFP_IP_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH
      NDIS_GFP_TRANSPORT_PORT_WILDCARD_MATCH struct
        MatchType NDIS_GFP_WILDCARD_MATCH_TYPE ?
        Port USHORT ?
        Range USHORT ?
      NDIS_GFP_TRANSPORT_PORT_WILDCARD_MATCH ends
      _NDIS_GFP_TRANSPORT_PORT_WILDCARD_MATCH typedef NDIS_GFP_TRANSPORT_PORT_WILDCARD_MATCH
      PNDIS_GFP_TRANSPORT_PORT_WILDCARD_MATCH typedef ptr NDIS_GFP_TRANSPORT_PORT_WILDCARD_MATCH
      NDIS_GFP_TRANSPORT_SRC_AND_DEST_PORT_WILDCARD_MATCH struct
        SourcePort NDIS_GFP_TRANSPORT_PORT_WILDCARD_MATCH <>
        DestinationPort NDIS_GFP_TRANSPORT_PORT_WILDCARD_MATCH <>
      NDIS_GFP_TRANSPORT_SRC_AND_DEST_PORT_WILDCARD_MATCH ends
      _NDIS_GFP_TRANSPORT_SRC_AND_DEST_PORT_WILDCARD_MATCH typedef NDIS_GFP_TRANSPORT_SRC_AND_DEST_PORT_WILDCARD_MATCH
      PNDIS_GFP_TRANSPORT_SRC_AND_DEST_PORT_WILDCARD_MATCH typedef ptr NDIS_GFP_TRANSPORT_SRC_AND_DEST_PORT_WILDCARD_MATCH
      NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH_IS_TTL_ONE equ 00000001h
      NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH_REVISION_1 equ 1
      NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        ProfileId NDIS_GFP_PROFILE_ID ?
        HeadersPresent ULONG ?
        MatchFields ULONG64 ?
        EthernetFields NDIS_GFP_ETHERNET_HEADER_FIELDS <>
        IPSrcAndDestAddress NDIS_GFP_IP_SRC_AND_DEST_ADDRESS_WILDCARD_MATCH <>
        Dscp UINT8 ?
        IPProtocol UINT8 ?
        union TransportOrEncapsulation
          struct UdpHeader
            UdpSrcAndDestPort NDIS_GFP_TRANSPORT_SRC_AND_DEST_PORT_WILDCARD_MATCH <>
          ends
          struct TcpHeader
            TcpSrcAndDestPort NDIS_GFP_TRANSPORT_SRC_AND_DEST_PORT_WILDCARD_MATCH <>
            TcpFlags UINT8 ?
          ends
          struct IcmpHeader
            Type_ UINT8 ?
            Code UINT8 ?
          ends
          struct Encapsulation
            TenantId ULONG ?
            GreProtocol USHORT ?
          ends
        ends
      NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH ends
      _NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH typedef NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH
      PNDIS_GFP_HEADER_GROUP_WILDCARD_MATCH typedef ptr NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH
      NDIS_SIZEOF_GFP_HEADER_GROUP_WILDCARD_MATCH_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH, TransportOrEncapsulation)>
      NDIS_PD_QUEUE_COUNT_DYNAMIC equ (- 1)
      NDIS_PD_CAPS_RECEIVE_FILTER_COUNTERS_SUPPORTED equ 00000001h
      NDIS_PD_CAPS_DRAIN_NOTIFICATIONS_SUPPORTED equ 00000002h
      NDIS_PD_CAPS_NOTIFICATION_MODERATION_INTERVAL_SUPPORTED equ 00000004h
      NDIS_PD_CAPS_NOTIFICATION_MODERATION_COUNT_SUPPORTED equ 00000008h
      NDIS_PD_CAPABILITIES struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        MaximumTxPartialBufferCount ULONG ?
        MaximumRxPartialBufferCount ULONG ?
        RxFilterContextWidth UCHAR ?
        CapabilityFlags ULONG ?
        MaxNumberOfRxQueues ULONG ?
        MaxNumberOfTxQueues ULONG ?
        MaxNumberOfRxQueuesForDefaultVport ULONG ?
        MaxNumberOfTxQueuesForDefaultVport ULONG ?
        MaxNumberOfRxQueuesPerNonDefaultVport ULONG ?
        MaxNumberOfTxQueuesPerNonDefaultVport ULONG ?
        ExactMatchProfileArrayOffset ULONG ?
        ExactMatchProfileArrayNumElements ULONG ?
        ExactMatchProfileArrayElementSize ULONG ?
        WildcardMatchProfileArrayOffset ULONG ?
        WildcardMatchProfileArrayNumElements ULONG ?
        WildcardMatchProfileArrayElementSize ULONG ?
        MinimumModerationInterval ULONG ?
        MaximumModerationInterval ULONG ?
        ModerationIntervalGranularity ULONG ?
        MaxRxQueueSize ULONG ?
        MaxTxQueueSize ULONG ?
      NDIS_PD_CAPABILITIES ends
      _NDIS_PD_CAPABILITIES typedef NDIS_PD_CAPABILITIES
      NDIS_PD_CAPABILITIES_REVISION_1 equ 1
      NDIS_SIZEOF_PD_CAPABILITIES_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PD_CAPABILITIES, MaxTxQueueSize)>
      NDIS_PD_CONFIG struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        Enabled BOOLEAN ?
        CapabilitiesOffset ULONG ?
        CapabilitiesSize ULONG ?
      NDIS_PD_CONFIG ends
      _NDIS_PD_CONFIG typedef NDIS_PD_CONFIG
      NDIS_PD_CONFIG_REVISION_1 equ 1
      NDIS_SIZEOF_PD_CONFIG_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_PD_CONFIG, CapabilitiesSize)>
      PACKET_DIRECT_KEYWORD equ <NDIS_STRING_CONST ("*PacketDirect")>
      NDIS_GFT_FLOW_ENTRY_ID typedef ULONG_PTR
      PNDIS_GFT_FLOW_ENTRY_ID typedef ptr ULONG_PTR
      NDIS_GFT_UNDEFINED_FLOW_ENTRY_ID equ 0
      NDIS_GFT_TABLE_ID typedef ULONG
      PNDIS_GFT_TABLE_ID typedef ptr ULONG
      NDIS_GFT_UNDEFINED_TABLE_ID equ 0
      NDIS_GFT_TABLE_INCLUDE_EXTERNAL_VPPORT equ 00000001h
      NDIS_GFT_TABLE_PARAMETERS_REVISION_1 equ 1
      NDIS_GFT_TABLE_PARAMETERS struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableId NDIS_GFT_TABLE_ID ?
        TableType NDIS_GFP_TABLE_TYPE ?
        NextTableId NDIS_GFT_TABLE_ID ?
      NDIS_GFT_TABLE_PARAMETERS ends
      _NDIS_GFT_TABLE_PARAMETERS typedef NDIS_GFT_TABLE_PARAMETERS
      PNDIS_GFT_TABLE_PARAMETERS typedef ptr NDIS_GFT_TABLE_PARAMETERS
      NDIS_SIZEOF_GFT_TABLE_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_TABLE_PARAMETERS, NextTableId)>
      NDIS_GFT_TABLE_INFO_REVISION_1 equ 1
      NDIS_GFT_TABLE_INFO struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableId NDIS_GFT_TABLE_ID ?
        TableType NDIS_GFP_TABLE_TYPE ?
        NextTableId NDIS_GFT_TABLE_ID ?
        NumFlowEntries ULONG ?
      NDIS_GFT_TABLE_INFO ends
      _NDIS_GFT_TABLE_INFO typedef NDIS_GFT_TABLE_INFO
      PNDIS_GFT_TABLE_INFO typedef ptr NDIS_GFT_TABLE_INFO
      NDIS_SIZEOF_GFT_TABLE_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_TABLE_INFO, NumFlowEntries)>
      NDIS_GFT_TABLE_INFO_ARRAY_REVISION_1 equ 1
      NDIS_GFT_TABLE_INFO_ARRAY struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableArrayOffset ULONG ?
        TableArrayNumElements ULONG ?
        TableArrayElementSize ULONG ?
      NDIS_GFT_TABLE_INFO_ARRAY ends
      _NDIS_GFT_TABLE_INFO_ARRAY typedef NDIS_GFT_TABLE_INFO_ARRAY
      PNDIS_GFT_TABLE_INFO_ARRAY typedef ptr NDIS_GFT_TABLE_INFO_ARRAY
      NDIS_SIZEOF_GFT_TABLE_INFO_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_TABLE_INFO_ARRAY, TableArrayElementSize)>
      NDIS_GFT_DELETE_TABLE_PARAMETERS_REVISION_1 equ 1
      NDIS_GFT_DELETE_TABLE_PARAMETERS struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableId NDIS_GFT_TABLE_ID ?
      NDIS_GFT_DELETE_TABLE_PARAMETERS ends
      _NDIS_GFT_DELETE_TABLE_PARAMETERS typedef NDIS_GFT_DELETE_TABLE_PARAMETERS
      PNDIS_GFT_DELETE_TABLE_PARAMETERS typedef ptr NDIS_GFT_DELETE_TABLE_PARAMETERS
      NDIS_SIZEOF_GFT_DELETE_TABLE_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_DELETE_TABLE_PARAMETERS, TableId)>
      NDIS_GFT_COUNTER_ID typedef ULONG
      PNDIS_GFT_COUNTER_ID typedef ptr ULONG
      NDIS_GFT_UNDEFINED_COUNTER_ID equ 0
      NDIS_GFT_MAX_COUNTER_OBJECTS_PER_FLOW_ENTRY equ 8
      NDIS_GFT_COUNTER_UPDATE_FREQUENCY typedef SDWORD
      NdisGftCounterUpdateFrequencyUndefined equ 0
      NdisGftCounterUpdateFrequencyOnQuery equ 1
      NdisGftCounterUpdateFrequencyPerUpdatePeriod equ 2
      NdisGftCounterUpdateFrequencyPerPacket equ 3
      NdisGftCounterUpdateFrequencyMax equ 4
      _NDIS_GFT_COUNTER_UPDATE_FREQUENCY typedef NDIS_GFT_COUNTER_UPDATE_FREQUENCY
      PNDIS_GFT_COUNTER_UPDATE_FREQUENCY typedef ptr NDIS_GFT_COUNTER_UPDATE_FREQUENCY
      NDIS_GFT_COUNTER_TYPE typedef SDWORD
      NdisGftCounterTypeUndefined equ 0
      NdisGftCounterTypePacket equ 1
      NdisGftCounterTypeByte equ 2
      NdisGftCounterTypePacketByte equ 3
      NdisGftCounterTypePacketByteAndState equ 4
      NdisGftCounterTypeMax equ 5
      _NDIS_GFT_COUNTER_TYPE typedef NDIS_GFT_COUNTER_TYPE
      PNDIS_GFT_COUNTER_TYPE typedef ptr NDIS_GFT_COUNTER_TYPE
      NDIS_GFT_PACKET_COUNTER_VALUE struct
        Packets ULONG64 ?
        LastUpdate LARGE_INTEGER <>
      NDIS_GFT_PACKET_COUNTER_VALUE ends
      _NDIS_GFT_PACKET_COUNTER_VALUE typedef NDIS_GFT_PACKET_COUNTER_VALUE
      PNDIS_GFT_PACKET_COUNTER_VALUE typedef ptr NDIS_GFT_PACKET_COUNTER_VALUE
      NDIS_GFT_BYTE_COUNTER_VALUE struct
        Bytes ULONG64 ?
        LastUpdate LARGE_INTEGER <>
      NDIS_GFT_BYTE_COUNTER_VALUE ends
      _NDIS_GFT_BYTE_COUNTER_VALUE typedef NDIS_GFT_BYTE_COUNTER_VALUE
      PNDIS_GFT_BYTE_COUNTER_VALUE typedef ptr NDIS_GFT_BYTE_COUNTER_VALUE
      NDIS_GFT_PACKET_BYTE_COUNTER_VALUE struct
        Packets ULONG64 ?
        Bytes ULONG64 ?
        LastUpdate LARGE_INTEGER <>
      NDIS_GFT_PACKET_BYTE_COUNTER_VALUE ends
      _NDIS_GFT_PACKET_BYTE_COUNTER_VALUE typedef NDIS_GFT_PACKET_BYTE_COUNTER_VALUE
      PNDIS_GFT_PACKET_BYTE_COUNTER_VALUE typedef ptr NDIS_GFT_PACKET_BYTE_COUNTER_VALUE
      NDIS_GFT_FLOW_STATE struct
        TcpSeqNum ULONG ?
        TcpAckNum ULONG ?
      NDIS_GFT_FLOW_STATE ends
      _NDIS_GFT_FLOW_STATE typedef NDIS_GFT_FLOW_STATE
      PNDIS_GFT_FLOW_STATE typedef ptr NDIS_GFT_FLOW_STATE
      NDIS_GFT_PACKET_BYTE_COUNTER_VALUE_AND_STATE struct
        PacketByteCounterValue NDIS_GFT_PACKET_BYTE_COUNTER_VALUE <>
        FlowState NDIS_GFT_FLOW_STATE <>
      NDIS_GFT_PACKET_BYTE_COUNTER_VALUE_AND_STATE ends
      _NDIS_GFT_PACKET_BYTE_COUNTER_VALUE_AND_STATE typedef NDIS_GFT_PACKET_BYTE_COUNTER_VALUE_AND_STATE
      PNDIS_GFT_PACKET_BYTE_COUNTER_VALUE_AND_STATE typedef ptr NDIS_GFT_PACKET_BYTE_COUNTER_VALUE_AND_STATE
      NDIS_GFT_COUNTER_PARAMETERS_CLIENT_SPECIFIED_ADDRESS equ 00000001h
      NDIS_GFT_COUNTER_PARAMETERS_REVISION_1 equ 1
      NDIS_GFT_COUNTER_PARAMETERS struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableId NDIS_GFT_TABLE_ID ?
        CounterUpdateFrequency NDIS_GFT_COUNTER_UPDATE_FREQUENCY ?
        CounterType NDIS_GFT_COUNTER_TYPE ?
        CounterIdStart NDIS_GFT_COUNTER_ID ?
        NumCounters ULONG ?
        UpdatePeriod ULONG ?
        union CounterValuesBufferStart
          PacketCounters PNDIS_GFT_PACKET_COUNTER_VALUE ?
          ByteCounters PNDIS_GFT_BYTE_COUNTER_VALUE ?
          PacketByteCounters PNDIS_GFT_PACKET_BYTE_COUNTER_VALUE ?
          PacketByteCountersAndState PNDIS_GFT_PACKET_BYTE_COUNTER_VALUE_AND_STATE ?
        ends
      NDIS_GFT_COUNTER_PARAMETERS ends
      _NDIS_GFT_COUNTER_PARAMETERS typedef NDIS_GFT_COUNTER_PARAMETERS
      PNDIS_GFT_COUNTER_PARAMETERS typedef ptr NDIS_GFT_COUNTER_PARAMETERS
      NDIS_SIZEOF_GFT_COUNTER_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_COUNTER_PARAMETERS, CounterValuesBufferStart)>
      NDIS_GFT_FREE_COUNTER_PARAMETERS_REVISION_1 equ 1
      NDIS_GFT_FREE_COUNTER_PARAMETERS struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableId NDIS_GFT_TABLE_ID ?
        CounterIdStart NDIS_GFT_COUNTER_ID ?
        NumCounters ULONG ?
        LastCounterValueAndStateArrayOffset ULONG ?
        LastCounterValueAndStateArrayNumElements ULONG ?
        LastCounterValueAndStateArrayElementSize ULONG ?
      NDIS_GFT_FREE_COUNTER_PARAMETERS ends
      _NDIS_GFT_FREE_COUNTER_PARAMETERS typedef NDIS_GFT_FREE_COUNTER_PARAMETERS
      PNDIS_GFT_FREE_COUNTER_PARAMETERS typedef ptr NDIS_GFT_FREE_COUNTER_PARAMETERS
      NDIS_SIZEOF_GFT_FREE_COUNTER_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_FREE_COUNTER_PARAMETERS, LastCounterValueAndStateArrayElementSize)>
      NDIS_GFT_COUNTER_INFO_REVISION_1 equ 1
      NDIS_GFT_COUNTER_INFO struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        CounterIdStart NDIS_GFT_COUNTER_ID ?
        NumCounters ULONG ?
        CounterUpdateFrequency NDIS_GFT_COUNTER_UPDATE_FREQUENCY ?
        CounterType NDIS_GFT_COUNTER_TYPE ?
        UpdatePeriod ULONG ?
      NDIS_GFT_COUNTER_INFO ends
      _NDIS_GFT_COUNTER_INFO typedef NDIS_GFT_COUNTER_INFO
      PNDIS_GFT_COUNTER_INFO typedef ptr NDIS_GFT_COUNTER_INFO
      NDIS_SIZEOF_GFT_COUNTER_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_COUNTER_INFO, UpdatePeriod)>
      NDIS_GFT_COUNTER_INFO_ARRAY_REVISION_1 equ 1
      NDIS_GFT_COUNTER_INFO_ARRAY struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableId NDIS_GFT_TABLE_ID ?
        CounterInfoArrayOffset ULONG ?
        CounterInfoArrayNumElements ULONG ?
        CounterInfoArrayElementSize ULONG ?
      NDIS_GFT_COUNTER_INFO_ARRAY ends
      _NDIS_GFT_COUNTER_INFO_ARRAY typedef NDIS_GFT_COUNTER_INFO_ARRAY
      PNDIS_GFT_COUNTER_INFO_ARRAY typedef ptr NDIS_GFT_COUNTER_INFO_ARRAY
      NDIS_SIZEOF_GFT_COUNTER_INFO_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_COUNTER_INFO_ARRAY, CounterInfoArrayElementSize)>
      NDIS_GFT_COUNTER_VALUE struct
        CounterType NDIS_GFT_COUNTER_TYPE ?
        union CounterValue
          Packets NDIS_GFT_PACKET_COUNTER_VALUE <>
          Bytes NDIS_GFT_BYTE_COUNTER_VALUE <>
          PacketsBytes NDIS_GFT_PACKET_BYTE_COUNTER_VALUE <>
          PacketsBytesAndState NDIS_GFT_PACKET_BYTE_COUNTER_VALUE_AND_STATE <>
        ends
      NDIS_GFT_COUNTER_VALUE ends
      _NDIS_GFT_COUNTER_VALUE typedef NDIS_GFT_COUNTER_VALUE
      PNDIS_GFT_COUNTER_VALUE typedef ptr NDIS_GFT_COUNTER_VALUE
      NDIS_GFT_COUNTER_VALUE_ARRAY_UPDATE_MEMORY_MAPPED_COUNTERS equ 00000001h
      NDIS_GFT_COUNTER_VALUE_ARRAY_GET_VALUES equ 00000002h
      NDIS_GFT_COUNTER_VALUE_QUERY_METHOD typedef SDWORD
      NdisGftQueryValueQueryMethodUndefined equ 0
      NdisGftQueryValueQueryMethodUsingCounterIds equ 1
      NdisGftQueryValueQueryMethodUsingFlowEntryIds equ 2
      NdisGftQueryValueQueryMethodVPortFlowEntries equ 3
      NdisGftQueryValueQueryMethodAllFlowEntries equ 4
      NdisGftQueryValueQueryMethodMax equ 5
      _NDIS_GFT_COUNTER_VALUE_QUERY_METHOD typedef NDIS_GFT_COUNTER_VALUE_QUERY_METHOD
      PNDIS_GFT_COUNTER_VALUE_QUERY_METHOD typedef ptr NDIS_GFT_COUNTER_VALUE_QUERY_METHOD
      NDIS_GFT_COUNTER_VALUE_ARRAY_REVISION_1 equ 1
      NDIS_GFT_COUNTER_VALUE_ARRAY struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableId NDIS_GFT_TABLE_ID ?
        union StartId
          FlowEntryId NDIS_GFT_FLOW_ENTRY_ID ?
          CounterId NDIS_GFT_COUNTER_ID ?
        ends
        NumCounters ULONG ?
        CounterValueArrayOffset ULONG ?
        CounterValueArrayNumElements ULONG ?
        CounterValueArrayElementSize ULONG ?
      NDIS_GFT_COUNTER_VALUE_ARRAY ends
      _NDIS_GFT_COUNTER_VALUE_ARRAY typedef NDIS_GFT_COUNTER_VALUE_ARRAY
      PNDIS_GFT_COUNTER_VALUE_ARRAY typedef ptr NDIS_GFT_COUNTER_VALUE_ARRAY
      NDIS_SIZEOF_GFT_COUNTER_VALUE_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_COUNTER_VALUE_ARRAY, CounterValueArrayElementSize)>
      NDIS_GFT_STATISTICS_REVISION_1 equ 1
      NDIS_GFT_STATISTICS struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableId NDIS_GFT_TABLE_ID ?
        VPortId NDIS_NIC_SWITCH_VPORT_ID ?
        ProviderFlowEntryId NDIS_GFT_FLOW_ENTRY_ID ?
        Packets ULONG64 ?
        Bytes ULONG64 ?
        L1CacheHits ULONG64 ?
        L2CacheHits ULONG64 ?
        L3CacheHits ULONG64 ?
        L1CacheMisses ULONG64 ?
        L2CacheMisses ULONG64 ?
        L3CacheMisses ULONG64 ?
      NDIS_GFT_STATISTICS ends
      _NDIS_GFT_STATISTICS typedef NDIS_GFT_STATISTICS
      PNDIS_GFT_STATISTICS typedef ptr NDIS_GFT_STATISTICS
      NDIS_SIZEOF_GFT_STATISTICS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_STATISTICS, L3CacheMisses)>
      NDIS_GFT_HEADER_GROUP_TRANSPOSITION_ACTION typedef SDWORD
      NdisGftHeaderGroupTranspositionActionUndefined equ 0
      NdisGftHeaderGroupTranspositionActionModify equ 1
      NdisGftHeaderGroupTranspositionActionIgnore equ 2
      NdisGftHeaderGroupTranspositionActionPush equ 3
      NdisGftHeaderGroupTranspositionActionPop equ 4
      NdisGftHeaderGroupTranspositionActionMax equ 5
      _NDIS_GFT_HEADER_GROUP_TRANSPOSITION_ACTION typedef NDIS_GFT_HEADER_GROUP_TRANSPOSITION_ACTION
      PNDIS_GFT_HEADER_GROUP_TRANSPOSITION_ACTION typedef ptr NDIS_GFT_HEADER_GROUP_TRANSPOSITION_ACTION
      NDIS_GFT_HEADER_GROUP_TRANSPOSITION_PROFILE_DECREMENT_TTL_IF_NOT_ONE equ 00000001h
      NDIS_GFT_HEADER_GROUP_TRANSPOSITION_PROFILE_REVISION_1 equ 1
      NDIS_GFT_HEADER_GROUP_TRANSPOSITION_PROFILE struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        Action NDIS_GFT_HEADER_GROUP_TRANSPOSITION_ACTION ?
        HeadersPresent ULONG ?
        HeaderFields ULONG ?
      NDIS_GFT_HEADER_GROUP_TRANSPOSITION_PROFILE ends
      _NDIS_GFT_HEADER_GROUP_TRANSPOSITION_PROFILE typedef NDIS_GFT_HEADER_GROUP_TRANSPOSITION_PROFILE
      PNDIS_GFT_HEADER_GROUP_TRANSPOSITION_PROFILE typedef ptr NDIS_GFT_HEADER_GROUP_TRANSPOSITION_PROFILE
      NDIS_SIZEOF_GFT_HEADER_GROUP_TRANSPOSITION_PROFILE_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_HEADER_GROUP_TRANSPOSITION_PROFILE, HeaderFields)>
      NDIS_GFT_CUSTOM_ACTION_TYPE typedef ULONG
      PNDIS_GFT_CUSTOM_ACTION_TYPE typedef ptr ULONG
      NDIS_GFT_UNDEFINED_CUSTOM_ACTION equ 0
      NDIS_GFT_RESERVED_CUSTOM_ACTIONS equ 256
      NDIS_GFT_CUSTOM_ACTION_PROFILE_REVISION_1 equ 1
      NDIS_GFT_CUSTOM_ACTION_PROFILE struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableType NDIS_GFP_TABLE_TYPE ?
        ProfileId NDIS_GFP_PROFILE_ID ?
        Type_ NDIS_GFT_CUSTOM_ACTION_TYPE ?
        Length_ ULONG ?
        union
          Alignment ULONG_PTR ?
          ActionProfileData UCHAR 1 dup (?)
        ends
      NDIS_GFT_CUSTOM_ACTION_PROFILE ends
      _NDIS_GFT_CUSTOM_ACTION_PROFILE typedef NDIS_GFT_CUSTOM_ACTION_PROFILE
      PNDIS_GFT_CUSTOM_ACTION_PROFILE typedef ptr NDIS_GFT_CUSTOM_ACTION_PROFILE
      NDIS_SIZEOF_NDIS_GFT_CUSTOM_ACTION_PROFILE_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_CUSTOM_ACTION_PROFILE, Alignment)>
      NDIS_GFT_HTP_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT equ 00000001h
      NDIS_GFT_HTP_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT equ 00000002h
      NDIS_GFT_HTP_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE equ 00000004h
      NDIS_GFT_HTP_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE equ 00000008h
      NDIS_GFT_HTP_COPY_ALL_PACKETS equ 00000010h
      NDIS_GFT_HTP_COPY_FIRST_PACKET equ 00000020h
      NDIS_GFT_HTP_COPY_WHEN_TCP_FLAG_SET equ 00000040h
      NDIS_GFT_HTP_CUSTOM_ACTION_PRESENT equ 00000080h
      NDIS_GFT_HTP_META_ACTION_BEFORE_HEADER_TRANSPOSITION equ 00000100h
      NDIS_GFT_HEADER_TRANSPOSITION_PROFILE_REVISION_1 equ 1
      NDIS_GFT_HEADER_TRANSPOSITION_PROFILE struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableType NDIS_GFP_TABLE_TYPE ?
        ProfileId NDIS_GFP_PROFILE_ID ?
        HeaderGroupTranspositionProfileArrayOffset ULONG ?
        HeaderGroupTranspositionProfileArrayNumElements ULONG ?
        HeaderGroupTranspositionProfileArrayElementSize ULONG ?
        CustomActionProfileOffset ULONG ?
      NDIS_GFT_HEADER_TRANSPOSITION_PROFILE ends
      _NDIS_GFT_HEADER_TRANSPOSITION_PROFILE typedef NDIS_GFT_HEADER_TRANSPOSITION_PROFILE
      PNDIS_GFT_HEADER_TRANSPOSITION_PROFILE typedef ptr NDIS_GFT_HEADER_TRANSPOSITION_PROFILE
      NDIS_SIZEOF_GFT_HEADER_TRANSPOSITION_PROFILE_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_HEADER_TRANSPOSITION_PROFILE, CustomActionProfileOffset)>
      NDIS_GFT_HEADER_GROUP_TRANSPOSITION_DECREMENT_TTL_IF_NOT_ONE equ 00000001h
      NDIS_GFT_HEADER_GROUP_TRANSPOSITION_REVISION_1 equ 1
      NDIS_GFT_HEADER_GROUP_TRANSPOSITION struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        Action NDIS_GFT_HEADER_GROUP_TRANSPOSITION_ACTION ?
        HeadersPresent ULONG ?
        HeaderFields ULONG64 ?
        EthernetFields NDIS_GFP_ETHERNET_HEADER_FIELDS <>
        union IPAddress
          struct IPv4Address
            SourceIPAddress IN_ADDR <>
            DestinationIPAddress IN_ADDR <>
          ends
          struct IPv6Address
            SourceIPAddress IN6_ADDR <>
            DestinationIPAddress IN6_ADDR <>
          ends
        ends
        Ttl UINT8 ?
        Dscp UINT8 ?
        IPProtocol UINT8 ?
        union TransportOrEncapsulation
          struct Udp
            SourcePort USHORT ?
            DestinationPort USHORT ?
          ends
          struct Tcp
            SourcePort USHORT ?
            DestinationPort USHORT ?
          ends
          struct Encapsulation
            TenantId ULONG ?
            GreProtocol USHORT ?
            Entropy USHORT ?
          ends
        ends
      NDIS_GFT_HEADER_GROUP_TRANSPOSITION ends
      _NDIS_GFT_HEADER_GROUP_TRANSPOSITION typedef NDIS_GFT_HEADER_GROUP_TRANSPOSITION
      PNDIS_GFT_HEADER_GROUP_TRANSPOSITION typedef ptr NDIS_GFT_HEADER_GROUP_TRANSPOSITION
      NDIS_SIZEOF_GFT_HEADER_GROUP_TRANSPOSITION_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_HEADER_GROUP_TRANSPOSITION, TransportOrEncapsulation)>
      NDIS_GFT_FLOW_ENTRY_CACHE_HINT typedef SDWORD
      NdisGftFlowEntryCacheHintUndefined equ 0
      NdisGftFlowEntryCacheHintLowFrequency equ 100
      NdisGftFlowEntryCacheHintMediumFrequency equ 200
      NdisGftFlowEntryCacheHintHighFrequency equ 300
      NdisGftFlowEntryCacheHintMax equ 1000
      _NDIS_GFT_FLOW_ENTRY_CACHE_HINT typedef NDIS_GFT_FLOW_ENTRY_CACHE_HINT
      PNDIS_GFT_FLOW_ENTRY_CACHE_HINT typedef ptr NDIS_GFT_FLOW_ENTRY_CACHE_HINT
      NDIS_GFT_FLOW_ENTRY_STATE typedef SDWORD
      NdisGftFlowEntryStateUndefined equ 0
      NdisGftFlowEntryStateDeactivated equ 1
      NdisGftFlowEntryStateActivated equ 2
      NdisGftFlowEntryStateMax equ 3
      _NDIS_GFT_FLOW_ENTRY_STATE typedef NDIS_GFT_FLOW_ENTRY_STATE
      PNDIS_GFT_FLOW_ENTRY_STATE typedef ptr NDIS_GFT_FLOW_ENTRY_STATE
      NDIS_GFT_CUSTOM_ACTION_LAST_ACTION equ 00000001h
      NDIS_GFT_CUSTOM_ACTION_REVISION_1 equ 1
      NDIS_GFT_CUSTOM_ACTION struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        ProfileId NDIS_GFP_PROFILE_ID ?
        Type_ NDIS_GFT_CUSTOM_ACTION_TYPE ?
        Length_ ULONG ?
        union
          Alignment ULONG_PTR ?
          ActionData UCHAR 1 dup (?)
        ends
      NDIS_GFT_CUSTOM_ACTION ends
      _NDIS_GFT_CUSTOM_ACTION typedef NDIS_GFT_CUSTOM_ACTION
      PNDIS_GFT_CUSTOM_ACTION typedef ptr NDIS_GFT_CUSTOM_ACTION
      NDIS_SIZEOF_NDIS_GFT_CUSTOM_ACTION_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_CUSTOM_ACTION, Alignment)>
      NDIS_GFT_EMFE_ADD_IN_ACTIVATED_STATE equ 00000001h
      NDIS_GFT_EMFE_MATCH_AND_ACTION_MUST_BE_SUPPORTED equ 00000002h
      NDIS_GFT_EMFE_RDMA_FLOW equ 00000004h
      NDIS_GFT_EMFE_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT equ 00001000h
      NDIS_GFT_EMFE_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT equ 00002000h
      NDIS_GFT_EMFE_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE equ 00004000h
      NDIS_GFT_EMFE_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE equ 00008000h
      NDIS_GFT_EMFE_COPY_ALL_PACKETS equ 00010000h
      NDIS_GFT_EMFE_COPY_FIRST_PACKET equ 00020000h
      NDIS_GFT_EMFE_COPY_WHEN_TCP_FLAG_SET equ 00040000h
      NDIS_GFT_EMFE_CUSTOM_ACTION_PRESENT equ 00080000h
      NDIS_GFT_EMFE_META_ACTION_BEFORE_HEADER_TRANSPOSITION equ 00100000h
      NDIS_GFT_EMFE_COPY_AFTER_TCP_FIN_FLAG_SET equ 00200000h
      NDIS_GFT_EMFE_COPY_AFTER_TCP_RST_FLAG_SET equ 00400000h
      NDIS_GFT_EMFE_COPY_CONDITION_CHANGED equ 01000000h
      NDIS_GFT_EMFE_ALL_VPORT_FLOW_ENTRIES equ 02000000h
      NDIS_GFT_EMFE_COUNTER_ALLOCATE equ 00000001h
      NDIS_GFT_EMFE_COUNTER_MEMORY_MAPPED equ 00000002h
      NDIS_GFT_EMFE_COUNTER_CLIENT_SPECIFIED_ADDRESS equ 00000004h
      NDIS_GFT_EMFE_COUNTER_TRACK_TCP_FLOW equ 00000008h
      NDIS_GFT_EXACT_MATCH_FLOW_ENTRY_REVISION_1 equ 1
      NDIS_GFT_EXACT_MATCH_FLOW_ENTRY struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableId NDIS_GFT_TABLE_ID ?
        VPortId NDIS_NIC_SWITCH_VPORT_ID ?
        MatchProfileId NDIS_GFP_PROFILE_ID ?
        MatchRequestStatus NDIS_STATUS ?
        ActionRequestStatus NDIS_STATUS ?
        CounterFlags ULONG ?
        CounterUpdateFrequency NDIS_GFT_COUNTER_UPDATE_FREQUENCY ?
        CounterType NDIS_GFT_COUNTER_TYPE ?
        UpdatePeriod ULONG ?
        union CounterValueBuffer
          PacketCounterAddress PNDIS_GFT_PACKET_COUNTER_VALUE ?
          ByteCounterAddress PNDIS_GFT_BYTE_COUNTER_VALUE ?
          PacketByteCounterAddress PNDIS_GFT_PACKET_BYTE_COUNTER_VALUE ?
          PacketByteCounterAndStateAddress PNDIS_GFT_PACKET_BYTE_COUNTER_VALUE_AND_STATE ?
        ends
        HeaderTranspositionProfileId NDIS_GFP_PROFILE_ID ?
        RedirectionVPortId NDIS_NIC_SWITCH_VPORT_ID ?
        TtlIsOneRedirectionVPortId NDIS_NIC_SWITCH_VPORT_ID ?
        NumCounterObjects ULONG ?
        CounterIdArray NDIS_GFT_COUNTER_ID NDIS_GFT_MAX_COUNTER_OBJECTS_PER_FLOW_ENTRY dup (?)
        CacheHint NDIS_GFT_FLOW_ENTRY_CACHE_HINT ?
        ClientFlowEntryId NDIS_GFT_FLOW_ENTRY_ID ?
        ProviderFlowEntryId NDIS_GFT_FLOW_ENTRY_ID ?
        FlowEntryState NDIS_GFT_FLOW_ENTRY_STATE ?
        TcpSequenceNumber ULONG ?
        HeaderGroupExactMatchArrayOffset ULONG ?
        HeaderGroupExactMatchArrayNumElements ULONG ?
        HeaderGroupExactMatchArrayElementSize ULONG ?
        HeaderGroupTranspositionArrayOffset ULONG ?
        HeaderGroupTranspositionArrayNumElements ULONG ?
        HeaderGroupTranspositionArrayElementSize ULONG ?
        CustomActionOffset ULONG ?
      NDIS_GFT_EXACT_MATCH_FLOW_ENTRY ends
      _NDIS_GFT_EXACT_MATCH_FLOW_ENTRY typedef NDIS_GFT_EXACT_MATCH_FLOW_ENTRY
      PNDIS_GFT_EXACT_MATCH_FLOW_ENTRY typedef ptr NDIS_GFT_EXACT_MATCH_FLOW_ENTRY
      NDIS_SIZEOF_GFT_EXACT_MATCH_FLOW_ENTRY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_EXACT_MATCH_FLOW_ENTRY, CustomActionOffset)>
      NDIS_GFT_WILDCARD_ACTION typedef SDWORD
      NdisGftWildcardActionUndefined equ 0
      NdisGftWildcardActionAllow equ 1
      NdisGftWildcardActionDrop equ 2
      NdisGftWildcardActionMax equ 3
      _NDIS_GFT_WILDCARD_ACTION typedef NDIS_GFT_WILDCARD_ACTION
      PNDIS_GFT_WILDCARD_ACTION typedef ptr NDIS_GFT_WILDCARD_ACTION
      NDIS_GFT_WCFE_ADD_IN_ACTIVATED_STATE equ 00000001h
      NDIS_GFT_WCFE_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT equ 00000002h
      NDIS_GFT_WCFE_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT equ 00000004h
      NDIS_GFT_WCFE_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE equ 00000008h
      NDIS_GFT_WCFE_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE equ 00000010h
      NDIS_GFT_WCFE_COPY_ALL_PACKETS equ 00000020h
      NDIS_GFT_WCFE_CUSTOM_ACTION_PRESENT equ 00000040h
      NDIS_GFT_WCFE_COUNTER_ALLOCATE equ 00000001h
      NDIS_GFT_WCFE_COUNTER_MEMORY_MAPPED equ 00000002h
      NDIS_GFT_WCFE_COUNTER_CLIENT_SPECIFIED_ADDRESS equ 00000004h
      NDIS_GFT_WILDCARD_MATCH_FLOW_ENTRY_REVISION_1 equ 1
      NDIS_GFT_WILDCARD_MATCH_FLOW_ENTRY struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableId NDIS_GFT_TABLE_ID ?
        VPortId NDIS_NIC_SWITCH_VPORT_ID ?
        MatchProfileId NDIS_GFP_PROFILE_ID ?
        MatchRequestStatus NDIS_STATUS ?
        ActionRequestStatus NDIS_STATUS ?
        CounterFlags ULONG ?
        CounterUpdateFrequency NDIS_GFT_COUNTER_UPDATE_FREQUENCY ?
        CounterType NDIS_GFT_COUNTER_TYPE ?
        UpdatePeriod ULONG ?
        union CounterValueBuffer
          PacketCounterAddress PNDIS_GFT_PACKET_COUNTER_VALUE ?
          ByteCounterAddress PNDIS_GFT_BYTE_COUNTER_VALUE ?
          PacketByteCounterAddress PNDIS_GFT_PACKET_BYTE_COUNTER_VALUE ?
        ends
        Priority ULONG ?
        Action NDIS_GFT_WILDCARD_ACTION ?
        RedirectionVPortId NDIS_NIC_SWITCH_VPORT_ID ?
        TtlIsOneRedirectionVPortId NDIS_NIC_SWITCH_VPORT_ID ?
        NumCounterObjects ULONG ?
        CounterIdArray NDIS_GFT_COUNTER_ID NDIS_GFT_MAX_COUNTER_OBJECTS_PER_FLOW_ENTRY dup (?)
        CacheHint NDIS_GFT_FLOW_ENTRY_CACHE_HINT ?
        ClientFlowEntryId NDIS_GFT_FLOW_ENTRY_ID ?
        ProviderFlowEntryId NDIS_GFT_FLOW_ENTRY_ID ?
        FlowEntryState NDIS_GFT_FLOW_ENTRY_STATE ?
        HeaderGroupWildcardMatchArrayOffset ULONG ?
        HeaderGroupWildcardMatchArrayNumElements ULONG ?
        HeaderGroupWildcardMatchArrayElementSize ULONG ?
        CustomActionOffset ULONG ?
      NDIS_GFT_WILDCARD_MATCH_FLOW_ENTRY ends
      _NDIS_GFT_WILDCARD_MATCH_FLOW_ENTRY typedef NDIS_GFT_WILDCARD_MATCH_FLOW_ENTRY
      PNDIS_GFT_WILDCARD_MATCH_FLOW_ENTRY typedef ptr NDIS_GFT_WILDCARD_MATCH_FLOW_ENTRY
      NDIS_SIZEOF_GFT_WILDCARD_MATCH_FLOW_ENTRY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_WILDCARD_MATCH_FLOW_ENTRY, CustomActionOffset)>
      NDIS_GFT_PROFILE_TYPE typedef SDWORD
      NdisGftProfileTypeUndefined equ 0
      NdisGftProfileTypeExactMatch equ 1
      NdisGftProfileTypeHeaderTransposition equ 2
      NdisGftProfileTypeWildcardMatch equ 3
      NdisGftProfileTypeMax equ 4
      _NDIS_GFT_PROFILE_TYPE typedef NDIS_GFT_PROFILE_TYPE
      PNDIS_GFT_PROFILE_TYPE typedef ptr NDIS_GFT_PROFILE_TYPE
      NDIS_GFT_PROFILE_INFO_REVISION_1 equ 1
      NDIS_GFT_PROFILE_INFO struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        ProfileType NDIS_GFT_PROFILE_TYPE ?
        TableType NDIS_GFP_TABLE_TYPE ?
        ProfileId NDIS_GFP_PROFILE_ID ?
        NumSupportedFlowEntries ULONG ?
        NumCurrentFlowEntries ULONG ?
        HeaderGroupArrayOffset ULONG ?
        HeaderGroupArrayNumElements ULONG ?
        HeaderGroupArrayElementSize ULONG ?
      NDIS_GFT_PROFILE_INFO ends
      _NDIS_GFT_PROFILE_INFO typedef NDIS_GFT_PROFILE_INFO
      PNDIS_GFT_PROFILE_INFO typedef ptr NDIS_GFT_PROFILE_INFO
      NDIS_SIZEOF_GFT_PROFILE_INFO_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_PROFILE_INFO, HeaderGroupArrayElementSize)>
      NDIS_GFT_PROFILE_INFO_ARRAY_REVISION_1 equ 1
      NDIS_GFT_PROFILE_INFO_ARRAY struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        ProfileInfoArrayOffset ULONG ?
        ProfileInfoArrayNumElements ULONG ?
        ProfileInfoArrayElementSize ULONG ?
      NDIS_GFT_PROFILE_INFO_ARRAY ends
      _NDIS_GFT_PROFILE_INFO_ARRAY typedef NDIS_GFT_PROFILE_INFO_ARRAY
      PNDIS_GFT_PROFILE_INFO_ARRAY typedef ptr NDIS_GFT_PROFILE_INFO_ARRAY
      NDIS_SIZEOF_GFT_PROFILE_INFO_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_PROFILE_INFO_ARRAY, ProfileArrayElementSize)>
      NDIS_GFT_DELETE_PROFILE_ALL_PROFILES equ 00000001h
      NDIS_GFT_DELETE_PROFILE_PARAMETERS_REVISION_1 equ 1
      NDIS_GFT_DELETE_PROFILE_PARAMETERS struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        ProfileId NDIS_GFP_PROFILE_ID ?
      NDIS_GFT_DELETE_PROFILE_PARAMETERS ends
      _NDIS_GFT_DELETE_PROFILE_PARAMETERS typedef NDIS_GFT_DELETE_PROFILE_PARAMETERS
      PNDIS_GFT_DELETE_PROFILE_PARAMETERS typedef ptr NDIS_GFT_DELETE_PROFILE_PARAMETERS
      NDIS_SIZEOF_GFT_DELETE_PROFILE_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_DELETE_PROFILE_PARAMETERS, ProfileId)>
      NDIS_GFT_FLOW_ENTRY_TYPE typedef SDWORD
      NdisGftFlowEntryTypeUndefined equ 0
      NdisGftFlowEntryTypeExactMatch equ 1
      NdisGftFlowEntryTypeWildcard equ 2
      NdisGftFlowEntryTypeMax equ 3
      _NDIS_GFT_FLOW_ENTRY_TYPE typedef NDIS_GFT_FLOW_ENTRY_TYPE
      PNDIS_GFT_FLOW_ENTRY_TYPE typedef ptr NDIS_GFT_FLOW_ENTRY_TYPE
      NDIS_GFT_FLOW_ENTRY_ARRAY_REVISION_1 equ 1
      NDIS_GFT_FLOW_ENTRY_ARRAY struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        EntryType NDIS_GFT_FLOW_ENTRY_TYPE ?
        FlowEntryArrayOffset ULONG ?
        FlowEntryArrayNumElements ULONG ?
        FlowEntryArrayElementSize ULONG ?
      NDIS_GFT_FLOW_ENTRY_ARRAY ends
      _NDIS_GFT_FLOW_ENTRY_ARRAY typedef NDIS_GFT_FLOW_ENTRY_ARRAY
      PNDIS_GFT_FLOW_ENTRY_ARRAY typedef ptr NDIS_GFT_FLOW_ENTRY_ARRAY
      NDIS_SIZEOF_GFT_FLOW_ENTRY_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_FLOW_ENTRY_ARRAY, FlowEntryArrayElementSize)>
      NDIS_GFT_FLOW_ENTRY_INFO_ALL_FLOW_ENTRIES equ 00000001h
      NDIS_GFT_FLOW_ENTRY_INFO_ARRAY_REVISION_1 equ 1
      NDIS_GFT_FLOW_ENTRY_INFO_ARRAY struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableId NDIS_GFT_TABLE_ID ?
        VPortId NDIS_NIC_SWITCH_VPORT_ID ?
        ProviderFlowEntryIdStart NDIS_GFT_FLOW_ENTRY_ID ?
        FlowEntryIdCount ULONG ?
        FlowEntryInfoArrayOffset ULONG ?
        FlowEntryInfoArrayNumElements ULONG ?
        FlowEntryInfoArrayElementSize ULONG ?
      NDIS_GFT_FLOW_ENTRY_INFO_ARRAY ends
      _NDIS_GFT_FLOW_ENTRY_INFO_ARRAY typedef NDIS_GFT_FLOW_ENTRY_INFO_ARRAY
      PNDIS_GFT_FLOW_ENTRY_INFO_ARRAY typedef ptr NDIS_GFT_FLOW_ENTRY_INFO_ARRAY
      NDIS_SIZEOF_GFT_FLOW_ENTRY_INFO_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_FLOW_ENTRY_INFO_ARRAY, FlowEntryInfoArrayElementSize)>
      NDIS_GFT_FLOW_ENTRY_ID_ALL_NIC_SWITCH_FLOW_ENTRIES equ 00000001h
      NDIS_GFT_FLOW_ENTRY_ID_ALL_TABLE_FLOW_ENTRIES equ 00000002h
      NDIS_GFT_FLOW_ENTRY_ID_ALL_VPORT_FLOW_ENTRIES equ 00000004h
      NDIS_GFT_FLOW_ENTRY_ID_RANGE_DEFINED equ 00000008h
      NDIS_GFT_FLOW_ENTRY_ID_ARRAY_DEFINED equ 00000010h
      NDIS_GFT_FLOW_ENTRY_ID_ARRAY_COUNTER_VALUES equ 00010000h
      NDIS_GFT_FLOW_ENTRY_ID_AND_COUNTER struct
        FlowEntryId NDIS_GFT_FLOW_ENTRY_ID ?
        CounterValue NDIS_GFT_COUNTER_VALUE <>
      NDIS_GFT_FLOW_ENTRY_ID_AND_COUNTER ends
      _NDIS_GFT_FLOW_ENTRY_ID_AND_COUNTER typedef NDIS_GFT_FLOW_ENTRY_ID_AND_COUNTER
      PNDIS_GFT_FLOW_ENTRY_ID_AND_COUNTER typedef ptr NDIS_GFT_FLOW_ENTRY_ID_AND_COUNTER
      NDIS_GFT_FLOW_ENTRY_ID_ARRAY_REVISION_1 equ 1
      NDIS_GFT_FLOW_ENTRY_ID_ARRAY struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        TableId NDIS_GFT_TABLE_ID ?
        VPortId NDIS_NIC_SWITCH_VPORT_ID ?
        union IdArray
          struct FlowEntryIdArray
            ProviderFlowEntryIdArrayOffset ULONG ?
            ProviderFlowEntryIdArrayNumElements ULONG ?
            ProviderFlowEntryIdArrayElementSize ULONG ?
          ends
          struct FlowEntryIdAndCounterArray
            ProviderFlowEntryIdAndCounterArrayOffset ULONG ?
            ProviderFlowEntryIdAndCounterArrayNumElements ULONG ?
            ProviderFlowEntryIdAndCounterArrayElementSize ULONG ?
          ends
        ends
      NDIS_GFT_FLOW_ENTRY_ID_ARRAY ends
      _NDIS_GFT_FLOW_ENTRY_ID_ARRAY typedef NDIS_GFT_FLOW_ENTRY_ID_ARRAY
      PNDIS_GFT_FLOW_ENTRY_ID_ARRAY typedef ptr NDIS_GFT_FLOW_ENTRY_ID_ARRAY
      NDIS_SIZEOF_GFT_FLOW_ENTRY_ID_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_FLOW_ENTRY_ID_ARRAY, IdArray)>
      NDIS_GFT_OFFLOAD_PARAMETERS_ENABLE_OFFLOAD equ 00000001h
      NDIS_GFT_OFFLOAD_PARAMETERS_CUSTOM_PROVIDER_RESERVED equ 0FF000000h
      NDIS_GFT_OFFLOAD_PARAMETERS_REVISION_1 equ 1
      NDIS_GFT_OFFLOAD_PARAMETERS struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        ExceptionVPortId NDIS_NIC_SWITCH_VPORT_ID ?
        CopyLookaheadLength ULONG ?
        SampleLookaheadLength ULONG ?
      NDIS_GFT_OFFLOAD_PARAMETERS ends
      _NDIS_GFT_OFFLOAD_PARAMETERS typedef NDIS_GFT_OFFLOAD_PARAMETERS
      PNDIS_GFT_OFFLOAD_PARAMETERS typedef ptr NDIS_GFT_OFFLOAD_PARAMETERS
      NDIS_SIZEOF_GFT_OFFLOAD_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_OFFLOAD_PARAMETERS, SampleLookaheadLength)>
      NDIS_GFT_OFFLOAD_CAPS_ADD_FLOW_ENTRY_DEACTIVATED_PREFERRED equ 00000001h
      NDIS_GFT_OFFLOAD_CAPS_RATE_LIMITING_QUEUE_SUPPORTED equ 00000002h
      NDIS_GFT_OFFLOAD_CAPS_MEMORY_MAPPED_COUNTERS equ 00000001h
      NDIS_GFT_OFFLOAD_CAPS_MEMORY_MAPPED_PAKCET_AND_BYTE_COUNTERS equ 00000002h
      NDIS_GFT_OFFLOAD_CAPS_PER_FLOW_ENTRY_COUNTERS equ 00000004h
      NDIS_GFT_OFFLOAD_CAPS_PER_PACKET_COUNTER_UPDATE equ 00000008h
      NDIS_GFT_OFFLOAD_CAPS_CLIENT_SPECIFIED_MEMORY_MAPPED_COUNTERS equ 00000010h
      NDIS_GFT_OFFLOAD_CAPS_INGRESS_AGGREGATE_COUNTERS equ 00000020h
      NDIS_GFT_OFFLOAD_CAPS_EGRESS_AGGREGATE_COUNTERS equ 00000040h
      NDIS_GFT_OFFLOAD_CAPS_TRACK_TCP_FLOW_STATE equ 00000080h
      NDIS_GFT_OFFLOAD_CAPS_COMBINED_COUNTER_AND_STATE equ 00000100h
      NDIS_GFT_OFFLOAD_CAPS_INGRESS_WILDCARD_MATCH equ 00000001h
      NDIS_GFT_OFFLOAD_CAPS_EGRESS_WILDCARD_MATCH equ 00000002h
      NDIS_GFT_OFFLOAD_CAPS_INGRESS_EXACT_MATCH equ 00000004h
      NDIS_GFT_OFFLOAD_CAPS_EGRESS_EXACT_MATCH equ 00000008h
      NDIS_GFT_OFFLOAD_CAPS_EXT_VPORT_INGRESS_WILDCARD_MATCH equ 00000010h
      NDIS_GFT_OFFLOAD_CAPS_EXT_VPORT_EGRESS_WILDCARD_MATCH equ 00000020h
      NDIS_GFT_OFFLOAD_CAPS_EXT_VPORT_INGRESS_EXACT_MATCH equ 00000040h
      NDIS_GFT_OFFLOAD_CAPS_EXT_VPORT_EGRESS_EXACT_MATCH equ 00000080h
      NDIS_GFT_OFFLOAD_CAPS_POP equ 00000001h
      NDIS_GFT_OFFLOAD_CAPS_PUSH equ 00000002h
      NDIS_GFT_OFFLOAD_CAPS_MODIFY equ 00000004h
      NDIS_GFT_OFFLOAD_CAPS_IGNORE_ACTION_SUPPORTED equ 00000008h
      NDIS_GFT_OFFLOAD_CAPS_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT equ 00000010h
      NDIS_GFT_OFFLOAD_CAPS_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT equ 00000020h
      NDIS_GFT_OFFLOAD_CAPS_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE equ 00000040h
      NDIS_GFT_OFFLOAD_CAPS_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE equ 00000080h
      NDIS_GFT_OFFLOAD_CAPS_COPY_ALL equ 00000100h
      NDIS_GFT_OFFLOAD_CAPS_COPY_FIRST equ 00000200h
      NDIS_GFT_OFFLOAD_CAPS_COPY_WHEN_TCP_FLAG_SET equ 00000400h
      NDIS_GFT_OFFLOAD_CAPS_SAMPLE equ 00000800h
      NDIS_GFT_OFFLOAD_CAPS_META_ACTION_BEFORE_HEADER_TRANSPOSITION equ 00001000h
      NDIS_GFT_OFFLOAD_CAPS_META_ACTION_AFTER_HEADER_TRANSPOSITION equ 00002000h
      NDIS_GFT_OFFLOAD_CAPS_PER_VPORT_EXCEPTION_VPORT equ 00004000h
      NDIS_GFT_OFFLOAD_CAPS_DESIGNATED_EXCEPTION_VPORT equ 00008000h
      NDIS_GFT_OFFLOAD_CAPS_DSCP_MASK equ 00010000h
      NDIS_GFT_OFFLOAD_CAPS_8021P_PRIORITY_MASK equ 00020000h
      NDIS_GFT_OFFLOAD_CAPS_ALLOW equ 00040000h
      NDIS_GFT_OFFLOAD_CAPS_DROP equ 00080000h
      NDIS_GFT_OFFLOAD_CAPABILITIES_REVISION_1 equ 1
      NDIS_GFT_OFFLOAD_CAPABILITIES struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        CounterCapabilities ULONG ?
        SupportedTableTypes ULONG ?
        SupportedEncapsulationTypes ULONG ?
        SupportedIngressExactMatchTableActions ULONG ?
        SupportedEgressExactMatchTableActions ULONG ?
        SoftwareSupportedIngressExactMatchTableActions ULONG ?
        SoftwareSupportedEgressExactMatchTableActions ULONG ?
        SupportedIngressWildcardMatchTableActions ULONG ?
        SupportedEgressWildcardMatchTableActions ULONG ?
        SoftwareSupportedIngressWildcardMatchTableActions ULONG ?
        SoftwareSupportedEgressWildcardMatchTableActions ULONG ?
        NumPacketCounterObjects ULONG ?
        NumByteCounterObjects ULONG ?
        NumPacketByteCounterObjects ULONG ?
        NumPacketByteCounterAndStateObjects ULONG ?
        NumCounterObjectsPerIngressExactMatchFlowEntry ULONG ?
        NumCounterObjectsPerEgressExactMatchFlowEntry ULONG ?
        NumCounterObjectsPerIngressWildcardMatchFlowEntry ULONG ?
        NumCounterObjectsPerEgressWildcardMatchFlowEntry ULONG ?
      NDIS_GFT_OFFLOAD_CAPABILITIES ends
      _NDIS_GFT_OFFLOAD_CAPABILITIES typedef NDIS_GFT_OFFLOAD_CAPABILITIES
      PNDIS_GFT_OFFLOAD_CAPABILITIES typedef ptr NDIS_GFT_OFFLOAD_CAPABILITIES
      NDIS_SIZEOF_GFT_OFFLOAD_CAPABILITIES_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_OFFLOAD_CAPABILITIES, NumCounterObjectsPerEgressWildcardMatchFlowEntry)>
      NDIS_GFT_VPORT_ENABLE equ 00000001h
      NDIS_GFT_VPORT_PARSE_VXLAN equ 00000002h
      NDIS_GFT_VPORT_PARSE_VXLAN_NOT_IN_SRC_PORT_RANGE equ 00000004h
      NDIS_GFT_VPORT_ENABLE_STATE_CHANGED equ 00100000h
      NDIS_GFT_VPORT_EXCEPTION_VPORT_CHANGED equ 00200000h
      NDIS_GFT_VPORT_SAMPLING_RATE_CHANGED equ 00400000h
      NDIS_GFT_VPORT_DSCP_MASK_CHANGED equ 00800000h
      NDIS_GFT_VPORT_PRIORITY_MASK_CHANGED equ 01000000h
      NDIS_GFT_VPORT_VXLAN_SETTINGS_CHANGED equ 02000000h
      NDIS_GFT_VPORT_DSCP_FLAGS_CHANGED equ 04000000h
      NDIS_GFT_VPORT_PARAMS_CHANGE_MASK equ 0FFF00000h
      NDIS_GFT_VPORT_PARAMS_CUSTOM_PROVIDER_RESERVED equ 000FF000h
      NDIS_GFT_VPORT_MAX_DSCP_MASK_COUNTER_OBJECTS equ 64
      NDIS_GFT_VPORT_MAX_PRIORITY_MASK_COUNTER_OBJECTS equ 8
      NDIS_GFT_VPORT_DSCP_GUARD_ENABLE_RX equ 00000001h
      NDIS_GFT_VPORT_DSCP_GUARD_ENABLE_TX equ 00000002h
      NDIS_GFT_VPORT_DSCP_MASK_ENABLE_RX equ 00000004h
      NDIS_GFT_VPORT_DSCP_MASK_ENABLE_TX equ 00000008h
      NDIS_GFT_VPORT_PARAMETERS_REVISION_1 equ 1
      NDIS_GFT_VPORT_PARAMETERS struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        VPortId NDIS_NIC_SWITCH_VPORT_ID ?
        ExceptionVPortId NDIS_NIC_SWITCH_VPORT_ID ?
        SamplingRate ULONG ?
        DscpMask ULONG64 ?
        NumDscpMaskCounterObjects ULONG ?
        DscpMaskCounterIdArray NDIS_GFT_COUNTER_ID NDIS_GFT_VPORT_MAX_DSCP_MASK_COUNTER_OBJECTS dup (?)
        PriorityMask ULONG64 ?
        NumPriorityMaskCounterObjects ULONG ?
        PriorityMaskCounterIdArray NDIS_GFT_COUNTER_ID NDIS_GFT_VPORT_MAX_PRIORITY_MASK_COUNTER_OBJECTS dup (?)
        VxLanSrcPortBase USHORT ?
        VxLanSrcPortRange USHORT ?
        DscpFlags ULONG ?
        union
          CustomProviderReservedPointer PVOID ?
          CustomProviderReservedValue ULONG64 ?
        ends
      NDIS_GFT_VPORT_PARAMETERS ends
      _NDIS_GFT_VPORT_PARAMETERS typedef NDIS_GFT_VPORT_PARAMETERS
      PNDIS_GFT_VPORT_PARAMETERS typedef ptr NDIS_GFT_VPORT_PARAMETERS
      NDIS_SIZEOF_GFT_VPORT_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_GFT_VPORT_PARAMETERS, CustomProviderReservedValue)>
      NDIS_QOS_SQ_ID typedef ULONG
      PNDIS_QOS_SQ_ID typedef ptr ULONG
      NDIS_QOS_DEFAULT_SQ_ID equ 0
      NDIS_QOS_SQ_TYPE typedef SDWORD
      NdisQosSqTypeUndefined equ 0
      NdisQosSqTypeStandard equ 1
      NdisQosSqTypeGFT equ 2
      NdisQosSqTypeMax equ 3
      _NDIS_QOS_SQ_TYPE typedef NDIS_QOS_SQ_TYPE
      PNDIS_QOS_SQ_TYPE typedef ptr NDIS_QOS_SQ_TYPE
      NDIS_QOS_SQ_PARAMETERS_REVISION_1 equ 1
      if (NDIS_SUPPORT_NDIS684)
        NDIS_QOS_SQ_PARAMETERS_REVISION_2 equ 2
      endif
      NDIS_QOS_SQ_PARAMETERS struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        SqId NDIS_QOS_SQ_ID ?
        SqType NDIS_QOS_SQ_TYPE ?
        TcEnabledTable BOOLEAN NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES dup (?)
        TcTransmitBandwidthCapTable ULONG NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES dup (?)
        TcTransmitBandwidthReservationTable ULONG NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES dup (?)
        TcReceiveBandwidthCapTable ULONG NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES dup (?)
        if (NDIS_SUPPORT_NDIS684)
          CrossTcTransmitBandwidthCap ULONG ?
          MaxNumSqInputs ULONG ?
        endif
      NDIS_QOS_SQ_PARAMETERS ends
      _NDIS_QOS_SQ_PARAMETERS typedef NDIS_QOS_SQ_PARAMETERS
      PNDIS_QOS_SQ_PARAMETERS typedef ptr NDIS_QOS_SQ_PARAMETERS
      NDIS_SIZEOF_QOS_SQ_PARAMETERS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_QOS_SQ_PARAMETERS, TcReceiveBandwidthCapTable)>
      if (NDIS_SUPPORT_NDIS684)
        NDIS_SIZEOF_QOS_SQ_PARAMETERS_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_QOS_SQ_PARAMETERS, MaxNumSqInputs)>
      endif
      NDIS_QOS_SQ_TRANSMIT_CAP_ENABLED equ 00000001h
      NDIS_QOS_SQ_TRANSMIT_RESERVATION_ENABLED equ 00000002h
      NDIS_QOS_SQ_RECEIVE_CAP_ENABLED equ 00000004h
      NDIS_QOS_SQ_PARAMETERS_ARRAY_REVISION_1 equ 1
      if (NDIS_SUPPORT_NDIS684)
        NDIS_QOS_SQ_ARRAY_REVISION_1 equ 1
      endif
      NDIS_QOS_SQ_PARAMETERS_ENUM_ARRAY struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        SqType NDIS_QOS_SQ_TYPE ?
        FirstSqId NDIS_QOS_SQ_ID ?
        MaxSqsToReturn ULONG ?
        if (NDIS_SUPPORT_NDIS684)
          union
            SqArrayOffset ULONG ?
            SqParamsArrayOffset ULONG ?
          ends
          union
            SqArrayNumElements ULONG ?
            SqParamsArrayNumElements ULONG ?
          ends
          union
            SqArrayElementSize ULONG ?
            SqParamsArrayElementSize ULONG ?
          ends
        else
          SqParamsArrayOffset ULONG ?
          SqParamsArrayNumElements ULONG ?
          SqParamsArrayElementSize ULONG ?
        endif
      NDIS_QOS_SQ_PARAMETERS_ENUM_ARRAY ends
      _NDIS_QOS_SQ_PARAMETERS_ENUM_ARRAY typedef NDIS_QOS_SQ_PARAMETERS_ENUM_ARRAY
      PNDIS_QOS_SQ_PARAMETERS_ENUM_ARRAY typedef ptr NDIS_QOS_SQ_PARAMETERS_ENUM_ARRAY
      if (NDIS_SUPPORT_NDIS684)
        NDIS_QOS_SQ_ARRAY typedef _NDIS_QOS_SQ_PARAMETERS_ENUM_ARRAY
        PNDIS_QOS_SQ_ARRAY typedef ptr _NDIS_QOS_SQ_PARAMETERS_ENUM_ARRAY
        NDIS_SIZEOF_QOS_SQ_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_QOS_SQ_ARRAY, SqArrayElementSize)>
      endif
      NDIS_SIZEOF_QOS_SQ_PARAMETERS_ENUM_ARRAY_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_QOS_SQ_PARAMETERS_ENUM_ARRAY, SqParamsArrayElementSize)>
      NDIS_QOS_OFFLOAD_CAPABILITIES_REVISION_1 equ 1
      if (NDIS_SUPPORT_NDIS684)
        NDIS_QOS_OFFLOAD_CAPABILITIES_REVISION_2 equ 2
      endif
      NDIS_QOS_OFFLOAD_CAPABILITIES struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        SupportedSqTypes ULONG ?
        TransmitCapSupported BOOLEAN NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES dup (?)
        TransmitReservationSupported BOOLEAN NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES dup (?)
        ReceiveCapSupported BOOLEAN NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES dup (?)
        TransmitGftCapSupported BOOLEAN NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES dup (?)
        ReceiveGftCapSupported BOOLEAN NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES dup (?)
        TcSupportedTable BOOLEAN NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES dup (?)
        NumStandardSqsSupported ULONG ?
        NumGftSqsSupported ULONG ?
        ReservationGranularitySupported ULONG ?
        MaxNumSqInputs ULONG ?
        if (NDIS_SUPPORT_NDIS684)
          CrossTcTransmitMaxCapSupported BOOLEAN ?
        endif
      NDIS_QOS_OFFLOAD_CAPABILITIES ends
      _NDIS_QOS_OFFLOAD_CAPABILITIES typedef NDIS_QOS_OFFLOAD_CAPABILITIES
      PNDIS_QOS_OFFLOAD_CAPABILITIES typedef ptr NDIS_QOS_OFFLOAD_CAPABILITIES
      NDIS_SIZEOF_QOS_OFFLOAD_CAPABILITIES_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_QOS_OFFLOAD_CAPABILITIES, MaxNumSqInputs)>
      if (NDIS_SUPPORT_NDIS684)
        NDIS_SIZEOF_QOS_OFFLOAD_CAPABILITIES_REVISION_2 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_QOS_OFFLOAD_CAPABILITIES, CrossTcTransmitMaxCapSupported)>
      endif
      NDIS_QOS_OFFLOAD_CAPS_STANDARD_SQ equ 00000001h
      NDIS_QOS_OFFLOAD_CAPS_GFT_SQ equ 00000002h
    endif
    if (NDIS_SUPPORT_NDIS685)
      NDIS_QOS_SQ_STATS_REVISION_1 equ 1
      NDIS_QOS_SQ_STATS struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        SqId NDIS_QOS_SQ_ID ?
        SqType NDIS_QOS_SQ_TYPE ?
        BytesTransmitted UINT64 NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES dup (?)
        PktsTransmitted UINT64 NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES dup (?)
      NDIS_QOS_SQ_STATS ends
      _NDIS_QOS_SQ_STATS typedef NDIS_QOS_SQ_STATS
      PNDIS_QOS_SQ_STATS typedef ptr NDIS_QOS_SQ_STATS
      NDIS_SIZEOF_QOS_SQ_STATS_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_QOS_SQ_STATS, PktsTransmitted)>
    endif
    if ((NTDDI_VERSION ge NTDDI_WIN10_RS5) or NDIS_SUPPORT_NDIS682)
      NDIS_TIMESTAMP_CAPABILITIES_REVISION_1 equ 1
      NDIS_TIMESTAMP_CAPABILITY_FLAGS struct
        PtpV2OverUdpIPv4EventMsgReceiveHw BOOLEAN ?
        PtpV2OverUdpIPv4AllMsgReceiveHw BOOLEAN ?
        PtpV2OverUdpIPv4EventMsgTransmitHw BOOLEAN ?
        PtpV2OverUdpIPv4AllMsgTransmitHw BOOLEAN ?
        PtpV2OverUdpIPv6EventMsgReceiveHw BOOLEAN ?
        PtpV2OverUdpIPv6AllMsgReceiveHw BOOLEAN ?
        PtpV2OverUdpIPv6EventMsgTransmitHw BOOLEAN ?
        PtpV2OverUdpIPv6AllMsgTransmitHw BOOLEAN ?
        AllReceiveHw BOOLEAN ?
        AllTransmitHw BOOLEAN ?
        TaggedTransmitHw BOOLEAN ?
        AllReceiveSw BOOLEAN ?
        AllTransmitSw BOOLEAN ?
        TaggedTransmitSw BOOLEAN ?
      NDIS_TIMESTAMP_CAPABILITY_FLAGS ends
      _NDIS_TIMESTAMP_CAPABILITY_FLAGS typedef NDIS_TIMESTAMP_CAPABILITY_FLAGS
      PNDIS_TIMESTAMP_CAPABILITY_FLAGS typedef ptr NDIS_TIMESTAMP_CAPABILITY_FLAGS
      NDIS_TIMESTAMP_CAPABILITIES struct
        Header NDIS_OBJECT_HEADER ?
        HardwareClockFrequencyHz ULONG64 ?
        CrossTimestamp BOOLEAN ?
        Reserved1 ULONG64 ?
        Reserved2 ULONG64 ?
        TimestampFlags NDIS_TIMESTAMP_CAPABILITY_FLAGS <>
      NDIS_TIMESTAMP_CAPABILITIES ends
      _NDIS_TIMESTAMP_CAPABILITIES typedef NDIS_TIMESTAMP_CAPABILITIES
      PNDIS_TIMESTAMP_CAPABILITIES typedef ptr NDIS_TIMESTAMP_CAPABILITIES
      NDIS_SIZEOF_TIMESTAMP_CAPABILITIES_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_TIMESTAMP_CAPABILITIES, TimestampFlags)>
      OID_TIMESTAMP_CAPABILITY equ 00A00001h
      OID_TIMESTAMP_CURRENT_CONFIG equ 00A00002h
      NDIS_HARDWARE_CROSSTIMESTAMP_REVISION_1 equ 1
      NDIS_HARDWARE_CROSSTIMESTAMP struct
        Header NDIS_OBJECT_HEADER ?
        Flags ULONG ?
        SystemTimestamp1 ULONG64 ?
        HardwareClockTimestamp ULONG64 ?
        SystemTimestamp2 ULONG64 ?
      NDIS_HARDWARE_CROSSTIMESTAMP ends
      _NDIS_HARDWARE_CROSSTIMESTAMP typedef NDIS_HARDWARE_CROSSTIMESTAMP
      PNDIS_HARDWARE_CROSSTIMESTAMP typedef ptr NDIS_HARDWARE_CROSSTIMESTAMP
      NDIS_SIZEOF_HARDWARE_CROSSTIMESTAMP_REVISION_1 equ <RTL_SIZEOF_THROUGH_FIELD(NDIS_HARDWARE_CROSSTIMESTAMP, SystemTimestamp2)>
      OID_TIMESTAMP_GET_CROSSTIMESTAMP equ 00A00003h
    endif
    ifdef __cplusplus
      ;[...]
    endif
    if _MSC_VER ge 1200
    else
    endif
  endif
endif
