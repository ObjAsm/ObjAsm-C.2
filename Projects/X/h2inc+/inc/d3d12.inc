;Include file created by h2inc+ version C.2.0 on (UTC) 25/05/2024 20:55:09
;(C) G. Friedrich April 2024
;Source file: d:\objasm\projects\x\h2inc+\h\um_10.0.22621.0\d3d12.h
;             Created on (UTC) 06/04/2024 06:15:53
;             Last modified on (UTC) 21/02/2024 18:19:20

ifndef __REQUIRED_RPCNDR_H_VERSION__
  __REQUIRED_RPCNDR_H_VERSION__ equ 501
endif
ifndef __REQUIRED_RPCSAL_H_VERSION__
  __REQUIRED_RPCSAL_H_VERSION__ equ 100
endif
include rpc.inc
include rpcndr.inc
ifndef __RPCNDR_H_VERSION__
  .err <this stub requires an updated version of < rpcndr.h >>
endif
ifndef COM_NO_WINDOWS_H
  include windows.inc
  include ole2.inc
endif
ifndef __d3d12_h__
  __d3d12_h__ equ <>
  if Defined(_MSC_VER) and (_MSC_VER ge 1020)
  endif
  ifndef DECLSPEC_XFGVIRT
    if Defined(_CONTROL_FLOW_GUARD_XFG)
      DECLSPEC_XFGVIRT macro base, func
        exitm <__declspec(xfg_virtual (base, func))>
      endm
    else
      DECLSPEC_XFGVIRT macro base, func
        exitm <>
      endm
    endif
  endif
  ifndef __ID3D12Object_FWD_DEFINED__
    __ID3D12Object_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12DeviceChild_FWD_DEFINED__
    __ID3D12DeviceChild_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12RootSignature_FWD_DEFINED__
    __ID3D12RootSignature_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12RootSignatureDeserializer_FWD_DEFINED__
    __ID3D12RootSignatureDeserializer_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12VersionedRootSignatureDeserializer_FWD_DEFINED__
    __ID3D12VersionedRootSignatureDeserializer_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Pageable_FWD_DEFINED__
    __ID3D12Pageable_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Heap_FWD_DEFINED__
    __ID3D12Heap_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Resource_FWD_DEFINED__
    __ID3D12Resource_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12CommandAllocator_FWD_DEFINED__
    __ID3D12CommandAllocator_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Fence_FWD_DEFINED__
    __ID3D12Fence_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Fence1_FWD_DEFINED__
    __ID3D12Fence1_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12PipelineState_FWD_DEFINED__
    __ID3D12PipelineState_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12DescriptorHeap_FWD_DEFINED__
    __ID3D12DescriptorHeap_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12QueryHeap_FWD_DEFINED__
    __ID3D12QueryHeap_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12CommandSignature_FWD_DEFINED__
    __ID3D12CommandSignature_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12CommandList_FWD_DEFINED__
    __ID3D12CommandList_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12GraphicsCommandList_FWD_DEFINED__
    __ID3D12GraphicsCommandList_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12GraphicsCommandList1_FWD_DEFINED__
    __ID3D12GraphicsCommandList1_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12GraphicsCommandList2_FWD_DEFINED__
    __ID3D12GraphicsCommandList2_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12CommandQueue_FWD_DEFINED__
    __ID3D12CommandQueue_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Device_FWD_DEFINED__
    __ID3D12Device_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12PipelineLibrary_FWD_DEFINED__
    __ID3D12PipelineLibrary_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12PipelineLibrary1_FWD_DEFINED__
    __ID3D12PipelineLibrary1_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Device1_FWD_DEFINED__
    __ID3D12Device1_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Device2_FWD_DEFINED__
    __ID3D12Device2_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Device3_FWD_DEFINED__
    __ID3D12Device3_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12ProtectedSession_FWD_DEFINED__
    __ID3D12ProtectedSession_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12ProtectedResourceSession_FWD_DEFINED__
    __ID3D12ProtectedResourceSession_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Device4_FWD_DEFINED__
    __ID3D12Device4_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12LifetimeOwner_FWD_DEFINED__
    __ID3D12LifetimeOwner_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12SwapChainAssistant_FWD_DEFINED__
    __ID3D12SwapChainAssistant_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12LifetimeTracker_FWD_DEFINED__
    __ID3D12LifetimeTracker_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12StateObject_FWD_DEFINED__
    __ID3D12StateObject_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12StateObjectProperties_FWD_DEFINED__
    __ID3D12StateObjectProperties_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Device5_FWD_DEFINED__
    __ID3D12Device5_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12DeviceRemovedExtendedDataSettings_FWD_DEFINED__
    __ID3D12DeviceRemovedExtendedDataSettings_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12DeviceRemovedExtendedDataSettings1_FWD_DEFINED__
    __ID3D12DeviceRemovedExtendedDataSettings1_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12DeviceRemovedExtendedData_FWD_DEFINED__
    __ID3D12DeviceRemovedExtendedData_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12DeviceRemovedExtendedData1_FWD_DEFINED__
    __ID3D12DeviceRemovedExtendedData1_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12DeviceRemovedExtendedData2_FWD_DEFINED__
    __ID3D12DeviceRemovedExtendedData2_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Device6_FWD_DEFINED__
    __ID3D12Device6_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12ProtectedResourceSession1_FWD_DEFINED__
    __ID3D12ProtectedResourceSession1_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Device7_FWD_DEFINED__
    __ID3D12Device7_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Device8_FWD_DEFINED__
    __ID3D12Device8_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Resource1_FWD_DEFINED__
    __ID3D12Resource1_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Resource2_FWD_DEFINED__
    __ID3D12Resource2_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Heap1_FWD_DEFINED__
    __ID3D12Heap1_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12GraphicsCommandList3_FWD_DEFINED__
    __ID3D12GraphicsCommandList3_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12MetaCommand_FWD_DEFINED__
    __ID3D12MetaCommand_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12GraphicsCommandList4_FWD_DEFINED__
    __ID3D12GraphicsCommandList4_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12ShaderCacheSession_FWD_DEFINED__
    __ID3D12ShaderCacheSession_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Device9_FWD_DEFINED__
    __ID3D12Device9_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Device10_FWD_DEFINED__
    __ID3D12Device10_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12VirtualizationGuestDevice_FWD_DEFINED__
    __ID3D12VirtualizationGuestDevice_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12Tools_FWD_DEFINED__
    __ID3D12Tools_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12SDKConfiguration_FWD_DEFINED__
    __ID3D12SDKConfiguration_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12SDKConfiguration1_FWD_DEFINED__
    __ID3D12SDKConfiguration1_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12DeviceFactory_FWD_DEFINED__
    __ID3D12DeviceFactory_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12DeviceConfiguration_FWD_DEFINED__
    __ID3D12DeviceConfiguration_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12GraphicsCommandList5_FWD_DEFINED__
    __ID3D12GraphicsCommandList5_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12GraphicsCommandList6_FWD_DEFINED__
    __ID3D12GraphicsCommandList6_FWD_DEFINED__ equ <>
  endif
  ifndef __ID3D12GraphicsCommandList7_FWD_DEFINED__
    __ID3D12GraphicsCommandList7_FWD_DEFINED__ equ <>
  endif
  include OAIdl.inc
  include OCIdl.inc
  include dxgicommon.inc
  include dxgiformat.inc
  include d3dcommon.inc
  ifdef __cplusplus
    ;[...]
  endif
  include winapifamily.inc
  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP or WINAPI_PARTITION_GAMES)
    ifndef _D3D12_CONSTANTS
      _D3D12_CONSTANTS equ <>
      D3D12_16BIT_INDEX_STRIP_CUT_VALUE equ (0ffffh)
      D3D12_32BIT_INDEX_STRIP_CUT_VALUE equ (0ffffffffh)
      D3D12_8BIT_INDEX_STRIP_CUT_VALUE equ (0ffh)
      D3D12_APPEND_ALIGNED_ELEMENT equ (0ffffffffh)
      D3D12_ARRAY_AXIS_ADDRESS_RANGE_BIT_COUNT equ (9)
      D3D12_CLIP_OR_CULL_DISTANCE_COUNT equ (8)
      D3D12_CLIP_OR_CULL_DISTANCE_ELEMENT_COUNT equ (2)
      D3D12_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT equ (14)
      D3D12_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS equ (4)
      D3D12_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT equ (32)
      D3D12_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT equ (15)
      D3D12_COMMONSHADER_CONSTANT_BUFFER_PARTIAL_UPDATE_EXTENTS_BYTE_ALIGNMENT equ (16)
      D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS equ (4)
      D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT equ (15)
      D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST equ (1)
      D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS equ (1)
      D3D12_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT equ (64)
      D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS equ (4)
      D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT equ (1)
      D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST equ (1)
      D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS equ (1)
      D3D12_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT equ (32)
      D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS equ (1)
      D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT equ (128)
      D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST equ (1)
      D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS equ (1)
      D3D12_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT equ (128)
      D3D12_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS equ (1)
      D3D12_COMMONSHADER_SAMPLER_REGISTER_COUNT equ (16)
      D3D12_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST equ (1)
      D3D12_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS equ (1)
      D3D12_COMMONSHADER_SAMPLER_SLOT_COUNT equ (16)
      D3D12_COMMONSHADER_SUBROUTINE_NESTING_LIMIT equ (32)
      D3D12_COMMONSHADER_TEMP_REGISTER_COMPONENTS equ (4)
      D3D12_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_COMMONSHADER_TEMP_REGISTER_COUNT equ (4096)
      D3D12_COMMONSHADER_TEMP_REGISTER_READS_PER_INST equ (3)
      D3D12_COMMONSHADER_TEMP_REGISTER_READ_PORTS equ (3)
      D3D12_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX equ (10)
      D3D12_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN equ (- 10)
      D3D12_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE equ (- 8)
      D3D12_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE equ (7)
      D3D12_CONSTANT_BUFFER_DATA_PLACEMENT_ALIGNMENT equ (256)
      D3D12_CS_4_X_BUCKET00_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (256)
      D3D12_CS_4_X_BUCKET00_MAX_NUM_THREADS_PER_GROUP equ (64)
      D3D12_CS_4_X_BUCKET01_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (240)
      D3D12_CS_4_X_BUCKET01_MAX_NUM_THREADS_PER_GROUP equ (68)
      D3D12_CS_4_X_BUCKET02_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (224)
      D3D12_CS_4_X_BUCKET02_MAX_NUM_THREADS_PER_GROUP equ (72)
      D3D12_CS_4_X_BUCKET03_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (208)
      D3D12_CS_4_X_BUCKET03_MAX_NUM_THREADS_PER_GROUP equ (76)
      D3D12_CS_4_X_BUCKET04_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (192)
      D3D12_CS_4_X_BUCKET04_MAX_NUM_THREADS_PER_GROUP equ (84)
      D3D12_CS_4_X_BUCKET05_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (176)
      D3D12_CS_4_X_BUCKET05_MAX_NUM_THREADS_PER_GROUP equ (92)
      D3D12_CS_4_X_BUCKET06_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (160)
      D3D12_CS_4_X_BUCKET06_MAX_NUM_THREADS_PER_GROUP equ (100)
      D3D12_CS_4_X_BUCKET07_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (144)
      D3D12_CS_4_X_BUCKET07_MAX_NUM_THREADS_PER_GROUP equ (112)
      D3D12_CS_4_X_BUCKET08_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (128)
      D3D12_CS_4_X_BUCKET08_MAX_NUM_THREADS_PER_GROUP equ (128)
      D3D12_CS_4_X_BUCKET09_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (112)
      D3D12_CS_4_X_BUCKET09_MAX_NUM_THREADS_PER_GROUP equ (144)
      D3D12_CS_4_X_BUCKET10_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (96)
      D3D12_CS_4_X_BUCKET10_MAX_NUM_THREADS_PER_GROUP equ (168)
      D3D12_CS_4_X_BUCKET11_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (80)
      D3D12_CS_4_X_BUCKET11_MAX_NUM_THREADS_PER_GROUP equ (204)
      D3D12_CS_4_X_BUCKET12_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (64)
      D3D12_CS_4_X_BUCKET12_MAX_NUM_THREADS_PER_GROUP equ (256)
      D3D12_CS_4_X_BUCKET13_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (48)
      D3D12_CS_4_X_BUCKET13_MAX_NUM_THREADS_PER_GROUP equ (340)
      D3D12_CS_4_X_BUCKET14_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (32)
      D3D12_CS_4_X_BUCKET14_MAX_NUM_THREADS_PER_GROUP equ (512)
      D3D12_CS_4_X_BUCKET15_MAX_BYTES_TGSM_WRITABLE_PER_THREAD equ (16)
      D3D12_CS_4_X_BUCKET15_MAX_NUM_THREADS_PER_GROUP equ (768)
      D3D12_CS_4_X_DISPATCH_MAX_THREAD_GROUPS_IN_Z_DIMENSION equ (1)
      D3D12_CS_4_X_RAW_UAV_BYTE_ALIGNMENT equ (256)
      D3D12_CS_4_X_THREAD_GROUP_MAX_THREADS_PER_GROUP equ (768)
      D3D12_CS_4_X_THREAD_GROUP_MAX_X equ (768)
      D3D12_CS_4_X_THREAD_GROUP_MAX_Y equ (768)
      D3D12_CS_4_X_UAV_REGISTER_COUNT equ (1)
      D3D12_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION equ (65535)
      D3D12_CS_TGSM_REGISTER_COUNT equ (8192)
      D3D12_CS_TGSM_REGISTER_READS_PER_INST equ (1)
      D3D12_CS_TGSM_RESOURCE_REGISTER_COMPONENTS equ (1)
      D3D12_CS_TGSM_RESOURCE_REGISTER_READ_PORTS equ (1)
      D3D12_CS_THREADGROUPID_REGISTER_COMPONENTS equ (3)
      D3D12_CS_THREADGROUPID_REGISTER_COUNT equ (1)
      D3D12_CS_THREADIDINGROUPFLATTENED_REGISTER_COMPONENTS equ (1)
      D3D12_CS_THREADIDINGROUPFLATTENED_REGISTER_COUNT equ (1)
      D3D12_CS_THREADIDINGROUP_REGISTER_COMPONENTS equ (3)
      D3D12_CS_THREADIDINGROUP_REGISTER_COUNT equ (1)
      D3D12_CS_THREADID_REGISTER_COMPONENTS equ (3)
      D3D12_CS_THREADID_REGISTER_COUNT equ (1)
      D3D12_CS_THREAD_GROUP_MAX_THREADS_PER_GROUP equ (1024)
      D3D12_CS_THREAD_GROUP_MAX_X equ (1024)
      D3D12_CS_THREAD_GROUP_MAX_Y equ (1024)
      D3D12_CS_THREAD_GROUP_MAX_Z equ (64)
      D3D12_CS_THREAD_GROUP_MIN_X equ (1)
      D3D12_CS_THREAD_GROUP_MIN_Y equ (1)
      D3D12_CS_THREAD_GROUP_MIN_Z equ (1)
      D3D12_CS_THREAD_LOCAL_TEMP_REGISTER_POOL equ (16384)
      D3D12_DEFAULT_BLEND_FACTOR_ALPHA equ (1.0)
      D3D12_DEFAULT_BLEND_FACTOR_BLUE equ (1.0)
      D3D12_DEFAULT_BLEND_FACTOR_GREEN equ (1.0)
      D3D12_DEFAULT_BLEND_FACTOR_RED equ (1.0)
      D3D12_DEFAULT_BORDER_COLOR_COMPONENT equ (0.0)
      D3D12_DEFAULT_DEPTH_BIAS equ (0)
      D3D12_DEFAULT_DEPTH_BIAS_CLAMP equ (0.0)
      D3D12_DEFAULT_MAX_ANISOTROPY equ (16)
      D3D12_DEFAULT_MIP_LOD_BIAS equ (0.0)
      D3D12_DEFAULT_MSAA_RESOURCE_PLACEMENT_ALIGNMENT equ (4194304)
      D3D12_DEFAULT_RENDER_TARGET_ARRAY_INDEX equ (0)
      D3D12_DEFAULT_RESOURCE_PLACEMENT_ALIGNMENT equ (65536)
      D3D12_DEFAULT_SAMPLE_MASK equ (0ffffffffh)
      D3D12_DEFAULT_SCISSOR_ENDX equ (0)
      D3D12_DEFAULT_SCISSOR_ENDY equ (0)
      D3D12_DEFAULT_SCISSOR_STARTX equ (0)
      D3D12_DEFAULT_SCISSOR_STARTY equ (0)
      D3D12_DEFAULT_SLOPE_SCALED_DEPTH_BIAS equ (0.0)
      D3D12_DEFAULT_STENCIL_READ_MASK equ (0ffh)
      D3D12_DEFAULT_STENCIL_REFERENCE equ (0)
      D3D12_DEFAULT_STENCIL_WRITE_MASK equ (0ffh)
      D3D12_DEFAULT_VIEWPORT_AND_SCISSORRECT_INDEX equ (0)
      D3D12_DEFAULT_VIEWPORT_HEIGHT equ (0)
      D3D12_DEFAULT_VIEWPORT_MAX_DEPTH equ (0.0)
      D3D12_DEFAULT_VIEWPORT_MIN_DEPTH equ (0.0)
      D3D12_DEFAULT_VIEWPORT_TOPLEFTX equ (0)
      D3D12_DEFAULT_VIEWPORT_TOPLEFTY equ (0)
      D3D12_DEFAULT_VIEWPORT_WIDTH equ (0)
      D3D12_DESCRIPTOR_RANGE_OFFSET_APPEND equ (0ffffffffh)
      D3D12_DRIVER_RESERVED_REGISTER_SPACE_VALUES_END equ (0fffffff7h)
      D3D12_DRIVER_RESERVED_REGISTER_SPACE_VALUES_START equ (0fffffff0h)
      D3D12_DS_INPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS equ (3968)
      D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENTS equ (4)
      D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COUNT equ (32)
      D3D12_DS_INPUT_CONTROL_POINT_REGISTER_READS_PER_INST equ (2)
      D3D12_DS_INPUT_CONTROL_POINT_REGISTER_READ_PORTS equ (1)
      D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENTS equ (3)
      D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COUNT equ (1)
      D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_READS_PER_INST equ (2)
      D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_READ_PORTS equ (1)
      D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENTS equ (4)
      D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COUNT equ (32)
      D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST equ (2)
      D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_READ_PORTS equ (1)
      D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS equ (1)
      D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COUNT equ (1)
      D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST equ (2)
      D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS equ (1)
      D3D12_DS_OUTPUT_REGISTER_COMPONENTS equ (4)
      D3D12_DS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_DS_OUTPUT_REGISTER_COUNT equ (32)
      D3D12_FLOAT16_FUSED_TOLERANCE_IN_ULP equ (0.6)
      D3D12_FLOAT32_MAX equ (3.402823466E+38)
      D3D12_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP equ (0.6)
      D3D12_FLOAT_TO_SRGB_EXPONENT_DENOMINATOR equ (2.4)
      D3D12_FLOAT_TO_SRGB_EXPONENT_NUMERATOR equ (1.0)
      D3D12_FLOAT_TO_SRGB_OFFSET equ (0.055)
      D3D12_FLOAT_TO_SRGB_SCALE_1 equ (12.92)
      D3D12_FLOAT_TO_SRGB_SCALE_2 equ (1.055)
      D3D12_FLOAT_TO_SRGB_THRESHOLD equ (0.0031308)
      D3D12_FTOI_INSTRUCTION_MAX_INPUT equ (2147483647.999)
      D3D12_FTOI_INSTRUCTION_MIN_INPUT equ (- 2147483648.999)
      D3D12_FTOU_INSTRUCTION_MAX_INPUT equ (4294967295.999)
      D3D12_FTOU_INSTRUCTION_MIN_INPUT equ (0.0)
      D3D12_GS_INPUT_INSTANCE_ID_READS_PER_INST equ (2)
      D3D12_GS_INPUT_INSTANCE_ID_READ_PORTS equ (1)
      D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENTS equ (1)
      D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COUNT equ (1)
      D3D12_GS_INPUT_PRIM_CONST_REGISTER_COMPONENTS equ (1)
      D3D12_GS_INPUT_PRIM_CONST_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_GS_INPUT_PRIM_CONST_REGISTER_COUNT equ (1)
      D3D12_GS_INPUT_PRIM_CONST_REGISTER_READS_PER_INST equ (2)
      D3D12_GS_INPUT_PRIM_CONST_REGISTER_READ_PORTS equ (1)
      D3D12_GS_INPUT_REGISTER_COMPONENTS equ (4)
      D3D12_GS_INPUT_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_GS_INPUT_REGISTER_COUNT equ (32)
      D3D12_GS_INPUT_REGISTER_READS_PER_INST equ (2)
      D3D12_GS_INPUT_REGISTER_READ_PORTS equ (1)
      D3D12_GS_INPUT_REGISTER_VERTICES equ (32)
      D3D12_GS_MAX_INSTANCE_COUNT equ (32)
      D3D12_GS_MAX_OUTPUT_VERTEX_COUNT_ACROSS_INSTANCES equ (1024)
      D3D12_GS_OUTPUT_ELEMENTS equ (32)
      D3D12_GS_OUTPUT_REGISTER_COMPONENTS equ (4)
      D3D12_GS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_GS_OUTPUT_REGISTER_COUNT equ (32)
      D3D12_HS_CONTROL_POINT_PHASE_INPUT_REGISTER_COUNT equ (32)
      D3D12_HS_CONTROL_POINT_PHASE_OUTPUT_REGISTER_COUNT equ (32)
      D3D12_HS_CONTROL_POINT_REGISTER_COMPONENTS equ (4)
      D3D12_HS_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_HS_CONTROL_POINT_REGISTER_READS_PER_INST equ (2)
      D3D12_HS_CONTROL_POINT_REGISTER_READ_PORTS equ (1)
      D3D12_HS_FORK_PHASE_INSTANCE_COUNT_UPPER_BOUND equ (0ffffffffh)
      D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENTS equ (1)
      D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COUNT equ (1)
      D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READS_PER_INST equ (2)
      D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READ_PORTS equ (1)
      D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENTS equ (1)
      D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COUNT equ (1)
      D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READS_PER_INST equ (2)
      D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READ_PORTS equ (1)
      D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS equ (1)
      D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COUNT equ (1)
      D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST equ (2)
      D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS equ (1)
      D3D12_HS_JOIN_PHASE_INSTANCE_COUNT_UPPER_BOUND equ (0ffffffffh)
      D3D12_HS_MAXTESSFACTOR_LOWER_BOUND equ (1.0)
      D3D12_HS_MAXTESSFACTOR_UPPER_BOUND equ (64.0)
      D3D12_HS_OUTPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS equ (3968)
      D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENTS equ (1)
      D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COUNT equ (1)
      D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READS_PER_INST equ (2)
      D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READ_PORTS equ (1)
      D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENTS equ (4)
      D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COUNT equ (32)
      D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST equ (2)
      D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READ_PORTS equ (1)
      D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_SCALAR_COMPONENTS equ (128)
      D3D12_IA_DEFAULT_INDEX_BUFFER_OFFSET_IN_BYTES equ (0)
      D3D12_IA_DEFAULT_PRIMITIVE_TOPOLOGY equ (0)
      D3D12_IA_DEFAULT_VERTEX_BUFFER_OFFSET_IN_BYTES equ (0)
      D3D12_IA_INDEX_INPUT_RESOURCE_SLOT_COUNT equ (1)
      D3D12_IA_INSTANCE_ID_BIT_COUNT equ (32)
      D3D12_IA_INTEGER_ARITHMETIC_BIT_COUNT equ (32)
      D3D12_IA_PATCH_MAX_CONTROL_POINT_COUNT equ (32)
      D3D12_IA_PRIMITIVE_ID_BIT_COUNT equ (32)
      D3D12_IA_VERTEX_ID_BIT_COUNT equ (32)
      D3D12_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT equ (32)
      D3D12_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS equ (128)
      D3D12_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT equ (32)
      D3D12_INTEGER_DIVIDE_BY_ZERO_QUOTIENT equ (0ffffffffh)
      D3D12_INTEGER_DIVIDE_BY_ZERO_REMAINDER equ (0ffffffffh)
      D3D12_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL equ (0ffffffffh)
      D3D12_KEEP_UNORDERED_ACCESS_VIEWS equ (0ffffffffh)
      D3D12_LINEAR_GAMMA equ (1.0)
      D3D12_MAJOR_VERSION equ (12)
      D3D12_MAX_BORDER_COLOR_COMPONENT equ (1.0)
      D3D12_MAX_DEPTH equ (1.0)
      D3D12_MAX_LIVE_STATIC_SAMPLERS equ (2032)
      D3D12_MAX_MAXANISOTROPY equ (16)
      D3D12_MAX_MULTISAMPLE_SAMPLE_COUNT equ (32)
      D3D12_MAX_POSITION_VALUE equ (3.402823466E+34)
      D3D12_MAX_ROOT_COST equ (64)
      D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_1 equ (1000000)
      D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_2 equ (1000000)
      D3D12_MAX_SHADER_VISIBLE_SAMPLER_HEAP_SIZE equ (2048)
      D3D12_MAX_TEXTURE_DIMENSION_2_TO_EXP equ (17)
      D3D12_MAX_VIEW_INSTANCE_COUNT equ (4)
      D3D12_MINOR_VERSION equ (0)
      D3D12_MIN_BORDER_COLOR_COMPONENT equ (0.0)
      D3D12_MIN_DEPTH equ (0.0)
      D3D12_MIN_MAXANISOTROPY equ (0)
      D3D12_MIP_LOD_BIAS_MAX equ (15.99)
      D3D12_MIP_LOD_BIAS_MIN equ (- 16.0)
      D3D12_MIP_LOD_FRACTIONAL_BIT_COUNT equ (8)
      D3D12_MIP_LOD_RANGE_BIT_COUNT equ (8)
      D3D12_MULTISAMPLE_ANTIALIAS_LINE_WIDTH equ (1.4)
      D3D12_NONSAMPLE_FETCH_OUT_OF_RANGE_ACCESS_RESULT equ (0)
      D3D12_OS_RESERVED_REGISTER_SPACE_VALUES_END equ (0ffffffffh)
      D3D12_OS_RESERVED_REGISTER_SPACE_VALUES_START equ (0fffffff8h)
      D3D12_PACKED_TILE equ (0ffffffffh)
      D3D12_PIXEL_ADDRESS_RANGE_BIT_COUNT equ (15)
      D3D12_PREVIEW_SDK_VERSION equ (702)
      D3D12_PRE_SCISSOR_PIXEL_ADDRESS_RANGE_BIT_COUNT equ (16)
      D3D12_PS_CS_UAV_REGISTER_COMPONENTS equ (1)
      D3D12_PS_CS_UAV_REGISTER_COUNT equ (8)
      D3D12_PS_CS_UAV_REGISTER_READS_PER_INST equ (1)
      D3D12_PS_CS_UAV_REGISTER_READ_PORTS equ (1)
      D3D12_PS_FRONTFACING_DEFAULT_VALUE equ (0ffffffffh)
      D3D12_PS_FRONTFACING_FALSE_VALUE equ (0)
      D3D12_PS_FRONTFACING_TRUE_VALUE equ (0ffffffffh)
      D3D12_PS_INPUT_REGISTER_COMPONENTS equ (4)
      D3D12_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_PS_INPUT_REGISTER_COUNT equ (32)
      D3D12_PS_INPUT_REGISTER_READS_PER_INST equ (2)
      D3D12_PS_INPUT_REGISTER_READ_PORTS equ (1)
      D3D12_PS_LEGACY_PIXEL_CENTER_FRACTIONAL_COMPONENT equ (0.0)
      D3D12_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS equ (1)
      D3D12_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_PS_OUTPUT_DEPTH_REGISTER_COUNT equ (1)
      D3D12_PS_OUTPUT_MASK_REGISTER_COMPONENTS equ (1)
      D3D12_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_PS_OUTPUT_MASK_REGISTER_COUNT equ (1)
      D3D12_PS_OUTPUT_REGISTER_COMPONENTS equ (4)
      D3D12_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_PS_OUTPUT_REGISTER_COUNT equ (8)
      D3D12_PS_PIXEL_CENTER_FRACTIONAL_COMPONENT equ (0.5)
      D3D12_RAW_UAV_SRV_BYTE_ALIGNMENT equ (16)
      D3D12_RAYTRACING_AABB_BYTE_ALIGNMENT equ (8)
      D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT equ (256)
      D3D12_RAYTRACING_INSTANCE_DESCS_BYTE_ALIGNMENT equ (16)
      D3D12_RAYTRACING_MAX_ATTRIBUTE_SIZE_IN_BYTES equ (32)
      D3D12_RAYTRACING_MAX_DECLARABLE_TRACE_RECURSION_DEPTH equ (31)
      D3D12_RAYTRACING_MAX_GEOMETRIES_PER_BOTTOM_LEVEL_ACCELERATION_STRUCTURE equ (16777216)
      D3D12_RAYTRACING_MAX_INSTANCES_PER_TOP_LEVEL_ACCELERATION_STRUCTURE equ (16777216)
      D3D12_RAYTRACING_MAX_PRIMITIVES_PER_BOTTOM_LEVEL_ACCELERATION_STRUCTURE equ (536870912)
      D3D12_RAYTRACING_MAX_RAY_GENERATION_SHADER_THREADS equ (1073741824)
      D3D12_RAYTRACING_MAX_SHADER_RECORD_STRIDE equ (4096)
      D3D12_RAYTRACING_SHADER_RECORD_BYTE_ALIGNMENT equ (32)
      D3D12_RAYTRACING_SHADER_TABLE_BYTE_ALIGNMENT equ (64)
      D3D12_RAYTRACING_TRANSFORM3X4_BYTE_ALIGNMENT equ (16)
      D3D12_REQ_BLEND_OBJECT_COUNT_PER_DEVICE equ (4096)
      D3D12_REQ_BUFFER_RESOURCE_TEXEL_COUNT_2_TO_EXP equ (27)
      D3D12_REQ_CONSTANT_BUFFER_ELEMENT_COUNT equ (4096)
      D3D12_REQ_DEPTH_STENCIL_OBJECT_COUNT_PER_DEVICE equ (4096)
      D3D12_REQ_DRAWINDEXED_INDEX_COUNT_2_TO_EXP equ (32)
      D3D12_REQ_DRAW_VERTEX_COUNT_2_TO_EXP equ (32)
      D3D12_REQ_FILTERING_HW_ADDRESSABLE_RESOURCE_DIMENSION equ (16384)
      D3D12_REQ_GS_INVOCATION_32BIT_OUTPUT_COMPONENT_LIMIT equ (1024)
      D3D12_REQ_IMMEDIATE_CONSTANT_BUFFER_ELEMENT_COUNT equ (4096)
      D3D12_REQ_MAXANISOTROPY equ (16)
      D3D12_REQ_MIP_LEVELS equ (15)
      D3D12_REQ_MULTI_ELEMENT_STRUCTURE_SIZE_IN_BYTES equ (2048)
      D3D12_REQ_RASTERIZER_OBJECT_COUNT_PER_DEVICE equ (4096)
      D3D12_REQ_RENDER_TO_BUFFER_WINDOW_WIDTH equ (16384)
      D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_A_TERM equ (128)
      D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_B_TERM equ (0.25)
      D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_C_TERM equ (2048)
      D3D12_REQ_RESOURCE_VIEW_COUNT_PER_DEVICE_2_TO_EXP equ (20)
      D3D12_REQ_SAMPLER_OBJECT_COUNT_PER_DEVICE equ (4096)
      D3D12_REQ_SUBRESOURCES equ (30720)
      D3D12_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION equ (2048)
      D3D12_REQ_TEXTURE1D_U_DIMENSION equ (16384)
      D3D12_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION equ (2048)
      D3D12_REQ_TEXTURE2D_U_OR_V_DIMENSION equ (16384)
      D3D12_REQ_TEXTURE3D_U_V_OR_W_DIMENSION equ (2048)
      D3D12_REQ_TEXTURECUBE_DIMENSION equ (16384)
      D3D12_RESINFO_INSTRUCTION_MISSING_COMPONENT_RETVAL equ (0)
      D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES equ (0ffffffffh)
      D3D12_RS_SET_SHADING_RATE_COMBINER_COUNT equ (2)
      D3D12_SDK_VERSION equ (602)
      D3D12_SHADER_IDENTIFIER_SIZE_IN_BYTES equ (32)
      D3D12_SHADER_MAJOR_VERSION equ (5)
      D3D12_SHADER_MAX_INSTANCES equ (65535)
      D3D12_SHADER_MAX_INTERFACES equ (253)
      D3D12_SHADER_MAX_INTERFACE_CALL_SITES equ (4096)
      D3D12_SHADER_MAX_TYPES equ (65535)
      D3D12_SHADER_MINOR_VERSION equ (1)
      D3D12_SHIFT_INSTRUCTION_PAD_VALUE equ (0)
      D3D12_SHIFT_INSTRUCTION_SHIFT_VALUE_BIT_COUNT equ (5)
      D3D12_SIMULTANEOUS_RENDER_TARGET_COUNT equ (8)
      D3D12_SMALL_MSAA_RESOURCE_PLACEMENT_ALIGNMENT equ (65536)
      D3D12_SMALL_RESOURCE_PLACEMENT_ALIGNMENT equ (4096)
      D3D12_SO_BUFFER_MAX_STRIDE_IN_BYTES equ (2048)
      D3D12_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES equ (512)
      D3D12_SO_BUFFER_SLOT_COUNT equ (4)
      D3D12_SO_DDI_REGISTER_INDEX_DENOTING_GAP equ (0ffffffffh)
      D3D12_SO_NO_RASTERIZED_STREAM equ (0ffffffffh)
      D3D12_SO_OUTPUT_COMPONENT_COUNT equ (128)
      D3D12_SO_STREAM_COUNT equ (4)
      D3D12_SPEC_DATE_DAY equ (14)
      D3D12_SPEC_DATE_MONTH equ (11)
      D3D12_SPEC_DATE_YEAR equ (2014)
      D3D12_SPEC_VERSION equ (1.16)
      D3D12_SRGB_GAMMA equ (2.2)
      D3D12_SRGB_TO_FLOAT_DENOMINATOR_1 equ (12.92)
      D3D12_SRGB_TO_FLOAT_DENOMINATOR_2 equ (1.055)
      D3D12_SRGB_TO_FLOAT_EXPONENT equ (2.4)
      D3D12_SRGB_TO_FLOAT_OFFSET equ (0.055)
      D3D12_SRGB_TO_FLOAT_THRESHOLD equ (0.04045)
      D3D12_SRGB_TO_FLOAT_TOLERANCE_IN_ULP equ (0.5)
      D3D12_STANDARD_COMPONENT_BIT_COUNT equ (32)
      D3D12_STANDARD_COMPONENT_BIT_COUNT_DOUBLED equ (64)
      D3D12_STANDARD_MAXIMUM_ELEMENT_ALIGNMENT_BYTE_MULTIPLE equ (4)
      D3D12_STANDARD_PIXEL_COMPONENT_COUNT equ (128)
      D3D12_STANDARD_PIXEL_ELEMENT_COUNT equ (32)
      D3D12_STANDARD_VECTOR_SIZE equ (4)
      D3D12_STANDARD_VERTEX_ELEMENT_COUNT equ (32)
      D3D12_STANDARD_VERTEX_TOTAL_COMPONENT_COUNT equ (64)
      D3D12_SUBPIXEL_FRACTIONAL_BIT_COUNT equ (8)
      D3D12_SUBTEXEL_FRACTIONAL_BIT_COUNT equ (8)
      D3D12_SYSTEM_RESERVED_REGISTER_SPACE_VALUES_END equ (0ffffffffh)
      D3D12_SYSTEM_RESERVED_REGISTER_SPACE_VALUES_START equ (0fffffff0h)
      D3D12_TESSELLATOR_MAX_EVEN_TESSELLATION_FACTOR equ (64)
      D3D12_TESSELLATOR_MAX_ISOLINE_DENSITY_TESSELLATION_FACTOR equ (64)
      D3D12_TESSELLATOR_MAX_ODD_TESSELLATION_FACTOR equ (63)
      D3D12_TESSELLATOR_MAX_TESSELLATION_FACTOR equ (64)
      D3D12_TESSELLATOR_MIN_EVEN_TESSELLATION_FACTOR equ (2)
      D3D12_TESSELLATOR_MIN_ISOLINE_DENSITY_TESSELLATION_FACTOR equ (1)
      D3D12_TESSELLATOR_MIN_ODD_TESSELLATION_FACTOR equ (1)
      D3D12_TEXEL_ADDRESS_RANGE_BIT_COUNT equ (16)
      D3D12_TEXTURE_DATA_PITCH_ALIGNMENT equ (256)
      D3D12_TEXTURE_DATA_PLACEMENT_ALIGNMENT equ (512)
      D3D12_TILED_RESOURCE_TILE_SIZE_IN_BYTES equ (65536)
      D3D12_TRACKED_WORKLOAD_MAX_INSTANCES equ (32)
      D3D12_UAV_COUNTER_PLACEMENT_ALIGNMENT equ (4096)
      D3D12_UAV_SLOT_COUNT equ (64)
      D3D12_UNBOUND_MEMORY_ACCESS_RESULT equ (0)
      D3D12_VIDEO_DECODE_MAX_ARGUMENTS equ (10)
      D3D12_VIDEO_DECODE_MAX_HISTOGRAM_COMPONENTS equ (4)
      D3D12_VIDEO_DECODE_MIN_BITSTREAM_OFFSET_ALIGNMENT equ (256)
      D3D12_VIDEO_DECODE_MIN_HISTOGRAM_OFFSET_ALIGNMENT equ (256)
      D3D12_VIDEO_DECODE_STATUS_MACROBLOCKS_AFFECTED_UNKNOWN equ (0ffffffffh)
      D3D12_VIDEO_PROCESS_MAX_FILTERS equ (32)
      D3D12_VIDEO_PROCESS_STEREO_VIEWS equ (2)
      D3D12_VIEWPORT_AND_SCISSORRECT_MAX_INDEX equ (15)
      D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE equ (16)
      D3D12_VIEWPORT_BOUNDS_MAX equ (32767)
      D3D12_VIEWPORT_BOUNDS_MIN equ (- 32768)
      D3D12_VS_INPUT_REGISTER_COMPONENTS equ (4)
      D3D12_VS_INPUT_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_VS_INPUT_REGISTER_COUNT equ (32)
      D3D12_VS_INPUT_REGISTER_READS_PER_INST equ (2)
      D3D12_VS_INPUT_REGISTER_READ_PORTS equ (1)
      D3D12_VS_OUTPUT_REGISTER_COMPONENTS equ (4)
      D3D12_VS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT equ (32)
      D3D12_VS_OUTPUT_REGISTER_COUNT equ (32)
      D3D12_WHQL_CONTEXT_COUNT_FOR_RESOURCE_LIMIT equ (10)
      D3D12_WHQL_DRAWINDEXED_INDEX_COUNT_2_TO_EXP equ (25)
      D3D12_WHQL_DRAW_VERTEX_COUNT_2_TO_EXP equ (25)
    endif
    D3D12_GPU_VIRTUAL_ADDRESS typedef UINT64
    D3D12_COMMAND_LIST_TYPE typedef SDWORD
    D3D12_COMMAND_LIST_TYPE_DIRECT equ 0
    D3D12_COMMAND_LIST_TYPE_BUNDLE equ 1
    D3D12_COMMAND_LIST_TYPE_COMPUTE equ 2
    D3D12_COMMAND_LIST_TYPE_COPY equ 3
    D3D12_COMMAND_LIST_TYPE_VIDEO_DECODE equ 4
    D3D12_COMMAND_LIST_TYPE_VIDEO_PROCESS equ 5
    D3D12_COMMAND_LIST_TYPE_VIDEO_ENCODE equ 6

    D3D12_COMMAND_QUEUE_FLAGS typedef SDWORD
    D3D12_COMMAND_QUEUE_FLAG_NONE equ 0
    D3D12_COMMAND_QUEUE_FLAG_DISABLE_GPU_TIMEOUT equ 1h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_COMMAND_QUEUE_FLAGS)
    D3D12_COMMAND_QUEUE_PRIORITY typedef SDWORD
    D3D12_COMMAND_QUEUE_PRIORITY_NORMAL equ 0
    D3D12_COMMAND_QUEUE_PRIORITY_HIGH equ 100
    D3D12_COMMAND_QUEUE_PRIORITY_GLOBAL_REALTIME equ 10000

    D3D12_COMMAND_QUEUE_DESC struct
      Type_ D3D12_COMMAND_LIST_TYPE ?
      Priority INT_ ?
      Flags D3D12_COMMAND_QUEUE_FLAGS ?
      NodeMask UINT ?
    D3D12_COMMAND_QUEUE_DESC ends
    D3D12_PRIMITIVE_TOPOLOGY_TYPE typedef SDWORD
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_UNDEFINED equ 0
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_POINT equ 1
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_LINE equ 2
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE equ 3
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH equ 4

    D3D12_INPUT_CLASSIFICATION typedef SDWORD
    D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA equ 0
    D3D12_INPUT_CLASSIFICATION_PER_INSTANCE_DATA equ 1

    D3D12_INPUT_ELEMENT_DESC struct
      SemanticName LPCSTR ?
      SemanticIndex UINT ?
      Format DXGI_FORMAT ?
      InputSlot UINT ?
      AlignedByteOffset UINT ?
      InputSlotClass D3D12_INPUT_CLASSIFICATION ?
      InstanceDataStepRate UINT ?
    D3D12_INPUT_ELEMENT_DESC ends
    D3D12_FILL_MODE typedef SDWORD
    D3D12_FILL_MODE_WIREFRAME equ 2
    D3D12_FILL_MODE_SOLID equ 3

    D3D12_PRIMITIVE_TOPOLOGY typedef D3D_PRIMITIVE_TOPOLOGY
    D3D12_PRIMITIVE typedef D3D_PRIMITIVE
    D3D12_CULL_MODE typedef SDWORD
    D3D12_CULL_MODE_NONE equ 1
    D3D12_CULL_MODE_FRONT equ 2
    D3D12_CULL_MODE_BACK equ 3

    D3D12_SO_DECLARATION_ENTRY struct
      Stream UINT ?
      SemanticName LPCSTR ?
      SemanticIndex UINT ?
      StartComponent BYTE ?
      ComponentCount BYTE ?
      OutputSlot BYTE ?
    D3D12_SO_DECLARATION_ENTRY ends
    D3D12_VIEWPORT struct
      TopLeftX FLOAT ?
      TopLeftY FLOAT ?
      Width_ FLOAT ?
      Height FLOAT ?
      MinDepth FLOAT ?
      MaxDepth FLOAT ?
    D3D12_VIEWPORT ends
    D3D12_RECT typedef RECT
    D3D12_BOX struct
      left UINT ?
      top UINT ?
      front UINT ?
      right UINT ?
      bottom UINT ?
      back UINT ?
    D3D12_BOX ends
    D3D12_COMPARISON_FUNC typedef SDWORD
    D3D12_COMPARISON_FUNC_NEVER equ 1
    D3D12_COMPARISON_FUNC_LESS equ 2
    D3D12_COMPARISON_FUNC_EQUAL equ 3
    D3D12_COMPARISON_FUNC_LESS_EQUAL equ 4
    D3D12_COMPARISON_FUNC_GREATER equ 5
    D3D12_COMPARISON_FUNC_NOT_EQUAL equ 6
    D3D12_COMPARISON_FUNC_GREATER_EQUAL equ 7
    D3D12_COMPARISON_FUNC_ALWAYS equ 8

    D3D12_DEPTH_WRITE_MASK typedef SDWORD
    D3D12_DEPTH_WRITE_MASK_ZERO equ 0
    D3D12_DEPTH_WRITE_MASK_ALL equ 1

    D3D12_STENCIL_OP typedef SDWORD
    D3D12_STENCIL_OP_KEEP equ 1
    D3D12_STENCIL_OP_ZERO equ 2
    D3D12_STENCIL_OP_REPLACE equ 3
    D3D12_STENCIL_OP_INCR_SAT equ 4
    D3D12_STENCIL_OP_DECR_SAT equ 5
    D3D12_STENCIL_OP_INVERT equ 6
    D3D12_STENCIL_OP_INCR equ 7
    D3D12_STENCIL_OP_DECR equ 8

    D3D12_DEPTH_STENCILOP_DESC struct
      StencilFailOp D3D12_STENCIL_OP ?
      StencilDepthFailOp D3D12_STENCIL_OP ?
      StencilPassOp D3D12_STENCIL_OP ?
      StencilFunc D3D12_COMPARISON_FUNC ?
    D3D12_DEPTH_STENCILOP_DESC ends
    D3D12_DEPTH_STENCIL_DESC struct
      DepthEnable BOOL ?
      DepthWriteMask D3D12_DEPTH_WRITE_MASK ?
      DepthFunc D3D12_COMPARISON_FUNC ?
      StencilEnable BOOL ?
      StencilReadMask UINT8 ?
      StencilWriteMask UINT8 ?
      FrontFace D3D12_DEPTH_STENCILOP_DESC <>
      BackFace D3D12_DEPTH_STENCILOP_DESC <>
    D3D12_DEPTH_STENCIL_DESC ends
    D3D12_DEPTH_STENCIL_DESC1 struct
      DepthEnable BOOL ?
      DepthWriteMask D3D12_DEPTH_WRITE_MASK ?
      DepthFunc D3D12_COMPARISON_FUNC ?
      StencilEnable BOOL ?
      StencilReadMask UINT8 ?
      StencilWriteMask UINT8 ?
      FrontFace D3D12_DEPTH_STENCILOP_DESC <>
      BackFace D3D12_DEPTH_STENCILOP_DESC <>
      DepthBoundsTestEnable BOOL ?
    D3D12_DEPTH_STENCIL_DESC1 ends
    D3D12_BLEND typedef SDWORD
    D3D12_BLEND_ZERO equ 1
    D3D12_BLEND_ONE equ 2
    D3D12_BLEND_SRC_COLOR equ 3
    D3D12_BLEND_INV_SRC_COLOR equ 4
    D3D12_BLEND_SRC_ALPHA equ 5
    D3D12_BLEND_INV_SRC_ALPHA equ 6
    D3D12_BLEND_DEST_ALPHA equ 7
    D3D12_BLEND_INV_DEST_ALPHA equ 8
    D3D12_BLEND_DEST_COLOR equ 9
    D3D12_BLEND_INV_DEST_COLOR equ 10
    D3D12_BLEND_SRC_ALPHA_SAT equ 11
    D3D12_BLEND_BLEND_FACTOR equ 14
    D3D12_BLEND_INV_BLEND_FACTOR equ 15
    D3D12_BLEND_SRC1_COLOR equ 16
    D3D12_BLEND_INV_SRC1_COLOR equ 17
    D3D12_BLEND_SRC1_ALPHA equ 18
    D3D12_BLEND_INV_SRC1_ALPHA equ 19
    D3D12_BLEND_ALPHA_FACTOR equ 20
    D3D12_BLEND_INV_ALPHA_FACTOR equ 21

    D3D12_BLEND_OP typedef SDWORD
    D3D12_BLEND_OP_ADD equ 1
    D3D12_BLEND_OP_SUBTRACT equ 2
    D3D12_BLEND_OP_REV_SUBTRACT equ 3
    D3D12_BLEND_OP_MIN equ 4
    D3D12_BLEND_OP_MAX equ 5

    D3D12_COLOR_WRITE_ENABLE typedef SDWORD
    D3D12_COLOR_WRITE_ENABLE_RED equ 1
    D3D12_COLOR_WRITE_ENABLE_GREEN equ 2
    D3D12_COLOR_WRITE_ENABLE_BLUE equ 4
    D3D12_COLOR_WRITE_ENABLE_ALPHA equ 8
    D3D12_COLOR_WRITE_ENABLE_ALL equ

    D3D12_LOGIC_OP typedef SDWORD
    D3D12_LOGIC_OP_CLEAR equ 0
    D3D12_LOGIC_OP_SET equ
    D3D12_LOGIC_OP_COPY equ
    D3D12_LOGIC_OP_COPY_INVERTED equ
    D3D12_LOGIC_OP_NOOP equ
    D3D12_LOGIC_OP_INVERT equ
    D3D12_LOGIC_OP_AND equ
    D3D12_LOGIC_OP_NAND equ
    D3D12_LOGIC_OP_OR equ
    D3D12_LOGIC_OP_NOR equ
    D3D12_LOGIC_OP_XOR equ
    D3D12_LOGIC_OP_EQUIV equ
    D3D12_LOGIC_OP_AND_REVERSE equ
    D3D12_LOGIC_OP_AND_INVERTED equ
    D3D12_LOGIC_OP_OR_REVERSE equ
    D3D12_LOGIC_OP_OR_INVERTED equ

    D3D12_RENDER_TARGET_BLEND_DESC struct
      BlendEnable BOOL ?
      LogicOpEnable BOOL ?
      SrcBlend D3D12_BLEND ?
      DestBlend D3D12_BLEND ?
      BlendOp D3D12_BLEND_OP ?
      SrcBlendAlpha D3D12_BLEND ?
      DestBlendAlpha D3D12_BLEND ?
      BlendOpAlpha D3D12_BLEND_OP ?
      LogicOp D3D12_LOGIC_OP ?
      RenderTargetWriteMask UINT8 ?
    D3D12_RENDER_TARGET_BLEND_DESC ends
    D3D12_BLEND_DESC struct
      AlphaToCoverageEnable BOOL ?
      IndependentBlendEnable BOOL ?
      RenderTarget D3D12_RENDER_TARGET_BLEND_DESC 8 dup (<>)
    D3D12_BLEND_DESC ends
    D3D12_CONSERVATIVE_RASTERIZATION_MODE typedef SDWORD
    D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF equ 0
    D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON equ 1

    D3D12_RASTERIZER_DESC struct
      FillMode D3D12_FILL_MODE ?
      CullMode D3D12_CULL_MODE ?
      FrontCounterClockwise BOOL ?
      DepthBias INT_ ?
      DepthBiasClamp FLOAT ?
      SlopeScaledDepthBias FLOAT ?
      DepthClipEnable BOOL ?
      MultisampleEnable BOOL ?
      AntialiasedLineEnable BOOL ?
      ForcedSampleCount UINT ?
      ConservativeRaster D3D12_CONSERVATIVE_RASTERIZATION_MODE ?
    D3D12_RASTERIZER_DESC ends
    externdef __MIDL_itf_d3d12_0000_0000_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0000_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12Object_INTERFACE_DEFINED__
      __ID3D12Object_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Object:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12ObjectVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12ObjectVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Object, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Object
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Object
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Object, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Object, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Object, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Object, :LPCWSTR
          ??Interface equ <>
          END_INTERFACE
        ID3D12ObjectVtbl ends
        ID3D12Object struct
          lpVtbl POINTER ?
        ID3D12Object ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12DeviceChild_INTERFACE_DEFINED__
      __ID3D12DeviceChild_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12DeviceChild:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12DeviceChildVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12DeviceChildVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12DeviceChild, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12DeviceChild
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12DeviceChild
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12DeviceChild, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12DeviceChild, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12DeviceChild, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12DeviceChild, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12DeviceChild, :REFIID, :ptr ptr
          ??Interface equ <>
          END_INTERFACE
        ID3D12DeviceChildVtbl ends
        ID3D12DeviceChild struct
          lpVtbl POINTER ?
        ID3D12DeviceChild ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12RootSignature_INTERFACE_DEFINED__
      __ID3D12RootSignature_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12RootSignature:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12RootSignatureVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12RootSignatureVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12RootSignature, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12RootSignature, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12RootSignature, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12RootSignature, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12RootSignature, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12RootSignature, :REFIID, :ptr ptr
          ??Interface equ <>
          END_INTERFACE
        ID3D12RootSignatureVtbl ends
        ID3D12RootSignature struct
          lpVtbl POINTER ?
        ID3D12RootSignature ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_SHADER_BYTECODE struct
      pShaderBytecode POINTER ?
      BytecodeLength SIZE_T ?
    D3D12_SHADER_BYTECODE ends
    D3D12_STREAM_OUTPUT_DESC struct
      pSODeclaration POINTER ?
      NumEntries UINT ?
      pBufferStrides POINTER ?
      NumStrides UINT ?
      RasterizedStream UINT ?
    D3D12_STREAM_OUTPUT_DESC ends
    D3D12_INPUT_LAYOUT_DESC struct
      pInputElementDescs POINTER ?
      NumElements UINT ?
    D3D12_INPUT_LAYOUT_DESC ends
    D3D12_INDEX_BUFFER_STRIP_CUT_VALUE typedef SDWORD
    D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_DISABLED equ 0
    D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFF equ 1
    D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFFFFFF equ 2

    D3D12_CACHED_PIPELINE_STATE struct
      pCachedBlob POINTER ?
      CachedBlobSizeInBytes SIZE_T ?
    D3D12_CACHED_PIPELINE_STATE ends
    D3D12_PIPELINE_STATE_FLAGS typedef SDWORD
    D3D12_PIPELINE_STATE_FLAG_NONE equ 0
    D3D12_PIPELINE_STATE_FLAG_TOOL_DEBUG equ 1h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_PIPELINE_STATE_FLAGS)
    D3D12_GRAPHICS_PIPELINE_STATE_DESC struct
      pRootSignature POINTER ?
      VS D3D12_SHADER_BYTECODE <>
      PS D3D12_SHADER_BYTECODE <>
      DS_ D3D12_SHADER_BYTECODE <>
      HS D3D12_SHADER_BYTECODE <>
      GS_ D3D12_SHADER_BYTECODE <>
      StreamOutput D3D12_STREAM_OUTPUT_DESC <>
      BlendState D3D12_BLEND_DESC <>
      SampleMask UINT ?
      RasterizerState D3D12_RASTERIZER_DESC <>
      DepthStencilState D3D12_DEPTH_STENCIL_DESC <>
      InputLayout D3D12_INPUT_LAYOUT_DESC <>
      IBStripCutValue D3D12_INDEX_BUFFER_STRIP_CUT_VALUE ?
      PrimitiveTopologyType D3D12_PRIMITIVE_TOPOLOGY_TYPE ?
      NumRenderTargets UINT ?
      RTVFormats DXGI_FORMAT 8 dup (?)
      DSVFormat DXGI_FORMAT ?
      SampleDesc DXGI_SAMPLE_DESC <>
      NodeMask UINT ?
      CachedPSO D3D12_CACHED_PIPELINE_STATE <>
      Flags D3D12_PIPELINE_STATE_FLAGS ?
    D3D12_GRAPHICS_PIPELINE_STATE_DESC ends
    D3D12_COMPUTE_PIPELINE_STATE_DESC struct
      pRootSignature POINTER ?
      CS_ D3D12_SHADER_BYTECODE <>
      NodeMask UINT ?
      CachedPSO D3D12_CACHED_PIPELINE_STATE <>
      Flags D3D12_PIPELINE_STATE_FLAGS ?
    D3D12_COMPUTE_PIPELINE_STATE_DESC ends
    D3D12_RT_FORMAT_ARRAY struct
      RTFormats DXGI_FORMAT 8 dup (?)
      NumRenderTargets UINT ?
    D3D12_RT_FORMAT_ARRAY ends
    D3D12_PIPELINE_STATE_STREAM_DESC struct
      SizeInBytes SIZE_T ?
      pPipelineStateSubobjectStream POINTER ?
    D3D12_PIPELINE_STATE_STREAM_DESC ends
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE typedef SDWORD
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_ROOT_SIGNATURE equ 0
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VS equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PS equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DS equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_HS equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_GS equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CS equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_STREAM_OUTPUT equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_BLEND equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_MASK equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RASTERIZER equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_INPUT_LAYOUT equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_IB_STRIP_CUT_VALUE equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PRIMITIVE_TOPOLOGY equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RENDER_TARGET_FORMATS equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL_FORMAT equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_DESC equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_NODE_MASK equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CACHED_PSO equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_FLAGS equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL1 equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VIEW_INSTANCING equ
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_AS equ 24
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MS equ 25
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MAX_VALID equ

    D3D12_FEATURE typedef SDWORD
    D3D12_FEATURE_D3D12_OPTIONS equ 0
    D3D12_FEATURE_ARCHITECTURE equ 1
    D3D12_FEATURE_FEATURE_LEVELS equ 2
    D3D12_FEATURE_FORMAT_SUPPORT equ 3
    D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS equ 4
    D3D12_FEATURE_FORMAT_INFO equ 5
    D3D12_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT equ 6
    D3D12_FEATURE_SHADER_MODEL equ 7
    D3D12_FEATURE_D3D12_OPTIONS1 equ 8
    D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_SUPPORT equ 10
    D3D12_FEATURE_ROOT_SIGNATURE equ 12
    D3D12_FEATURE_ARCHITECTURE1 equ 16
    D3D12_FEATURE_D3D12_OPTIONS2 equ 18
    D3D12_FEATURE_SHADER_CACHE equ 19
    D3D12_FEATURE_COMMAND_QUEUE_PRIORITY equ 20
    D3D12_FEATURE_D3D12_OPTIONS3 equ 21
    D3D12_FEATURE_EXISTING_HEAPS equ 22
    D3D12_FEATURE_D3D12_OPTIONS4 equ 23
    D3D12_FEATURE_SERIALIZATION equ 24
    D3D12_FEATURE_CROSS_NODE equ 25
    D3D12_FEATURE_D3D12_OPTIONS5 equ 27
    D3D12_FEATURE_DISPLAYABLE equ 28
    D3D12_FEATURE_D3D12_OPTIONS6 equ 30
    D3D12_FEATURE_QUERY_META_COMMAND equ 31
    D3D12_FEATURE_D3D12_OPTIONS7 equ 32
    D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPE_COUNT equ 33
    D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPES equ 34
    D3D12_FEATURE_D3D12_OPTIONS8 equ 36
    D3D12_FEATURE_D3D12_OPTIONS9 equ 37
    D3D12_FEATURE_D3D12_OPTIONS10 equ 39
    D3D12_FEATURE_D3D12_OPTIONS11 equ 40
    D3D12_FEATURE_D3D12_OPTIONS12 equ 41
    D3D12_FEATURE_D3D12_OPTIONS13 equ 42
    D3D12_FEATURE_D3D12_OPTIONS19 equ 48
    D3D12_FEATURE_D3D12_OPTIONS20 equ 49

    D3D12_SHADER_MIN_PRECISION_SUPPORT typedef SDWORD
    D3D12_SHADER_MIN_PRECISION_SUPPORT_NONE equ 0
    D3D12_SHADER_MIN_PRECISION_SUPPORT_10_BIT equ 1h
    D3D12_SHADER_MIN_PRECISION_SUPPORT_16_BIT equ 2h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_SHADER_MIN_PRECISION_SUPPORT)
    D3D12_TILED_RESOURCES_TIER typedef SDWORD
    D3D12_TILED_RESOURCES_TIER_NOT_SUPPORTED equ 0
    D3D12_TILED_RESOURCES_TIER_1 equ 1
    D3D12_TILED_RESOURCES_TIER_2 equ 2
    D3D12_TILED_RESOURCES_TIER_3 equ 3
    D3D12_TILED_RESOURCES_TIER_4 equ 4

    D3D12_RESOURCE_BINDING_TIER typedef SDWORD
    D3D12_RESOURCE_BINDING_TIER_1 equ 1
    D3D12_RESOURCE_BINDING_TIER_2 equ 2
    D3D12_RESOURCE_BINDING_TIER_3 equ 3

    D3D12_CONSERVATIVE_RASTERIZATION_TIER typedef SDWORD
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_NOT_SUPPORTED equ 0
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_1 equ 1
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_2 equ 2
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_3 equ 3

    D3D12_FORMAT_SUPPORT1 typedef SDWORD
    D3D12_FORMAT_SUPPORT1_NONE equ 0
    D3D12_FORMAT_SUPPORT1_BUFFER equ 1h
    D3D12_FORMAT_SUPPORT1_IA_VERTEX_BUFFER equ 2h
    D3D12_FORMAT_SUPPORT1_IA_INDEX_BUFFER equ 4h
    D3D12_FORMAT_SUPPORT1_SO_BUFFER equ 8h
    D3D12_FORMAT_SUPPORT1_TEXTURE1D equ 10h
    D3D12_FORMAT_SUPPORT1_TEXTURE2D equ 20h
    D3D12_FORMAT_SUPPORT1_TEXTURE3D equ 40h
    D3D12_FORMAT_SUPPORT1_TEXTURECUBE equ 80h
    D3D12_FORMAT_SUPPORT1_SHADER_LOAD equ 100h
    D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE equ 200h
    D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_COMPARISON equ 400h
    D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_MONO_TEXT equ 800h
    D3D12_FORMAT_SUPPORT1_MIP equ 1000h
    D3D12_FORMAT_SUPPORT1_RENDER_TARGET equ 4000h
    D3D12_FORMAT_SUPPORT1_BLENDABLE equ 8000h
    D3D12_FORMAT_SUPPORT1_DEPTH_STENCIL equ 10000h
    D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RESOLVE equ 40000h
    D3D12_FORMAT_SUPPORT1_DISPLAY equ 80000h
    D3D12_FORMAT_SUPPORT1_CAST_WITHIN_BIT_LAYOUT equ 100000h
    D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RENDERTARGET equ 200000h
    D3D12_FORMAT_SUPPORT1_MULTISAMPLE_LOAD equ 400000h
    D3D12_FORMAT_SUPPORT1_SHADER_GATHER equ 800000h
    D3D12_FORMAT_SUPPORT1_BACK_BUFFER_CAST equ 1000000h
    D3D12_FORMAT_SUPPORT1_TYPED_UNORDERED_ACCESS_VIEW equ 2000000h
    D3D12_FORMAT_SUPPORT1_SHADER_GATHER_COMPARISON equ 4000000h
    D3D12_FORMAT_SUPPORT1_DECODER_OUTPUT equ 8000000h
    D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_OUTPUT equ 10000000h
    D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_INPUT equ 20000000h
    D3D12_FORMAT_SUPPORT1_VIDEO_ENCODER equ 40000000h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_FORMAT_SUPPORT1)
    D3D12_FORMAT_SUPPORT2 typedef SDWORD
    D3D12_FORMAT_SUPPORT2_NONE equ 0
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_ADD equ 1h
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS equ 2h
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE equ 4h
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE equ 8h
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX equ 10h
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX equ 20h
    D3D12_FORMAT_SUPPORT2_UAV_TYPED_LOAD equ 40h
    D3D12_FORMAT_SUPPORT2_UAV_TYPED_STORE equ 80h
    D3D12_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP equ 100h
    D3D12_FORMAT_SUPPORT2_TILED equ 200h
    D3D12_FORMAT_SUPPORT2_MULTIPLANE_OVERLAY equ 4000h
    D3D12_FORMAT_SUPPORT2_SAMPLER_FEEDBACK equ 8000h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_FORMAT_SUPPORT2)
    D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS typedef SDWORD
    D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_NONE equ 0
    D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_TILED_RESOURCE equ 1h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS)
    D3D12_CROSS_NODE_SHARING_TIER typedef SDWORD
    D3D12_CROSS_NODE_SHARING_TIER_NOT_SUPPORTED equ 0
    D3D12_CROSS_NODE_SHARING_TIER_1_EMULATED equ 1
    D3D12_CROSS_NODE_SHARING_TIER_1 equ 2
    D3D12_CROSS_NODE_SHARING_TIER_2 equ 3
    D3D12_CROSS_NODE_SHARING_TIER_3 equ 4

    D3D12_RESOURCE_HEAP_TIER typedef SDWORD
    D3D12_RESOURCE_HEAP_TIER_1 equ 1
    D3D12_RESOURCE_HEAP_TIER_2 equ 2

    D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER typedef SDWORD
    D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_NOT_SUPPORTED equ 0
    D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_1 equ 1
    D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_2 equ 2

    D3D12_VIEW_INSTANCING_TIER typedef SDWORD
    D3D12_VIEW_INSTANCING_TIER_NOT_SUPPORTED equ 0
    D3D12_VIEW_INSTANCING_TIER_1 equ 1
    D3D12_VIEW_INSTANCING_TIER_2 equ 2
    D3D12_VIEW_INSTANCING_TIER_3 equ 3

    D3D12_FEATURE_DATA_D3D12_OPTIONS struct
      DoublePrecisionFloatShaderOps BOOL ?
      OutputMergerLogicOp BOOL ?
      MinPrecisionSupport D3D12_SHADER_MIN_PRECISION_SUPPORT ?
      TiledResourcesTier D3D12_TILED_RESOURCES_TIER ?
      ResourceBindingTier D3D12_RESOURCE_BINDING_TIER ?
      PSSpecifiedStencilRefSupported BOOL ?
      TypedUAVLoadAdditionalFormats BOOL ?
      ROVsSupported BOOL ?
      ConservativeRasterizationTier D3D12_CONSERVATIVE_RASTERIZATION_TIER ?
      MaxGPUVirtualAddressBitsPerResource UINT ?
      StandardSwizzle64KBSupported BOOL ?
      CrossNodeSharingTier D3D12_CROSS_NODE_SHARING_TIER ?
      CrossAdapterRowMajorTextureSupported BOOL ?
      VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation BOOL ?
      ResourceHeapTier D3D12_RESOURCE_HEAP_TIER ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS ends
    D3D12_FEATURE_DATA_D3D12_OPTIONS1 struct
      WaveOps BOOL ?
      WaveLaneCountMin UINT ?
      WaveLaneCountMax UINT ?
      TotalLaneCount UINT ?
      ExpandedComputeResourceStates BOOL ?
      Int64ShaderOps BOOL ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS1 ends
    D3D12_FEATURE_DATA_D3D12_OPTIONS2 struct
      DepthBoundsTestSupported BOOL ?
      ProgrammableSamplePositionsTier D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS2 ends
    D3D_ROOT_SIGNATURE_VERSION typedef SDWORD
    D3D_ROOT_SIGNATURE_VERSION_1 equ 1h
    D3D_ROOT_SIGNATURE_VERSION_1_0 equ 1h
    D3D_ROOT_SIGNATURE_VERSION_1_1 equ 2h

    D3D12_FEATURE_DATA_ROOT_SIGNATURE struct
      HighestVersion D3D_ROOT_SIGNATURE_VERSION ?
    D3D12_FEATURE_DATA_ROOT_SIGNATURE ends
    D3D12_FEATURE_DATA_ARCHITECTURE struct
      NodeIndex UINT ?
      TileBasedRenderer BOOL ?
      UMA BOOL ?
      CacheCoherentUMA BOOL ?
    D3D12_FEATURE_DATA_ARCHITECTURE ends
    D3D12_FEATURE_DATA_ARCHITECTURE1 struct
      NodeIndex UINT ?
      TileBasedRenderer BOOL ?
      UMA BOOL ?
      CacheCoherentUMA BOOL ?
      IsolatedMMU BOOL ?
    D3D12_FEATURE_DATA_ARCHITECTURE1 ends
    D3D12_FEATURE_DATA_FEATURE_LEVELS struct
      NumFeatureLevels UINT ?
      pFeatureLevelsRequested POINTER ?
      MaxSupportedFeatureLevel D3D_FEATURE_LEVEL ?
    D3D12_FEATURE_DATA_FEATURE_LEVELS ends
    D3D_SHADER_MODEL typedef SDWORD
    D3D_SHADER_MODEL_5_1 equ 51h
    D3D_SHADER_MODEL_6_0 equ 60h
    D3D_SHADER_MODEL_6_1 equ 61h
    D3D_SHADER_MODEL_6_2 equ 62h
    D3D_SHADER_MODEL_6_3 equ 63h
    D3D_SHADER_MODEL_6_4 equ 64h
    D3D_SHADER_MODEL_6_5 equ 65h
    D3D_SHADER_MODEL_6_6 equ 66h
    D3D_SHADER_MODEL_6_7 equ 67h
    D3D_HIGHEST_SHADER_MODEL equ D3D_SHADER_MODEL_6_7

    D3D12_FEATURE_DATA_SHADER_MODEL struct
      HighestShaderModel D3D_SHADER_MODEL ?
    D3D12_FEATURE_DATA_SHADER_MODEL ends
    D3D12_FEATURE_DATA_FORMAT_SUPPORT struct
      Format DXGI_FORMAT ?
      Support1 D3D12_FORMAT_SUPPORT1 ?
      Support2 D3D12_FORMAT_SUPPORT2 ?
    D3D12_FEATURE_DATA_FORMAT_SUPPORT ends
    D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS struct
      Format DXGI_FORMAT ?
      SampleCount UINT ?
      Flags D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS ?
      NumQualityLevels UINT ?
    D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS ends
    D3D12_FEATURE_DATA_FORMAT_INFO struct
      Format DXGI_FORMAT ?
      PlaneCount UINT8 ?
    D3D12_FEATURE_DATA_FORMAT_INFO ends
    D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT struct
      MaxGPUVirtualAddressBitsPerResource UINT ?
      MaxGPUVirtualAddressBitsPerProcess UINT ?
    D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT ends
    D3D12_SHADER_CACHE_SUPPORT_FLAGS typedef SDWORD
    D3D12_SHADER_CACHE_SUPPORT_NONE equ 0
    D3D12_SHADER_CACHE_SUPPORT_SINGLE_PSO equ 1h
    D3D12_SHADER_CACHE_SUPPORT_LIBRARY equ 2h
    D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_INPROC_CACHE equ 4h
    D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_DISK_CACHE equ 8h
    D3D12_SHADER_CACHE_SUPPORT_DRIVER_MANAGED_CACHE equ 10h
    D3D12_SHADER_CACHE_SUPPORT_SHADER_CONTROL_CLEAR equ 20h
    D3D12_SHADER_CACHE_SUPPORT_SHADER_SESSION_DELETE equ 40h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_SHADER_CACHE_SUPPORT_FLAGS)
    D3D12_FEATURE_DATA_SHADER_CACHE struct
      SupportFlags D3D12_SHADER_CACHE_SUPPORT_FLAGS ?
    D3D12_FEATURE_DATA_SHADER_CACHE ends
    D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY struct
      CommandListType D3D12_COMMAND_LIST_TYPE ?
      Priority UINT ?
      PriorityForTypeIsSupported BOOL ?
    D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY ends
    D3D12_COMMAND_LIST_SUPPORT_FLAGS typedef SDWORD
    D3D12_COMMAND_LIST_SUPPORT_FLAG_NONE equ 0
    D3D12_COMMAND_LIST_SUPPORT_FLAG_DIRECT equ
    D3D12_COMMAND_LIST_SUPPORT_FLAG_BUNDLE equ
    D3D12_COMMAND_LIST_SUPPORT_FLAG_COMPUTE equ
    D3D12_COMMAND_LIST_SUPPORT_FLAG_COPY equ
    D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_DECODE equ
    D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_PROCESS equ
    D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_ENCODE equ

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_COMMAND_LIST_SUPPORT_FLAGS)
    D3D12_FEATURE_DATA_D3D12_OPTIONS3 struct
      CopyQueueTimestampQueriesSupported BOOL ?
      CastingFullyTypedFormatSupported BOOL ?
      WriteBufferImmediateSupportFlags D3D12_COMMAND_LIST_SUPPORT_FLAGS ?
      ViewInstancingTier D3D12_VIEW_INSTANCING_TIER ?
      BarycentricsSupported BOOL ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS3 ends
    D3D12_FEATURE_DATA_EXISTING_HEAPS struct
      Supported BOOL ?
    D3D12_FEATURE_DATA_EXISTING_HEAPS ends
    D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER typedef SDWORD
    D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_0 equ 0
    D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_1 equ
    D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_2 equ

    D3D12_FEATURE_DATA_DISPLAYABLE struct
      DisplayableTexture BOOL ?
      SharedResourceCompatibilityTier D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER ?
    D3D12_FEATURE_DATA_DISPLAYABLE ends
    D3D12_FEATURE_DATA_D3D12_OPTIONS4 struct
      MSAA64KBAlignedTextureSupported BOOL ?
      SharedResourceCompatibilityTier D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER ?
      Native16BitShaderOpsSupported BOOL ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS4 ends
    D3D12_HEAP_SERIALIZATION_TIER typedef SDWORD
    D3D12_HEAP_SERIALIZATION_TIER_0 equ 0
    D3D12_HEAP_SERIALIZATION_TIER_10 equ 10

    D3D12_FEATURE_DATA_SERIALIZATION struct
      NodeIndex UINT ?
      HeapSerializationTier D3D12_HEAP_SERIALIZATION_TIER ?
    D3D12_FEATURE_DATA_SERIALIZATION ends
    D3D12_FEATURE_DATA_CROSS_NODE struct
      SharingTier D3D12_CROSS_NODE_SHARING_TIER ?
      AtomicShaderInstructions BOOL ?
    D3D12_FEATURE_DATA_CROSS_NODE ends
    D3D12_RENDER_PASS_TIER typedef SDWORD
    D3D12_RENDER_PASS_TIER_0 equ 0
    D3D12_RENDER_PASS_TIER_1 equ 1
    D3D12_RENDER_PASS_TIER_2 equ 2

    D3D12_RAYTRACING_TIER typedef SDWORD
    D3D12_RAYTRACING_TIER_NOT_SUPPORTED equ 0
    D3D12_RAYTRACING_TIER_1_0 equ 10
    D3D12_RAYTRACING_TIER_1_1 equ 11

    D3D12_FEATURE_DATA_D3D12_OPTIONS5 struct
      SRVOnlyTiledResourceTier3 BOOL ?
      RenderPassesTier D3D12_RENDER_PASS_TIER ?
      RaytracingTier D3D12_RAYTRACING_TIER ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS5 ends
    D3D12_VARIABLE_SHADING_RATE_TIER typedef SDWORD
    D3D12_VARIABLE_SHADING_RATE_TIER_NOT_SUPPORTED equ 0
    D3D12_VARIABLE_SHADING_RATE_TIER_1 equ 1
    D3D12_VARIABLE_SHADING_RATE_TIER_2 equ 2

    D3D12_FEATURE_DATA_D3D12_OPTIONS6 struct
      AdditionalShadingRatesSupported BOOL ?
      PerPrimitiveShadingRateSupportedWithViewportIndexing BOOL ?
      VariableShadingRateTier D3D12_VARIABLE_SHADING_RATE_TIER ?
      ShadingRateImageTileSize UINT ?
      BackgroundProcessingSupported BOOL ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS6 ends
    D3D12_MESH_SHADER_TIER typedef SDWORD
    D3D12_MESH_SHADER_TIER_NOT_SUPPORTED equ 0
    D3D12_MESH_SHADER_TIER_1 equ 10

    D3D12_SAMPLER_FEEDBACK_TIER typedef SDWORD
    D3D12_SAMPLER_FEEDBACK_TIER_NOT_SUPPORTED equ 0
    D3D12_SAMPLER_FEEDBACK_TIER_0_9 equ 90
    D3D12_SAMPLER_FEEDBACK_TIER_1_0 equ 100

    D3D12_FEATURE_DATA_D3D12_OPTIONS7 struct
      MeshShaderTier D3D12_MESH_SHADER_TIER ?
      SamplerFeedbackTier D3D12_SAMPLER_FEEDBACK_TIER ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS7 ends
    D3D12_FEATURE_DATA_QUERY_META_COMMAND struct
      CommandId GUID <>
      NodeMask UINT ?
      pQueryInputData POINTER ?
      QueryInputDataSizeInBytes SIZE_T ?
      pQueryOutputData POINTER ?
      QueryOutputDataSizeInBytes SIZE_T ?
    D3D12_FEATURE_DATA_QUERY_META_COMMAND ends
    D3D12_FEATURE_DATA_D3D12_OPTIONS8 struct
      UnalignedBlockTexturesSupported BOOL ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS8 ends
    D3D12_WAVE_MMA_TIER typedef SDWORD
    D3D12_WAVE_MMA_TIER_NOT_SUPPORTED equ 0
    D3D12_WAVE_MMA_TIER_1_0 equ 10

    D3D12_FEATURE_DATA_D3D12_OPTIONS9 struct
      MeshShaderPipelineStatsSupported BOOL ?
      MeshShaderSupportsFullRangeRenderTargetArrayIndex BOOL ?
      AtomicInt64OnTypedResourceSupported BOOL ?
      AtomicInt64OnGroupSharedSupported BOOL ?
      DerivativesInMeshAndAmplificationShadersSupported BOOL ?
      WaveMMATier D3D12_WAVE_MMA_TIER ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS9 ends
    D3D12_FEATURE_DATA_D3D12_OPTIONS10 struct
      VariableRateShadingSumCombinerSupported BOOL ?
      MeshShaderPerPrimitiveShadingRateSupported BOOL ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS10 ends
    D3D12_FEATURE_DATA_D3D12_OPTIONS11 struct
      AtomicInt64OnDescriptorHeapResourceSupported BOOL ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS11 ends
    D3D12_TRI_STATE typedef SDWORD
    D3D12_TRI_STATE_UNKNOWN equ -1
    D3D12_TRI_STATE_FALSE equ 0
    D3D12_TRI_STATE_TRUE equ 1

    D3D12_FEATURE_DATA_D3D12_OPTIONS12 struct
      MSPrimitivesPipelineStatisticIncludesCulledPrimitives D3D12_TRI_STATE ?
      EnhancedBarriersSupported BOOL ?
      RelaxedFormatCastingSupported BOOL ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS12 ends
    D3D12_FEATURE_DATA_D3D12_OPTIONS13 struct
      UnrestrictedBufferTextureCopyPitchSupported BOOL ?
      UnrestrictedVertexElementAlignmentSupported BOOL ?
      InvertedViewportHeightFlipsYSupported BOOL ?
      InvertedViewportDepthFlipsZSupported BOOL ?
      TextureCopyBetweenDimensionsSupported BOOL ?
      AlphaBlendFactorSupported BOOL ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS13 ends
    D3D12_FEATURE_DATA_D3D12_OPTIONS19 struct
      MismatchingOutputDimensionsSupported BOOL ?
      SupportedSampleCountsWithNoOutputs UINT ?
      PointSamplingAddressesNeverRoundUp BOOL ?
      RasterizerDesc2Supported BOOL ?
      NarrowQuadrilateralLinesSupported BOOL ?
      AnisoFilterWithPointMipSupported BOOL ?
      MaxSamplerDescriptorHeapSize UINT ?
      MaxSamplerDescriptorHeapSizeWithStaticSamplers UINT ?
      MaxViewDescriptorHeapSize UINT ?
      ComputeOnlyCustomHeapSupported BOOL ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS19 ends
    D3D12_FEATURE_DATA_D3D12_OPTIONS20 struct
      ComputeOnlyWriteWatchSupported BOOL ?
    D3D12_FEATURE_DATA_D3D12_OPTIONS20 ends
    D3D12_RESOURCE_ALLOCATION_INFO struct
      SizeInBytes UINT64 ?
      Alignment UINT64 ?
    D3D12_RESOURCE_ALLOCATION_INFO ends
    D3D12_RESOURCE_ALLOCATION_INFO1 struct
      Offset_ UINT64 ?
      Alignment UINT64 ?
      SizeInBytes UINT64 ?
    D3D12_RESOURCE_ALLOCATION_INFO1 ends
    D3D12_HEAP_TYPE typedef SDWORD
    D3D12_HEAP_TYPE_DEFAULT equ 1
    D3D12_HEAP_TYPE_UPLOAD equ 2
    D3D12_HEAP_TYPE_READBACK equ 3
    D3D12_HEAP_TYPE_CUSTOM equ 4

    D3D12_CPU_PAGE_PROPERTY typedef SDWORD
    D3D12_CPU_PAGE_PROPERTY_UNKNOWN equ 0
    D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE equ 1
    D3D12_CPU_PAGE_PROPERTY_WRITE_COMBINE equ 2
    D3D12_CPU_PAGE_PROPERTY_WRITE_BACK equ 3

    D3D12_MEMORY_POOL typedef SDWORD
    D3D12_MEMORY_POOL_UNKNOWN equ 0
    D3D12_MEMORY_POOL_L0 equ 1
    D3D12_MEMORY_POOL_L1 equ 2

    D3D12_HEAP_PROPERTIES struct
      Type_ D3D12_HEAP_TYPE ?
      CPUPageProperty D3D12_CPU_PAGE_PROPERTY ?
      MemoryPoolPreference D3D12_MEMORY_POOL ?
      CreationNodeMask UINT ?
      VisibleNodeMask UINT ?
    D3D12_HEAP_PROPERTIES ends
    D3D12_HEAP_FLAGS typedef SDWORD
    D3D12_HEAP_FLAG_NONE equ 0
    D3D12_HEAP_FLAG_SHARED equ 1h
    D3D12_HEAP_FLAG_DENY_BUFFERS equ 4h
    D3D12_HEAP_FLAG_ALLOW_DISPLAY equ 8h
    D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER equ 20h
    D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES equ 40h
    D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES equ 80h
    D3D12_HEAP_FLAG_HARDWARE_PROTECTED equ 100h
    D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH equ 200h
    D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS equ 400h
    D3D12_HEAP_FLAG_CREATE_NOT_RESIDENT equ 800h
    D3D12_HEAP_FLAG_CREATE_NOT_ZEROED equ 1000h
    D3D12_HEAP_FLAG_ALLOW_ALL_BUFFERS_AND_TEXTURES equ 0
    D3D12_HEAP_FLAG_ALLOW_ONLY_BUFFERS equ 0c0h
    D3D12_HEAP_FLAG_ALLOW_ONLY_NON_RT_DS_TEXTURES equ 44h
    D3D12_HEAP_FLAG_ALLOW_ONLY_RT_DS_TEXTURES equ 84h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_HEAP_FLAGS)
    D3D12_HEAP_DESC struct
      SizeInBytes UINT64 ?
      Properties D3D12_HEAP_PROPERTIES <>
      Alignment UINT64 ?
      Flags D3D12_HEAP_FLAGS ?
    D3D12_HEAP_DESC ends
    D3D12_RESOURCE_DIMENSION typedef SDWORD
    D3D12_RESOURCE_DIMENSION_UNKNOWN equ 0
    D3D12_RESOURCE_DIMENSION_BUFFER equ 1
    D3D12_RESOURCE_DIMENSION_TEXTURE1D equ 2
    D3D12_RESOURCE_DIMENSION_TEXTURE2D equ 3
    D3D12_RESOURCE_DIMENSION_TEXTURE3D equ 4

    D3D12_TEXTURE_LAYOUT typedef SDWORD
    D3D12_TEXTURE_LAYOUT_UNKNOWN equ 0
    D3D12_TEXTURE_LAYOUT_ROW_MAJOR equ 1
    D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE equ 2
    D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE equ 3

    D3D12_RESOURCE_FLAGS typedef SDWORD
    D3D12_RESOURCE_FLAG_NONE equ 0
    D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET equ 1h
    D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL equ 2h
    D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS equ 4h
    D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE equ 8h
    D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER equ 10h
    D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS equ 20h
    D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY equ 40h
    D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY equ 80h
    D3D12_RESOURCE_FLAG_RAYTRACING_ACCELERATION_STRUCTURE equ 100h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_RESOURCE_FLAGS)
    D3D12_MIP_REGION struct
      Width_ UINT ?
      Height UINT ?
      Depth UINT ?
    D3D12_MIP_REGION ends
    D3D12_RESOURCE_DESC struct
      Dimension D3D12_RESOURCE_DIMENSION ?
      Alignment UINT64 ?
      Width_ UINT64 ?
      Height UINT ?
      DepthOrArraySize UINT16 ?
      MipLevels UINT16 ?
      Format DXGI_FORMAT ?
      SampleDesc DXGI_SAMPLE_DESC <>
      Layout D3D12_TEXTURE_LAYOUT ?
      Flags D3D12_RESOURCE_FLAGS ?
    D3D12_RESOURCE_DESC ends
    D3D12_RESOURCE_DESC1 struct
      Dimension D3D12_RESOURCE_DIMENSION ?
      Alignment UINT64 ?
      Width_ UINT64 ?
      Height UINT ?
      DepthOrArraySize UINT16 ?
      MipLevels UINT16 ?
      Format DXGI_FORMAT ?
      SampleDesc DXGI_SAMPLE_DESC <>
      Layout D3D12_TEXTURE_LAYOUT ?
      Flags D3D12_RESOURCE_FLAGS ?
      SamplerFeedbackMipRegion D3D12_MIP_REGION <>
    D3D12_RESOURCE_DESC1 ends
    D3D12_DEPTH_STENCIL_VALUE struct
      Depth FLOAT ?
      Stencil UINT8 ?
    D3D12_DEPTH_STENCIL_VALUE ends
    D3D12_CLEAR_VALUE struct
      Format DXGI_FORMAT ?
      union
        Color FLOAT 4 dup (?)
        DepthStencil D3D12_DEPTH_STENCIL_VALUE <>
      ends
    D3D12_CLEAR_VALUE ends
    D3D12_RANGE struct
      Begin SIZE_T ?
      End_ SIZE_T ?
    D3D12_RANGE ends
    D3D12_RANGE_UINT64 struct
      Begin UINT64 ?
      End_ UINT64 ?
    D3D12_RANGE_UINT64 ends
    D3D12_SUBRESOURCE_RANGE_UINT64 struct
      Subresource UINT ?
      Range D3D12_RANGE_UINT64 <>
    D3D12_SUBRESOURCE_RANGE_UINT64 ends
    D3D12_SUBRESOURCE_INFO struct
      Offset_ UINT64 ?
      RowPitch UINT ?
      DepthPitch UINT ?
    D3D12_SUBRESOURCE_INFO ends
    D3D12_TILED_RESOURCE_COORDINATE struct
      X UINT ?
      Y UINT ?
      Z UINT ?
      Subresource UINT ?
    D3D12_TILED_RESOURCE_COORDINATE ends
    D3D12_TILE_REGION_SIZE struct
      NumTiles UINT ?
      UseBox BOOL ?
      Width_ UINT ?
      Height UINT16 ?
      Depth UINT16 ?
    D3D12_TILE_REGION_SIZE ends
    D3D12_TILE_RANGE_FLAGS typedef SDWORD
    D3D12_TILE_RANGE_FLAG_NONE equ 0
    D3D12_TILE_RANGE_FLAG_NULL equ 1
    D3D12_TILE_RANGE_FLAG_SKIP equ 2
    D3D12_TILE_RANGE_FLAG_REUSE_SINGLE_TILE equ 4

    D3D12_SUBRESOURCE_TILING struct
      WidthInTiles UINT ?
      HeightInTiles UINT16 ?
      DepthInTiles UINT16 ?
      StartTileIndexInOverallResource UINT ?
    D3D12_SUBRESOURCE_TILING ends
    D3D12_TILE_SHAPE struct
      WidthInTexels UINT ?
      HeightInTexels UINT ?
      DepthInTexels UINT ?
    D3D12_TILE_SHAPE ends
    D3D12_PACKED_MIP_INFO struct
      NumStandardMips UINT8 ?
      NumPackedMips UINT8 ?
      NumTilesForPackedMips UINT ?
      StartTileIndexInOverallResource UINT ?
    D3D12_PACKED_MIP_INFO ends
    D3D12_TILE_MAPPING_FLAGS typedef SDWORD
    D3D12_TILE_MAPPING_FLAG_NONE equ 0
    D3D12_TILE_MAPPING_FLAG_NO_HAZARD equ 1h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_TILE_MAPPING_FLAGS)
    D3D12_TILE_COPY_FLAGS typedef SDWORD
    D3D12_TILE_COPY_FLAG_NONE equ 0
    D3D12_TILE_COPY_FLAG_NO_HAZARD equ 1h
    D3D12_TILE_COPY_FLAG_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE equ 2h
    D3D12_TILE_COPY_FLAG_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER equ 4h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_TILE_COPY_FLAGS)
    D3D12_RESOURCE_STATES typedef SDWORD
    D3D12_RESOURCE_STATE_COMMON equ 0
    D3D12_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER equ 1h
    D3D12_RESOURCE_STATE_INDEX_BUFFER equ 2h
    D3D12_RESOURCE_STATE_RENDER_TARGET equ 4h
    D3D12_RESOURCE_STATE_UNORDERED_ACCESS equ 8h
    D3D12_RESOURCE_STATE_DEPTH_WRITE equ 10h
    D3D12_RESOURCE_STATE_DEPTH_READ equ 20h
    D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE equ 40h
    D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE equ 80h
    D3D12_RESOURCE_STATE_STREAM_OUT equ 100h
    D3D12_RESOURCE_STATE_INDIRECT_ARGUMENT equ 200h
    D3D12_RESOURCE_STATE_COPY_DEST equ 400h
    D3D12_RESOURCE_STATE_COPY_SOURCE equ 800h
    D3D12_RESOURCE_STATE_RESOLVE_DEST equ 1000h
    D3D12_RESOURCE_STATE_RESOLVE_SOURCE equ 2000h
    D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE equ 400000h
    D3D12_RESOURCE_STATE_SHADING_RATE_SOURCE equ 1000000h
    D3D12_RESOURCE_STATE_GENERIC_READ equ
    D3D12_RESOURCE_STATE_ALL_SHADER_RESOURCE equ
    D3D12_RESOURCE_STATE_PRESENT equ 0
    D3D12_RESOURCE_STATE_PREDICATION equ 200h
    D3D12_RESOURCE_STATE_VIDEO_DECODE_READ equ 10000h
    D3D12_RESOURCE_STATE_VIDEO_DECODE_WRITE equ 20000h
    D3D12_RESOURCE_STATE_VIDEO_PROCESS_READ equ 40000h
    D3D12_RESOURCE_STATE_VIDEO_PROCESS_WRITE equ 80000h
    D3D12_RESOURCE_STATE_VIDEO_ENCODE_READ equ 200000h
    D3D12_RESOURCE_STATE_VIDEO_ENCODE_WRITE equ 800000h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_RESOURCE_STATES)
    D3D12_RESOURCE_BARRIER_TYPE typedef SDWORD
    D3D12_RESOURCE_BARRIER_TYPE_TRANSITION equ 0
    D3D12_RESOURCE_BARRIER_TYPE_ALIASING equ
    D3D12_RESOURCE_BARRIER_TYPE_UAV equ

    D3D12_RESOURCE_TRANSITION_BARRIER struct
      pResource POINTER ?
      Subresource UINT ?
      StateBefore D3D12_RESOURCE_STATES ?
      StateAfter D3D12_RESOURCE_STATES ?
    D3D12_RESOURCE_TRANSITION_BARRIER ends
    D3D12_RESOURCE_ALIASING_BARRIER struct
      pResourceBefore POINTER ?
      pResourceAfter POINTER ?
    D3D12_RESOURCE_ALIASING_BARRIER ends
    D3D12_RESOURCE_UAV_BARRIER struct
      pResource POINTER ?
    D3D12_RESOURCE_UAV_BARRIER ends
    D3D12_RESOURCE_BARRIER_FLAGS typedef SDWORD
    D3D12_RESOURCE_BARRIER_FLAG_NONE equ 0
    D3D12_RESOURCE_BARRIER_FLAG_BEGIN_ONLY equ 1h
    D3D12_RESOURCE_BARRIER_FLAG_END_ONLY equ 2h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_RESOURCE_BARRIER_FLAGS)
    D3D12_RESOURCE_BARRIER struct
      Type_ D3D12_RESOURCE_BARRIER_TYPE ?
      Flags D3D12_RESOURCE_BARRIER_FLAGS ?
      union
        Transition D3D12_RESOURCE_TRANSITION_BARRIER <>
        Aliasing D3D12_RESOURCE_ALIASING_BARRIER <>
        UAV D3D12_RESOURCE_UAV_BARRIER <>
      ends
    D3D12_RESOURCE_BARRIER ends
    D3D12_SUBRESOURCE_FOOTPRINT struct
      Format DXGI_FORMAT ?
      Width_ UINT ?
      Height UINT ?
      Depth UINT ?
      RowPitch UINT ?
    D3D12_SUBRESOURCE_FOOTPRINT ends
    D3D12_PLACED_SUBRESOURCE_FOOTPRINT struct
      Offset_ UINT64 ?
      Footprint D3D12_SUBRESOURCE_FOOTPRINT <>
    D3D12_PLACED_SUBRESOURCE_FOOTPRINT ends
    D3D12_TEXTURE_COPY_TYPE typedef SDWORD
    D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX equ 0
    D3D12_TEXTURE_COPY_TYPE_PLACED_FOOTPRINT equ 1

    D3D12_TEXTURE_COPY_LOCATION struct
      pResource POINTER ?
      Type_ D3D12_TEXTURE_COPY_TYPE ?
      union
        PlacedFootprint D3D12_PLACED_SUBRESOURCE_FOOTPRINT <>
        SubresourceIndex UINT ?
      ends
    D3D12_TEXTURE_COPY_LOCATION ends
    D3D12_RESOLVE_MODE typedef SDWORD
    D3D12_RESOLVE_MODE_DECOMPRESS equ 0
    D3D12_RESOLVE_MODE_MIN equ 1
    D3D12_RESOLVE_MODE_MAX equ 2
    D3D12_RESOLVE_MODE_AVERAGE equ 3
    D3D12_RESOLVE_MODE_ENCODE_SAMPLER_FEEDBACK equ 4
    D3D12_RESOLVE_MODE_DECODE_SAMPLER_FEEDBACK equ 5

    D3D12_SAMPLE_POSITION struct
      X INT8 ?
      Y INT8 ?
    D3D12_SAMPLE_POSITION ends
    D3D12_VIEW_INSTANCE_LOCATION struct
      ViewportArrayIndex UINT ?
      RenderTargetArrayIndex UINT ?
    D3D12_VIEW_INSTANCE_LOCATION ends
    D3D12_VIEW_INSTANCING_FLAGS typedef SDWORD
    D3D12_VIEW_INSTANCING_FLAG_NONE equ 0
    D3D12_VIEW_INSTANCING_FLAG_ENABLE_VIEW_INSTANCE_MASKING equ 1h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_VIEW_INSTANCING_FLAGS)
    D3D12_VIEW_INSTANCING_DESC struct
      ViewInstanceCount UINT ?
      pViewInstanceLocations POINTER ?
      Flags D3D12_VIEW_INSTANCING_FLAGS ?
    D3D12_VIEW_INSTANCING_DESC ends
    D3D12_SHADER_COMPONENT_MAPPING typedef SDWORD
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_0 equ 0
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_1 equ 1
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_2 equ 2
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_3 equ 3
    D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_0 equ 4
    D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_1 equ 5

    D3D12_SHADER_COMPONENT_MAPPING_MASK equ 7h
    D3D12_SHADER_COMPONENT_MAPPING_SHIFT equ 3
    D3D12_SHADER_COMPONENT_MAPPING_ALWAYS_SET_BIT_AVOIDING_ZEROMEM_MISTAKES equ (1 shl (D3D12_SHADER_COMPONENT_MAPPING_SHIFT * 4))
    D3D12_ENCODE_SHADER_4_COMPONENT_MAPPING macro Src0, Src1, Src2, Src3
      exitm <((((Src0) and D3D12_SHADER_COMPONENT_MAPPING_MASK) or (((Src1) and D3D12_SHADER_COMPONENT_MAPPING_MASK) shl D3D12_SHADER_COMPONENT_MAPPING_SHIFT) or (((Src2) and D3D12_SHADER_COMPONENT_MAPPING_MASK) shl (D3D12_SHADER_COMPONENT_MAPPING_SHIFT * 2)) or (((Src3) and D3D12_SHADER_COMPONENT_MAPPING_MASK) shl (D3D12_SHADER_COMPONENT_MAPPING_SHIFT * 3)) or D3D12_SHADER_COMPONENT_MAPPING_ALWAYS_SET_BIT_AVOIDING_ZEROMEM_MISTAKES))>
    endm
    D3D12_DECODE_SHADER_4_COMPONENT_MAPPING macro ComponentToExtract, Mapping
      exitm <((D3D12_SHADER_COMPONENT_MAPPING) (Mapping shr (D3D12_SHADER_COMPONENT_MAPPING_SHIFT * ComponentToExtract) and D3D12_SHADER_COMPONENT_MAPPING_MASK))>
    endm
    D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING equ D3D12_ENCODE_SHADER_4_COMPONENT_MAPPING(0, 1, 2, 3)
    D3D12_BUFFER_SRV_FLAGS typedef SDWORD
    D3D12_BUFFER_SRV_FLAG_NONE equ 0
    D3D12_BUFFER_SRV_FLAG_RAW equ 1h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_BUFFER_SRV_FLAGS)
    D3D12_BUFFER_SRV struct
      FirstElement UINT64 ?
      NumElements UINT ?
      StructureByteStride UINT ?
      Flags D3D12_BUFFER_SRV_FLAGS ?
    D3D12_BUFFER_SRV ends
    D3D12_TEX1D_SRV struct
      MostDetailedMip UINT ?
      MipLevels UINT ?
      ResourceMinLODClamp FLOAT ?
    D3D12_TEX1D_SRV ends
    D3D12_TEX1D_ARRAY_SRV struct
      MostDetailedMip UINT ?
      MipLevels UINT ?
      FirstArraySlice UINT ?
      ArraySize UINT ?
      ResourceMinLODClamp FLOAT ?
    D3D12_TEX1D_ARRAY_SRV ends
    D3D12_TEX2D_SRV struct
      MostDetailedMip UINT ?
      MipLevels UINT ?
      PlaneSlice UINT ?
      ResourceMinLODClamp FLOAT ?
    D3D12_TEX2D_SRV ends
    D3D12_TEX2D_ARRAY_SRV struct
      MostDetailedMip UINT ?
      MipLevels UINT ?
      FirstArraySlice UINT ?
      ArraySize UINT ?
      PlaneSlice UINT ?
      ResourceMinLODClamp FLOAT ?
    D3D12_TEX2D_ARRAY_SRV ends
    D3D12_TEX3D_SRV struct
      MostDetailedMip UINT ?
      MipLevels UINT ?
      ResourceMinLODClamp FLOAT ?
    D3D12_TEX3D_SRV ends
    D3D12_TEXCUBE_SRV struct
      MostDetailedMip UINT ?
      MipLevels UINT ?
      ResourceMinLODClamp FLOAT ?
    D3D12_TEXCUBE_SRV ends
    D3D12_TEXCUBE_ARRAY_SRV struct
      MostDetailedMip UINT ?
      MipLevels UINT ?
      First2DArrayFace UINT ?
      NumCubes UINT ?
      ResourceMinLODClamp FLOAT ?
    D3D12_TEXCUBE_ARRAY_SRV ends
    D3D12_TEX2DMS_SRV struct
      UnusedField_NothingToDefine UINT ?
    D3D12_TEX2DMS_SRV ends
    D3D12_TEX2DMS_ARRAY_SRV struct
      FirstArraySlice UINT ?
      ArraySize UINT ?
    D3D12_TEX2DMS_ARRAY_SRV ends
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV struct
      Location D3D12_GPU_VIRTUAL_ADDRESS ?
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV ends
    D3D12_SRV_DIMENSION typedef SDWORD
    D3D12_SRV_DIMENSION_UNKNOWN equ 0
    D3D12_SRV_DIMENSION_BUFFER equ 1
    D3D12_SRV_DIMENSION_TEXTURE1D equ 2
    D3D12_SRV_DIMENSION_TEXTURE1DARRAY equ 3
    D3D12_SRV_DIMENSION_TEXTURE2D equ 4
    D3D12_SRV_DIMENSION_TEXTURE2DARRAY equ 5
    D3D12_SRV_DIMENSION_TEXTURE2DMS equ 6
    D3D12_SRV_DIMENSION_TEXTURE2DMSARRAY equ 7
    D3D12_SRV_DIMENSION_TEXTURE3D equ 8
    D3D12_SRV_DIMENSION_TEXTURECUBE equ 9
    D3D12_SRV_DIMENSION_TEXTURECUBEARRAY equ 10
    D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE equ 11

    D3D12_SHADER_RESOURCE_VIEW_DESC struct
      Format DXGI_FORMAT ?
      ViewDimension D3D12_SRV_DIMENSION ?
      Shader4ComponentMapping UINT ?
      union
        Buffer D3D12_BUFFER_SRV <>
        Texture1D D3D12_TEX1D_SRV <>
        Texture1DArray D3D12_TEX1D_ARRAY_SRV <>
        Texture2D D3D12_TEX2D_SRV <>
        Texture2DArray D3D12_TEX2D_ARRAY_SRV <>
        Texture2DMS D3D12_TEX2DMS_SRV <>
        Texture2DMSArray D3D12_TEX2DMS_ARRAY_SRV <>
        Texture3D D3D12_TEX3D_SRV <>
        TextureCube D3D12_TEXCUBE_SRV <>
        TextureCubeArray D3D12_TEXCUBE_ARRAY_SRV <>
        RaytracingAccelerationStructure D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV <>
      ends
    D3D12_SHADER_RESOURCE_VIEW_DESC ends
    D3D12_CONSTANT_BUFFER_VIEW_DESC struct
      BufferLocation D3D12_GPU_VIRTUAL_ADDRESS ?
      SizeInBytes UINT ?
    D3D12_CONSTANT_BUFFER_VIEW_DESC ends
    D3D12_FILTER typedef SDWORD
    D3D12_FILTER_MIN_MAG_MIP_POINT equ 0
    D3D12_FILTER_MIN_MAG_POINT_MIP_LINEAR equ 1h
    D3D12_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT equ 4h
    D3D12_FILTER_MIN_POINT_MAG_MIP_LINEAR equ 5h
    D3D12_FILTER_MIN_LINEAR_MAG_MIP_POINT equ 10h
    D3D12_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR equ 11h
    D3D12_FILTER_MIN_MAG_LINEAR_MIP_POINT equ 14h
    D3D12_FILTER_MIN_MAG_MIP_LINEAR equ 15h
    D3D12_FILTER_ANISOTROPIC equ 55h
    D3D12_FILTER_COMPARISON_MIN_MAG_MIP_POINT equ 80h
    D3D12_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR equ 81h
    D3D12_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT equ 84h
    D3D12_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR equ 85h
    D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT equ 90h
    D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR equ 91h
    D3D12_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT equ 94h
    D3D12_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR equ 95h
    D3D12_FILTER_COMPARISON_ANISOTROPIC equ 0d5h
    D3D12_FILTER_MINIMUM_MIN_MAG_MIP_POINT equ 100h
    D3D12_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR equ 101h
    D3D12_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT equ 104h
    D3D12_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR equ 105h
    D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT equ 110h
    D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR equ 111h
    D3D12_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT equ 114h
    D3D12_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR equ 115h
    D3D12_FILTER_MINIMUM_ANISOTROPIC equ 155h
    D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_POINT equ 180h
    D3D12_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR equ 181h
    D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT equ 184h
    D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR equ 185h
    D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT equ 190h
    D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR equ 191h
    D3D12_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT equ 194h
    D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR equ 195h
    D3D12_FILTER_MAXIMUM_ANISOTROPIC equ 1d5h

    D3D12_FILTER_TYPE typedef SDWORD
    D3D12_FILTER_TYPE_POINT equ 0
    D3D12_FILTER_TYPE_LINEAR equ 1

    D3D12_FILTER_REDUCTION_TYPE typedef SDWORD
    D3D12_FILTER_REDUCTION_TYPE_STANDARD equ 0
    D3D12_FILTER_REDUCTION_TYPE_COMPARISON equ 1
    D3D12_FILTER_REDUCTION_TYPE_MINIMUM equ 2
    D3D12_FILTER_REDUCTION_TYPE_MAXIMUM equ 3

    D3D12_FILTER_REDUCTION_TYPE_MASK equ (3h)
    D3D12_FILTER_REDUCTION_TYPE_SHIFT equ (7)
    D3D12_FILTER_TYPE_MASK equ (3h)
    D3D12_MIN_FILTER_SHIFT equ (4)
    D3D12_MAG_FILTER_SHIFT equ (2)
    D3D12_MIP_FILTER_SHIFT equ (0)
    D3D12_ANISOTROPIC_FILTERING_BIT equ (40h)
    D3D12_ENCODE_BASIC_FILTER macro min, mag, mip, reduction
      exitm <((D3D12_FILTER) ((((min) and D3D12_FILTER_TYPE_MASK) shl D3D12_MIN_FILTER_SHIFT) or (((mag) and D3D12_FILTER_TYPE_MASK) shl D3D12_MAG_FILTER_SHIFT) or (((mip) and D3D12_FILTER_TYPE_MASK) shl D3D12_MIP_FILTER_SHIFT) or (((reduction) and D3D12_FILTER_REDUCTION_TYPE_MASK) shl D3D12_FILTER_REDUCTION_TYPE_SHIFT)))>
    endm
    D3D12_ENCODE_ANISOTROPIC_FILTER macro reduction
      exitm <((D3D12_FILTER) (D3D12_ANISOTROPIC_FILTERING_BIT or D3D12_ENCODE_BASIC_FILTER(D3D12_FILTER_TYPE_LINEAR, D3D12_FILTER_TYPE_LINEAR, D3D12_FILTER_TYPE_LINEAR, reduction)))>
    endm
    D3D12_DECODE_MIN_FILTER macro D3D12Filter
      exitm <((D3D12_FILTER_TYPE) (((D3D12Filter) shr D3D12_MIN_FILTER_SHIFT) and D3D12_FILTER_TYPE_MASK))>
    endm
    D3D12_DECODE_MAG_FILTER macro D3D12Filter
      exitm <((D3D12_FILTER_TYPE) (((D3D12Filter) shr D3D12_MAG_FILTER_SHIFT) and D3D12_FILTER_TYPE_MASK))>
    endm
    D3D12_DECODE_MIP_FILTER macro D3D12Filter
      exitm <((D3D12_FILTER_TYPE) (((D3D12Filter) shr D3D12_MIP_FILTER_SHIFT) and D3D12_FILTER_TYPE_MASK))>
    endm
    D3D12_DECODE_FILTER_REDUCTION macro D3D12Filter
      exitm <((D3D12_FILTER_REDUCTION_TYPE) (((D3D12Filter) shr D3D12_FILTER_REDUCTION_TYPE_SHIFT) and D3D12_FILTER_REDUCTION_TYPE_MASK))>
    endm
    D3D12_DECODE_IS_COMPARISON_FILTER macro D3D12Filter
      exitm <(D3D12_DECODE_FILTER_REDUCTION(D3D12Filter) == D3D12_FILTER_REDUCTION_TYPE_COMPARISON)>
    endm
    D3D12_DECODE_IS_ANISOTROPIC_FILTER macro D3D12Filter
      exitm <(((D3D12Filter) and D3D12_ANISOTROPIC_FILTERING_BIT) and (D3D12_FILTER_TYPE_LINEAR == D3D12_DECODE_MIN_FILTER(D3D12Filter)) and (D3D12_FILTER_TYPE_LINEAR == D3D12_DECODE_MAG_FILTER(D3D12Filter)) and (D3D12_FILTER_TYPE_LINEAR == D3D12_DECODE_MIP_FILTER(D3D12Filter)))>
    endm
    D3D12_TEXTURE_ADDRESS_MODE typedef SDWORD
    D3D12_TEXTURE_ADDRESS_MODE_WRAP equ 1
    D3D12_TEXTURE_ADDRESS_MODE_MIRROR equ 2
    D3D12_TEXTURE_ADDRESS_MODE_CLAMP equ 3
    D3D12_TEXTURE_ADDRESS_MODE_BORDER equ 4
    D3D12_TEXTURE_ADDRESS_MODE_MIRROR_ONCE equ 5

    D3D12_SAMPLER_DESC struct
      Filter D3D12_FILTER ?
      AddressU D3D12_TEXTURE_ADDRESS_MODE ?
      AddressV D3D12_TEXTURE_ADDRESS_MODE ?
      AddressW D3D12_TEXTURE_ADDRESS_MODE ?
      MipLODBias FLOAT ?
      MaxAnisotropy UINT ?
      ComparisonFunc D3D12_COMPARISON_FUNC ?
      BorderColor FLOAT 4 dup (?)
      MinLOD FLOAT ?
      MaxLOD FLOAT ?
    D3D12_SAMPLER_DESC ends
    D3D12_BUFFER_UAV_FLAGS typedef SDWORD
    D3D12_BUFFER_UAV_FLAG_NONE equ 0
    D3D12_BUFFER_UAV_FLAG_RAW equ 1h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_BUFFER_UAV_FLAGS)
    D3D12_BUFFER_UAV struct
      FirstElement UINT64 ?
      NumElements UINT ?
      StructureByteStride UINT ?
      CounterOffsetInBytes UINT64 ?
      Flags D3D12_BUFFER_UAV_FLAGS ?
    D3D12_BUFFER_UAV ends
    D3D12_TEX1D_UAV struct
      MipSlice UINT ?
    D3D12_TEX1D_UAV ends
    D3D12_TEX1D_ARRAY_UAV struct
      MipSlice UINT ?
      FirstArraySlice UINT ?
      ArraySize UINT ?
    D3D12_TEX1D_ARRAY_UAV ends
    D3D12_TEX2D_UAV struct
      MipSlice UINT ?
      PlaneSlice UINT ?
    D3D12_TEX2D_UAV ends
    D3D12_TEX2D_ARRAY_UAV struct
      MipSlice UINT ?
      FirstArraySlice UINT ?
      ArraySize UINT ?
      PlaneSlice UINT ?
    D3D12_TEX2D_ARRAY_UAV ends
    D3D12_TEX3D_UAV struct
      MipSlice UINT ?
      FirstWSlice UINT ?
      WSize UINT ?
    D3D12_TEX3D_UAV ends
    D3D12_UAV_DIMENSION typedef SDWORD
    D3D12_UAV_DIMENSION_UNKNOWN equ 0
    D3D12_UAV_DIMENSION_BUFFER equ 1
    D3D12_UAV_DIMENSION_TEXTURE1D equ 2
    D3D12_UAV_DIMENSION_TEXTURE1DARRAY equ 3
    D3D12_UAV_DIMENSION_TEXTURE2D equ 4
    D3D12_UAV_DIMENSION_TEXTURE2DARRAY equ 5
    D3D12_UAV_DIMENSION_TEXTURE3D equ 8

    D3D12_UNORDERED_ACCESS_VIEW_DESC struct
      Format DXGI_FORMAT ?
      ViewDimension D3D12_UAV_DIMENSION ?
      union
        Buffer D3D12_BUFFER_UAV <>
        Texture1D D3D12_TEX1D_UAV <>
        Texture1DArray D3D12_TEX1D_ARRAY_UAV <>
        Texture2D D3D12_TEX2D_UAV <>
        Texture2DArray D3D12_TEX2D_ARRAY_UAV <>
        Texture3D D3D12_TEX3D_UAV <>
      ends
    D3D12_UNORDERED_ACCESS_VIEW_DESC ends
    D3D12_BUFFER_RTV struct
      FirstElement UINT64 ?
      NumElements UINT ?
    D3D12_BUFFER_RTV ends
    D3D12_TEX1D_RTV struct
      MipSlice UINT ?
    D3D12_TEX1D_RTV ends
    D3D12_TEX1D_ARRAY_RTV struct
      MipSlice UINT ?
      FirstArraySlice UINT ?
      ArraySize UINT ?
    D3D12_TEX1D_ARRAY_RTV ends
    D3D12_TEX2D_RTV struct
      MipSlice UINT ?
      PlaneSlice UINT ?
    D3D12_TEX2D_RTV ends
    D3D12_TEX2DMS_RTV struct
      UnusedField_NothingToDefine UINT ?
    D3D12_TEX2DMS_RTV ends
    D3D12_TEX2D_ARRAY_RTV struct
      MipSlice UINT ?
      FirstArraySlice UINT ?
      ArraySize UINT ?
      PlaneSlice UINT ?
    D3D12_TEX2D_ARRAY_RTV ends
    D3D12_TEX2DMS_ARRAY_RTV struct
      FirstArraySlice UINT ?
      ArraySize UINT ?
    D3D12_TEX2DMS_ARRAY_RTV ends
    D3D12_TEX3D_RTV struct
      MipSlice UINT ?
      FirstWSlice UINT ?
      WSize UINT ?
    D3D12_TEX3D_RTV ends
    D3D12_RTV_DIMENSION typedef SDWORD
    D3D12_RTV_DIMENSION_UNKNOWN equ 0
    D3D12_RTV_DIMENSION_BUFFER equ 1
    D3D12_RTV_DIMENSION_TEXTURE1D equ 2
    D3D12_RTV_DIMENSION_TEXTURE1DARRAY equ 3
    D3D12_RTV_DIMENSION_TEXTURE2D equ 4
    D3D12_RTV_DIMENSION_TEXTURE2DARRAY equ 5
    D3D12_RTV_DIMENSION_TEXTURE2DMS equ 6
    D3D12_RTV_DIMENSION_TEXTURE2DMSARRAY equ 7
    D3D12_RTV_DIMENSION_TEXTURE3D equ 8

    D3D12_RENDER_TARGET_VIEW_DESC struct
      Format DXGI_FORMAT ?
      ViewDimension D3D12_RTV_DIMENSION ?
      union
        Buffer D3D12_BUFFER_RTV <>
        Texture1D D3D12_TEX1D_RTV <>
        Texture1DArray D3D12_TEX1D_ARRAY_RTV <>
        Texture2D D3D12_TEX2D_RTV <>
        Texture2DArray D3D12_TEX2D_ARRAY_RTV <>
        Texture2DMS D3D12_TEX2DMS_RTV <>
        Texture2DMSArray D3D12_TEX2DMS_ARRAY_RTV <>
        Texture3D D3D12_TEX3D_RTV <>
      ends
    D3D12_RENDER_TARGET_VIEW_DESC ends
    D3D12_TEX1D_DSV struct
      MipSlice UINT ?
    D3D12_TEX1D_DSV ends
    D3D12_TEX1D_ARRAY_DSV struct
      MipSlice UINT ?
      FirstArraySlice UINT ?
      ArraySize UINT ?
    D3D12_TEX1D_ARRAY_DSV ends
    D3D12_TEX2D_DSV struct
      MipSlice UINT ?
    D3D12_TEX2D_DSV ends
    D3D12_TEX2D_ARRAY_DSV struct
      MipSlice UINT ?
      FirstArraySlice UINT ?
      ArraySize UINT ?
    D3D12_TEX2D_ARRAY_DSV ends
    D3D12_TEX2DMS_DSV struct
      UnusedField_NothingToDefine UINT ?
    D3D12_TEX2DMS_DSV ends
    D3D12_TEX2DMS_ARRAY_DSV struct
      FirstArraySlice UINT ?
      ArraySize UINT ?
    D3D12_TEX2DMS_ARRAY_DSV ends
    D3D12_DSV_FLAGS typedef SDWORD
    D3D12_DSV_FLAG_NONE equ 0
    D3D12_DSV_FLAG_READ_ONLY_DEPTH equ 1h
    D3D12_DSV_FLAG_READ_ONLY_STENCIL equ 2h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_DSV_FLAGS)
    D3D12_DSV_DIMENSION typedef SDWORD
    D3D12_DSV_DIMENSION_UNKNOWN equ 0
    D3D12_DSV_DIMENSION_TEXTURE1D equ 1
    D3D12_DSV_DIMENSION_TEXTURE1DARRAY equ 2
    D3D12_DSV_DIMENSION_TEXTURE2D equ 3
    D3D12_DSV_DIMENSION_TEXTURE2DARRAY equ 4
    D3D12_DSV_DIMENSION_TEXTURE2DMS equ 5
    D3D12_DSV_DIMENSION_TEXTURE2DMSARRAY equ 6

    D3D12_DEPTH_STENCIL_VIEW_DESC struct
      Format DXGI_FORMAT ?
      ViewDimension D3D12_DSV_DIMENSION ?
      Flags D3D12_DSV_FLAGS ?
      union
        Texture1D D3D12_TEX1D_DSV <>
        Texture1DArray D3D12_TEX1D_ARRAY_DSV <>
        Texture2D D3D12_TEX2D_DSV <>
        Texture2DArray D3D12_TEX2D_ARRAY_DSV <>
        Texture2DMS D3D12_TEX2DMS_DSV <>
        Texture2DMSArray D3D12_TEX2DMS_ARRAY_DSV <>
      ends
    D3D12_DEPTH_STENCIL_VIEW_DESC ends
    D3D12_CLEAR_FLAGS typedef SDWORD
    D3D12_CLEAR_FLAG_DEPTH equ 1h
    D3D12_CLEAR_FLAG_STENCIL equ 2h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_CLEAR_FLAGS)
    D3D12_FENCE_FLAGS typedef SDWORD
    D3D12_FENCE_FLAG_NONE equ 0
    D3D12_FENCE_FLAG_SHARED equ 1h
    D3D12_FENCE_FLAG_SHARED_CROSS_ADAPTER equ 2h
    D3D12_FENCE_FLAG_NON_MONITORED equ 4h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_FENCE_FLAGS)
    D3D12_DESCRIPTOR_HEAP_TYPE typedef SDWORD
    D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV equ 0
    D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER equ
    D3D12_DESCRIPTOR_HEAP_TYPE_RTV equ
    D3D12_DESCRIPTOR_HEAP_TYPE_DSV equ
    D3D12_DESCRIPTOR_HEAP_TYPE_NUM_TYPES equ

    D3D12_DESCRIPTOR_HEAP_FLAGS typedef SDWORD
    D3D12_DESCRIPTOR_HEAP_FLAG_NONE equ 0
    D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE equ 1h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_DESCRIPTOR_HEAP_FLAGS)
    D3D12_DESCRIPTOR_HEAP_DESC struct
      Type_ D3D12_DESCRIPTOR_HEAP_TYPE ?
      NumDescriptors UINT ?
      Flags D3D12_DESCRIPTOR_HEAP_FLAGS ?
      NodeMask UINT ?
    D3D12_DESCRIPTOR_HEAP_DESC ends
    D3D12_DESCRIPTOR_RANGE_TYPE typedef SDWORD
    D3D12_DESCRIPTOR_RANGE_TYPE_SRV equ 0
    D3D12_DESCRIPTOR_RANGE_TYPE_UAV equ
    D3D12_DESCRIPTOR_RANGE_TYPE_CBV equ
    D3D12_DESCRIPTOR_RANGE_TYPE_SAMPLER equ

    D3D12_DESCRIPTOR_RANGE struct
      RangeType D3D12_DESCRIPTOR_RANGE_TYPE ?
      NumDescriptors UINT ?
      BaseShaderRegister UINT ?
      RegisterSpace UINT ?
      OffsetInDescriptorsFromTableStart UINT ?
    D3D12_DESCRIPTOR_RANGE ends
    D3D12_ROOT_DESCRIPTOR_TABLE struct
      NumDescriptorRanges UINT ?
      pDescriptorRanges POINTER ?
    D3D12_ROOT_DESCRIPTOR_TABLE ends
    D3D12_ROOT_CONSTANTS struct
      ShaderRegister UINT ?
      RegisterSpace UINT ?
      Num32BitValues UINT ?
    D3D12_ROOT_CONSTANTS ends
    D3D12_ROOT_DESCRIPTOR struct
      ShaderRegister UINT ?
      RegisterSpace UINT ?
    D3D12_ROOT_DESCRIPTOR ends
    D3D12_SHADER_VISIBILITY typedef SDWORD
    D3D12_SHADER_VISIBILITY_ALL equ 0
    D3D12_SHADER_VISIBILITY_VERTEX equ 1
    D3D12_SHADER_VISIBILITY_HULL equ 2
    D3D12_SHADER_VISIBILITY_DOMAIN equ 3
    D3D12_SHADER_VISIBILITY_GEOMETRY equ 4
    D3D12_SHADER_VISIBILITY_PIXEL equ 5
    D3D12_SHADER_VISIBILITY_AMPLIFICATION equ 6
    D3D12_SHADER_VISIBILITY_MESH equ 7

    D3D12_ROOT_PARAMETER_TYPE typedef SDWORD
    D3D12_ROOT_PARAMETER_TYPE_DESCRIPTOR_TABLE equ 0
    D3D12_ROOT_PARAMETER_TYPE_32BIT_CONSTANTS equ
    D3D12_ROOT_PARAMETER_TYPE_CBV equ
    D3D12_ROOT_PARAMETER_TYPE_SRV equ
    D3D12_ROOT_PARAMETER_TYPE_UAV equ

    D3D12_ROOT_PARAMETER struct
      ParameterType D3D12_ROOT_PARAMETER_TYPE ?
      union
        DescriptorTable D3D12_ROOT_DESCRIPTOR_TABLE <>
        Constants D3D12_ROOT_CONSTANTS <>
        Descriptor D3D12_ROOT_DESCRIPTOR <>
      ends
      ShaderVisibility D3D12_SHADER_VISIBILITY ?
    D3D12_ROOT_PARAMETER ends
    D3D12_ROOT_SIGNATURE_FLAGS typedef SDWORD
    D3D12_ROOT_SIGNATURE_FLAG_NONE equ 0
    D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT equ 1h
    D3D12_ROOT_SIGNATURE_FLAG_DENY_VERTEX_SHADER_ROOT_ACCESS equ 2h
    D3D12_ROOT_SIGNATURE_FLAG_DENY_HULL_SHADER_ROOT_ACCESS equ 4h
    D3D12_ROOT_SIGNATURE_FLAG_DENY_DOMAIN_SHADER_ROOT_ACCESS equ 8h
    D3D12_ROOT_SIGNATURE_FLAG_DENY_GEOMETRY_SHADER_ROOT_ACCESS equ 10h
    D3D12_ROOT_SIGNATURE_FLAG_DENY_PIXEL_SHADER_ROOT_ACCESS equ 20h
    D3D12_ROOT_SIGNATURE_FLAG_ALLOW_STREAM_OUTPUT equ 40h
    D3D12_ROOT_SIGNATURE_FLAG_LOCAL_ROOT_SIGNATURE equ 80h
    D3D12_ROOT_SIGNATURE_FLAG_DENY_AMPLIFICATION_SHADER_ROOT_ACCESS equ 100h
    D3D12_ROOT_SIGNATURE_FLAG_DENY_MESH_SHADER_ROOT_ACCESS equ 200h
    D3D12_ROOT_SIGNATURE_FLAG_CBV_SRV_UAV_HEAP_DIRECTLY_INDEXED equ 400h
    D3D12_ROOT_SIGNATURE_FLAG_SAMPLER_HEAP_DIRECTLY_INDEXED equ 800h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_ROOT_SIGNATURE_FLAGS)
    D3D12_STATIC_BORDER_COLOR typedef SDWORD
    D3D12_STATIC_BORDER_COLOR_TRANSPARENT_BLACK equ 0
    D3D12_STATIC_BORDER_COLOR_OPAQUE_BLACK equ
    D3D12_STATIC_BORDER_COLOR_OPAQUE_WHITE equ

    D3D12_STATIC_SAMPLER_DESC struct
      Filter D3D12_FILTER ?
      AddressU D3D12_TEXTURE_ADDRESS_MODE ?
      AddressV D3D12_TEXTURE_ADDRESS_MODE ?
      AddressW D3D12_TEXTURE_ADDRESS_MODE ?
      MipLODBias FLOAT ?
      MaxAnisotropy UINT ?
      ComparisonFunc D3D12_COMPARISON_FUNC ?
      BorderColor D3D12_STATIC_BORDER_COLOR ?
      MinLOD FLOAT ?
      MaxLOD FLOAT ?
      ShaderRegister UINT ?
      RegisterSpace UINT ?
      ShaderVisibility D3D12_SHADER_VISIBILITY ?
    D3D12_STATIC_SAMPLER_DESC ends
    D3D12_ROOT_SIGNATURE_DESC struct
      NumParameters UINT ?
      pParameters POINTER ?
      NumStaticSamplers UINT ?
      pStaticSamplers POINTER ?
      Flags D3D12_ROOT_SIGNATURE_FLAGS ?
    D3D12_ROOT_SIGNATURE_DESC ends
    D3D12_DESCRIPTOR_RANGE_FLAGS typedef SDWORD
    D3D12_DESCRIPTOR_RANGE_FLAG_NONE equ 0
    D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_VOLATILE equ 1h
    D3D12_DESCRIPTOR_RANGE_FLAG_DATA_VOLATILE equ 2h
    D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE equ 4h
    D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC equ 8h
    D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_STATIC_KEEPING_BUFFER_BOUNDS_CHECKS equ 10000h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_DESCRIPTOR_RANGE_FLAGS)
    D3D12_DESCRIPTOR_RANGE1 struct
      RangeType D3D12_DESCRIPTOR_RANGE_TYPE ?
      NumDescriptors UINT ?
      BaseShaderRegister UINT ?
      RegisterSpace UINT ?
      Flags D3D12_DESCRIPTOR_RANGE_FLAGS ?
      OffsetInDescriptorsFromTableStart UINT ?
    D3D12_DESCRIPTOR_RANGE1 ends
    D3D12_ROOT_DESCRIPTOR_TABLE1 struct
      NumDescriptorRanges UINT ?
      pDescriptorRanges POINTER ?
    D3D12_ROOT_DESCRIPTOR_TABLE1 ends
    D3D12_ROOT_DESCRIPTOR_FLAGS typedef SDWORD
    D3D12_ROOT_DESCRIPTOR_FLAG_NONE equ 0
    D3D12_ROOT_DESCRIPTOR_FLAG_DATA_VOLATILE equ 2h
    D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE equ 4h
    D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC equ 8h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_ROOT_DESCRIPTOR_FLAGS)
    D3D12_ROOT_DESCRIPTOR1 struct
      ShaderRegister UINT ?
      RegisterSpace UINT ?
      Flags D3D12_ROOT_DESCRIPTOR_FLAGS ?
    D3D12_ROOT_DESCRIPTOR1 ends
    D3D12_ROOT_PARAMETER1 struct
      ParameterType D3D12_ROOT_PARAMETER_TYPE ?
      union
        DescriptorTable D3D12_ROOT_DESCRIPTOR_TABLE1 <>
        Constants D3D12_ROOT_CONSTANTS <>
        Descriptor D3D12_ROOT_DESCRIPTOR1 <>
      ends
      ShaderVisibility D3D12_SHADER_VISIBILITY ?
    D3D12_ROOT_PARAMETER1 ends
    D3D12_ROOT_SIGNATURE_DESC1 struct
      NumParameters UINT ?
      pParameters POINTER ?
      NumStaticSamplers UINT ?
      pStaticSamplers POINTER ?
      Flags D3D12_ROOT_SIGNATURE_FLAGS ?
    D3D12_ROOT_SIGNATURE_DESC1 ends
    D3D12_VERSIONED_ROOT_SIGNATURE_DESC struct
      Version D3D_ROOT_SIGNATURE_VERSION ?
      union
        Desc_1_0 D3D12_ROOT_SIGNATURE_DESC <>
        Desc_1_1 D3D12_ROOT_SIGNATURE_DESC1 <>
      ends
    D3D12_VERSIONED_ROOT_SIGNATURE_DESC ends
    externdef __MIDL_itf_d3d12_0000_0001_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0001_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12RootSignatureDeserializer_INTERFACE_DEFINED__
      __ID3D12RootSignatureDeserializer_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12RootSignatureDeserializer:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12RootSignatureDeserializerVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12RootSignatureDeserializerVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12RootSignatureDeserializer, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12RootSignatureDeserializer
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12RootSignatureDeserializer
          DECLSPEC_XFGVIRT(ID3D12RootSignatureDeserializer, GetRootSignatureDesc)
          STD_METHOD GetRootSignatureDesc, :ptr ID3D12RootSignatureDeserializer
          ??Interface equ <>
          END_INTERFACE
        ID3D12RootSignatureDeserializerVtbl ends
        ID3D12RootSignatureDeserializer struct
          lpVtbl POINTER ?
        ID3D12RootSignatureDeserializer ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12VersionedRootSignatureDeserializer_INTERFACE_DEFINED__
      __ID3D12VersionedRootSignatureDeserializer_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12VersionedRootSignatureDeserializer:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12VersionedRootSignatureDeserializerVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12VersionedRootSignatureDeserializerVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12VersionedRootSignatureDeserializer, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12VersionedRootSignatureDeserializer
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12VersionedRootSignatureDeserializer
          DECLSPEC_XFGVIRT(ID3D12VersionedRootSignatureDeserializer, GetRootSignatureDescAtVersion)
          STD_METHOD GetRootSignatureDescAtVersion, :ptr ID3D12VersionedRootSignatureDeserializer, :D3D_ROOT_SIGNATURE_VERSION, :ptr ptr D3D12_VERSIONED_ROOT_SIGNATURE_DESC
          DECLSPEC_XFGVIRT(ID3D12VersionedRootSignatureDeserializer, GetUnconvertedRootSignatureDesc)
          STD_METHOD GetUnconvertedRootSignatureDesc, :ptr ID3D12VersionedRootSignatureDeserializer
          ??Interface equ <>
          END_INTERFACE
        ID3D12VersionedRootSignatureDeserializerVtbl ends
        ID3D12VersionedRootSignatureDeserializer struct
          lpVtbl POINTER ?
        ID3D12VersionedRootSignatureDeserializer ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    TYPE_PFN_D3D12_SERIALIZE_ROOT_SIGNATURE typedef proto WIN_STD_CALL_CONV :ptr D3D12_ROOT_SIGNATURE_DESC, :D3D_ROOT_SIGNATURE_VERSION, :ptr ptr ID3DBlob, :ptr ptr ID3DBlob
    PFN_D3D12_SERIALIZE_ROOT_SIGNATURE typedef ptr TYPE_PFN_D3D12_SERIALIZE_ROOT_SIGNATURE

    D3D12SerializeRootSignature proto WIN_STD_CALL_CONV :ptr D3D12_ROOT_SIGNATURE_DESC, :D3D_ROOT_SIGNATURE_VERSION, :ptr ptr ID3DBlob, :ptr ptr ID3DBlob
    TYPE_PFN_D3D12_CREATE_ROOT_SIGNATURE_DESERIALIZER typedef proto WIN_STD_CALL_CONV :LPCVOID, :SIZE_T, :REFIID, :ptr ptr
    PFN_D3D12_CREATE_ROOT_SIGNATURE_DESERIALIZER typedef ptr TYPE_PFN_D3D12_CREATE_ROOT_SIGNATURE_DESERIALIZER

    D3D12CreateRootSignatureDeserializer proto WIN_STD_CALL_CONV :LPCVOID, :SIZE_T, :REFIID, :ptr ptr
    TYPE_PFN_D3D12_SERIALIZE_VERSIONED_ROOT_SIGNATURE typedef proto WIN_STD_CALL_CONV :ptr D3D12_VERSIONED_ROOT_SIGNATURE_DESC, :ptr ptr ID3DBlob, :ptr ptr ID3DBlob
    PFN_D3D12_SERIALIZE_VERSIONED_ROOT_SIGNATURE typedef ptr TYPE_PFN_D3D12_SERIALIZE_VERSIONED_ROOT_SIGNATURE

    D3D12SerializeVersionedRootSignature proto WIN_STD_CALL_CONV :ptr D3D12_VERSIONED_ROOT_SIGNATURE_DESC, :ptr ptr ID3DBlob, :ptr ptr ID3DBlob
    TYPE_PFN_D3D12_CREATE_VERSIONED_ROOT_SIGNATURE_DESERIALIZER typedef proto WIN_STD_CALL_CONV :LPCVOID, :SIZE_T, :REFIID, :ptr ptr
    PFN_D3D12_CREATE_VERSIONED_ROOT_SIGNATURE_DESERIALIZER typedef ptr TYPE_PFN_D3D12_CREATE_VERSIONED_ROOT_SIGNATURE_DESERIALIZER

    D3D12CreateVersionedRootSignatureDeserializer proto WIN_STD_CALL_CONV :LPCVOID, :SIZE_T, :REFIID, :ptr ptr
    D3D12_CPU_DESCRIPTOR_HANDLE struct
      ptr_ SIZE_T ?
    D3D12_CPU_DESCRIPTOR_HANDLE ends
    D3D12_GPU_DESCRIPTOR_HANDLE struct
      ptr_ UINT64 ?
    D3D12_GPU_DESCRIPTOR_HANDLE ends
    D3D12_DISCARD_REGION struct
      NumRects UINT ?
      pRects POINTER ?
      FirstSubresource UINT ?
      NumSubresources UINT ?
    D3D12_DISCARD_REGION ends
    D3D12_QUERY_HEAP_TYPE typedef SDWORD
    D3D12_QUERY_HEAP_TYPE_OCCLUSION equ 0
    D3D12_QUERY_HEAP_TYPE_TIMESTAMP equ 1
    D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS equ 2
    D3D12_QUERY_HEAP_TYPE_SO_STATISTICS equ 3
    D3D12_QUERY_HEAP_TYPE_VIDEO_DECODE_STATISTICS equ 4
    D3D12_QUERY_HEAP_TYPE_COPY_QUEUE_TIMESTAMP equ 5
    D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS1 equ 7

    D3D12_QUERY_HEAP_DESC struct
      Type_ D3D12_QUERY_HEAP_TYPE ?
      Count UINT ?
      NodeMask UINT ?
    D3D12_QUERY_HEAP_DESC ends
    D3D12_QUERY_TYPE typedef SDWORD
    D3D12_QUERY_TYPE_OCCLUSION equ 0
    D3D12_QUERY_TYPE_BINARY_OCCLUSION equ 1
    D3D12_QUERY_TYPE_TIMESTAMP equ 2
    D3D12_QUERY_TYPE_PIPELINE_STATISTICS equ 3
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM0 equ 4
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM1 equ 5
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM2 equ 6
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM3 equ 7
    D3D12_QUERY_TYPE_VIDEO_DECODE_STATISTICS equ 8
    D3D12_QUERY_TYPE_PIPELINE_STATISTICS1 equ 10

    D3D12_PREDICATION_OP typedef SDWORD
    D3D12_PREDICATION_OP_EQUAL_ZERO equ 0
    D3D12_PREDICATION_OP_NOT_EQUAL_ZERO equ 1

    D3D12_QUERY_DATA_PIPELINE_STATISTICS struct
      IAVertices UINT64 ?
      IAPrimitives UINT64 ?
      VSInvocations UINT64 ?
      GSInvocations UINT64 ?
      GSPrimitives UINT64 ?
      CInvocations UINT64 ?
      CPrimitives UINT64 ?
      PSInvocations UINT64 ?
      HSInvocations UINT64 ?
      DSInvocations UINT64 ?
      CSInvocations UINT64 ?
    D3D12_QUERY_DATA_PIPELINE_STATISTICS ends
    D3D12_QUERY_DATA_PIPELINE_STATISTICS1 struct
      IAVertices UINT64 ?
      IAPrimitives UINT64 ?
      VSInvocations UINT64 ?
      GSInvocations UINT64 ?
      GSPrimitives UINT64 ?
      CInvocations UINT64 ?
      CPrimitives UINT64 ?
      PSInvocations UINT64 ?
      HSInvocations UINT64 ?
      DSInvocations UINT64 ?
      CSInvocations UINT64 ?
      ASInvocations UINT64 ?
      MSInvocations UINT64 ?
      MSPrimitives UINT64 ?
    D3D12_QUERY_DATA_PIPELINE_STATISTICS1 ends
    D3D12_QUERY_DATA_SO_STATISTICS struct
      NumPrimitivesWritten UINT64 ?
      PrimitivesStorageNeeded UINT64 ?
    D3D12_QUERY_DATA_SO_STATISTICS ends
    D3D12_STREAM_OUTPUT_BUFFER_VIEW struct
      BufferLocation D3D12_GPU_VIRTUAL_ADDRESS ?
      SizeInBytes UINT64 ?
      BufferFilledSizeLocation D3D12_GPU_VIRTUAL_ADDRESS ?
    D3D12_STREAM_OUTPUT_BUFFER_VIEW ends
    D3D12_DRAW_ARGUMENTS struct
      VertexCountPerInstance UINT ?
      InstanceCount UINT ?
      StartVertexLocation UINT ?
      StartInstanceLocation UINT ?
    D3D12_DRAW_ARGUMENTS ends
    D3D12_DRAW_INDEXED_ARGUMENTS struct
      IndexCountPerInstance UINT ?
      InstanceCount UINT ?
      StartIndexLocation UINT ?
      BaseVertexLocation INT_ ?
      StartInstanceLocation UINT ?
    D3D12_DRAW_INDEXED_ARGUMENTS ends
    D3D12_DISPATCH_ARGUMENTS struct
      ThreadGroupCountX UINT ?
      ThreadGroupCountY UINT ?
      ThreadGroupCountZ UINT ?
    D3D12_DISPATCH_ARGUMENTS ends
    D3D12_VERTEX_BUFFER_VIEW struct
      BufferLocation D3D12_GPU_VIRTUAL_ADDRESS ?
      SizeInBytes UINT ?
      StrideInBytes UINT ?
    D3D12_VERTEX_BUFFER_VIEW ends
    D3D12_INDEX_BUFFER_VIEW struct
      BufferLocation D3D12_GPU_VIRTUAL_ADDRESS ?
      SizeInBytes UINT ?
      Format DXGI_FORMAT ?
    D3D12_INDEX_BUFFER_VIEW ends
    D3D12_INDIRECT_ARGUMENT_TYPE typedef SDWORD
    D3D12_INDIRECT_ARGUMENT_TYPE_DRAW equ 0
    D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED equ
    D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH equ
    D3D12_INDIRECT_ARGUMENT_TYPE_VERTEX_BUFFER_VIEW equ
    D3D12_INDIRECT_ARGUMENT_TYPE_INDEX_BUFFER_VIEW equ
    D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT equ
    D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT_BUFFER_VIEW equ
    D3D12_INDIRECT_ARGUMENT_TYPE_SHADER_RESOURCE_VIEW equ
    D3D12_INDIRECT_ARGUMENT_TYPE_UNORDERED_ACCESS_VIEW equ
    D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_RAYS equ
    D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_MESH equ

    D3D12_INDIRECT_ARGUMENT_DESC struct
      Type_ D3D12_INDIRECT_ARGUMENT_TYPE ?
      union
        struct VertexBuffer
          Slot UINT ?
        ends
        struct Constant
          RootParameterIndex UINT ?
          DestOffsetIn32BitValues UINT ?
          Num32BitValuesToSet UINT ?
        ends
        struct ConstantBufferView
          RootParameterIndex UINT ?
        ends
        struct ShaderResourceView
          RootParameterIndex UINT ?
        ends
        struct UnorderedAccessView
          RootParameterIndex UINT ?
        ends
      ends
    D3D12_INDIRECT_ARGUMENT_DESC ends
    D3D12_COMMAND_SIGNATURE_DESC struct
      ByteStride UINT ?
      NumArgumentDescs UINT ?
      pArgumentDescs POINTER ?
      NodeMask UINT ?
    D3D12_COMMAND_SIGNATURE_DESC ends
    externdef __MIDL_itf_d3d12_0000_0003_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0003_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12Pageable_INTERFACE_DEFINED__
      __ID3D12Pageable_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Pageable:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12PageableVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12PageableVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Pageable, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Pageable, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Pageable, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Pageable, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Pageable, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12Pageable, :REFIID, :ptr ptr
          ??Interface equ <>
          END_INTERFACE
        ID3D12PageableVtbl ends
        ID3D12Pageable struct
          lpVtbl POINTER ?
        ID3D12Pageable ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12Heap_INTERFACE_DEFINED__
      __ID3D12Heap_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Heap:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12HeapVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12HeapVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Heap, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Heap
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Heap
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Heap, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Heap, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Heap, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Heap, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12Heap, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Heap, GetDesc)
          STD_METHOD GetDesc, :ptr ID3D12Heap, :ptr D3D12_HEAP_DESC
          ??Interface equ <>
          END_INTERFACE
        ID3D12HeapVtbl ends
        ID3D12Heap struct
          lpVtbl POINTER ?
        ID3D12Heap ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12Resource_INTERFACE_DEFINED__
      __ID3D12Resource_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Resource:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12ResourceVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12ResourceVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Resource, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Resource
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Resource
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Resource, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Resource, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Resource, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Resource, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12Resource, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Resource, Map)
          STD_METHOD Map, :ptr ID3D12Resource, :UINT, :ptr D3D12_RANGE, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Resource, Unmap)
          STD_METHOD Unmap, :ptr ID3D12Resource, :UINT, :ptr D3D12_RANGE
          DECLSPEC_XFGVIRT(ID3D12Resource, GetDesc)
          STD_METHOD GetDesc, :ptr ID3D12Resource, :ptr D3D12_RESOURCE_DESC
          DECLSPEC_XFGVIRT(ID3D12Resource, GetGPUVirtualAddress)
          STD_METHOD GetGPUVirtualAddress, :ptr ID3D12Resource
          DECLSPEC_XFGVIRT(ID3D12Resource, WriteToSubresource)
          STD_METHOD WriteToSubresource, :ptr ID3D12Resource, :UINT, :ptr D3D12_BOX, :ptr, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12Resource, ReadFromSubresource)
          STD_METHOD ReadFromSubresource, :ptr ID3D12Resource, :ptr, :UINT, :UINT, :UINT, :ptr D3D12_BOX
          DECLSPEC_XFGVIRT(ID3D12Resource, GetHeapProperties)
          STD_METHOD GetHeapProperties, :ptr ID3D12Resource, :ptr D3D12_HEAP_PROPERTIES, :ptr D3D12_HEAP_FLAGS
          ??Interface equ <>
          END_INTERFACE
        ID3D12ResourceVtbl ends
        ID3D12Resource struct
          lpVtbl POINTER ?
        ID3D12Resource ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12CommandAllocator_INTERFACE_DEFINED__
      __ID3D12CommandAllocator_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12CommandAllocator:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12CommandAllocatorVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12CommandAllocatorVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12CommandAllocator, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12CommandAllocator
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12CommandAllocator
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12CommandAllocator, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12CommandAllocator, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12CommandAllocator, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12CommandAllocator, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12CommandAllocator, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12CommandAllocator, Reset)
          STD_METHOD Reset, :ptr ID3D12CommandAllocator
          ??Interface equ <>
          END_INTERFACE
        ID3D12CommandAllocatorVtbl ends
        ID3D12CommandAllocator struct
          lpVtbl POINTER ?
        ID3D12CommandAllocator ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12Fence_INTERFACE_DEFINED__
      __ID3D12Fence_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Fence:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12FenceVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12FenceVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Fence, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Fence
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Fence
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Fence, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Fence, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Fence, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Fence, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12Fence, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Fence, GetCompletedValue)
          STD_METHOD GetCompletedValue, :ptr ID3D12Fence
          DECLSPEC_XFGVIRT(ID3D12Fence, SetEventOnCompletion)
          STD_METHOD SetEventOnCompletion, :ptr ID3D12Fence, :UINT64, :HANDLE
          DECLSPEC_XFGVIRT(ID3D12Fence, Signal)
          STD_METHOD Signal, :ptr ID3D12Fence, :UINT64
          ??Interface equ <>
          END_INTERFACE
        ID3D12FenceVtbl ends
        ID3D12Fence struct
          lpVtbl POINTER ?
        ID3D12Fence ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12Fence1_INTERFACE_DEFINED__
      __ID3D12Fence1_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Fence1:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12Fence1Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12Fence1Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Fence1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Fence1
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Fence1
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Fence1, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Fence1, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Fence1, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Fence1, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12Fence1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Fence, GetCompletedValue)
          STD_METHOD GetCompletedValue, :ptr ID3D12Fence1
          DECLSPEC_XFGVIRT(ID3D12Fence, SetEventOnCompletion)
          STD_METHOD SetEventOnCompletion, :ptr ID3D12Fence1, :UINT64, :HANDLE
          DECLSPEC_XFGVIRT(ID3D12Fence, Signal)
          STD_METHOD Signal, :ptr ID3D12Fence1, :UINT64
          DECLSPEC_XFGVIRT(ID3D12Fence1, GetCreationFlags)
          STD_METHOD GetCreationFlags, :ptr ID3D12Fence1
          ??Interface equ <>
          END_INTERFACE
        ID3D12Fence1Vtbl ends
        ID3D12Fence1 struct
          lpVtbl POINTER ?
        ID3D12Fence1 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12PipelineState_INTERFACE_DEFINED__
      __ID3D12PipelineState_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12PipelineState:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12PipelineStateVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12PipelineStateVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12PipelineState, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12PipelineState, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12PipelineState, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12PipelineState, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12PipelineState, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12PipelineState, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12PipelineState, GetCachedBlob)
          STD_METHOD GetCachedBlob, :ptr ID3D12PipelineState, :ptr ptr ID3DBlob
          ??Interface equ <>
          END_INTERFACE
        ID3D12PipelineStateVtbl ends
        ID3D12PipelineState struct
          lpVtbl POINTER ?
        ID3D12PipelineState ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12DescriptorHeap_INTERFACE_DEFINED__
      __ID3D12DescriptorHeap_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12DescriptorHeap:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12DescriptorHeapVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12DescriptorHeapVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12DescriptorHeap, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12DescriptorHeap
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12DescriptorHeap
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12DescriptorHeap, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12DescriptorHeap, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12DescriptorHeap, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12DescriptorHeap, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12DescriptorHeap, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12DescriptorHeap, GetDesc)
          STD_METHOD GetDesc, :ptr ID3D12DescriptorHeap, :ptr D3D12_DESCRIPTOR_HEAP_DESC
          DECLSPEC_XFGVIRT(ID3D12DescriptorHeap, GetCPUDescriptorHandleForHeapStart)
          STD_METHOD GetCPUDescriptorHandleForHeapStart, :ptr ID3D12DescriptorHeap, :ptr D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12DescriptorHeap, GetGPUDescriptorHandleForHeapStart)
          STD_METHOD GetGPUDescriptorHandleForHeapStart, :ptr ID3D12DescriptorHeap, :ptr D3D12_GPU_DESCRIPTOR_HANDLE
          ??Interface equ <>
          END_INTERFACE
        ID3D12DescriptorHeapVtbl ends
        ID3D12DescriptorHeap struct
          lpVtbl POINTER ?
        ID3D12DescriptorHeap ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12QueryHeap_INTERFACE_DEFINED__
      __ID3D12QueryHeap_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12QueryHeap:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12QueryHeapVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12QueryHeapVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12QueryHeap, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12QueryHeap
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12QueryHeap
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12QueryHeap, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12QueryHeap, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12QueryHeap, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12QueryHeap, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12QueryHeap, :REFIID, :ptr ptr
          ??Interface equ <>
          END_INTERFACE
        ID3D12QueryHeapVtbl ends
        ID3D12QueryHeap struct
          lpVtbl POINTER ?
        ID3D12QueryHeap ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12CommandSignature_INTERFACE_DEFINED__
      __ID3D12CommandSignature_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12CommandSignature:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12CommandSignatureVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12CommandSignatureVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12CommandSignature, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12CommandSignature
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12CommandSignature
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12CommandSignature, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12CommandSignature, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12CommandSignature, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12CommandSignature, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12CommandSignature, :REFIID, :ptr ptr
          ??Interface equ <>
          END_INTERFACE
        ID3D12CommandSignatureVtbl ends
        ID3D12CommandSignature struct
          lpVtbl POINTER ?
        ID3D12CommandSignature ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12CommandList_INTERFACE_DEFINED__
      __ID3D12CommandList_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12CommandList:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12CommandListVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12CommandListVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12CommandList, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12CommandList
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12CommandList
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12CommandList, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12CommandList, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12CommandList, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12CommandList, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12CommandList, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12CommandList, GetType)
          STD_METHOD GetType, :ptr ID3D12CommandList
          ??Interface equ <>
          END_INTERFACE
        ID3D12CommandListVtbl ends
        ID3D12CommandList struct
          lpVtbl POINTER ?
        ID3D12CommandList ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12GraphicsCommandList_INTERFACE_DEFINED__
      __ID3D12GraphicsCommandList_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12GraphicsCommandList:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12GraphicsCommandListVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12GraphicsCommandListVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12GraphicsCommandList, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12GraphicsCommandList
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12GraphicsCommandList
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12GraphicsCommandList, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12GraphicsCommandList, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12GraphicsCommandList, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12GraphicsCommandList, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12GraphicsCommandList, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12CommandList, GetType)
          STD_METHOD GetType, :ptr ID3D12GraphicsCommandList
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Close)
          STD_METHOD Close, :ptr ID3D12GraphicsCommandList
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Reset)
          STD_METHOD Reset, :ptr ID3D12GraphicsCommandList, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearState)
          STD_METHOD ClearState, :ptr ID3D12GraphicsCommandList, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawInstanced)
          STD_METHOD DrawInstanced, :ptr ID3D12GraphicsCommandList, :UINT, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawIndexedInstanced)
          STD_METHOD DrawIndexedInstanced, :ptr ID3D12GraphicsCommandList, :UINT, :UINT, :UINT, :INT_, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Dispatch)
          STD_METHOD Dispatch, :ptr ID3D12GraphicsCommandList, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyBufferRegion)
          STD_METHOD CopyBufferRegion, :ptr ID3D12GraphicsCommandList, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTextureRegion)
          STD_METHOD CopyTextureRegion, :ptr ID3D12GraphicsCommandList, :ptr D3D12_TEXTURE_COPY_LOCATION, :UINT, :UINT, :UINT, :ptr D3D12_TEXTURE_COPY_LOCATION, :ptr D3D12_BOX
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyResource)
          STD_METHOD CopyResource, :ptr ID3D12GraphicsCommandList, :ptr ID3D12Resource, :ptr ID3D12Resource
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTiles)
          STD_METHOD CopyTiles, :ptr ID3D12GraphicsCommandList, :ptr ID3D12Resource, :ptr D3D12_TILED_RESOURCE_COORDINATE, :ptr D3D12_TILE_REGION_SIZE, :ptr ID3D12Resource, :UINT64, :D3D12_TILE_COPY_FLAGS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveSubresource)
          STD_METHOD ResolveSubresource, :ptr ID3D12GraphicsCommandList, :ptr ID3D12Resource, :UINT, :ptr ID3D12Resource, :UINT, :DXGI_FORMAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetPrimitiveTopology)
          STD_METHOD IASetPrimitiveTopology, :ptr ID3D12GraphicsCommandList, :D3D12_PRIMITIVE_TOPOLOGY
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetViewports)
          STD_METHOD RSSetViewports, :ptr ID3D12GraphicsCommandList, :UINT, :ptr D3D12_VIEWPORT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetScissorRects)
          STD_METHOD RSSetScissorRects, :ptr ID3D12GraphicsCommandList, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetBlendFactor)
          STD_METHOD OMSetBlendFactor, :ptr ID3D12GraphicsCommandList, :ptr FLOAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetStencilRef)
          STD_METHOD OMSetStencilRef, :ptr ID3D12GraphicsCommandList, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPipelineState)
          STD_METHOD SetPipelineState, :ptr ID3D12GraphicsCommandList, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResourceBarrier)
          STD_METHOD ResourceBarrier, :ptr ID3D12GraphicsCommandList, :UINT, :ptr D3D12_RESOURCE_BARRIER
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteBundle)
          STD_METHOD ExecuteBundle, :ptr ID3D12GraphicsCommandList, :ptr ID3D12GraphicsCommandList
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetDescriptorHeaps)
          STD_METHOD SetDescriptorHeaps, :ptr ID3D12GraphicsCommandList, :UINT, :ptr ptr ID3D12DescriptorHeap
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootSignature)
          STD_METHOD SetComputeRootSignature, :ptr ID3D12GraphicsCommandList, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootSignature)
          STD_METHOD SetGraphicsRootSignature, :ptr ID3D12GraphicsCommandList, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootDescriptorTable)
          STD_METHOD SetComputeRootDescriptorTable, :ptr ID3D12GraphicsCommandList, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootDescriptorTable)
          STD_METHOD SetGraphicsRootDescriptorTable, :ptr ID3D12GraphicsCommandList, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstant)
          STD_METHOD SetComputeRoot32BitConstant, :ptr ID3D12GraphicsCommandList, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstant)
          STD_METHOD SetGraphicsRoot32BitConstant, :ptr ID3D12GraphicsCommandList, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstants)
          STD_METHOD SetComputeRoot32BitConstants, :ptr ID3D12GraphicsCommandList, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstants)
          STD_METHOD SetGraphicsRoot32BitConstants, :ptr ID3D12GraphicsCommandList, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootConstantBufferView)
          STD_METHOD SetComputeRootConstantBufferView, :ptr ID3D12GraphicsCommandList, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootConstantBufferView)
          STD_METHOD SetGraphicsRootConstantBufferView, :ptr ID3D12GraphicsCommandList, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootShaderResourceView)
          STD_METHOD SetComputeRootShaderResourceView, :ptr ID3D12GraphicsCommandList, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootShaderResourceView)
          STD_METHOD SetGraphicsRootShaderResourceView, :ptr ID3D12GraphicsCommandList, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootUnorderedAccessView)
          STD_METHOD SetComputeRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootUnorderedAccessView)
          STD_METHOD SetGraphicsRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetIndexBuffer)
          STD_METHOD IASetIndexBuffer, :ptr ID3D12GraphicsCommandList, :ptr D3D12_INDEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetVertexBuffers)
          STD_METHOD IASetVertexBuffers, :ptr ID3D12GraphicsCommandList, :UINT, :UINT, :ptr D3D12_VERTEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SOSetTargets)
          STD_METHOD SOSetTargets, :ptr ID3D12GraphicsCommandList, :UINT, :UINT, :ptr D3D12_STREAM_OUTPUT_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetRenderTargets)
          STD_METHOD OMSetRenderTargets, :ptr ID3D12GraphicsCommandList, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :BOOL, :ptr D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearDepthStencilView)
          STD_METHOD ClearDepthStencilView, :ptr ID3D12GraphicsCommandList, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CLEAR_FLAGS, :FLOAT, :UINT8, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearRenderTargetView)
          STD_METHOD ClearRenderTargetView, :ptr ID3D12GraphicsCommandList, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewUint)
          STD_METHOD ClearUnorderedAccessViewUint, :ptr ID3D12GraphicsCommandList, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr UINT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewFloat)
          STD_METHOD ClearUnorderedAccessViewFloat, :ptr ID3D12GraphicsCommandList, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DiscardResource)
          STD_METHOD DiscardResource, :ptr ID3D12GraphicsCommandList, :ptr ID3D12Resource, :ptr D3D12_DISCARD_REGION
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginQuery)
          STD_METHOD BeginQuery, :ptr ID3D12GraphicsCommandList, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndQuery)
          STD_METHOD EndQuery, :ptr ID3D12GraphicsCommandList, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveQueryData)
          STD_METHOD ResolveQueryData, :ptr ID3D12GraphicsCommandList, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT, :UINT, :ptr ID3D12Resource, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPredication)
          STD_METHOD SetPredication, :ptr ID3D12GraphicsCommandList, :ptr ID3D12Resource, :UINT64, :D3D12_PREDICATION_OP
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetMarker)
          STD_METHOD SetMarker, :ptr ID3D12GraphicsCommandList, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginEvent)
          STD_METHOD BeginEvent, :ptr ID3D12GraphicsCommandList, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndEvent)
          STD_METHOD EndEvent, :ptr ID3D12GraphicsCommandList
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteIndirect)
          STD_METHOD ExecuteIndirect, :ptr ID3D12GraphicsCommandList, :ptr ID3D12CommandSignature, :UINT, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64
          ??Interface equ <>
          END_INTERFACE
        ID3D12GraphicsCommandListVtbl ends
        ID3D12GraphicsCommandList struct
          lpVtbl POINTER ?
        ID3D12GraphicsCommandList ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12GraphicsCommandList1_INTERFACE_DEFINED__
      __ID3D12GraphicsCommandList1_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12GraphicsCommandList1:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12GraphicsCommandList1Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12GraphicsCommandList1Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12GraphicsCommandList1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12GraphicsCommandList1
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12GraphicsCommandList1
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12GraphicsCommandList1, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12GraphicsCommandList1, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12GraphicsCommandList1, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12GraphicsCommandList1, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12GraphicsCommandList1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12CommandList, GetType)
          STD_METHOD GetType, :ptr ID3D12GraphicsCommandList1
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Close)
          STD_METHOD Close, :ptr ID3D12GraphicsCommandList1
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Reset)
          STD_METHOD Reset, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearState)
          STD_METHOD ClearState, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawInstanced)
          STD_METHOD DrawInstanced, :ptr ID3D12GraphicsCommandList1, :UINT, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawIndexedInstanced)
          STD_METHOD DrawIndexedInstanced, :ptr ID3D12GraphicsCommandList1, :UINT, :UINT, :UINT, :INT_, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Dispatch)
          STD_METHOD Dispatch, :ptr ID3D12GraphicsCommandList1, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyBufferRegion)
          STD_METHOD CopyBufferRegion, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTextureRegion)
          STD_METHOD CopyTextureRegion, :ptr ID3D12GraphicsCommandList1, :ptr D3D12_TEXTURE_COPY_LOCATION, :UINT, :UINT, :UINT, :ptr D3D12_TEXTURE_COPY_LOCATION, :ptr D3D12_BOX
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyResource)
          STD_METHOD CopyResource, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12Resource, :ptr ID3D12Resource
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTiles)
          STD_METHOD CopyTiles, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12Resource, :ptr D3D12_TILED_RESOURCE_COORDINATE, :ptr D3D12_TILE_REGION_SIZE, :ptr ID3D12Resource, :UINT64, :D3D12_TILE_COPY_FLAGS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveSubresource)
          STD_METHOD ResolveSubresource, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12Resource, :UINT, :ptr ID3D12Resource, :UINT, :DXGI_FORMAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetPrimitiveTopology)
          STD_METHOD IASetPrimitiveTopology, :ptr ID3D12GraphicsCommandList1, :D3D12_PRIMITIVE_TOPOLOGY
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetViewports)
          STD_METHOD RSSetViewports, :ptr ID3D12GraphicsCommandList1, :UINT, :ptr D3D12_VIEWPORT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetScissorRects)
          STD_METHOD RSSetScissorRects, :ptr ID3D12GraphicsCommandList1, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetBlendFactor)
          STD_METHOD OMSetBlendFactor, :ptr ID3D12GraphicsCommandList1, :ptr FLOAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetStencilRef)
          STD_METHOD OMSetStencilRef, :ptr ID3D12GraphicsCommandList1, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPipelineState)
          STD_METHOD SetPipelineState, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResourceBarrier)
          STD_METHOD ResourceBarrier, :ptr ID3D12GraphicsCommandList1, :UINT, :ptr D3D12_RESOURCE_BARRIER
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteBundle)
          STD_METHOD ExecuteBundle, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12GraphicsCommandList
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetDescriptorHeaps)
          STD_METHOD SetDescriptorHeaps, :ptr ID3D12GraphicsCommandList1, :UINT, :ptr ptr ID3D12DescriptorHeap
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootSignature)
          STD_METHOD SetComputeRootSignature, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootSignature)
          STD_METHOD SetGraphicsRootSignature, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootDescriptorTable)
          STD_METHOD SetComputeRootDescriptorTable, :ptr ID3D12GraphicsCommandList1, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootDescriptorTable)
          STD_METHOD SetGraphicsRootDescriptorTable, :ptr ID3D12GraphicsCommandList1, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstant)
          STD_METHOD SetComputeRoot32BitConstant, :ptr ID3D12GraphicsCommandList1, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstant)
          STD_METHOD SetGraphicsRoot32BitConstant, :ptr ID3D12GraphicsCommandList1, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstants)
          STD_METHOD SetComputeRoot32BitConstants, :ptr ID3D12GraphicsCommandList1, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstants)
          STD_METHOD SetGraphicsRoot32BitConstants, :ptr ID3D12GraphicsCommandList1, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootConstantBufferView)
          STD_METHOD SetComputeRootConstantBufferView, :ptr ID3D12GraphicsCommandList1, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootConstantBufferView)
          STD_METHOD SetGraphicsRootConstantBufferView, :ptr ID3D12GraphicsCommandList1, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootShaderResourceView)
          STD_METHOD SetComputeRootShaderResourceView, :ptr ID3D12GraphicsCommandList1, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootShaderResourceView)
          STD_METHOD SetGraphicsRootShaderResourceView, :ptr ID3D12GraphicsCommandList1, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootUnorderedAccessView)
          STD_METHOD SetComputeRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList1, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootUnorderedAccessView)
          STD_METHOD SetGraphicsRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList1, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetIndexBuffer)
          STD_METHOD IASetIndexBuffer, :ptr ID3D12GraphicsCommandList1, :ptr D3D12_INDEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetVertexBuffers)
          STD_METHOD IASetVertexBuffers, :ptr ID3D12GraphicsCommandList1, :UINT, :UINT, :ptr D3D12_VERTEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SOSetTargets)
          STD_METHOD SOSetTargets, :ptr ID3D12GraphicsCommandList1, :UINT, :UINT, :ptr D3D12_STREAM_OUTPUT_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetRenderTargets)
          STD_METHOD OMSetRenderTargets, :ptr ID3D12GraphicsCommandList1, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :BOOL, :ptr D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearDepthStencilView)
          STD_METHOD ClearDepthStencilView, :ptr ID3D12GraphicsCommandList1, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CLEAR_FLAGS, :FLOAT, :UINT8, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearRenderTargetView)
          STD_METHOD ClearRenderTargetView, :ptr ID3D12GraphicsCommandList1, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewUint)
          STD_METHOD ClearUnorderedAccessViewUint, :ptr ID3D12GraphicsCommandList1, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr UINT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewFloat)
          STD_METHOD ClearUnorderedAccessViewFloat, :ptr ID3D12GraphicsCommandList1, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DiscardResource)
          STD_METHOD DiscardResource, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12Resource, :ptr D3D12_DISCARD_REGION
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginQuery)
          STD_METHOD BeginQuery, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndQuery)
          STD_METHOD EndQuery, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveQueryData)
          STD_METHOD ResolveQueryData, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT, :UINT, :ptr ID3D12Resource, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPredication)
          STD_METHOD SetPredication, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12Resource, :UINT64, :D3D12_PREDICATION_OP
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetMarker)
          STD_METHOD SetMarker, :ptr ID3D12GraphicsCommandList1, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginEvent)
          STD_METHOD BeginEvent, :ptr ID3D12GraphicsCommandList1, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndEvent)
          STD_METHOD EndEvent, :ptr ID3D12GraphicsCommandList1
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteIndirect)
          STD_METHOD ExecuteIndirect, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12CommandSignature, :UINT, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, AtomicCopyBufferUINT)
          STD_METHOD AtomicCopyBufferUINT, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT, :ptr ptr ID3D12Resource, :ptr D3D12_SUBRESOURCE_RANGE_UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, AtomicCopyBufferUINT64)
          STD_METHOD AtomicCopyBufferUINT64, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT, :ptr ptr ID3D12Resource, :ptr D3D12_SUBRESOURCE_RANGE_UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, OMSetDepthBounds)
          STD_METHOD OMSetDepthBounds, :ptr ID3D12GraphicsCommandList1, :FLOAT, :FLOAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, SetSamplePositions)
          STD_METHOD SetSamplePositions, :ptr ID3D12GraphicsCommandList1, :UINT, :UINT, :ptr D3D12_SAMPLE_POSITION
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, ResolveSubresourceRegion)
          STD_METHOD ResolveSubresourceRegion, :ptr ID3D12GraphicsCommandList1, :ptr ID3D12Resource, :UINT, :UINT, :UINT, :ptr ID3D12Resource, :UINT, :ptr D3D12_RECT, :DXGI_FORMAT, :D3D12_RESOLVE_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, SetViewInstanceMask)
          STD_METHOD SetViewInstanceMask, :ptr ID3D12GraphicsCommandList1, :UINT
          ??Interface equ <>
          END_INTERFACE
        ID3D12GraphicsCommandList1Vtbl ends
        ID3D12GraphicsCommandList1 struct
          lpVtbl POINTER ?
        ID3D12GraphicsCommandList1 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_WRITEBUFFERIMMEDIATE_PARAMETER struct
      Dest D3D12_GPU_VIRTUAL_ADDRESS ?
      Value UINT32 ?
    D3D12_WRITEBUFFERIMMEDIATE_PARAMETER ends
    D3D12_WRITEBUFFERIMMEDIATE_MODE typedef SDWORD
    D3D12_WRITEBUFFERIMMEDIATE_MODE_DEFAULT equ 0
    D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_IN equ 1h
    D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_OUT equ 2h

    externdef __MIDL_itf_d3d12_0000_0018_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0018_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12GraphicsCommandList2_INTERFACE_DEFINED__
      __ID3D12GraphicsCommandList2_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12GraphicsCommandList2:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12GraphicsCommandList2Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12GraphicsCommandList2Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12GraphicsCommandList2, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12GraphicsCommandList2
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12GraphicsCommandList2
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12GraphicsCommandList2, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12GraphicsCommandList2, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12GraphicsCommandList2, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12GraphicsCommandList2, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12GraphicsCommandList2, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12CommandList, GetType)
          STD_METHOD GetType, :ptr ID3D12GraphicsCommandList2
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Close)
          STD_METHOD Close, :ptr ID3D12GraphicsCommandList2
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Reset)
          STD_METHOD Reset, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearState)
          STD_METHOD ClearState, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawInstanced)
          STD_METHOD DrawInstanced, :ptr ID3D12GraphicsCommandList2, :UINT, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawIndexedInstanced)
          STD_METHOD DrawIndexedInstanced, :ptr ID3D12GraphicsCommandList2, :UINT, :UINT, :UINT, :INT_, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Dispatch)
          STD_METHOD Dispatch, :ptr ID3D12GraphicsCommandList2, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyBufferRegion)
          STD_METHOD CopyBufferRegion, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTextureRegion)
          STD_METHOD CopyTextureRegion, :ptr ID3D12GraphicsCommandList2, :ptr D3D12_TEXTURE_COPY_LOCATION, :UINT, :UINT, :UINT, :ptr D3D12_TEXTURE_COPY_LOCATION, :ptr D3D12_BOX
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyResource)
          STD_METHOD CopyResource, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12Resource, :ptr ID3D12Resource
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTiles)
          STD_METHOD CopyTiles, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12Resource, :ptr D3D12_TILED_RESOURCE_COORDINATE, :ptr D3D12_TILE_REGION_SIZE, :ptr ID3D12Resource, :UINT64, :D3D12_TILE_COPY_FLAGS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveSubresource)
          STD_METHOD ResolveSubresource, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12Resource, :UINT, :ptr ID3D12Resource, :UINT, :DXGI_FORMAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetPrimitiveTopology)
          STD_METHOD IASetPrimitiveTopology, :ptr ID3D12GraphicsCommandList2, :D3D12_PRIMITIVE_TOPOLOGY
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetViewports)
          STD_METHOD RSSetViewports, :ptr ID3D12GraphicsCommandList2, :UINT, :ptr D3D12_VIEWPORT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetScissorRects)
          STD_METHOD RSSetScissorRects, :ptr ID3D12GraphicsCommandList2, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetBlendFactor)
          STD_METHOD OMSetBlendFactor, :ptr ID3D12GraphicsCommandList2, :ptr FLOAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetStencilRef)
          STD_METHOD OMSetStencilRef, :ptr ID3D12GraphicsCommandList2, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPipelineState)
          STD_METHOD SetPipelineState, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResourceBarrier)
          STD_METHOD ResourceBarrier, :ptr ID3D12GraphicsCommandList2, :UINT, :ptr D3D12_RESOURCE_BARRIER
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteBundle)
          STD_METHOD ExecuteBundle, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12GraphicsCommandList
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetDescriptorHeaps)
          STD_METHOD SetDescriptorHeaps, :ptr ID3D12GraphicsCommandList2, :UINT, :ptr ptr ID3D12DescriptorHeap
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootSignature)
          STD_METHOD SetComputeRootSignature, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootSignature)
          STD_METHOD SetGraphicsRootSignature, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootDescriptorTable)
          STD_METHOD SetComputeRootDescriptorTable, :ptr ID3D12GraphicsCommandList2, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootDescriptorTable)
          STD_METHOD SetGraphicsRootDescriptorTable, :ptr ID3D12GraphicsCommandList2, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstant)
          STD_METHOD SetComputeRoot32BitConstant, :ptr ID3D12GraphicsCommandList2, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstant)
          STD_METHOD SetGraphicsRoot32BitConstant, :ptr ID3D12GraphicsCommandList2, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstants)
          STD_METHOD SetComputeRoot32BitConstants, :ptr ID3D12GraphicsCommandList2, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstants)
          STD_METHOD SetGraphicsRoot32BitConstants, :ptr ID3D12GraphicsCommandList2, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootConstantBufferView)
          STD_METHOD SetComputeRootConstantBufferView, :ptr ID3D12GraphicsCommandList2, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootConstantBufferView)
          STD_METHOD SetGraphicsRootConstantBufferView, :ptr ID3D12GraphicsCommandList2, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootShaderResourceView)
          STD_METHOD SetComputeRootShaderResourceView, :ptr ID3D12GraphicsCommandList2, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootShaderResourceView)
          STD_METHOD SetGraphicsRootShaderResourceView, :ptr ID3D12GraphicsCommandList2, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootUnorderedAccessView)
          STD_METHOD SetComputeRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList2, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootUnorderedAccessView)
          STD_METHOD SetGraphicsRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList2, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetIndexBuffer)
          STD_METHOD IASetIndexBuffer, :ptr ID3D12GraphicsCommandList2, :ptr D3D12_INDEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetVertexBuffers)
          STD_METHOD IASetVertexBuffers, :ptr ID3D12GraphicsCommandList2, :UINT, :UINT, :ptr D3D12_VERTEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SOSetTargets)
          STD_METHOD SOSetTargets, :ptr ID3D12GraphicsCommandList2, :UINT, :UINT, :ptr D3D12_STREAM_OUTPUT_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetRenderTargets)
          STD_METHOD OMSetRenderTargets, :ptr ID3D12GraphicsCommandList2, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :BOOL, :ptr D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearDepthStencilView)
          STD_METHOD ClearDepthStencilView, :ptr ID3D12GraphicsCommandList2, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CLEAR_FLAGS, :FLOAT, :UINT8, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearRenderTargetView)
          STD_METHOD ClearRenderTargetView, :ptr ID3D12GraphicsCommandList2, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewUint)
          STD_METHOD ClearUnorderedAccessViewUint, :ptr ID3D12GraphicsCommandList2, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr UINT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewFloat)
          STD_METHOD ClearUnorderedAccessViewFloat, :ptr ID3D12GraphicsCommandList2, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DiscardResource)
          STD_METHOD DiscardResource, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12Resource, :ptr D3D12_DISCARD_REGION
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginQuery)
          STD_METHOD BeginQuery, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndQuery)
          STD_METHOD EndQuery, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveQueryData)
          STD_METHOD ResolveQueryData, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT, :UINT, :ptr ID3D12Resource, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPredication)
          STD_METHOD SetPredication, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12Resource, :UINT64, :D3D12_PREDICATION_OP
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetMarker)
          STD_METHOD SetMarker, :ptr ID3D12GraphicsCommandList2, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginEvent)
          STD_METHOD BeginEvent, :ptr ID3D12GraphicsCommandList2, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndEvent)
          STD_METHOD EndEvent, :ptr ID3D12GraphicsCommandList2
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteIndirect)
          STD_METHOD ExecuteIndirect, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12CommandSignature, :UINT, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, AtomicCopyBufferUINT)
          STD_METHOD AtomicCopyBufferUINT, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT, :ptr ptr ID3D12Resource, :ptr D3D12_SUBRESOURCE_RANGE_UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, AtomicCopyBufferUINT64)
          STD_METHOD AtomicCopyBufferUINT64, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT, :ptr ptr ID3D12Resource, :ptr D3D12_SUBRESOURCE_RANGE_UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, OMSetDepthBounds)
          STD_METHOD OMSetDepthBounds, :ptr ID3D12GraphicsCommandList2, :FLOAT, :FLOAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, SetSamplePositions)
          STD_METHOD SetSamplePositions, :ptr ID3D12GraphicsCommandList2, :UINT, :UINT, :ptr D3D12_SAMPLE_POSITION
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, ResolveSubresourceRegion)
          STD_METHOD ResolveSubresourceRegion, :ptr ID3D12GraphicsCommandList2, :ptr ID3D12Resource, :UINT, :UINT, :UINT, :ptr ID3D12Resource, :UINT, :ptr D3D12_RECT, :DXGI_FORMAT, :D3D12_RESOLVE_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, SetViewInstanceMask)
          STD_METHOD SetViewInstanceMask, :ptr ID3D12GraphicsCommandList2, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList2, WriteBufferImmediate)
          STD_METHOD WriteBufferImmediate, :ptr ID3D12GraphicsCommandList2, :UINT, :ptr D3D12_WRITEBUFFERIMMEDIATE_PARAMETER, :ptr D3D12_WRITEBUFFERIMMEDIATE_MODE
          ??Interface equ <>
          END_INTERFACE
        ID3D12GraphicsCommandList2Vtbl ends
        ID3D12GraphicsCommandList2 struct
          lpVtbl POINTER ?
        ID3D12GraphicsCommandList2 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12CommandQueue_INTERFACE_DEFINED__
      __ID3D12CommandQueue_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12CommandQueue:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12CommandQueueVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12CommandQueueVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12CommandQueue, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12CommandQueue
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12CommandQueue
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12CommandQueue, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12CommandQueue, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12CommandQueue, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12CommandQueue, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12CommandQueue, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12CommandQueue, UpdateTileMappings)
          STD_METHOD UpdateTileMappings, :ptr ID3D12CommandQueue, :ptr ID3D12Resource, :UINT, :ptr D3D12_TILED_RESOURCE_COORDINATE, :ptr D3D12_TILE_REGION_SIZE, :ptr ID3D12Heap, :UINT, :ptr D3D12_TILE_RANGE_FLAGS, :ptr UINT, :ptr UINT, :D3D12_TILE_MAPPING_FLAGS
          DECLSPEC_XFGVIRT(ID3D12CommandQueue, CopyTileMappings)
          STD_METHOD CopyTileMappings, :ptr ID3D12CommandQueue, :ptr ID3D12Resource, :ptr D3D12_TILED_RESOURCE_COORDINATE, :ptr ID3D12Resource, :ptr D3D12_TILED_RESOURCE_COORDINATE, :ptr D3D12_TILE_REGION_SIZE, :D3D12_TILE_MAPPING_FLAGS
          DECLSPEC_XFGVIRT(ID3D12CommandQueue, ExecuteCommandLists)
          STD_METHOD ExecuteCommandLists, :ptr ID3D12CommandQueue, :UINT, :ptr ptr ID3D12CommandList
          DECLSPEC_XFGVIRT(ID3D12CommandQueue, SetMarker)
          STD_METHOD SetMarker, :ptr ID3D12CommandQueue, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12CommandQueue, BeginEvent)
          STD_METHOD BeginEvent, :ptr ID3D12CommandQueue, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12CommandQueue, EndEvent)
          STD_METHOD EndEvent, :ptr ID3D12CommandQueue
          DECLSPEC_XFGVIRT(ID3D12CommandQueue, Signal)
          STD_METHOD Signal, :ptr ID3D12CommandQueue, :ptr ID3D12Fence, :UINT64
          DECLSPEC_XFGVIRT(ID3D12CommandQueue, Wait)
          STD_METHOD Wait_, :ptr ID3D12CommandQueue, :ptr ID3D12Fence, :UINT64
          DECLSPEC_XFGVIRT(ID3D12CommandQueue, GetTimestampFrequency)
          STD_METHOD GetTimestampFrequency, :ptr ID3D12CommandQueue, :ptr UINT64
          DECLSPEC_XFGVIRT(ID3D12CommandQueue, GetClockCalibration)
          STD_METHOD GetClockCalibration, :ptr ID3D12CommandQueue, :ptr UINT64, :ptr UINT64
          DECLSPEC_XFGVIRT(ID3D12CommandQueue, GetDesc)
          STD_METHOD GetDesc, :ptr ID3D12CommandQueue, :ptr D3D12_COMMAND_QUEUE_DESC
          ??Interface equ <>
          END_INTERFACE
        ID3D12CommandQueueVtbl ends
        ID3D12CommandQueue struct
          lpVtbl POINTER ?
        ID3D12CommandQueue ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifdef __midl
      ;[...]
    endif
    externdef __MIDL_itf_d3d12_0000_0020_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0020_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12Device_INTERFACE_DEFINED__
      __ID3D12Device_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Device:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12DeviceVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12DeviceVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Device, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Device
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Device
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Device, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Device, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Device, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Device, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12Device, GetNodeCount)
          STD_METHOD GetNodeCount, :ptr ID3D12Device
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandQueue)
          STD_METHOD CreateCommandQueue, :ptr ID3D12Device, :ptr D3D12_COMMAND_QUEUE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandAllocator)
          STD_METHOD CreateCommandAllocator, :ptr ID3D12Device, :D3D12_COMMAND_LIST_TYPE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateGraphicsPipelineState)
          STD_METHOD CreateGraphicsPipelineState, :ptr ID3D12Device, :ptr D3D12_GRAPHICS_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateComputePipelineState)
          STD_METHOD CreateComputePipelineState, :ptr ID3D12Device, :ptr D3D12_COMPUTE_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandList)
          STD_METHOD CreateCommandList, :ptr ID3D12Device, :UINT, :D3D12_COMMAND_LIST_TYPE, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CheckFeatureSupport)
          STD_METHOD CheckFeatureSupport, :ptr ID3D12Device, :D3D12_FEATURE, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDescriptorHeap)
          STD_METHOD CreateDescriptorHeap, :ptr ID3D12Device, :ptr D3D12_DESCRIPTOR_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDescriptorHandleIncrementSize)
          STD_METHOD GetDescriptorHandleIncrementSize, :ptr ID3D12Device, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRootSignature)
          STD_METHOD CreateRootSignature, :ptr ID3D12Device, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateConstantBufferView)
          STD_METHOD CreateConstantBufferView, :ptr ID3D12Device, :ptr D3D12_CONSTANT_BUFFER_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateShaderResourceView)
          STD_METHOD CreateShaderResourceView, :ptr ID3D12Device, :ptr ID3D12Resource, :ptr D3D12_SHADER_RESOURCE_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateUnorderedAccessView)
          STD_METHOD CreateUnorderedAccessView, :ptr ID3D12Device, :ptr ID3D12Resource, :ptr ID3D12Resource, :ptr D3D12_UNORDERED_ACCESS_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRenderTargetView)
          STD_METHOD CreateRenderTargetView, :ptr ID3D12Device, :ptr ID3D12Resource, :ptr D3D12_RENDER_TARGET_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDepthStencilView)
          STD_METHOD CreateDepthStencilView, :ptr ID3D12Device, :ptr ID3D12Resource, :ptr D3D12_DEPTH_STENCIL_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSampler)
          STD_METHOD CreateSampler, :ptr ID3D12Device, :ptr D3D12_SAMPLER_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptors)
          STD_METHOD CopyDescriptors, :ptr ID3D12Device, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptorsSimple)
          STD_METHOD CopyDescriptorsSimple, :ptr ID3D12Device, :UINT, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceAllocationInfo)
          STD_METHOD GetResourceAllocationInfo, :ptr ID3D12Device, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC
          DECLSPEC_XFGVIRT(ID3D12Device, GetCustomHeapProperties)
          STD_METHOD GetCustomHeapProperties, :ptr ID3D12Device, :ptr D3D12_HEAP_PROPERTIES, :UINT, :D3D12_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommittedResource)
          STD_METHOD CreateCommittedResource, :ptr ID3D12Device, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateHeap)
          STD_METHOD CreateHeap, :ptr ID3D12Device, :ptr D3D12_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreatePlacedResource)
          STD_METHOD CreatePlacedResource, :ptr ID3D12Device, :ptr ID3D12Heap, :UINT64, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateReservedResource)
          STD_METHOD CreateReservedResource, :ptr ID3D12Device, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSharedHandle)
          STD_METHOD CreateSharedHandle, :ptr ID3D12Device, :ptr ID3D12DeviceChild, :ptr SECURITY_ATTRIBUTES, :DWORD, :LPCWSTR, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandle)
          STD_METHOD OpenSharedHandle, :ptr ID3D12Device, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandleByName)
          STD_METHOD OpenSharedHandleByName, :ptr ID3D12Device, :LPCWSTR, :DWORD, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, MakeResident)
          STD_METHOD MakeResident, :ptr ID3D12Device, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, Evict)
          STD_METHOD Evict, :ptr ID3D12Device, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, CreateFence)
          STD_METHOD CreateFence, :ptr ID3D12Device, :UINT64, :D3D12_FENCE_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDeviceRemovedReason)
          STD_METHOD GetDeviceRemovedReason, :ptr ID3D12Device
          DECLSPEC_XFGVIRT(ID3D12Device, GetCopyableFootprints)
          STD_METHOD GetCopyableFootprints, :ptr ID3D12Device, :ptr D3D12_RESOURCE_DESC, :UINT, :UINT, :UINT64, :ptr D3D12_PLACED_SUBRESOURCE_FOOTPRINT, :ptr UINT, :ptr UINT64, :ptr UINT64
          DECLSPEC_XFGVIRT(ID3D12Device, CreateQueryHeap)
          STD_METHOD CreateQueryHeap, :ptr ID3D12Device, :ptr D3D12_QUERY_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, SetStablePowerState)
          STD_METHOD SetStablePowerState, :ptr ID3D12Device, :BOOL
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandSignature)
          STD_METHOD CreateCommandSignature, :ptr ID3D12Device, :ptr D3D12_COMMAND_SIGNATURE_DESC, :ptr ID3D12RootSignature, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceTiling)
          STD_METHOD GetResourceTiling, :ptr ID3D12Device, :ptr ID3D12Resource, :ptr UINT, :ptr D3D12_PACKED_MIP_INFO, :ptr D3D12_TILE_SHAPE, :ptr UINT, :UINT, :ptr D3D12_SUBRESOURCE_TILING
          DECLSPEC_XFGVIRT(ID3D12Device, GetAdapterLuid)
          STD_METHOD GetAdapterLuid, :ptr ID3D12Device, :ptr LUID
          ??Interface equ <>
          END_INTERFACE
        ID3D12DeviceVtbl ends
        ID3D12Device struct
          lpVtbl POINTER ?
        ID3D12Device ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12PipelineLibrary_INTERFACE_DEFINED__
      __ID3D12PipelineLibrary_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12PipelineLibrary:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12PipelineLibraryVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12PipelineLibraryVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12PipelineLibrary, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12PipelineLibrary
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12PipelineLibrary
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12PipelineLibrary, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12PipelineLibrary, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12PipelineLibrary, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12PipelineLibrary, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12PipelineLibrary, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12PipelineLibrary, StorePipeline)
          STD_METHOD StorePipeline, :ptr ID3D12PipelineLibrary, :LPCWSTR, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12PipelineLibrary, LoadGraphicsPipeline)
          STD_METHOD LoadGraphicsPipeline, :ptr ID3D12PipelineLibrary, :LPCWSTR, :ptr D3D12_GRAPHICS_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12PipelineLibrary, LoadComputePipeline)
          STD_METHOD LoadComputePipeline, :ptr ID3D12PipelineLibrary, :LPCWSTR, :ptr D3D12_COMPUTE_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12PipelineLibrary, GetSerializedSize)
          STD_METHOD GetSerializedSize, :ptr ID3D12PipelineLibrary
          DECLSPEC_XFGVIRT(ID3D12PipelineLibrary, Serialize)
          STD_METHOD Serialize, :ptr ID3D12PipelineLibrary, :ptr, :SIZE_T
          ??Interface equ <>
          END_INTERFACE
        ID3D12PipelineLibraryVtbl ends
        ID3D12PipelineLibrary struct
          lpVtbl POINTER ?
        ID3D12PipelineLibrary ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12PipelineLibrary1_INTERFACE_DEFINED__
      __ID3D12PipelineLibrary1_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12PipelineLibrary1:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12PipelineLibrary1Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12PipelineLibrary1Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12PipelineLibrary1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12PipelineLibrary1
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12PipelineLibrary1
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12PipelineLibrary1, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12PipelineLibrary1, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12PipelineLibrary1, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12PipelineLibrary1, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12PipelineLibrary1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12PipelineLibrary, StorePipeline)
          STD_METHOD StorePipeline, :ptr ID3D12PipelineLibrary1, :LPCWSTR, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12PipelineLibrary, LoadGraphicsPipeline)
          STD_METHOD LoadGraphicsPipeline, :ptr ID3D12PipelineLibrary1, :LPCWSTR, :ptr D3D12_GRAPHICS_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12PipelineLibrary, LoadComputePipeline)
          STD_METHOD LoadComputePipeline, :ptr ID3D12PipelineLibrary1, :LPCWSTR, :ptr D3D12_COMPUTE_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12PipelineLibrary, GetSerializedSize)
          STD_METHOD GetSerializedSize, :ptr ID3D12PipelineLibrary1
          DECLSPEC_XFGVIRT(ID3D12PipelineLibrary, Serialize)
          STD_METHOD Serialize, :ptr ID3D12PipelineLibrary1, :ptr, :SIZE_T
          DECLSPEC_XFGVIRT(ID3D12PipelineLibrary1, LoadPipeline)
          STD_METHOD LoadPipeline, :ptr ID3D12PipelineLibrary1, :LPCWSTR, :ptr D3D12_PIPELINE_STATE_STREAM_DESC, :REFIID, :ptr ptr
          ??Interface equ <>
          END_INTERFACE
        ID3D12PipelineLibrary1Vtbl ends
        ID3D12PipelineLibrary1 struct
          lpVtbl POINTER ?
        ID3D12PipelineLibrary1 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_MULTIPLE_FENCE_WAIT_FLAGS typedef SDWORD
    D3D12_MULTIPLE_FENCE_WAIT_FLAG_NONE equ 0
    D3D12_MULTIPLE_FENCE_WAIT_FLAG_ANY equ 1h
    D3D12_MULTIPLE_FENCE_WAIT_FLAG_ALL equ 0

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_MULTIPLE_FENCE_WAIT_FLAGS)
    D3D12_RESIDENCY_PRIORITY typedef SDWORD
    D3D12_RESIDENCY_PRIORITY_MINIMUM equ 28000000h
    D3D12_RESIDENCY_PRIORITY_LOW equ 50000000h
    D3D12_RESIDENCY_PRIORITY_NORMAL equ 78000000h
    D3D12_RESIDENCY_PRIORITY_HIGH equ 0a0010000h
    D3D12_RESIDENCY_PRIORITY_MAXIMUM equ 0c8000000h

    externdef __MIDL_itf_d3d12_0000_0023_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0023_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12Device1_INTERFACE_DEFINED__
      __ID3D12Device1_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Device1:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12Device1Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12Device1Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Device1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Device1
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Device1
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Device1, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Device1, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Device1, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Device1, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12Device, GetNodeCount)
          STD_METHOD GetNodeCount, :ptr ID3D12Device1
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandQueue)
          STD_METHOD CreateCommandQueue, :ptr ID3D12Device1, :ptr D3D12_COMMAND_QUEUE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandAllocator)
          STD_METHOD CreateCommandAllocator, :ptr ID3D12Device1, :D3D12_COMMAND_LIST_TYPE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateGraphicsPipelineState)
          STD_METHOD CreateGraphicsPipelineState, :ptr ID3D12Device1, :ptr D3D12_GRAPHICS_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateComputePipelineState)
          STD_METHOD CreateComputePipelineState, :ptr ID3D12Device1, :ptr D3D12_COMPUTE_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandList)
          STD_METHOD CreateCommandList, :ptr ID3D12Device1, :UINT, :D3D12_COMMAND_LIST_TYPE, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CheckFeatureSupport)
          STD_METHOD CheckFeatureSupport, :ptr ID3D12Device1, :D3D12_FEATURE, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDescriptorHeap)
          STD_METHOD CreateDescriptorHeap, :ptr ID3D12Device1, :ptr D3D12_DESCRIPTOR_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDescriptorHandleIncrementSize)
          STD_METHOD GetDescriptorHandleIncrementSize, :ptr ID3D12Device1, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRootSignature)
          STD_METHOD CreateRootSignature, :ptr ID3D12Device1, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateConstantBufferView)
          STD_METHOD CreateConstantBufferView, :ptr ID3D12Device1, :ptr D3D12_CONSTANT_BUFFER_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateShaderResourceView)
          STD_METHOD CreateShaderResourceView, :ptr ID3D12Device1, :ptr ID3D12Resource, :ptr D3D12_SHADER_RESOURCE_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateUnorderedAccessView)
          STD_METHOD CreateUnorderedAccessView, :ptr ID3D12Device1, :ptr ID3D12Resource, :ptr ID3D12Resource, :ptr D3D12_UNORDERED_ACCESS_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRenderTargetView)
          STD_METHOD CreateRenderTargetView, :ptr ID3D12Device1, :ptr ID3D12Resource, :ptr D3D12_RENDER_TARGET_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDepthStencilView)
          STD_METHOD CreateDepthStencilView, :ptr ID3D12Device1, :ptr ID3D12Resource, :ptr D3D12_DEPTH_STENCIL_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSampler)
          STD_METHOD CreateSampler, :ptr ID3D12Device1, :ptr D3D12_SAMPLER_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptors)
          STD_METHOD CopyDescriptors, :ptr ID3D12Device1, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptorsSimple)
          STD_METHOD CopyDescriptorsSimple, :ptr ID3D12Device1, :UINT, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceAllocationInfo)
          STD_METHOD GetResourceAllocationInfo, :ptr ID3D12Device1, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC
          DECLSPEC_XFGVIRT(ID3D12Device, GetCustomHeapProperties)
          STD_METHOD GetCustomHeapProperties, :ptr ID3D12Device1, :ptr D3D12_HEAP_PROPERTIES, :UINT, :D3D12_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommittedResource)
          STD_METHOD CreateCommittedResource, :ptr ID3D12Device1, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateHeap)
          STD_METHOD CreateHeap, :ptr ID3D12Device1, :ptr D3D12_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreatePlacedResource)
          STD_METHOD CreatePlacedResource, :ptr ID3D12Device1, :ptr ID3D12Heap, :UINT64, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateReservedResource)
          STD_METHOD CreateReservedResource, :ptr ID3D12Device1, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSharedHandle)
          STD_METHOD CreateSharedHandle, :ptr ID3D12Device1, :ptr ID3D12DeviceChild, :ptr SECURITY_ATTRIBUTES, :DWORD, :LPCWSTR, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandle)
          STD_METHOD OpenSharedHandle, :ptr ID3D12Device1, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandleByName)
          STD_METHOD OpenSharedHandleByName, :ptr ID3D12Device1, :LPCWSTR, :DWORD, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, MakeResident)
          STD_METHOD MakeResident, :ptr ID3D12Device1, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, Evict)
          STD_METHOD Evict, :ptr ID3D12Device1, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, CreateFence)
          STD_METHOD CreateFence, :ptr ID3D12Device1, :UINT64, :D3D12_FENCE_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDeviceRemovedReason)
          STD_METHOD GetDeviceRemovedReason, :ptr ID3D12Device1
          DECLSPEC_XFGVIRT(ID3D12Device, GetCopyableFootprints)
          STD_METHOD GetCopyableFootprints, :ptr ID3D12Device1, :ptr D3D12_RESOURCE_DESC, :UINT, :UINT, :UINT64, :ptr D3D12_PLACED_SUBRESOURCE_FOOTPRINT, :ptr UINT, :ptr UINT64, :ptr UINT64
          DECLSPEC_XFGVIRT(ID3D12Device, CreateQueryHeap)
          STD_METHOD CreateQueryHeap, :ptr ID3D12Device1, :ptr D3D12_QUERY_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, SetStablePowerState)
          STD_METHOD SetStablePowerState, :ptr ID3D12Device1, :BOOL
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandSignature)
          STD_METHOD CreateCommandSignature, :ptr ID3D12Device1, :ptr D3D12_COMMAND_SIGNATURE_DESC, :ptr ID3D12RootSignature, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceTiling)
          STD_METHOD GetResourceTiling, :ptr ID3D12Device1, :ptr ID3D12Resource, :ptr UINT, :ptr D3D12_PACKED_MIP_INFO, :ptr D3D12_TILE_SHAPE, :ptr UINT, :UINT, :ptr D3D12_SUBRESOURCE_TILING
          DECLSPEC_XFGVIRT(ID3D12Device, GetAdapterLuid)
          STD_METHOD GetAdapterLuid, :ptr ID3D12Device1, :ptr LUID
          DECLSPEC_XFGVIRT(ID3D12Device1, CreatePipelineLibrary)
          STD_METHOD CreatePipelineLibrary, :ptr ID3D12Device1, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device1, SetEventOnMultipleFenceCompletion)
          STD_METHOD SetEventOnMultipleFenceCompletion, :ptr ID3D12Device1, :ptr ptr ID3D12Fence, :ptr UINT64, :UINT, :D3D12_MULTIPLE_FENCE_WAIT_FLAGS, :HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device1, SetResidencyPriority)
          STD_METHOD SetResidencyPriority, :ptr ID3D12Device1, :UINT, :ptr ptr ID3D12Pageable, :ptr D3D12_RESIDENCY_PRIORITY
          ??Interface equ <>
          END_INTERFACE
        ID3D12Device1Vtbl ends
        ID3D12Device1 struct
          lpVtbl POINTER ?
        ID3D12Device1 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12Device2_INTERFACE_DEFINED__
      __ID3D12Device2_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Device2:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12Device2Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12Device2Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Device2, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Device2
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Device2
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Device2, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Device2, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Device2, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Device2, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12Device, GetNodeCount)
          STD_METHOD GetNodeCount, :ptr ID3D12Device2
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandQueue)
          STD_METHOD CreateCommandQueue, :ptr ID3D12Device2, :ptr D3D12_COMMAND_QUEUE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandAllocator)
          STD_METHOD CreateCommandAllocator, :ptr ID3D12Device2, :D3D12_COMMAND_LIST_TYPE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateGraphicsPipelineState)
          STD_METHOD CreateGraphicsPipelineState, :ptr ID3D12Device2, :ptr D3D12_GRAPHICS_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateComputePipelineState)
          STD_METHOD CreateComputePipelineState, :ptr ID3D12Device2, :ptr D3D12_COMPUTE_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandList)
          STD_METHOD CreateCommandList, :ptr ID3D12Device2, :UINT, :D3D12_COMMAND_LIST_TYPE, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CheckFeatureSupport)
          STD_METHOD CheckFeatureSupport, :ptr ID3D12Device2, :D3D12_FEATURE, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDescriptorHeap)
          STD_METHOD CreateDescriptorHeap, :ptr ID3D12Device2, :ptr D3D12_DESCRIPTOR_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDescriptorHandleIncrementSize)
          STD_METHOD GetDescriptorHandleIncrementSize, :ptr ID3D12Device2, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRootSignature)
          STD_METHOD CreateRootSignature, :ptr ID3D12Device2, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateConstantBufferView)
          STD_METHOD CreateConstantBufferView, :ptr ID3D12Device2, :ptr D3D12_CONSTANT_BUFFER_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateShaderResourceView)
          STD_METHOD CreateShaderResourceView, :ptr ID3D12Device2, :ptr ID3D12Resource, :ptr D3D12_SHADER_RESOURCE_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateUnorderedAccessView)
          STD_METHOD CreateUnorderedAccessView, :ptr ID3D12Device2, :ptr ID3D12Resource, :ptr ID3D12Resource, :ptr D3D12_UNORDERED_ACCESS_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRenderTargetView)
          STD_METHOD CreateRenderTargetView, :ptr ID3D12Device2, :ptr ID3D12Resource, :ptr D3D12_RENDER_TARGET_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDepthStencilView)
          STD_METHOD CreateDepthStencilView, :ptr ID3D12Device2, :ptr ID3D12Resource, :ptr D3D12_DEPTH_STENCIL_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSampler)
          STD_METHOD CreateSampler, :ptr ID3D12Device2, :ptr D3D12_SAMPLER_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptors)
          STD_METHOD CopyDescriptors, :ptr ID3D12Device2, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptorsSimple)
          STD_METHOD CopyDescriptorsSimple, :ptr ID3D12Device2, :UINT, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceAllocationInfo)
          STD_METHOD GetResourceAllocationInfo, :ptr ID3D12Device2, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC
          DECLSPEC_XFGVIRT(ID3D12Device, GetCustomHeapProperties)
          STD_METHOD GetCustomHeapProperties, :ptr ID3D12Device2, :ptr D3D12_HEAP_PROPERTIES, :UINT, :D3D12_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommittedResource)
          STD_METHOD CreateCommittedResource, :ptr ID3D12Device2, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateHeap)
          STD_METHOD CreateHeap, :ptr ID3D12Device2, :ptr D3D12_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreatePlacedResource)
          STD_METHOD CreatePlacedResource, :ptr ID3D12Device2, :ptr ID3D12Heap, :UINT64, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateReservedResource)
          STD_METHOD CreateReservedResource, :ptr ID3D12Device2, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSharedHandle)
          STD_METHOD CreateSharedHandle, :ptr ID3D12Device2, :ptr ID3D12DeviceChild, :ptr SECURITY_ATTRIBUTES, :DWORD, :LPCWSTR, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandle)
          STD_METHOD OpenSharedHandle, :ptr ID3D12Device2, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandleByName)
          STD_METHOD OpenSharedHandleByName, :ptr ID3D12Device2, :LPCWSTR, :DWORD, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, MakeResident)
          STD_METHOD MakeResident, :ptr ID3D12Device2, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, Evict)
          STD_METHOD Evict, :ptr ID3D12Device2, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, CreateFence)
          STD_METHOD CreateFence, :ptr ID3D12Device2, :UINT64, :D3D12_FENCE_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDeviceRemovedReason)
          STD_METHOD GetDeviceRemovedReason, :ptr ID3D12Device2
          DECLSPEC_XFGVIRT(ID3D12Device, GetCopyableFootprints)
          STD_METHOD GetCopyableFootprints, :ptr ID3D12Device2, :ptr D3D12_RESOURCE_DESC, :UINT, :UINT, :UINT64, :ptr D3D12_PLACED_SUBRESOURCE_FOOTPRINT, :ptr UINT, :ptr UINT64, :ptr UINT64
          DECLSPEC_XFGVIRT(ID3D12Device, CreateQueryHeap)
          STD_METHOD CreateQueryHeap, :ptr ID3D12Device2, :ptr D3D12_QUERY_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, SetStablePowerState)
          STD_METHOD SetStablePowerState, :ptr ID3D12Device2, :BOOL
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandSignature)
          STD_METHOD CreateCommandSignature, :ptr ID3D12Device2, :ptr D3D12_COMMAND_SIGNATURE_DESC, :ptr ID3D12RootSignature, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceTiling)
          STD_METHOD GetResourceTiling, :ptr ID3D12Device2, :ptr ID3D12Resource, :ptr UINT, :ptr D3D12_PACKED_MIP_INFO, :ptr D3D12_TILE_SHAPE, :ptr UINT, :UINT, :ptr D3D12_SUBRESOURCE_TILING
          DECLSPEC_XFGVIRT(ID3D12Device, GetAdapterLuid)
          STD_METHOD GetAdapterLuid, :ptr ID3D12Device2, :ptr LUID
          DECLSPEC_XFGVIRT(ID3D12Device1, CreatePipelineLibrary)
          STD_METHOD CreatePipelineLibrary, :ptr ID3D12Device2, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device1, SetEventOnMultipleFenceCompletion)
          STD_METHOD SetEventOnMultipleFenceCompletion, :ptr ID3D12Device2, :ptr ptr ID3D12Fence, :ptr UINT64, :UINT, :D3D12_MULTIPLE_FENCE_WAIT_FLAGS, :HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device1, SetResidencyPriority)
          STD_METHOD SetResidencyPriority, :ptr ID3D12Device2, :UINT, :ptr ptr ID3D12Pageable, :ptr D3D12_RESIDENCY_PRIORITY
          DECLSPEC_XFGVIRT(ID3D12Device2, CreatePipelineState)
          STD_METHOD CreatePipelineState, :ptr ID3D12Device2, :ptr D3D12_PIPELINE_STATE_STREAM_DESC, :REFIID, :ptr ptr
          ??Interface equ <>
          END_INTERFACE
        ID3D12Device2Vtbl ends
        ID3D12Device2 struct
          lpVtbl POINTER ?
        ID3D12Device2 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_RESIDENCY_FLAGS typedef SDWORD
    D3D12_RESIDENCY_FLAG_NONE equ 0
    D3D12_RESIDENCY_FLAG_DENY_OVERBUDGET equ 1h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_RESIDENCY_FLAGS)
    externdef __MIDL_itf_d3d12_0000_0025_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0025_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12Device3_INTERFACE_DEFINED__
      __ID3D12Device3_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Device3:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12Device3Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12Device3Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Device3, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Device3
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Device3
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Device3, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Device3, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Device3, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Device3, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12Device, GetNodeCount)
          STD_METHOD GetNodeCount, :ptr ID3D12Device3
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandQueue)
          STD_METHOD CreateCommandQueue, :ptr ID3D12Device3, :ptr D3D12_COMMAND_QUEUE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandAllocator)
          STD_METHOD CreateCommandAllocator, :ptr ID3D12Device3, :D3D12_COMMAND_LIST_TYPE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateGraphicsPipelineState)
          STD_METHOD CreateGraphicsPipelineState, :ptr ID3D12Device3, :ptr D3D12_GRAPHICS_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateComputePipelineState)
          STD_METHOD CreateComputePipelineState, :ptr ID3D12Device3, :ptr D3D12_COMPUTE_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandList)
          STD_METHOD CreateCommandList, :ptr ID3D12Device3, :UINT, :D3D12_COMMAND_LIST_TYPE, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CheckFeatureSupport)
          STD_METHOD CheckFeatureSupport, :ptr ID3D12Device3, :D3D12_FEATURE, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDescriptorHeap)
          STD_METHOD CreateDescriptorHeap, :ptr ID3D12Device3, :ptr D3D12_DESCRIPTOR_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDescriptorHandleIncrementSize)
          STD_METHOD GetDescriptorHandleIncrementSize, :ptr ID3D12Device3, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRootSignature)
          STD_METHOD CreateRootSignature, :ptr ID3D12Device3, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateConstantBufferView)
          STD_METHOD CreateConstantBufferView, :ptr ID3D12Device3, :ptr D3D12_CONSTANT_BUFFER_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateShaderResourceView)
          STD_METHOD CreateShaderResourceView, :ptr ID3D12Device3, :ptr ID3D12Resource, :ptr D3D12_SHADER_RESOURCE_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateUnorderedAccessView)
          STD_METHOD CreateUnorderedAccessView, :ptr ID3D12Device3, :ptr ID3D12Resource, :ptr ID3D12Resource, :ptr D3D12_UNORDERED_ACCESS_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRenderTargetView)
          STD_METHOD CreateRenderTargetView, :ptr ID3D12Device3, :ptr ID3D12Resource, :ptr D3D12_RENDER_TARGET_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDepthStencilView)
          STD_METHOD CreateDepthStencilView, :ptr ID3D12Device3, :ptr ID3D12Resource, :ptr D3D12_DEPTH_STENCIL_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSampler)
          STD_METHOD CreateSampler, :ptr ID3D12Device3, :ptr D3D12_SAMPLER_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptors)
          STD_METHOD CopyDescriptors, :ptr ID3D12Device3, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptorsSimple)
          STD_METHOD CopyDescriptorsSimple, :ptr ID3D12Device3, :UINT, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceAllocationInfo)
          STD_METHOD GetResourceAllocationInfo, :ptr ID3D12Device3, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC
          DECLSPEC_XFGVIRT(ID3D12Device, GetCustomHeapProperties)
          STD_METHOD GetCustomHeapProperties, :ptr ID3D12Device3, :ptr D3D12_HEAP_PROPERTIES, :UINT, :D3D12_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommittedResource)
          STD_METHOD CreateCommittedResource, :ptr ID3D12Device3, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateHeap)
          STD_METHOD CreateHeap, :ptr ID3D12Device3, :ptr D3D12_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreatePlacedResource)
          STD_METHOD CreatePlacedResource, :ptr ID3D12Device3, :ptr ID3D12Heap, :UINT64, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateReservedResource)
          STD_METHOD CreateReservedResource, :ptr ID3D12Device3, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSharedHandle)
          STD_METHOD CreateSharedHandle, :ptr ID3D12Device3, :ptr ID3D12DeviceChild, :ptr SECURITY_ATTRIBUTES, :DWORD, :LPCWSTR, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandle)
          STD_METHOD OpenSharedHandle, :ptr ID3D12Device3, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandleByName)
          STD_METHOD OpenSharedHandleByName, :ptr ID3D12Device3, :LPCWSTR, :DWORD, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, MakeResident)
          STD_METHOD MakeResident, :ptr ID3D12Device3, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, Evict)
          STD_METHOD Evict, :ptr ID3D12Device3, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, CreateFence)
          STD_METHOD CreateFence, :ptr ID3D12Device3, :UINT64, :D3D12_FENCE_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDeviceRemovedReason)
          STD_METHOD GetDeviceRemovedReason, :ptr ID3D12Device3
          DECLSPEC_XFGVIRT(ID3D12Device, GetCopyableFootprints)
          STD_METHOD GetCopyableFootprints, :ptr ID3D12Device3, :ptr D3D12_RESOURCE_DESC, :UINT, :UINT, :UINT64, :ptr D3D12_PLACED_SUBRESOURCE_FOOTPRINT, :ptr UINT, :ptr UINT64, :ptr UINT64
          DECLSPEC_XFGVIRT(ID3D12Device, CreateQueryHeap)
          STD_METHOD CreateQueryHeap, :ptr ID3D12Device3, :ptr D3D12_QUERY_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, SetStablePowerState)
          STD_METHOD SetStablePowerState, :ptr ID3D12Device3, :BOOL
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandSignature)
          STD_METHOD CreateCommandSignature, :ptr ID3D12Device3, :ptr D3D12_COMMAND_SIGNATURE_DESC, :ptr ID3D12RootSignature, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceTiling)
          STD_METHOD GetResourceTiling, :ptr ID3D12Device3, :ptr ID3D12Resource, :ptr UINT, :ptr D3D12_PACKED_MIP_INFO, :ptr D3D12_TILE_SHAPE, :ptr UINT, :UINT, :ptr D3D12_SUBRESOURCE_TILING
          DECLSPEC_XFGVIRT(ID3D12Device, GetAdapterLuid)
          STD_METHOD GetAdapterLuid, :ptr ID3D12Device3, :ptr LUID
          DECLSPEC_XFGVIRT(ID3D12Device1, CreatePipelineLibrary)
          STD_METHOD CreatePipelineLibrary, :ptr ID3D12Device3, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device1, SetEventOnMultipleFenceCompletion)
          STD_METHOD SetEventOnMultipleFenceCompletion, :ptr ID3D12Device3, :ptr ptr ID3D12Fence, :ptr UINT64, :UINT, :D3D12_MULTIPLE_FENCE_WAIT_FLAGS, :HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device1, SetResidencyPriority)
          STD_METHOD SetResidencyPriority, :ptr ID3D12Device3, :UINT, :ptr ptr ID3D12Pageable, :ptr D3D12_RESIDENCY_PRIORITY
          DECLSPEC_XFGVIRT(ID3D12Device2, CreatePipelineState)
          STD_METHOD CreatePipelineState, :ptr ID3D12Device3, :ptr D3D12_PIPELINE_STATE_STREAM_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromAddress)
          STD_METHOD OpenExistingHeapFromAddress, :ptr ID3D12Device3, :ptr, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromFileMapping)
          STD_METHOD OpenExistingHeapFromFileMapping, :ptr ID3D12Device3, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, EnqueueMakeResident)
          STD_METHOD EnqueueMakeResident, :ptr ID3D12Device3, :D3D12_RESIDENCY_FLAGS, :UINT, :ptr ptr ID3D12Pageable, :ptr ID3D12Fence, :UINT64
          ??Interface equ <>
          END_INTERFACE
        ID3D12Device3Vtbl ends
        ID3D12Device3 struct
          lpVtbl POINTER ?
        ID3D12Device3 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_COMMAND_LIST_FLAGS typedef SDWORD
    D3D12_COMMAND_LIST_FLAG_NONE equ 0

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_COMMAND_LIST_FLAGS)
    D3D12_COMMAND_POOL_FLAGS typedef SDWORD
    D3D12_COMMAND_POOL_FLAG_NONE equ 0

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_COMMAND_POOL_FLAGS)
    D3D12_COMMAND_RECORDER_FLAGS typedef SDWORD
    D3D12_COMMAND_RECORDER_FLAG_NONE equ 0

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_COMMAND_RECORDER_FLAGS)
    D3D12_PROTECTED_SESSION_STATUS typedef SDWORD
    D3D12_PROTECTED_SESSION_STATUS_OK equ 0
    D3D12_PROTECTED_SESSION_STATUS_INVALID equ 1

    externdef __MIDL_itf_d3d12_0000_0026_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0026_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12ProtectedSession_INTERFACE_DEFINED__
      __ID3D12ProtectedSession_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12ProtectedSession:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12ProtectedSessionVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12ProtectedSessionVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12ProtectedSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12ProtectedSession
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12ProtectedSession
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12ProtectedSession, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12ProtectedSession, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12ProtectedSession, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12ProtectedSession, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12ProtectedSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12ProtectedSession, GetStatusFence)
          STD_METHOD GetStatusFence, :ptr ID3D12ProtectedSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12ProtectedSession, GetSessionStatus)
          STD_METHOD GetSessionStatus, :ptr ID3D12ProtectedSession
          ??Interface equ <>
          END_INTERFACE
        ID3D12ProtectedSessionVtbl ends
        ID3D12ProtectedSession struct
          lpVtbl POINTER ?
        ID3D12ProtectedSession ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS typedef SDWORD
    D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_NONE equ 0
    D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_SUPPORTED equ 1h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS)
    D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT struct
      NodeIndex UINT ?
      Support D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS ?
    D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT ends
    D3D12_PROTECTED_RESOURCE_SESSION_FLAGS typedef SDWORD
    D3D12_PROTECTED_RESOURCE_SESSION_FLAG_NONE equ 0

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_PROTECTED_RESOURCE_SESSION_FLAGS)
    D3D12_PROTECTED_RESOURCE_SESSION_DESC struct
      NodeMask UINT ?
      Flags D3D12_PROTECTED_RESOURCE_SESSION_FLAGS ?
    D3D12_PROTECTED_RESOURCE_SESSION_DESC ends
    externdef __MIDL_itf_d3d12_0000_0027_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0027_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12ProtectedResourceSession_INTERFACE_DEFINED__
      __ID3D12ProtectedResourceSession_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12ProtectedResourceSession:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12ProtectedResourceSessionVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12ProtectedResourceSessionVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12ProtectedResourceSession
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12ProtectedResourceSession
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12ProtectedResourceSession, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12ProtectedResourceSession, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12ProtectedResourceSession, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12ProtectedResourceSession, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12ProtectedSession, GetStatusFence)
          STD_METHOD GetStatusFence, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12ProtectedSession, GetSessionStatus)
          STD_METHOD GetSessionStatus, :ptr ID3D12ProtectedResourceSession
          DECLSPEC_XFGVIRT(ID3D12ProtectedResourceSession, GetDesc)
          STD_METHOD GetDesc, :ptr ID3D12ProtectedResourceSession, :ptr D3D12_PROTECTED_RESOURCE_SESSION_DESC
          ??Interface equ <>
          END_INTERFACE
        ID3D12ProtectedResourceSessionVtbl ends
        ID3D12ProtectedResourceSession struct
          lpVtbl POINTER ?
        ID3D12ProtectedResourceSession ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12Device4_INTERFACE_DEFINED__
      __ID3D12Device4_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Device4:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12Device4Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12Device4Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Device4, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Device4
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Device4
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Device4, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Device4, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Device4, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Device4, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12Device, GetNodeCount)
          STD_METHOD GetNodeCount, :ptr ID3D12Device4
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandQueue)
          STD_METHOD CreateCommandQueue, :ptr ID3D12Device4, :ptr D3D12_COMMAND_QUEUE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandAllocator)
          STD_METHOD CreateCommandAllocator, :ptr ID3D12Device4, :D3D12_COMMAND_LIST_TYPE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateGraphicsPipelineState)
          STD_METHOD CreateGraphicsPipelineState, :ptr ID3D12Device4, :ptr D3D12_GRAPHICS_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateComputePipelineState)
          STD_METHOD CreateComputePipelineState, :ptr ID3D12Device4, :ptr D3D12_COMPUTE_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandList)
          STD_METHOD CreateCommandList, :ptr ID3D12Device4, :UINT, :D3D12_COMMAND_LIST_TYPE, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CheckFeatureSupport)
          STD_METHOD CheckFeatureSupport, :ptr ID3D12Device4, :D3D12_FEATURE, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDescriptorHeap)
          STD_METHOD CreateDescriptorHeap, :ptr ID3D12Device4, :ptr D3D12_DESCRIPTOR_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDescriptorHandleIncrementSize)
          STD_METHOD GetDescriptorHandleIncrementSize, :ptr ID3D12Device4, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRootSignature)
          STD_METHOD CreateRootSignature, :ptr ID3D12Device4, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateConstantBufferView)
          STD_METHOD CreateConstantBufferView, :ptr ID3D12Device4, :ptr D3D12_CONSTANT_BUFFER_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateShaderResourceView)
          STD_METHOD CreateShaderResourceView, :ptr ID3D12Device4, :ptr ID3D12Resource, :ptr D3D12_SHADER_RESOURCE_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateUnorderedAccessView)
          STD_METHOD CreateUnorderedAccessView, :ptr ID3D12Device4, :ptr ID3D12Resource, :ptr ID3D12Resource, :ptr D3D12_UNORDERED_ACCESS_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRenderTargetView)
          STD_METHOD CreateRenderTargetView, :ptr ID3D12Device4, :ptr ID3D12Resource, :ptr D3D12_RENDER_TARGET_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDepthStencilView)
          STD_METHOD CreateDepthStencilView, :ptr ID3D12Device4, :ptr ID3D12Resource, :ptr D3D12_DEPTH_STENCIL_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSampler)
          STD_METHOD CreateSampler, :ptr ID3D12Device4, :ptr D3D12_SAMPLER_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptors)
          STD_METHOD CopyDescriptors, :ptr ID3D12Device4, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptorsSimple)
          STD_METHOD CopyDescriptorsSimple, :ptr ID3D12Device4, :UINT, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceAllocationInfo)
          STD_METHOD GetResourceAllocationInfo, :ptr ID3D12Device4, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC
          DECLSPEC_XFGVIRT(ID3D12Device, GetCustomHeapProperties)
          STD_METHOD GetCustomHeapProperties, :ptr ID3D12Device4, :ptr D3D12_HEAP_PROPERTIES, :UINT, :D3D12_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommittedResource)
          STD_METHOD CreateCommittedResource, :ptr ID3D12Device4, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateHeap)
          STD_METHOD CreateHeap, :ptr ID3D12Device4, :ptr D3D12_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreatePlacedResource)
          STD_METHOD CreatePlacedResource, :ptr ID3D12Device4, :ptr ID3D12Heap, :UINT64, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateReservedResource)
          STD_METHOD CreateReservedResource, :ptr ID3D12Device4, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSharedHandle)
          STD_METHOD CreateSharedHandle, :ptr ID3D12Device4, :ptr ID3D12DeviceChild, :ptr SECURITY_ATTRIBUTES, :DWORD, :LPCWSTR, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandle)
          STD_METHOD OpenSharedHandle, :ptr ID3D12Device4, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandleByName)
          STD_METHOD OpenSharedHandleByName, :ptr ID3D12Device4, :LPCWSTR, :DWORD, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, MakeResident)
          STD_METHOD MakeResident, :ptr ID3D12Device4, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, Evict)
          STD_METHOD Evict, :ptr ID3D12Device4, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, CreateFence)
          STD_METHOD CreateFence, :ptr ID3D12Device4, :UINT64, :D3D12_FENCE_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDeviceRemovedReason)
          STD_METHOD GetDeviceRemovedReason, :ptr ID3D12Device4
          DECLSPEC_XFGVIRT(ID3D12Device, GetCopyableFootprints)
          STD_METHOD GetCopyableFootprints, :ptr ID3D12Device4, :ptr D3D12_RESOURCE_DESC, :UINT, :UINT, :UINT64, :ptr D3D12_PLACED_SUBRESOURCE_FOOTPRINT, :ptr UINT, :ptr UINT64, :ptr UINT64
          DECLSPEC_XFGVIRT(ID3D12Device, CreateQueryHeap)
          STD_METHOD CreateQueryHeap, :ptr ID3D12Device4, :ptr D3D12_QUERY_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, SetStablePowerState)
          STD_METHOD SetStablePowerState, :ptr ID3D12Device4, :BOOL
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandSignature)
          STD_METHOD CreateCommandSignature, :ptr ID3D12Device4, :ptr D3D12_COMMAND_SIGNATURE_DESC, :ptr ID3D12RootSignature, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceTiling)
          STD_METHOD GetResourceTiling, :ptr ID3D12Device4, :ptr ID3D12Resource, :ptr UINT, :ptr D3D12_PACKED_MIP_INFO, :ptr D3D12_TILE_SHAPE, :ptr UINT, :UINT, :ptr D3D12_SUBRESOURCE_TILING
          DECLSPEC_XFGVIRT(ID3D12Device, GetAdapterLuid)
          STD_METHOD GetAdapterLuid, :ptr ID3D12Device4, :ptr LUID
          DECLSPEC_XFGVIRT(ID3D12Device1, CreatePipelineLibrary)
          STD_METHOD CreatePipelineLibrary, :ptr ID3D12Device4, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device1, SetEventOnMultipleFenceCompletion)
          STD_METHOD SetEventOnMultipleFenceCompletion, :ptr ID3D12Device4, :ptr ptr ID3D12Fence, :ptr UINT64, :UINT, :D3D12_MULTIPLE_FENCE_WAIT_FLAGS, :HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device1, SetResidencyPriority)
          STD_METHOD SetResidencyPriority, :ptr ID3D12Device4, :UINT, :ptr ptr ID3D12Pageable, :ptr D3D12_RESIDENCY_PRIORITY
          DECLSPEC_XFGVIRT(ID3D12Device2, CreatePipelineState)
          STD_METHOD CreatePipelineState, :ptr ID3D12Device4, :ptr D3D12_PIPELINE_STATE_STREAM_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromAddress)
          STD_METHOD OpenExistingHeapFromAddress, :ptr ID3D12Device4, :ptr, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromFileMapping)
          STD_METHOD OpenExistingHeapFromFileMapping, :ptr ID3D12Device4, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, EnqueueMakeResident)
          STD_METHOD EnqueueMakeResident, :ptr ID3D12Device4, :D3D12_RESIDENCY_FLAGS, :UINT, :ptr ptr ID3D12Pageable, :ptr ID3D12Fence, :UINT64
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateCommandList1)
          STD_METHOD CreateCommandList1, :ptr ID3D12Device4, :UINT, :D3D12_COMMAND_LIST_TYPE, :D3D12_COMMAND_LIST_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateProtectedResourceSession)
          STD_METHOD CreateProtectedResourceSession, :ptr ID3D12Device4, :ptr D3D12_PROTECTED_RESOURCE_SESSION_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateCommittedResource1)
          STD_METHOD CreateCommittedResource1, :ptr ID3D12Device4, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateHeap1)
          STD_METHOD CreateHeap1, :ptr ID3D12Device4, :ptr D3D12_HEAP_DESC, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateReservedResource1)
          STD_METHOD CreateReservedResource1, :ptr ID3D12Device4, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, GetResourceAllocationInfo1)
          STD_METHOD GetResourceAllocationInfo1, :ptr ID3D12Device4, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC, :ptr D3D12_RESOURCE_ALLOCATION_INFO1
          ??Interface equ <>
          END_INTERFACE
        ID3D12Device4Vtbl ends
        ID3D12Device4 struct
          lpVtbl POINTER ?
        ID3D12Device4 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_LIFETIME_STATE typedef SDWORD
    D3D12_LIFETIME_STATE_IN_USE equ 0
    D3D12_LIFETIME_STATE_NOT_IN_USE equ

    externdef __MIDL_itf_d3d12_0000_0029_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0029_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12LifetimeOwner_INTERFACE_DEFINED__
      __ID3D12LifetimeOwner_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12LifetimeOwner:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12LifetimeOwnerVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12LifetimeOwnerVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12LifetimeOwner, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12LifetimeOwner
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12LifetimeOwner
          DECLSPEC_XFGVIRT(ID3D12LifetimeOwner, LifetimeStateUpdated)
          STD_METHOD LifetimeStateUpdated, :ptr ID3D12LifetimeOwner, :D3D12_LIFETIME_STATE
          ??Interface equ <>
          END_INTERFACE
        ID3D12LifetimeOwnerVtbl ends
        ID3D12LifetimeOwner struct
          lpVtbl POINTER ?
        ID3D12LifetimeOwner ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12SwapChainAssistant_INTERFACE_DEFINED__
      __ID3D12SwapChainAssistant_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12SwapChainAssistant:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12SwapChainAssistantVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12SwapChainAssistantVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12SwapChainAssistant, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12SwapChainAssistant
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12SwapChainAssistant
          DECLSPEC_XFGVIRT(ID3D12SwapChainAssistant, GetLUID)
          STD_METHOD GetLUID, :ptr ID3D12SwapChainAssistant, :ptr LUID
          DECLSPEC_XFGVIRT(ID3D12SwapChainAssistant, GetSwapChainObject)
          STD_METHOD GetSwapChainObject, :ptr ID3D12SwapChainAssistant, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12SwapChainAssistant, GetCurrentResourceAndCommandQueue)
          STD_METHOD GetCurrentResourceAndCommandQueue, :ptr ID3D12SwapChainAssistant, :REFIID, :ptr ptr, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12SwapChainAssistant, InsertImplicitSync)
          STD_METHOD InsertImplicitSync, :ptr ID3D12SwapChainAssistant
          ??Interface equ <>
          END_INTERFACE
        ID3D12SwapChainAssistantVtbl ends
        ID3D12SwapChainAssistant struct
          lpVtbl POINTER ?
        ID3D12SwapChainAssistant ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12LifetimeTracker_INTERFACE_DEFINED__
      __ID3D12LifetimeTracker_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12LifetimeTracker:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12LifetimeTrackerVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12LifetimeTrackerVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12LifetimeTracker, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12LifetimeTracker
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12LifetimeTracker
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12LifetimeTracker, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12LifetimeTracker, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12LifetimeTracker, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12LifetimeTracker, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12LifetimeTracker, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12LifetimeTracker, DestroyOwnedObject)
          STD_METHOD DestroyOwnedObject, :ptr ID3D12LifetimeTracker, :ptr ID3D12DeviceChild
          ??Interface equ <>
          END_INTERFACE
        ID3D12LifetimeTrackerVtbl ends
        ID3D12LifetimeTracker struct
          lpVtbl POINTER ?
        ID3D12LifetimeTracker ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_META_COMMAND_PARAMETER_TYPE typedef SDWORD
    D3D12_META_COMMAND_PARAMETER_TYPE_FLOAT equ 0
    D3D12_META_COMMAND_PARAMETER_TYPE_UINT64 equ 1
    D3D12_META_COMMAND_PARAMETER_TYPE_GPU_VIRTUAL_ADDRESS equ 2
    D3D12_META_COMMAND_PARAMETER_TYPE_CPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV equ 3
    D3D12_META_COMMAND_PARAMETER_TYPE_GPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV equ 4

    D3D12_META_COMMAND_PARAMETER_FLAGS typedef SDWORD
    D3D12_META_COMMAND_PARAMETER_FLAG_INPUT equ 1h
    D3D12_META_COMMAND_PARAMETER_FLAG_OUTPUT equ 2h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_META_COMMAND_PARAMETER_FLAGS)
    D3D12_META_COMMAND_PARAMETER_STAGE typedef SDWORD
    D3D12_META_COMMAND_PARAMETER_STAGE_CREATION equ 0
    D3D12_META_COMMAND_PARAMETER_STAGE_INITIALIZATION equ 1
    D3D12_META_COMMAND_PARAMETER_STAGE_EXECUTION equ 2

    D3D12_META_COMMAND_PARAMETER_DESC struct
      Name_ LPCWSTR ?
      Type_ D3D12_META_COMMAND_PARAMETER_TYPE ?
      Flags D3D12_META_COMMAND_PARAMETER_FLAGS ?
      RequiredResourceState D3D12_RESOURCE_STATES ?
      StructureOffset UINT ?
    D3D12_META_COMMAND_PARAMETER_DESC ends
    D3D12_GRAPHICS_STATES typedef SDWORD
    D3D12_GRAPHICS_STATE_NONE equ 0
    D3D12_GRAPHICS_STATE_IA_VERTEX_BUFFERS equ
    D3D12_GRAPHICS_STATE_IA_INDEX_BUFFER equ
    D3D12_GRAPHICS_STATE_IA_PRIMITIVE_TOPOLOGY equ
    D3D12_GRAPHICS_STATE_DESCRIPTOR_HEAP equ
    D3D12_GRAPHICS_STATE_GRAPHICS_ROOT_SIGNATURE equ
    D3D12_GRAPHICS_STATE_COMPUTE_ROOT_SIGNATURE equ
    D3D12_GRAPHICS_STATE_RS_VIEWPORTS equ
    D3D12_GRAPHICS_STATE_RS_SCISSOR_RECTS equ
    D3D12_GRAPHICS_STATE_PREDICATION equ
    D3D12_GRAPHICS_STATE_OM_RENDER_TARGETS equ
    D3D12_GRAPHICS_STATE_OM_STENCIL_REF equ
    D3D12_GRAPHICS_STATE_OM_BLEND_FACTOR equ
    D3D12_GRAPHICS_STATE_PIPELINE_STATE equ
    D3D12_GRAPHICS_STATE_SO_TARGETS equ
    D3D12_GRAPHICS_STATE_OM_DEPTH_BOUNDS equ
    D3D12_GRAPHICS_STATE_SAMPLE_POSITIONS equ
    D3D12_GRAPHICS_STATE_VIEW_INSTANCE_MASK equ

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_GRAPHICS_STATES)
    D3D12_META_COMMAND_DESC struct
      Id GUID <>
      Name_ LPCWSTR ?
      InitializationDirtyState D3D12_GRAPHICS_STATES ?
      ExecutionDirtyState D3D12_GRAPHICS_STATES ?
    D3D12_META_COMMAND_DESC ends
    externdef __MIDL_itf_d3d12_0000_0032_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0032_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12StateObject_INTERFACE_DEFINED__
      __ID3D12StateObject_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12StateObject:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12StateObjectVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12StateObjectVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12StateObject, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12StateObject
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12StateObject
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12StateObject, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12StateObject, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12StateObject, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12StateObject, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12StateObject, :REFIID, :ptr ptr
          ??Interface equ <>
          END_INTERFACE
        ID3D12StateObjectVtbl ends
        ID3D12StateObject struct
          lpVtbl POINTER ?
        ID3D12StateObject ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12StateObjectProperties_INTERFACE_DEFINED__
      __ID3D12StateObjectProperties_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12StateObjectProperties:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12StateObjectPropertiesVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12StateObjectPropertiesVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12StateObjectProperties, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12StateObjectProperties
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12StateObjectProperties
          DECLSPEC_XFGVIRT(ID3D12StateObjectProperties, GetShaderIdentifier)
          STD_METHOD GetShaderIdentifier, :ptr ID3D12StateObjectProperties, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12StateObjectProperties, GetShaderStackSize)
          STD_METHOD GetShaderStackSize, :ptr ID3D12StateObjectProperties, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12StateObjectProperties, GetPipelineStackSize)
          STD_METHOD GetPipelineStackSize, :ptr ID3D12StateObjectProperties
          DECLSPEC_XFGVIRT(ID3D12StateObjectProperties, SetPipelineStackSize)
          STD_METHOD SetPipelineStackSize, :ptr ID3D12StateObjectProperties, :UINT64
          ??Interface equ <>
          END_INTERFACE
        ID3D12StateObjectPropertiesVtbl ends
        ID3D12StateObjectProperties struct
          lpVtbl POINTER ?
        ID3D12StateObjectProperties ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_STATE_SUBOBJECT_TYPE typedef SDWORD
    D3D12_STATE_SUBOBJECT_TYPE_STATE_OBJECT_CONFIG equ 0
    D3D12_STATE_SUBOBJECT_TYPE_GLOBAL_ROOT_SIGNATURE equ 1
    D3D12_STATE_SUBOBJECT_TYPE_LOCAL_ROOT_SIGNATURE equ 2
    D3D12_STATE_SUBOBJECT_TYPE_NODE_MASK equ 3
    D3D12_STATE_SUBOBJECT_TYPE_DXIL_LIBRARY equ 5
    D3D12_STATE_SUBOBJECT_TYPE_EXISTING_COLLECTION equ 6
    D3D12_STATE_SUBOBJECT_TYPE_SUBOBJECT_TO_EXPORTS_ASSOCIATION equ 7
    D3D12_STATE_SUBOBJECT_TYPE_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION equ 8
    D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_SHADER_CONFIG equ 9
    D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG equ 10
    D3D12_STATE_SUBOBJECT_TYPE_HIT_GROUP equ 11
    D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG1 equ 12
    D3D12_STATE_SUBOBJECT_TYPE_MAX_VALID equ

    D3D12_STATE_SUBOBJECT struct
      Type_ D3D12_STATE_SUBOBJECT_TYPE ?
      pDesc POINTER ?
    D3D12_STATE_SUBOBJECT ends
    D3D12_STATE_OBJECT_FLAGS typedef SDWORD
    D3D12_STATE_OBJECT_FLAG_NONE equ 0
    D3D12_STATE_OBJECT_FLAG_ALLOW_LOCAL_DEPENDENCIES_ON_EXTERNAL_DEFINITIONS equ 1h
    D3D12_STATE_OBJECT_FLAG_ALLOW_EXTERNAL_DEPENDENCIES_ON_LOCAL_DEFINITIONS equ 2h
    D3D12_STATE_OBJECT_FLAG_ALLOW_STATE_OBJECT_ADDITIONS equ 4h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_STATE_OBJECT_FLAGS)
    D3D12_STATE_OBJECT_CONFIG struct
      Flags D3D12_STATE_OBJECT_FLAGS ?
    D3D12_STATE_OBJECT_CONFIG ends
    D3D12_GLOBAL_ROOT_SIGNATURE struct
      pGlobalRootSignature POINTER ?
    D3D12_GLOBAL_ROOT_SIGNATURE ends
    D3D12_LOCAL_ROOT_SIGNATURE struct
      pLocalRootSignature POINTER ?
    D3D12_LOCAL_ROOT_SIGNATURE ends
    D3D12_NODE_MASK struct
      NodeMask UINT ?
    D3D12_NODE_MASK ends
    D3D12_EXPORT_FLAGS typedef SDWORD
    D3D12_EXPORT_FLAG_NONE equ 0

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_EXPORT_FLAGS)
    D3D12_EXPORT_DESC struct
      Name_ LPCWSTR ?
      ExportToRename LPCWSTR ?
      Flags D3D12_EXPORT_FLAGS ?
    D3D12_EXPORT_DESC ends
    D3D12_DXIL_LIBRARY_DESC struct
      DXILLibrary D3D12_SHADER_BYTECODE <>
      NumExports UINT ?
      pExports POINTER ?
    D3D12_DXIL_LIBRARY_DESC ends
    D3D12_EXISTING_COLLECTION_DESC struct
      pExistingCollection POINTER ?
      NumExports UINT ?
      pExports POINTER ?
    D3D12_EXISTING_COLLECTION_DESC ends
    D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION struct
      pSubobjectToAssociate POINTER ?
      NumExports UINT ?
      pExports POINTER ?
    D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION ends
    D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION struct
      SubobjectToAssociate LPCWSTR ?
      NumExports UINT ?
      pExports POINTER ?
    D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION ends
    D3D12_HIT_GROUP_TYPE typedef SDWORD
    D3D12_HIT_GROUP_TYPE_TRIANGLES equ 0
    D3D12_HIT_GROUP_TYPE_PROCEDURAL_PRIMITIVE equ 1h

    D3D12_HIT_GROUP_DESC struct
      HitGroupExport LPCWSTR ?
      Type_ D3D12_HIT_GROUP_TYPE ?
      AnyHitShaderImport LPCWSTR ?
      ClosestHitShaderImport LPCWSTR ?
      IntersectionShaderImport LPCWSTR ?
    D3D12_HIT_GROUP_DESC ends
    D3D12_RAYTRACING_SHADER_CONFIG struct
      MaxPayloadSizeInBytes UINT ?
      MaxAttributeSizeInBytes UINT ?
    D3D12_RAYTRACING_SHADER_CONFIG ends
    D3D12_RAYTRACING_PIPELINE_CONFIG struct
      MaxTraceRecursionDepth UINT ?
    D3D12_RAYTRACING_PIPELINE_CONFIG ends
    D3D12_RAYTRACING_PIPELINE_FLAGS typedef SDWORD
    D3D12_RAYTRACING_PIPELINE_FLAG_NONE equ 0
    D3D12_RAYTRACING_PIPELINE_FLAG_SKIP_TRIANGLES equ 100h
    D3D12_RAYTRACING_PIPELINE_FLAG_SKIP_PROCEDURAL_PRIMITIVES equ 200h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_RAYTRACING_PIPELINE_FLAGS)
    D3D12_RAYTRACING_PIPELINE_CONFIG1 struct
      MaxTraceRecursionDepth UINT ?
      Flags D3D12_RAYTRACING_PIPELINE_FLAGS ?
    D3D12_RAYTRACING_PIPELINE_CONFIG1 ends
    D3D12_STATE_OBJECT_TYPE typedef SDWORD
    D3D12_STATE_OBJECT_TYPE_COLLECTION equ 0
    D3D12_STATE_OBJECT_TYPE_RAYTRACING_PIPELINE equ 3

    D3D12_STATE_OBJECT_DESC struct
      Type_ D3D12_STATE_OBJECT_TYPE ?
      NumSubobjects UINT ?
      pSubobjects POINTER ?
    D3D12_STATE_OBJECT_DESC ends
    D3D12_RAYTRACING_GEOMETRY_FLAGS typedef SDWORD
    D3D12_RAYTRACING_GEOMETRY_FLAG_NONE equ 0
    D3D12_RAYTRACING_GEOMETRY_FLAG_OPAQUE equ 1h
    D3D12_RAYTRACING_GEOMETRY_FLAG_NO_DUPLICATE_ANYHIT_INVOCATION equ 2h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_RAYTRACING_GEOMETRY_FLAGS)
    D3D12_RAYTRACING_GEOMETRY_TYPE typedef SDWORD
    D3D12_RAYTRACING_GEOMETRY_TYPE_TRIANGLES equ 0
    D3D12_RAYTRACING_GEOMETRY_TYPE_PROCEDURAL_PRIMITIVE_AABBS equ

    D3D12_RAYTRACING_INSTANCE_FLAGS typedef SDWORD
    D3D12_RAYTRACING_INSTANCE_FLAG_NONE equ 0
    D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_CULL_DISABLE equ 1h
    D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_FRONT_COUNTERCLOCKWISE equ 2h
    D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_OPAQUE equ 4h
    D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_NON_OPAQUE equ 8h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_RAYTRACING_INSTANCE_FLAGS)
    D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE struct
      StartAddress D3D12_GPU_VIRTUAL_ADDRESS ?
      StrideInBytes UINT64 ?
    D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE ends
    D3D12_GPU_VIRTUAL_ADDRESS_RANGE struct
      StartAddress D3D12_GPU_VIRTUAL_ADDRESS ?
      SizeInBytes UINT64 ?
    D3D12_GPU_VIRTUAL_ADDRESS_RANGE ends
    D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE struct
      StartAddress D3D12_GPU_VIRTUAL_ADDRESS ?
      SizeInBytes UINT64 ?
      StrideInBytes UINT64 ?
    D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE ends
    D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC struct
      Transform3x4 D3D12_GPU_VIRTUAL_ADDRESS ?
      IndexFormat DXGI_FORMAT ?
      VertexFormat DXGI_FORMAT ?
      IndexCount UINT ?
      VertexCount UINT ?
      IndexBuffer D3D12_GPU_VIRTUAL_ADDRESS ?
      VertexBuffer D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE <>
    D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC ends
    D3D12_RAYTRACING_AABB struct
      MinX FLOAT ?
      MinY FLOAT ?
      MinZ FLOAT ?
      MaxX FLOAT ?
      MaxY FLOAT ?
      MaxZ FLOAT ?
    D3D12_RAYTRACING_AABB ends
    D3D12_RAYTRACING_GEOMETRY_AABBS_DESC struct
      AABBCount UINT64 ?
      AABBs D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE <>
    D3D12_RAYTRACING_GEOMETRY_AABBS_DESC ends
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS typedef SDWORD
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_NONE equ 0
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE equ 1h
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_COMPACTION equ 2h
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_TRACE equ 4h
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_BUILD equ 8h
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_MINIMIZE_MEMORY equ 10h
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PERFORM_UPDATE equ 20h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS)
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE typedef SDWORD
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_CLONE equ 0
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_COMPACT equ 1h
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_VISUALIZATION_DECODE_FOR_TOOLS equ 2h
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_SERIALIZE equ 3h
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_DESERIALIZE equ 4h

    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE typedef SDWORD
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL equ 0
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL equ 1h

    D3D12_ELEMENTS_LAYOUT typedef SDWORD
    D3D12_ELEMENTS_LAYOUT_ARRAY equ 0
    D3D12_ELEMENTS_LAYOUT_ARRAY_OF_POINTERS equ 1h

    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE typedef SDWORD
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE equ 0
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION equ 1h
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION equ 2h
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE equ 3h

    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC struct
      DestBuffer D3D12_GPU_VIRTUAL_ADDRESS ?
      InfoType D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE ?
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC ends
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC struct
      CompactedSizeInBytes UINT64 ?
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC ends
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC struct
      DecodedSizeInBytes UINT64 ?
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC ends
    D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER struct
      Type_ D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE ?
      NumDescs UINT ?
    D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER ends
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC struct
      SerializedSizeInBytes UINT64 ?
      NumBottomLevelAccelerationStructurePointers UINT64 ?
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC ends
    D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER struct
      DriverOpaqueGUID GUID <>
      DriverOpaqueVersioningData BYTE 16 dup (?)
    D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER ends
    D3D12_SERIALIZED_DATA_TYPE typedef SDWORD
    D3D12_SERIALIZED_DATA_RAYTRACING_ACCELERATION_STRUCTURE equ 0

    D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS typedef SDWORD
    D3D12_DRIVER_MATCHING_IDENTIFIER_COMPATIBLE_WITH_DEVICE equ 0
    D3D12_DRIVER_MATCHING_IDENTIFIER_UNSUPPORTED_TYPE equ 1h
    D3D12_DRIVER_MATCHING_IDENTIFIER_UNRECOGNIZED equ 2h
    D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_VERSION equ 3h
    D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_TYPE equ 4h

    D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER struct
      DriverMatchingIdentifier D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER <>
      SerializedSizeInBytesIncludingHeader UINT64 ?
      DeserializedSizeInBytes UINT64 ?
      NumBottomLevelAccelerationStructurePointersAfterHeader UINT64 ?
    D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER ends
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC struct
      CurrentSizeInBytes UINT64 ?
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC ends
    D3D12_RAYTRACING_INSTANCE_DESC struct
      Transform FLOAT 3 * 4 dup (?)
      D3D12_RAYTRACING_INSTANCE_DESC_REC record D3D12_RAYTRACING_INSTANCE_DESC_REC_Flags:8, D3D12_RAYTRACING_INSTANCE_DESC_REC_InstanceContributionToHitGroupIndex:24, D3D12_RAYTRACING_INSTANCE_DESC_REC_InstanceMask:8, D3D12_RAYTRACING_INSTANCE_DESC_REC_InstanceID:24
      D3D12_RAYTRACING_INSTANCE_DESC_BITS D3D12_RAYTRACING_INSTANCE_DESC_REC <>
      AccelerationStructure D3D12_GPU_VIRTUAL_ADDRESS ?
    D3D12_RAYTRACING_INSTANCE_DESC ends
    D3D12_RAYTRACING_GEOMETRY_DESC struct
      Type_ D3D12_RAYTRACING_GEOMETRY_TYPE ?
      Flags D3D12_RAYTRACING_GEOMETRY_FLAGS ?
      union
        Triangles D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC <>
        AABBs D3D12_RAYTRACING_GEOMETRY_AABBS_DESC <>
      ends
    D3D12_RAYTRACING_GEOMETRY_DESC ends
    D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS struct
      Type_ D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE ?
      Flags D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS ?
      NumDescs UINT ?
      DescsLayout D3D12_ELEMENTS_LAYOUT ?
      union
        InstanceDescs D3D12_GPU_VIRTUAL_ADDRESS ?
        pGeometryDescs POINTER ?
        ppGeometryDescs POINTER ?
      ends
    D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS ends
    D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC struct
      DestAccelerationStructureData D3D12_GPU_VIRTUAL_ADDRESS ?
      Inputs D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS <>
      SourceAccelerationStructureData D3D12_GPU_VIRTUAL_ADDRESS ?
      ScratchAccelerationStructureData D3D12_GPU_VIRTUAL_ADDRESS ?
    D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC ends
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO struct
      ResultDataMaxSizeInBytes UINT64 ?
      ScratchDataSizeInBytes UINT64 ?
      UpdateScratchDataSizeInBytes UINT64 ?
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO ends
    D3D12_RAY_FLAGS typedef SDWORD
    D3D12_RAY_FLAG_NONE equ 0
    D3D12_RAY_FLAG_FORCE_OPAQUE equ 1h
    D3D12_RAY_FLAG_FORCE_NON_OPAQUE equ 2h
    D3D12_RAY_FLAG_ACCEPT_FIRST_HIT_AND_END_SEARCH equ 4h
    D3D12_RAY_FLAG_SKIP_CLOSEST_HIT_SHADER equ 8h
    D3D12_RAY_FLAG_CULL_BACK_FACING_TRIANGLES equ 10h
    D3D12_RAY_FLAG_CULL_FRONT_FACING_TRIANGLES equ 20h
    D3D12_RAY_FLAG_CULL_OPAQUE equ 40h
    D3D12_RAY_FLAG_CULL_NON_OPAQUE equ 80h
    D3D12_RAY_FLAG_SKIP_TRIANGLES equ 100h
    D3D12_RAY_FLAG_SKIP_PROCEDURAL_PRIMITIVES equ 200h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_RAY_FLAGS)
    D3D12_HIT_KIND typedef SDWORD
    D3D12_HIT_KIND_TRIANGLE_FRONT_FACE equ 0feh
    D3D12_HIT_KIND_TRIANGLE_BACK_FACE equ 0ffh

    externdef __MIDL_itf_d3d12_0000_0034_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0034_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12Device5_INTERFACE_DEFINED__
      __ID3D12Device5_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Device5:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12Device5Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12Device5Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Device5, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Device5
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Device5
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Device5, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Device5, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Device5, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Device5, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12Device, GetNodeCount)
          STD_METHOD GetNodeCount, :ptr ID3D12Device5
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandQueue)
          STD_METHOD CreateCommandQueue, :ptr ID3D12Device5, :ptr D3D12_COMMAND_QUEUE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandAllocator)
          STD_METHOD CreateCommandAllocator, :ptr ID3D12Device5, :D3D12_COMMAND_LIST_TYPE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateGraphicsPipelineState)
          STD_METHOD CreateGraphicsPipelineState, :ptr ID3D12Device5, :ptr D3D12_GRAPHICS_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateComputePipelineState)
          STD_METHOD CreateComputePipelineState, :ptr ID3D12Device5, :ptr D3D12_COMPUTE_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandList)
          STD_METHOD CreateCommandList, :ptr ID3D12Device5, :UINT, :D3D12_COMMAND_LIST_TYPE, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CheckFeatureSupport)
          STD_METHOD CheckFeatureSupport, :ptr ID3D12Device5, :D3D12_FEATURE, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDescriptorHeap)
          STD_METHOD CreateDescriptorHeap, :ptr ID3D12Device5, :ptr D3D12_DESCRIPTOR_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDescriptorHandleIncrementSize)
          STD_METHOD GetDescriptorHandleIncrementSize, :ptr ID3D12Device5, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRootSignature)
          STD_METHOD CreateRootSignature, :ptr ID3D12Device5, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateConstantBufferView)
          STD_METHOD CreateConstantBufferView, :ptr ID3D12Device5, :ptr D3D12_CONSTANT_BUFFER_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateShaderResourceView)
          STD_METHOD CreateShaderResourceView, :ptr ID3D12Device5, :ptr ID3D12Resource, :ptr D3D12_SHADER_RESOURCE_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateUnorderedAccessView)
          STD_METHOD CreateUnorderedAccessView, :ptr ID3D12Device5, :ptr ID3D12Resource, :ptr ID3D12Resource, :ptr D3D12_UNORDERED_ACCESS_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRenderTargetView)
          STD_METHOD CreateRenderTargetView, :ptr ID3D12Device5, :ptr ID3D12Resource, :ptr D3D12_RENDER_TARGET_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDepthStencilView)
          STD_METHOD CreateDepthStencilView, :ptr ID3D12Device5, :ptr ID3D12Resource, :ptr D3D12_DEPTH_STENCIL_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSampler)
          STD_METHOD CreateSampler, :ptr ID3D12Device5, :ptr D3D12_SAMPLER_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptors)
          STD_METHOD CopyDescriptors, :ptr ID3D12Device5, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptorsSimple)
          STD_METHOD CopyDescriptorsSimple, :ptr ID3D12Device5, :UINT, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceAllocationInfo)
          STD_METHOD GetResourceAllocationInfo, :ptr ID3D12Device5, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC
          DECLSPEC_XFGVIRT(ID3D12Device, GetCustomHeapProperties)
          STD_METHOD GetCustomHeapProperties, :ptr ID3D12Device5, :ptr D3D12_HEAP_PROPERTIES, :UINT, :D3D12_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommittedResource)
          STD_METHOD CreateCommittedResource, :ptr ID3D12Device5, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateHeap)
          STD_METHOD CreateHeap, :ptr ID3D12Device5, :ptr D3D12_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreatePlacedResource)
          STD_METHOD CreatePlacedResource, :ptr ID3D12Device5, :ptr ID3D12Heap, :UINT64, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateReservedResource)
          STD_METHOD CreateReservedResource, :ptr ID3D12Device5, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSharedHandle)
          STD_METHOD CreateSharedHandle, :ptr ID3D12Device5, :ptr ID3D12DeviceChild, :ptr SECURITY_ATTRIBUTES, :DWORD, :LPCWSTR, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandle)
          STD_METHOD OpenSharedHandle, :ptr ID3D12Device5, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandleByName)
          STD_METHOD OpenSharedHandleByName, :ptr ID3D12Device5, :LPCWSTR, :DWORD, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, MakeResident)
          STD_METHOD MakeResident, :ptr ID3D12Device5, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, Evict)
          STD_METHOD Evict, :ptr ID3D12Device5, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, CreateFence)
          STD_METHOD CreateFence, :ptr ID3D12Device5, :UINT64, :D3D12_FENCE_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDeviceRemovedReason)
          STD_METHOD GetDeviceRemovedReason, :ptr ID3D12Device5
          DECLSPEC_XFGVIRT(ID3D12Device, GetCopyableFootprints)
          STD_METHOD GetCopyableFootprints, :ptr ID3D12Device5, :ptr D3D12_RESOURCE_DESC, :UINT, :UINT, :UINT64, :ptr D3D12_PLACED_SUBRESOURCE_FOOTPRINT, :ptr UINT, :ptr UINT64, :ptr UINT64
          DECLSPEC_XFGVIRT(ID3D12Device, CreateQueryHeap)
          STD_METHOD CreateQueryHeap, :ptr ID3D12Device5, :ptr D3D12_QUERY_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, SetStablePowerState)
          STD_METHOD SetStablePowerState, :ptr ID3D12Device5, :BOOL
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandSignature)
          STD_METHOD CreateCommandSignature, :ptr ID3D12Device5, :ptr D3D12_COMMAND_SIGNATURE_DESC, :ptr ID3D12RootSignature, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceTiling)
          STD_METHOD GetResourceTiling, :ptr ID3D12Device5, :ptr ID3D12Resource, :ptr UINT, :ptr D3D12_PACKED_MIP_INFO, :ptr D3D12_TILE_SHAPE, :ptr UINT, :UINT, :ptr D3D12_SUBRESOURCE_TILING
          DECLSPEC_XFGVIRT(ID3D12Device, GetAdapterLuid)
          STD_METHOD GetAdapterLuid, :ptr ID3D12Device5, :ptr LUID
          DECLSPEC_XFGVIRT(ID3D12Device1, CreatePipelineLibrary)
          STD_METHOD CreatePipelineLibrary, :ptr ID3D12Device5, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device1, SetEventOnMultipleFenceCompletion)
          STD_METHOD SetEventOnMultipleFenceCompletion, :ptr ID3D12Device5, :ptr ptr ID3D12Fence, :ptr UINT64, :UINT, :D3D12_MULTIPLE_FENCE_WAIT_FLAGS, :HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device1, SetResidencyPriority)
          STD_METHOD SetResidencyPriority, :ptr ID3D12Device5, :UINT, :ptr ptr ID3D12Pageable, :ptr D3D12_RESIDENCY_PRIORITY
          DECLSPEC_XFGVIRT(ID3D12Device2, CreatePipelineState)
          STD_METHOD CreatePipelineState, :ptr ID3D12Device5, :ptr D3D12_PIPELINE_STATE_STREAM_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromAddress)
          STD_METHOD OpenExistingHeapFromAddress, :ptr ID3D12Device5, :ptr, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromFileMapping)
          STD_METHOD OpenExistingHeapFromFileMapping, :ptr ID3D12Device5, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, EnqueueMakeResident)
          STD_METHOD EnqueueMakeResident, :ptr ID3D12Device5, :D3D12_RESIDENCY_FLAGS, :UINT, :ptr ptr ID3D12Pageable, :ptr ID3D12Fence, :UINT64
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateCommandList1)
          STD_METHOD CreateCommandList1, :ptr ID3D12Device5, :UINT, :D3D12_COMMAND_LIST_TYPE, :D3D12_COMMAND_LIST_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateProtectedResourceSession)
          STD_METHOD CreateProtectedResourceSession, :ptr ID3D12Device5, :ptr D3D12_PROTECTED_RESOURCE_SESSION_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateCommittedResource1)
          STD_METHOD CreateCommittedResource1, :ptr ID3D12Device5, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateHeap1)
          STD_METHOD CreateHeap1, :ptr ID3D12Device5, :ptr D3D12_HEAP_DESC, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateReservedResource1)
          STD_METHOD CreateReservedResource1, :ptr ID3D12Device5, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, GetResourceAllocationInfo1)
          STD_METHOD GetResourceAllocationInfo1, :ptr ID3D12Device5, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC, :ptr D3D12_RESOURCE_ALLOCATION_INFO1
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateLifetimeTracker)
          STD_METHOD CreateLifetimeTracker, :ptr ID3D12Device5, :ptr ID3D12LifetimeOwner, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, RemoveDevice)
          STD_METHOD RemoveDevice, :ptr ID3D12Device5
          DECLSPEC_XFGVIRT(ID3D12Device5, EnumerateMetaCommands)
          STD_METHOD EnumerateMetaCommands, :ptr ID3D12Device5, :ptr UINT, :ptr D3D12_META_COMMAND_DESC
          DECLSPEC_XFGVIRT(ID3D12Device5, EnumerateMetaCommandParameters)
          STD_METHOD EnumerateMetaCommandParameters, :ptr ID3D12Device5, :REFGUID, :D3D12_META_COMMAND_PARAMETER_STAGE, :ptr UINT, :ptr UINT, :ptr D3D12_META_COMMAND_PARAMETER_DESC
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateMetaCommand)
          STD_METHOD CreateMetaCommand, :ptr ID3D12Device5, :REFGUID, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateStateObject)
          STD_METHOD CreateStateObject, :ptr ID3D12Device5, :ptr D3D12_STATE_OBJECT_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, GetRaytracingAccelerationStructurePrebuildInfo)
          STD_METHOD GetRaytracingAccelerationStructurePrebuildInfo, :ptr ID3D12Device5, :ptr D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS, :ptr D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO
          DECLSPEC_XFGVIRT(ID3D12Device5, CheckDriverMatchingIdentifier)
          STD_METHOD CheckDriverMatchingIdentifier, :ptr ID3D12Device5, :D3D12_SERIALIZED_DATA_TYPE, :ptr D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER
          ??Interface equ <>
          END_INTERFACE
        ID3D12Device5Vtbl ends
        ID3D12Device5 struct
          lpVtbl POINTER ?
        ID3D12Device5 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_AUTO_BREADCRUMB_OP typedef SDWORD
    D3D12_AUTO_BREADCRUMB_OP_SETMARKER equ 0
    D3D12_AUTO_BREADCRUMB_OP_BEGINEVENT equ 1
    D3D12_AUTO_BREADCRUMB_OP_ENDEVENT equ 2
    D3D12_AUTO_BREADCRUMB_OP_DRAWINSTANCED equ 3
    D3D12_AUTO_BREADCRUMB_OP_DRAWINDEXEDINSTANCED equ 4
    D3D12_AUTO_BREADCRUMB_OP_EXECUTEINDIRECT equ 5
    D3D12_AUTO_BREADCRUMB_OP_DISPATCH equ 6
    D3D12_AUTO_BREADCRUMB_OP_COPYBUFFERREGION equ 7
    D3D12_AUTO_BREADCRUMB_OP_COPYTEXTUREREGION equ 8
    D3D12_AUTO_BREADCRUMB_OP_COPYRESOURCE equ 9
    D3D12_AUTO_BREADCRUMB_OP_COPYTILES equ 10
    D3D12_AUTO_BREADCRUMB_OP_RESOLVESUBRESOURCE equ 11
    D3D12_AUTO_BREADCRUMB_OP_CLEARRENDERTARGETVIEW equ 12
    D3D12_AUTO_BREADCRUMB_OP_CLEARUNORDEREDACCESSVIEW equ 13
    D3D12_AUTO_BREADCRUMB_OP_CLEARDEPTHSTENCILVIEW equ 14
    D3D12_AUTO_BREADCRUMB_OP_RESOURCEBARRIER equ 15
    D3D12_AUTO_BREADCRUMB_OP_EXECUTEBUNDLE equ 16
    D3D12_AUTO_BREADCRUMB_OP_PRESENT equ 17
    D3D12_AUTO_BREADCRUMB_OP_RESOLVEQUERYDATA equ 18
    D3D12_AUTO_BREADCRUMB_OP_BEGINSUBMISSION equ 19
    D3D12_AUTO_BREADCRUMB_OP_ENDSUBMISSION equ 20
    D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME equ 21
    D3D12_AUTO_BREADCRUMB_OP_PROCESSFRAMES equ 22
    D3D12_AUTO_BREADCRUMB_OP_ATOMICCOPYBUFFERUINT equ 23
    D3D12_AUTO_BREADCRUMB_OP_ATOMICCOPYBUFFERUINT64 equ 24
    D3D12_AUTO_BREADCRUMB_OP_RESOLVESUBRESOURCEREGION equ 25
    D3D12_AUTO_BREADCRUMB_OP_WRITEBUFFERIMMEDIATE equ 26
    D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME1 equ 27
    D3D12_AUTO_BREADCRUMB_OP_SETPROTECTEDRESOURCESESSION equ 28
    D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME2 equ 29
    D3D12_AUTO_BREADCRUMB_OP_PROCESSFRAMES1 equ 30
    D3D12_AUTO_BREADCRUMB_OP_BUILDRAYTRACINGACCELERATIONSTRUCTURE equ 31
    D3D12_AUTO_BREADCRUMB_OP_EMITRAYTRACINGACCELERATIONSTRUCTUREPOSTBUILDINFO equ 32
    D3D12_AUTO_BREADCRUMB_OP_COPYRAYTRACINGACCELERATIONSTRUCTURE equ 33
    D3D12_AUTO_BREADCRUMB_OP_DISPATCHRAYS equ 34
    D3D12_AUTO_BREADCRUMB_OP_INITIALIZEMETACOMMAND equ 35
    D3D12_AUTO_BREADCRUMB_OP_EXECUTEMETACOMMAND equ 36
    D3D12_AUTO_BREADCRUMB_OP_ESTIMATEMOTION equ 37
    D3D12_AUTO_BREADCRUMB_OP_RESOLVEMOTIONVECTORHEAP equ 38
    D3D12_AUTO_BREADCRUMB_OP_SETPIPELINESTATE1 equ 39
    D3D12_AUTO_BREADCRUMB_OP_INITIALIZEEXTENSIONCOMMAND equ 40
    D3D12_AUTO_BREADCRUMB_OP_EXECUTEEXTENSIONCOMMAND equ 41
    D3D12_AUTO_BREADCRUMB_OP_DISPATCHMESH equ 42
    D3D12_AUTO_BREADCRUMB_OP_ENCODEFRAME equ 43
    D3D12_AUTO_BREADCRUMB_OP_RESOLVEENCODEROUTPUTMETADATA equ 44

    D3D12_AUTO_BREADCRUMB_NODE struct
      pCommandListDebugNameA POINTER ?
      pCommandListDebugNameW POINTER ?
      pCommandQueueDebugNameA POINTER ?
      pCommandQueueDebugNameW POINTER ?
      pCommandList POINTER ?
      pCommandQueue POINTER ?
      BreadcrumbCount UINT32 ?
      pLastBreadcrumbValue POINTER ?
      pCommandHistory POINTER ?
      pNext POINTER ?
    D3D12_AUTO_BREADCRUMB_NODE ends
    D3D12_DRED_BREADCRUMB_CONTEXT struct
      BreadcrumbIndex UINT ?
      pContextString POINTER ?
    D3D12_DRED_BREADCRUMB_CONTEXT ends
    D3D12_AUTO_BREADCRUMB_NODE1 struct
      pCommandListDebugNameA POINTER ?
      pCommandListDebugNameW POINTER ?
      pCommandQueueDebugNameA POINTER ?
      pCommandQueueDebugNameW POINTER ?
      pCommandList POINTER ?
      pCommandQueue POINTER ?
      BreadcrumbCount UINT ?
      pLastBreadcrumbValue POINTER ?
      pCommandHistory POINTER ?
      pNext POINTER ?
      BreadcrumbContextsCount UINT ?
      pBreadcrumbContexts POINTER ?
    D3D12_AUTO_BREADCRUMB_NODE1 ends
    D3D12_DRED_VERSION typedef SDWORD
    D3D12_DRED_VERSION_1_0 equ 1h
    D3D12_DRED_VERSION_1_1 equ 2h
    D3D12_DRED_VERSION_1_2 equ 3h
    D3D12_DRED_VERSION_1_3 equ 4h

    D3D12_DRED_FLAGS typedef SDWORD
    D3D12_DRED_FLAG_NONE equ 0
    D3D12_DRED_FLAG_FORCE_ENABLE equ 1
    D3D12_DRED_FLAG_DISABLE_AUTOBREADCRUMBS equ 2

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_DRED_FLAGS)
    D3D12_DRED_ENABLEMENT typedef SDWORD
    D3D12_DRED_ENABLEMENT_SYSTEM_CONTROLLED equ 0
    D3D12_DRED_ENABLEMENT_FORCED_OFF equ 1
    D3D12_DRED_ENABLEMENT_FORCED_ON equ 2

    D3D12_DEVICE_REMOVED_EXTENDED_DATA struct
      Flags D3D12_DRED_FLAGS ?
      pHeadAutoBreadcrumbNode POINTER ?
    D3D12_DEVICE_REMOVED_EXTENDED_DATA ends
    D3D12_DRED_ALLOCATION_TYPE typedef SDWORD
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_QUEUE equ 19
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_ALLOCATOR equ 20
    D3D12_DRED_ALLOCATION_TYPE_PIPELINE_STATE equ 21
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_LIST equ 22
    D3D12_DRED_ALLOCATION_TYPE_FENCE equ 23
    D3D12_DRED_ALLOCATION_TYPE_DESCRIPTOR_HEAP equ 24
    D3D12_DRED_ALLOCATION_TYPE_HEAP equ 25
    D3D12_DRED_ALLOCATION_TYPE_QUERY_HEAP equ 27
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_SIGNATURE equ 28
    D3D12_DRED_ALLOCATION_TYPE_PIPELINE_LIBRARY equ 29
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_DECODER equ 30
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_PROCESSOR equ 32
    D3D12_DRED_ALLOCATION_TYPE_RESOURCE equ 34
    D3D12_DRED_ALLOCATION_TYPE_PASS equ 35
    D3D12_DRED_ALLOCATION_TYPE_CRYPTOSESSION equ 36
    D3D12_DRED_ALLOCATION_TYPE_CRYPTOSESSIONPOLICY equ 37
    D3D12_DRED_ALLOCATION_TYPE_PROTECTEDRESOURCESESSION equ 38
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_DECODER_HEAP equ 39
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_POOL equ 40
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_RECORDER equ 41
    D3D12_DRED_ALLOCATION_TYPE_STATE_OBJECT equ 42
    D3D12_DRED_ALLOCATION_TYPE_METACOMMAND equ 43
    D3D12_DRED_ALLOCATION_TYPE_SCHEDULINGGROUP equ 44
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_MOTION_ESTIMATOR equ 45
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_MOTION_VECTOR_HEAP equ 46
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_EXTENSION_COMMAND equ 47
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_ENCODER equ 48
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_ENCODER_HEAP equ 49
    D3D12_DRED_ALLOCATION_TYPE_INVALID equ 0ffffffffh

    D3D12_DRED_ALLOCATION_NODE struct
      ObjectNameA POINTER ?
      ObjectNameW POINTER ?
      AllocationType D3D12_DRED_ALLOCATION_TYPE ?
      pNext POINTER ?
    D3D12_DRED_ALLOCATION_NODE ends
    D3D12_DRED_ALLOCATION_NODE1 struct
      ObjectNameA POINTER ?
      ObjectNameW POINTER ?
      AllocationType D3D12_DRED_ALLOCATION_TYPE ?
      pNext POINTER ?
      pObject POINTER ?
    D3D12_DRED_ALLOCATION_NODE1 ends
    D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT struct
      pHeadAutoBreadcrumbNode POINTER ?
    D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT ends
    D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1 struct
      pHeadAutoBreadcrumbNode POINTER ?
    D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1 ends
    D3D12_DRED_PAGE_FAULT_OUTPUT struct
      PageFaultVA D3D12_GPU_VIRTUAL_ADDRESS ?
      pHeadExistingAllocationNode POINTER ?
      pHeadRecentFreedAllocationNode POINTER ?
    D3D12_DRED_PAGE_FAULT_OUTPUT ends
    D3D12_DRED_PAGE_FAULT_OUTPUT1 struct
      PageFaultVA D3D12_GPU_VIRTUAL_ADDRESS ?
      pHeadExistingAllocationNode POINTER ?
      pHeadRecentFreedAllocationNode POINTER ?
    D3D12_DRED_PAGE_FAULT_OUTPUT1 ends
    D3D12_DRED_PAGE_FAULT_FLAGS typedef SDWORD
    D3D12_DRED_PAGE_FAULT_FLAGS_NONE equ 0

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_DRED_PAGE_FAULT_FLAGS)
    D3D12_DRED_DEVICE_STATE typedef SDWORD
    D3D12_DRED_DEVICE_STATE_UNKNOWN equ 0
    D3D12_DRED_DEVICE_STATE_HUNG equ 3
    D3D12_DRED_DEVICE_STATE_FAULT equ 6
    D3D12_DRED_DEVICE_STATE_PAGEFAULT equ 7

    D3D12_DRED_PAGE_FAULT_OUTPUT2 struct
      PageFaultVA D3D12_GPU_VIRTUAL_ADDRESS ?
      pHeadExistingAllocationNode POINTER ?
      pHeadRecentFreedAllocationNode POINTER ?
      PageFaultFlags D3D12_DRED_PAGE_FAULT_FLAGS ?
    D3D12_DRED_PAGE_FAULT_OUTPUT2 ends
    D3D12_DEVICE_REMOVED_EXTENDED_DATA1 struct
      DeviceRemovedReason HRESULT ?
      AutoBreadcrumbsOutput D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT <>
      PageFaultOutput D3D12_DRED_PAGE_FAULT_OUTPUT <>
    D3D12_DEVICE_REMOVED_EXTENDED_DATA1 ends
    D3D12_DEVICE_REMOVED_EXTENDED_DATA2 struct
      DeviceRemovedReason HRESULT ?
      AutoBreadcrumbsOutput D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1 <>
      PageFaultOutput D3D12_DRED_PAGE_FAULT_OUTPUT1 <>
    D3D12_DEVICE_REMOVED_EXTENDED_DATA2 ends
    D3D12_DEVICE_REMOVED_EXTENDED_DATA3 struct
      DeviceRemovedReason HRESULT ?
      AutoBreadcrumbsOutput D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1 <>
      PageFaultOutput D3D12_DRED_PAGE_FAULT_OUTPUT2 <>
      DeviceState D3D12_DRED_DEVICE_STATE ?
    D3D12_DEVICE_REMOVED_EXTENDED_DATA3 ends
    D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA struct
      Version D3D12_DRED_VERSION ?
      union
        Dred_1_0 D3D12_DEVICE_REMOVED_EXTENDED_DATA <>
        Dred_1_1 D3D12_DEVICE_REMOVED_EXTENDED_DATA1 <>
        Dred_1_2 D3D12_DEVICE_REMOVED_EXTENDED_DATA2 <>
        Dred_1_3 D3D12_DEVICE_REMOVED_EXTENDED_DATA3 <>
      ends
    D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA ends
    externdef __MIDL_itf_d3d12_0000_0035_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0035_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12DeviceRemovedExtendedDataSettings_INTERFACE_DEFINED__
      __ID3D12DeviceRemovedExtendedDataSettings_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12DeviceRemovedExtendedDataSettings:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12DeviceRemovedExtendedDataSettingsVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12DeviceRemovedExtendedDataSettingsVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12DeviceRemovedExtendedDataSettings, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12DeviceRemovedExtendedDataSettings
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12DeviceRemovedExtendedDataSettings
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedDataSettings, SetAutoBreadcrumbsEnablement)
          STD_METHOD SetAutoBreadcrumbsEnablement, :ptr ID3D12DeviceRemovedExtendedDataSettings, :D3D12_DRED_ENABLEMENT
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedDataSettings, SetPageFaultEnablement)
          STD_METHOD SetPageFaultEnablement, :ptr ID3D12DeviceRemovedExtendedDataSettings, :D3D12_DRED_ENABLEMENT
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedDataSettings, SetWatsonDumpEnablement)
          STD_METHOD SetWatsonDumpEnablement, :ptr ID3D12DeviceRemovedExtendedDataSettings, :D3D12_DRED_ENABLEMENT
          ??Interface equ <>
          END_INTERFACE
        ID3D12DeviceRemovedExtendedDataSettingsVtbl ends
        ID3D12DeviceRemovedExtendedDataSettings struct
          lpVtbl POINTER ?
        ID3D12DeviceRemovedExtendedDataSettings ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12DeviceRemovedExtendedDataSettings1_INTERFACE_DEFINED__
      __ID3D12DeviceRemovedExtendedDataSettings1_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12DeviceRemovedExtendedDataSettings1:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12DeviceRemovedExtendedDataSettings1Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12DeviceRemovedExtendedDataSettings1Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12DeviceRemovedExtendedDataSettings1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12DeviceRemovedExtendedDataSettings1
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12DeviceRemovedExtendedDataSettings1
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedDataSettings, SetAutoBreadcrumbsEnablement)
          STD_METHOD SetAutoBreadcrumbsEnablement, :ptr ID3D12DeviceRemovedExtendedDataSettings1, :D3D12_DRED_ENABLEMENT
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedDataSettings, SetPageFaultEnablement)
          STD_METHOD SetPageFaultEnablement, :ptr ID3D12DeviceRemovedExtendedDataSettings1, :D3D12_DRED_ENABLEMENT
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedDataSettings, SetWatsonDumpEnablement)
          STD_METHOD SetWatsonDumpEnablement, :ptr ID3D12DeviceRemovedExtendedDataSettings1, :D3D12_DRED_ENABLEMENT
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedDataSettings1, SetBreadcrumbContextEnablement)
          STD_METHOD SetBreadcrumbContextEnablement, :ptr ID3D12DeviceRemovedExtendedDataSettings1, :D3D12_DRED_ENABLEMENT
          ??Interface equ <>
          END_INTERFACE
        ID3D12DeviceRemovedExtendedDataSettings1Vtbl ends
        ID3D12DeviceRemovedExtendedDataSettings1 struct
          lpVtbl POINTER ?
        ID3D12DeviceRemovedExtendedDataSettings1 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12DeviceRemovedExtendedData_INTERFACE_DEFINED__
      __ID3D12DeviceRemovedExtendedData_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12DeviceRemovedExtendedData:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12DeviceRemovedExtendedDataVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12DeviceRemovedExtendedDataVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12DeviceRemovedExtendedData, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12DeviceRemovedExtendedData
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12DeviceRemovedExtendedData
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedData, GetAutoBreadcrumbsOutput)
          STD_METHOD GetAutoBreadcrumbsOutput, :ptr ID3D12DeviceRemovedExtendedData, :ptr D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedData, GetPageFaultAllocationOutput)
          STD_METHOD GetPageFaultAllocationOutput, :ptr ID3D12DeviceRemovedExtendedData, :ptr D3D12_DRED_PAGE_FAULT_OUTPUT
          ??Interface equ <>
          END_INTERFACE
        ID3D12DeviceRemovedExtendedDataVtbl ends
        ID3D12DeviceRemovedExtendedData struct
          lpVtbl POINTER ?
        ID3D12DeviceRemovedExtendedData ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12DeviceRemovedExtendedData1_INTERFACE_DEFINED__
      __ID3D12DeviceRemovedExtendedData1_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12DeviceRemovedExtendedData1:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12DeviceRemovedExtendedData1Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12DeviceRemovedExtendedData1Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12DeviceRemovedExtendedData1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12DeviceRemovedExtendedData1
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12DeviceRemovedExtendedData1
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedData, GetAutoBreadcrumbsOutput)
          STD_METHOD GetAutoBreadcrumbsOutput, :ptr ID3D12DeviceRemovedExtendedData1, :ptr D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedData, GetPageFaultAllocationOutput)
          STD_METHOD GetPageFaultAllocationOutput, :ptr ID3D12DeviceRemovedExtendedData1, :ptr D3D12_DRED_PAGE_FAULT_OUTPUT
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedData1, GetAutoBreadcrumbsOutput1)
          STD_METHOD GetAutoBreadcrumbsOutput1, :ptr ID3D12DeviceRemovedExtendedData1, :ptr D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedData1, GetPageFaultAllocationOutput1)
          STD_METHOD GetPageFaultAllocationOutput1, :ptr ID3D12DeviceRemovedExtendedData1, :ptr D3D12_DRED_PAGE_FAULT_OUTPUT1
          ??Interface equ <>
          END_INTERFACE
        ID3D12DeviceRemovedExtendedData1Vtbl ends
        ID3D12DeviceRemovedExtendedData1 struct
          lpVtbl POINTER ?
        ID3D12DeviceRemovedExtendedData1 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12DeviceRemovedExtendedData2_INTERFACE_DEFINED__
      __ID3D12DeviceRemovedExtendedData2_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12DeviceRemovedExtendedData2:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12DeviceRemovedExtendedData2Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12DeviceRemovedExtendedData2Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12DeviceRemovedExtendedData2, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12DeviceRemovedExtendedData2
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12DeviceRemovedExtendedData2
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedData, GetAutoBreadcrumbsOutput)
          STD_METHOD GetAutoBreadcrumbsOutput, :ptr ID3D12DeviceRemovedExtendedData2, :ptr D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedData, GetPageFaultAllocationOutput)
          STD_METHOD GetPageFaultAllocationOutput, :ptr ID3D12DeviceRemovedExtendedData2, :ptr D3D12_DRED_PAGE_FAULT_OUTPUT
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedData1, GetAutoBreadcrumbsOutput1)
          STD_METHOD GetAutoBreadcrumbsOutput1, :ptr ID3D12DeviceRemovedExtendedData2, :ptr D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedData1, GetPageFaultAllocationOutput1)
          STD_METHOD GetPageFaultAllocationOutput1, :ptr ID3D12DeviceRemovedExtendedData2, :ptr D3D12_DRED_PAGE_FAULT_OUTPUT1
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedData2, GetPageFaultAllocationOutput2)
          STD_METHOD GetPageFaultAllocationOutput2, :ptr ID3D12DeviceRemovedExtendedData2, :ptr D3D12_DRED_PAGE_FAULT_OUTPUT2
          DECLSPEC_XFGVIRT(ID3D12DeviceRemovedExtendedData2, GetDeviceState)
          STD_METHOD GetDeviceState, :ptr ID3D12DeviceRemovedExtendedData2
          ??Interface equ <>
          END_INTERFACE
        ID3D12DeviceRemovedExtendedData2Vtbl ends
        ID3D12DeviceRemovedExtendedData2 struct
          lpVtbl POINTER ?
        ID3D12DeviceRemovedExtendedData2 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_BACKGROUND_PROCESSING_MODE typedef SDWORD
    D3D12_BACKGROUND_PROCESSING_MODE_ALLOWED equ 0
    D3D12_BACKGROUND_PROCESSING_MODE_ALLOW_INTRUSIVE_MEASUREMENTS equ
    D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_BACKGROUND_WORK equ
    D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_PROFILING_BY_SYSTEM equ

    D3D12_MEASUREMENTS_ACTION typedef SDWORD
    D3D12_MEASUREMENTS_ACTION_KEEP_ALL equ 0
    D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS equ
    D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS_HIGH_PRIORITY equ
    D3D12_MEASUREMENTS_ACTION_DISCARD_PREVIOUS equ

    externdef __MIDL_itf_d3d12_0000_0040_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0040_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12Device6_INTERFACE_DEFINED__
      __ID3D12Device6_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Device6:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12Device6Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12Device6Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Device6, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Device6
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Device6
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Device6, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Device6, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Device6, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Device6, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12Device, GetNodeCount)
          STD_METHOD GetNodeCount, :ptr ID3D12Device6
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandQueue)
          STD_METHOD CreateCommandQueue, :ptr ID3D12Device6, :ptr D3D12_COMMAND_QUEUE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandAllocator)
          STD_METHOD CreateCommandAllocator, :ptr ID3D12Device6, :D3D12_COMMAND_LIST_TYPE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateGraphicsPipelineState)
          STD_METHOD CreateGraphicsPipelineState, :ptr ID3D12Device6, :ptr D3D12_GRAPHICS_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateComputePipelineState)
          STD_METHOD CreateComputePipelineState, :ptr ID3D12Device6, :ptr D3D12_COMPUTE_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandList)
          STD_METHOD CreateCommandList, :ptr ID3D12Device6, :UINT, :D3D12_COMMAND_LIST_TYPE, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CheckFeatureSupport)
          STD_METHOD CheckFeatureSupport, :ptr ID3D12Device6, :D3D12_FEATURE, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDescriptorHeap)
          STD_METHOD CreateDescriptorHeap, :ptr ID3D12Device6, :ptr D3D12_DESCRIPTOR_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDescriptorHandleIncrementSize)
          STD_METHOD GetDescriptorHandleIncrementSize, :ptr ID3D12Device6, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRootSignature)
          STD_METHOD CreateRootSignature, :ptr ID3D12Device6, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateConstantBufferView)
          STD_METHOD CreateConstantBufferView, :ptr ID3D12Device6, :ptr D3D12_CONSTANT_BUFFER_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateShaderResourceView)
          STD_METHOD CreateShaderResourceView, :ptr ID3D12Device6, :ptr ID3D12Resource, :ptr D3D12_SHADER_RESOURCE_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateUnorderedAccessView)
          STD_METHOD CreateUnorderedAccessView, :ptr ID3D12Device6, :ptr ID3D12Resource, :ptr ID3D12Resource, :ptr D3D12_UNORDERED_ACCESS_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRenderTargetView)
          STD_METHOD CreateRenderTargetView, :ptr ID3D12Device6, :ptr ID3D12Resource, :ptr D3D12_RENDER_TARGET_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDepthStencilView)
          STD_METHOD CreateDepthStencilView, :ptr ID3D12Device6, :ptr ID3D12Resource, :ptr D3D12_DEPTH_STENCIL_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSampler)
          STD_METHOD CreateSampler, :ptr ID3D12Device6, :ptr D3D12_SAMPLER_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptors)
          STD_METHOD CopyDescriptors, :ptr ID3D12Device6, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptorsSimple)
          STD_METHOD CopyDescriptorsSimple, :ptr ID3D12Device6, :UINT, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceAllocationInfo)
          STD_METHOD GetResourceAllocationInfo, :ptr ID3D12Device6, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC
          DECLSPEC_XFGVIRT(ID3D12Device, GetCustomHeapProperties)
          STD_METHOD GetCustomHeapProperties, :ptr ID3D12Device6, :ptr D3D12_HEAP_PROPERTIES, :UINT, :D3D12_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommittedResource)
          STD_METHOD CreateCommittedResource, :ptr ID3D12Device6, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateHeap)
          STD_METHOD CreateHeap, :ptr ID3D12Device6, :ptr D3D12_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreatePlacedResource)
          STD_METHOD CreatePlacedResource, :ptr ID3D12Device6, :ptr ID3D12Heap, :UINT64, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateReservedResource)
          STD_METHOD CreateReservedResource, :ptr ID3D12Device6, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSharedHandle)
          STD_METHOD CreateSharedHandle, :ptr ID3D12Device6, :ptr ID3D12DeviceChild, :ptr SECURITY_ATTRIBUTES, :DWORD, :LPCWSTR, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandle)
          STD_METHOD OpenSharedHandle, :ptr ID3D12Device6, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandleByName)
          STD_METHOD OpenSharedHandleByName, :ptr ID3D12Device6, :LPCWSTR, :DWORD, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, MakeResident)
          STD_METHOD MakeResident, :ptr ID3D12Device6, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, Evict)
          STD_METHOD Evict, :ptr ID3D12Device6, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, CreateFence)
          STD_METHOD CreateFence, :ptr ID3D12Device6, :UINT64, :D3D12_FENCE_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDeviceRemovedReason)
          STD_METHOD GetDeviceRemovedReason, :ptr ID3D12Device6
          DECLSPEC_XFGVIRT(ID3D12Device, GetCopyableFootprints)
          STD_METHOD GetCopyableFootprints, :ptr ID3D12Device6, :ptr D3D12_RESOURCE_DESC, :UINT, :UINT, :UINT64, :ptr D3D12_PLACED_SUBRESOURCE_FOOTPRINT, :ptr UINT, :ptr UINT64, :ptr UINT64
          DECLSPEC_XFGVIRT(ID3D12Device, CreateQueryHeap)
          STD_METHOD CreateQueryHeap, :ptr ID3D12Device6, :ptr D3D12_QUERY_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, SetStablePowerState)
          STD_METHOD SetStablePowerState, :ptr ID3D12Device6, :BOOL
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandSignature)
          STD_METHOD CreateCommandSignature, :ptr ID3D12Device6, :ptr D3D12_COMMAND_SIGNATURE_DESC, :ptr ID3D12RootSignature, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceTiling)
          STD_METHOD GetResourceTiling, :ptr ID3D12Device6, :ptr ID3D12Resource, :ptr UINT, :ptr D3D12_PACKED_MIP_INFO, :ptr D3D12_TILE_SHAPE, :ptr UINT, :UINT, :ptr D3D12_SUBRESOURCE_TILING
          DECLSPEC_XFGVIRT(ID3D12Device, GetAdapterLuid)
          STD_METHOD GetAdapterLuid, :ptr ID3D12Device6, :ptr LUID
          DECLSPEC_XFGVIRT(ID3D12Device1, CreatePipelineLibrary)
          STD_METHOD CreatePipelineLibrary, :ptr ID3D12Device6, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device1, SetEventOnMultipleFenceCompletion)
          STD_METHOD SetEventOnMultipleFenceCompletion, :ptr ID3D12Device6, :ptr ptr ID3D12Fence, :ptr UINT64, :UINT, :D3D12_MULTIPLE_FENCE_WAIT_FLAGS, :HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device1, SetResidencyPriority)
          STD_METHOD SetResidencyPriority, :ptr ID3D12Device6, :UINT, :ptr ptr ID3D12Pageable, :ptr D3D12_RESIDENCY_PRIORITY
          DECLSPEC_XFGVIRT(ID3D12Device2, CreatePipelineState)
          STD_METHOD CreatePipelineState, :ptr ID3D12Device6, :ptr D3D12_PIPELINE_STATE_STREAM_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromAddress)
          STD_METHOD OpenExistingHeapFromAddress, :ptr ID3D12Device6, :ptr, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromFileMapping)
          STD_METHOD OpenExistingHeapFromFileMapping, :ptr ID3D12Device6, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, EnqueueMakeResident)
          STD_METHOD EnqueueMakeResident, :ptr ID3D12Device6, :D3D12_RESIDENCY_FLAGS, :UINT, :ptr ptr ID3D12Pageable, :ptr ID3D12Fence, :UINT64
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateCommandList1)
          STD_METHOD CreateCommandList1, :ptr ID3D12Device6, :UINT, :D3D12_COMMAND_LIST_TYPE, :D3D12_COMMAND_LIST_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateProtectedResourceSession)
          STD_METHOD CreateProtectedResourceSession, :ptr ID3D12Device6, :ptr D3D12_PROTECTED_RESOURCE_SESSION_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateCommittedResource1)
          STD_METHOD CreateCommittedResource1, :ptr ID3D12Device6, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateHeap1)
          STD_METHOD CreateHeap1, :ptr ID3D12Device6, :ptr D3D12_HEAP_DESC, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateReservedResource1)
          STD_METHOD CreateReservedResource1, :ptr ID3D12Device6, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, GetResourceAllocationInfo1)
          STD_METHOD GetResourceAllocationInfo1, :ptr ID3D12Device6, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC, :ptr D3D12_RESOURCE_ALLOCATION_INFO1
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateLifetimeTracker)
          STD_METHOD CreateLifetimeTracker, :ptr ID3D12Device6, :ptr ID3D12LifetimeOwner, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, RemoveDevice)
          STD_METHOD RemoveDevice, :ptr ID3D12Device6
          DECLSPEC_XFGVIRT(ID3D12Device5, EnumerateMetaCommands)
          STD_METHOD EnumerateMetaCommands, :ptr ID3D12Device6, :ptr UINT, :ptr D3D12_META_COMMAND_DESC
          DECLSPEC_XFGVIRT(ID3D12Device5, EnumerateMetaCommandParameters)
          STD_METHOD EnumerateMetaCommandParameters, :ptr ID3D12Device6, :REFGUID, :D3D12_META_COMMAND_PARAMETER_STAGE, :ptr UINT, :ptr UINT, :ptr D3D12_META_COMMAND_PARAMETER_DESC
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateMetaCommand)
          STD_METHOD CreateMetaCommand, :ptr ID3D12Device6, :REFGUID, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateStateObject)
          STD_METHOD CreateStateObject, :ptr ID3D12Device6, :ptr D3D12_STATE_OBJECT_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, GetRaytracingAccelerationStructurePrebuildInfo)
          STD_METHOD GetRaytracingAccelerationStructurePrebuildInfo, :ptr ID3D12Device6, :ptr D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS, :ptr D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO
          DECLSPEC_XFGVIRT(ID3D12Device5, CheckDriverMatchingIdentifier)
          STD_METHOD CheckDriverMatchingIdentifier, :ptr ID3D12Device6, :D3D12_SERIALIZED_DATA_TYPE, :ptr D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER
          DECLSPEC_XFGVIRT(ID3D12Device6, SetBackgroundProcessingMode)
          STD_METHOD SetBackgroundProcessingMode, :ptr ID3D12Device6, :D3D12_BACKGROUND_PROCESSING_MODE, :D3D12_MEASUREMENTS_ACTION, :HANDLE, :ptr BOOL
          ??Interface equ <>
          END_INTERFACE
        ID3D12Device6Vtbl ends
        ID3D12Device6 struct
          lpVtbl POINTER ?
        ID3D12Device6 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    DEFINE_GUID D3D12_PROTECTED_RESOURCES_SESSION_HARDWARE_PROTECTED, 62B0084Eh, 0C70Eh, 4DAAh, 0A1h, 09h, 30h, 0FFh, 8Dh, 5Ah, 04h, 82h
    D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT struct
      NodeIndex UINT ?
      Count UINT ?
    D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT ends
    D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES struct
      NodeIndex UINT ?
      Count UINT ?
      pTypes POINTER ?
    D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES ends
    D3D12_PROTECTED_RESOURCE_SESSION_DESC1 struct
      NodeMask UINT ?
      Flags D3D12_PROTECTED_RESOURCE_SESSION_FLAGS ?
      ProtectionType GUID <>
    D3D12_PROTECTED_RESOURCE_SESSION_DESC1 ends
    externdef __MIDL_itf_d3d12_0000_0041_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0041_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12ProtectedResourceSession1_INTERFACE_DEFINED__
      __ID3D12ProtectedResourceSession1_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12ProtectedResourceSession1:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12ProtectedResourceSession1Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12ProtectedResourceSession1Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12ProtectedResourceSession1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12ProtectedResourceSession1
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12ProtectedResourceSession1
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12ProtectedResourceSession1, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12ProtectedResourceSession1, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12ProtectedResourceSession1, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12ProtectedResourceSession1, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12ProtectedResourceSession1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12ProtectedSession, GetStatusFence)
          STD_METHOD GetStatusFence, :ptr ID3D12ProtectedResourceSession1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12ProtectedSession, GetSessionStatus)
          STD_METHOD GetSessionStatus, :ptr ID3D12ProtectedResourceSession1
          DECLSPEC_XFGVIRT(ID3D12ProtectedResourceSession, GetDesc)
          STD_METHOD GetDesc, :ptr ID3D12ProtectedResourceSession1, :ptr D3D12_PROTECTED_RESOURCE_SESSION_DESC
          DECLSPEC_XFGVIRT(ID3D12ProtectedResourceSession1, GetDesc1)
          STD_METHOD GetDesc1, :ptr ID3D12ProtectedResourceSession1, :ptr D3D12_PROTECTED_RESOURCE_SESSION_DESC1
          ??Interface equ <>
          END_INTERFACE
        ID3D12ProtectedResourceSession1Vtbl ends
        ID3D12ProtectedResourceSession1 struct
          lpVtbl POINTER ?
        ID3D12ProtectedResourceSession1 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12Device7_INTERFACE_DEFINED__
      __ID3D12Device7_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Device7:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12Device7Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12Device7Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Device7, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Device7
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Device7
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Device7, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Device7, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Device7, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Device7, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12Device, GetNodeCount)
          STD_METHOD GetNodeCount, :ptr ID3D12Device7
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandQueue)
          STD_METHOD CreateCommandQueue, :ptr ID3D12Device7, :ptr D3D12_COMMAND_QUEUE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandAllocator)
          STD_METHOD CreateCommandAllocator, :ptr ID3D12Device7, :D3D12_COMMAND_LIST_TYPE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateGraphicsPipelineState)
          STD_METHOD CreateGraphicsPipelineState, :ptr ID3D12Device7, :ptr D3D12_GRAPHICS_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateComputePipelineState)
          STD_METHOD CreateComputePipelineState, :ptr ID3D12Device7, :ptr D3D12_COMPUTE_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandList)
          STD_METHOD CreateCommandList, :ptr ID3D12Device7, :UINT, :D3D12_COMMAND_LIST_TYPE, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CheckFeatureSupport)
          STD_METHOD CheckFeatureSupport, :ptr ID3D12Device7, :D3D12_FEATURE, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDescriptorHeap)
          STD_METHOD CreateDescriptorHeap, :ptr ID3D12Device7, :ptr D3D12_DESCRIPTOR_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDescriptorHandleIncrementSize)
          STD_METHOD GetDescriptorHandleIncrementSize, :ptr ID3D12Device7, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRootSignature)
          STD_METHOD CreateRootSignature, :ptr ID3D12Device7, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateConstantBufferView)
          STD_METHOD CreateConstantBufferView, :ptr ID3D12Device7, :ptr D3D12_CONSTANT_BUFFER_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateShaderResourceView)
          STD_METHOD CreateShaderResourceView, :ptr ID3D12Device7, :ptr ID3D12Resource, :ptr D3D12_SHADER_RESOURCE_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateUnorderedAccessView)
          STD_METHOD CreateUnorderedAccessView, :ptr ID3D12Device7, :ptr ID3D12Resource, :ptr ID3D12Resource, :ptr D3D12_UNORDERED_ACCESS_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRenderTargetView)
          STD_METHOD CreateRenderTargetView, :ptr ID3D12Device7, :ptr ID3D12Resource, :ptr D3D12_RENDER_TARGET_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDepthStencilView)
          STD_METHOD CreateDepthStencilView, :ptr ID3D12Device7, :ptr ID3D12Resource, :ptr D3D12_DEPTH_STENCIL_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSampler)
          STD_METHOD CreateSampler, :ptr ID3D12Device7, :ptr D3D12_SAMPLER_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptors)
          STD_METHOD CopyDescriptors, :ptr ID3D12Device7, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptorsSimple)
          STD_METHOD CopyDescriptorsSimple, :ptr ID3D12Device7, :UINT, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceAllocationInfo)
          STD_METHOD GetResourceAllocationInfo, :ptr ID3D12Device7, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC
          DECLSPEC_XFGVIRT(ID3D12Device, GetCustomHeapProperties)
          STD_METHOD GetCustomHeapProperties, :ptr ID3D12Device7, :ptr D3D12_HEAP_PROPERTIES, :UINT, :D3D12_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommittedResource)
          STD_METHOD CreateCommittedResource, :ptr ID3D12Device7, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateHeap)
          STD_METHOD CreateHeap, :ptr ID3D12Device7, :ptr D3D12_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreatePlacedResource)
          STD_METHOD CreatePlacedResource, :ptr ID3D12Device7, :ptr ID3D12Heap, :UINT64, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateReservedResource)
          STD_METHOD CreateReservedResource, :ptr ID3D12Device7, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSharedHandle)
          STD_METHOD CreateSharedHandle, :ptr ID3D12Device7, :ptr ID3D12DeviceChild, :ptr SECURITY_ATTRIBUTES, :DWORD, :LPCWSTR, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandle)
          STD_METHOD OpenSharedHandle, :ptr ID3D12Device7, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandleByName)
          STD_METHOD OpenSharedHandleByName, :ptr ID3D12Device7, :LPCWSTR, :DWORD, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, MakeResident)
          STD_METHOD MakeResident, :ptr ID3D12Device7, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, Evict)
          STD_METHOD Evict, :ptr ID3D12Device7, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, CreateFence)
          STD_METHOD CreateFence, :ptr ID3D12Device7, :UINT64, :D3D12_FENCE_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDeviceRemovedReason)
          STD_METHOD GetDeviceRemovedReason, :ptr ID3D12Device7
          DECLSPEC_XFGVIRT(ID3D12Device, GetCopyableFootprints)
          STD_METHOD GetCopyableFootprints, :ptr ID3D12Device7, :ptr D3D12_RESOURCE_DESC, :UINT, :UINT, :UINT64, :ptr D3D12_PLACED_SUBRESOURCE_FOOTPRINT, :ptr UINT, :ptr UINT64, :ptr UINT64
          DECLSPEC_XFGVIRT(ID3D12Device, CreateQueryHeap)
          STD_METHOD CreateQueryHeap, :ptr ID3D12Device7, :ptr D3D12_QUERY_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, SetStablePowerState)
          STD_METHOD SetStablePowerState, :ptr ID3D12Device7, :BOOL
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandSignature)
          STD_METHOD CreateCommandSignature, :ptr ID3D12Device7, :ptr D3D12_COMMAND_SIGNATURE_DESC, :ptr ID3D12RootSignature, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceTiling)
          STD_METHOD GetResourceTiling, :ptr ID3D12Device7, :ptr ID3D12Resource, :ptr UINT, :ptr D3D12_PACKED_MIP_INFO, :ptr D3D12_TILE_SHAPE, :ptr UINT, :UINT, :ptr D3D12_SUBRESOURCE_TILING
          DECLSPEC_XFGVIRT(ID3D12Device, GetAdapterLuid)
          STD_METHOD GetAdapterLuid, :ptr ID3D12Device7, :ptr LUID
          DECLSPEC_XFGVIRT(ID3D12Device1, CreatePipelineLibrary)
          STD_METHOD CreatePipelineLibrary, :ptr ID3D12Device7, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device1, SetEventOnMultipleFenceCompletion)
          STD_METHOD SetEventOnMultipleFenceCompletion, :ptr ID3D12Device7, :ptr ptr ID3D12Fence, :ptr UINT64, :UINT, :D3D12_MULTIPLE_FENCE_WAIT_FLAGS, :HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device1, SetResidencyPriority)
          STD_METHOD SetResidencyPriority, :ptr ID3D12Device7, :UINT, :ptr ptr ID3D12Pageable, :ptr D3D12_RESIDENCY_PRIORITY
          DECLSPEC_XFGVIRT(ID3D12Device2, CreatePipelineState)
          STD_METHOD CreatePipelineState, :ptr ID3D12Device7, :ptr D3D12_PIPELINE_STATE_STREAM_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromAddress)
          STD_METHOD OpenExistingHeapFromAddress, :ptr ID3D12Device7, :ptr, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromFileMapping)
          STD_METHOD OpenExistingHeapFromFileMapping, :ptr ID3D12Device7, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, EnqueueMakeResident)
          STD_METHOD EnqueueMakeResident, :ptr ID3D12Device7, :D3D12_RESIDENCY_FLAGS, :UINT, :ptr ptr ID3D12Pageable, :ptr ID3D12Fence, :UINT64
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateCommandList1)
          STD_METHOD CreateCommandList1, :ptr ID3D12Device7, :UINT, :D3D12_COMMAND_LIST_TYPE, :D3D12_COMMAND_LIST_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateProtectedResourceSession)
          STD_METHOD CreateProtectedResourceSession, :ptr ID3D12Device7, :ptr D3D12_PROTECTED_RESOURCE_SESSION_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateCommittedResource1)
          STD_METHOD CreateCommittedResource1, :ptr ID3D12Device7, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateHeap1)
          STD_METHOD CreateHeap1, :ptr ID3D12Device7, :ptr D3D12_HEAP_DESC, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateReservedResource1)
          STD_METHOD CreateReservedResource1, :ptr ID3D12Device7, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, GetResourceAllocationInfo1)
          STD_METHOD GetResourceAllocationInfo1, :ptr ID3D12Device7, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC, :ptr D3D12_RESOURCE_ALLOCATION_INFO1
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateLifetimeTracker)
          STD_METHOD CreateLifetimeTracker, :ptr ID3D12Device7, :ptr ID3D12LifetimeOwner, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, RemoveDevice)
          STD_METHOD RemoveDevice, :ptr ID3D12Device7
          DECLSPEC_XFGVIRT(ID3D12Device5, EnumerateMetaCommands)
          STD_METHOD EnumerateMetaCommands, :ptr ID3D12Device7, :ptr UINT, :ptr D3D12_META_COMMAND_DESC
          DECLSPEC_XFGVIRT(ID3D12Device5, EnumerateMetaCommandParameters)
          STD_METHOD EnumerateMetaCommandParameters, :ptr ID3D12Device7, :REFGUID, :D3D12_META_COMMAND_PARAMETER_STAGE, :ptr UINT, :ptr UINT, :ptr D3D12_META_COMMAND_PARAMETER_DESC
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateMetaCommand)
          STD_METHOD CreateMetaCommand, :ptr ID3D12Device7, :REFGUID, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateStateObject)
          STD_METHOD CreateStateObject, :ptr ID3D12Device7, :ptr D3D12_STATE_OBJECT_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, GetRaytracingAccelerationStructurePrebuildInfo)
          STD_METHOD GetRaytracingAccelerationStructurePrebuildInfo, :ptr ID3D12Device7, :ptr D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS, :ptr D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO
          DECLSPEC_XFGVIRT(ID3D12Device5, CheckDriverMatchingIdentifier)
          STD_METHOD CheckDriverMatchingIdentifier, :ptr ID3D12Device7, :D3D12_SERIALIZED_DATA_TYPE, :ptr D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER
          DECLSPEC_XFGVIRT(ID3D12Device6, SetBackgroundProcessingMode)
          STD_METHOD SetBackgroundProcessingMode, :ptr ID3D12Device7, :D3D12_BACKGROUND_PROCESSING_MODE, :D3D12_MEASUREMENTS_ACTION, :HANDLE, :ptr BOOL
          DECLSPEC_XFGVIRT(ID3D12Device7, AddToStateObject)
          STD_METHOD AddToStateObject, :ptr ID3D12Device7, :ptr D3D12_STATE_OBJECT_DESC, :ptr ID3D12StateObject, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device7, CreateProtectedResourceSession1)
          STD_METHOD CreateProtectedResourceSession1, :ptr ID3D12Device7, :ptr D3D12_PROTECTED_RESOURCE_SESSION_DESC1, :REFIID, :ptr ptr
          ??Interface equ <>
          END_INTERFACE
        ID3D12Device7Vtbl ends
        ID3D12Device7 struct
          lpVtbl POINTER ?
        ID3D12Device7 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12Device8_INTERFACE_DEFINED__
      __ID3D12Device8_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Device8:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12Device8Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12Device8Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Device8, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Device8
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Device8
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Device8, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Device8, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Device8, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Device8, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12Device, GetNodeCount)
          STD_METHOD GetNodeCount, :ptr ID3D12Device8
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandQueue)
          STD_METHOD CreateCommandQueue, :ptr ID3D12Device8, :ptr D3D12_COMMAND_QUEUE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandAllocator)
          STD_METHOD CreateCommandAllocator, :ptr ID3D12Device8, :D3D12_COMMAND_LIST_TYPE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateGraphicsPipelineState)
          STD_METHOD CreateGraphicsPipelineState, :ptr ID3D12Device8, :ptr D3D12_GRAPHICS_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateComputePipelineState)
          STD_METHOD CreateComputePipelineState, :ptr ID3D12Device8, :ptr D3D12_COMPUTE_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandList)
          STD_METHOD CreateCommandList, :ptr ID3D12Device8, :UINT, :D3D12_COMMAND_LIST_TYPE, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CheckFeatureSupport)
          STD_METHOD CheckFeatureSupport, :ptr ID3D12Device8, :D3D12_FEATURE, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDescriptorHeap)
          STD_METHOD CreateDescriptorHeap, :ptr ID3D12Device8, :ptr D3D12_DESCRIPTOR_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDescriptorHandleIncrementSize)
          STD_METHOD GetDescriptorHandleIncrementSize, :ptr ID3D12Device8, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRootSignature)
          STD_METHOD CreateRootSignature, :ptr ID3D12Device8, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateConstantBufferView)
          STD_METHOD CreateConstantBufferView, :ptr ID3D12Device8, :ptr D3D12_CONSTANT_BUFFER_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateShaderResourceView)
          STD_METHOD CreateShaderResourceView, :ptr ID3D12Device8, :ptr ID3D12Resource, :ptr D3D12_SHADER_RESOURCE_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateUnorderedAccessView)
          STD_METHOD CreateUnorderedAccessView, :ptr ID3D12Device8, :ptr ID3D12Resource, :ptr ID3D12Resource, :ptr D3D12_UNORDERED_ACCESS_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRenderTargetView)
          STD_METHOD CreateRenderTargetView, :ptr ID3D12Device8, :ptr ID3D12Resource, :ptr D3D12_RENDER_TARGET_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDepthStencilView)
          STD_METHOD CreateDepthStencilView, :ptr ID3D12Device8, :ptr ID3D12Resource, :ptr D3D12_DEPTH_STENCIL_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSampler)
          STD_METHOD CreateSampler, :ptr ID3D12Device8, :ptr D3D12_SAMPLER_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptors)
          STD_METHOD CopyDescriptors, :ptr ID3D12Device8, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptorsSimple)
          STD_METHOD CopyDescriptorsSimple, :ptr ID3D12Device8, :UINT, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceAllocationInfo)
          STD_METHOD GetResourceAllocationInfo, :ptr ID3D12Device8, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC
          DECLSPEC_XFGVIRT(ID3D12Device, GetCustomHeapProperties)
          STD_METHOD GetCustomHeapProperties, :ptr ID3D12Device8, :ptr D3D12_HEAP_PROPERTIES, :UINT, :D3D12_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommittedResource)
          STD_METHOD CreateCommittedResource, :ptr ID3D12Device8, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateHeap)
          STD_METHOD CreateHeap, :ptr ID3D12Device8, :ptr D3D12_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreatePlacedResource)
          STD_METHOD CreatePlacedResource, :ptr ID3D12Device8, :ptr ID3D12Heap, :UINT64, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateReservedResource)
          STD_METHOD CreateReservedResource, :ptr ID3D12Device8, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSharedHandle)
          STD_METHOD CreateSharedHandle, :ptr ID3D12Device8, :ptr ID3D12DeviceChild, :ptr SECURITY_ATTRIBUTES, :DWORD, :LPCWSTR, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandle)
          STD_METHOD OpenSharedHandle, :ptr ID3D12Device8, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandleByName)
          STD_METHOD OpenSharedHandleByName, :ptr ID3D12Device8, :LPCWSTR, :DWORD, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, MakeResident)
          STD_METHOD MakeResident, :ptr ID3D12Device8, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, Evict)
          STD_METHOD Evict, :ptr ID3D12Device8, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, CreateFence)
          STD_METHOD CreateFence, :ptr ID3D12Device8, :UINT64, :D3D12_FENCE_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDeviceRemovedReason)
          STD_METHOD GetDeviceRemovedReason, :ptr ID3D12Device8
          DECLSPEC_XFGVIRT(ID3D12Device, GetCopyableFootprints)
          STD_METHOD GetCopyableFootprints, :ptr ID3D12Device8, :ptr D3D12_RESOURCE_DESC, :UINT, :UINT, :UINT64, :ptr D3D12_PLACED_SUBRESOURCE_FOOTPRINT, :ptr UINT, :ptr UINT64, :ptr UINT64
          DECLSPEC_XFGVIRT(ID3D12Device, CreateQueryHeap)
          STD_METHOD CreateQueryHeap, :ptr ID3D12Device8, :ptr D3D12_QUERY_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, SetStablePowerState)
          STD_METHOD SetStablePowerState, :ptr ID3D12Device8, :BOOL
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandSignature)
          STD_METHOD CreateCommandSignature, :ptr ID3D12Device8, :ptr D3D12_COMMAND_SIGNATURE_DESC, :ptr ID3D12RootSignature, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceTiling)
          STD_METHOD GetResourceTiling, :ptr ID3D12Device8, :ptr ID3D12Resource, :ptr UINT, :ptr D3D12_PACKED_MIP_INFO, :ptr D3D12_TILE_SHAPE, :ptr UINT, :UINT, :ptr D3D12_SUBRESOURCE_TILING
          DECLSPEC_XFGVIRT(ID3D12Device, GetAdapterLuid)
          STD_METHOD GetAdapterLuid, :ptr ID3D12Device8, :ptr LUID
          DECLSPEC_XFGVIRT(ID3D12Device1, CreatePipelineLibrary)
          STD_METHOD CreatePipelineLibrary, :ptr ID3D12Device8, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device1, SetEventOnMultipleFenceCompletion)
          STD_METHOD SetEventOnMultipleFenceCompletion, :ptr ID3D12Device8, :ptr ptr ID3D12Fence, :ptr UINT64, :UINT, :D3D12_MULTIPLE_FENCE_WAIT_FLAGS, :HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device1, SetResidencyPriority)
          STD_METHOD SetResidencyPriority, :ptr ID3D12Device8, :UINT, :ptr ptr ID3D12Pageable, :ptr D3D12_RESIDENCY_PRIORITY
          DECLSPEC_XFGVIRT(ID3D12Device2, CreatePipelineState)
          STD_METHOD CreatePipelineState, :ptr ID3D12Device8, :ptr D3D12_PIPELINE_STATE_STREAM_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromAddress)
          STD_METHOD OpenExistingHeapFromAddress, :ptr ID3D12Device8, :ptr, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromFileMapping)
          STD_METHOD OpenExistingHeapFromFileMapping, :ptr ID3D12Device8, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, EnqueueMakeResident)
          STD_METHOD EnqueueMakeResident, :ptr ID3D12Device8, :D3D12_RESIDENCY_FLAGS, :UINT, :ptr ptr ID3D12Pageable, :ptr ID3D12Fence, :UINT64
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateCommandList1)
          STD_METHOD CreateCommandList1, :ptr ID3D12Device8, :UINT, :D3D12_COMMAND_LIST_TYPE, :D3D12_COMMAND_LIST_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateProtectedResourceSession)
          STD_METHOD CreateProtectedResourceSession, :ptr ID3D12Device8, :ptr D3D12_PROTECTED_RESOURCE_SESSION_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateCommittedResource1)
          STD_METHOD CreateCommittedResource1, :ptr ID3D12Device8, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateHeap1)
          STD_METHOD CreateHeap1, :ptr ID3D12Device8, :ptr D3D12_HEAP_DESC, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateReservedResource1)
          STD_METHOD CreateReservedResource1, :ptr ID3D12Device8, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, GetResourceAllocationInfo1)
          STD_METHOD GetResourceAllocationInfo1, :ptr ID3D12Device8, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC, :ptr D3D12_RESOURCE_ALLOCATION_INFO1
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateLifetimeTracker)
          STD_METHOD CreateLifetimeTracker, :ptr ID3D12Device8, :ptr ID3D12LifetimeOwner, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, RemoveDevice)
          STD_METHOD RemoveDevice, :ptr ID3D12Device8
          DECLSPEC_XFGVIRT(ID3D12Device5, EnumerateMetaCommands)
          STD_METHOD EnumerateMetaCommands, :ptr ID3D12Device8, :ptr UINT, :ptr D3D12_META_COMMAND_DESC
          DECLSPEC_XFGVIRT(ID3D12Device5, EnumerateMetaCommandParameters)
          STD_METHOD EnumerateMetaCommandParameters, :ptr ID3D12Device8, :REFGUID, :D3D12_META_COMMAND_PARAMETER_STAGE, :ptr UINT, :ptr UINT, :ptr D3D12_META_COMMAND_PARAMETER_DESC
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateMetaCommand)
          STD_METHOD CreateMetaCommand, :ptr ID3D12Device8, :REFGUID, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateStateObject)
          STD_METHOD CreateStateObject, :ptr ID3D12Device8, :ptr D3D12_STATE_OBJECT_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, GetRaytracingAccelerationStructurePrebuildInfo)
          STD_METHOD GetRaytracingAccelerationStructurePrebuildInfo, :ptr ID3D12Device8, :ptr D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS, :ptr D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO
          DECLSPEC_XFGVIRT(ID3D12Device5, CheckDriverMatchingIdentifier)
          STD_METHOD CheckDriverMatchingIdentifier, :ptr ID3D12Device8, :D3D12_SERIALIZED_DATA_TYPE, :ptr D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER
          DECLSPEC_XFGVIRT(ID3D12Device6, SetBackgroundProcessingMode)
          STD_METHOD SetBackgroundProcessingMode, :ptr ID3D12Device8, :D3D12_BACKGROUND_PROCESSING_MODE, :D3D12_MEASUREMENTS_ACTION, :HANDLE, :ptr BOOL
          DECLSPEC_XFGVIRT(ID3D12Device7, AddToStateObject)
          STD_METHOD AddToStateObject, :ptr ID3D12Device8, :ptr D3D12_STATE_OBJECT_DESC, :ptr ID3D12StateObject, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device7, CreateProtectedResourceSession1)
          STD_METHOD CreateProtectedResourceSession1, :ptr ID3D12Device8, :ptr D3D12_PROTECTED_RESOURCE_SESSION_DESC1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device8, GetResourceAllocationInfo2)
          STD_METHOD GetResourceAllocationInfo2, :ptr ID3D12Device8, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC1, :ptr D3D12_RESOURCE_ALLOCATION_INFO1
          DECLSPEC_XFGVIRT(ID3D12Device8, CreateCommittedResource2)
          STD_METHOD CreateCommittedResource2, :ptr ID3D12Device8, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC1, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device8, CreatePlacedResource1)
          STD_METHOD CreatePlacedResource1, :ptr ID3D12Device8, :ptr ID3D12Heap, :UINT64, :ptr D3D12_RESOURCE_DESC1, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device8, CreateSamplerFeedbackUnorderedAccessView)
          STD_METHOD CreateSamplerFeedbackUnorderedAccessView, :ptr ID3D12Device8, :ptr ID3D12Resource, :ptr ID3D12Resource, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device8, GetCopyableFootprints1)
          STD_METHOD GetCopyableFootprints1, :ptr ID3D12Device8, :ptr D3D12_RESOURCE_DESC1, :UINT, :UINT, :UINT64, :ptr D3D12_PLACED_SUBRESOURCE_FOOTPRINT, :ptr UINT, :ptr UINT64, :ptr UINT64
          ??Interface equ <>
          END_INTERFACE
        ID3D12Device8Vtbl ends
        ID3D12Device8 struct
          lpVtbl POINTER ?
        ID3D12Device8 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12Resource1_INTERFACE_DEFINED__
      __ID3D12Resource1_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Resource1:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12Resource1Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12Resource1Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Resource1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Resource1
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Resource1
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Resource1, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Resource1, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Resource1, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Resource1, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12Resource1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Resource, Map)
          STD_METHOD Map, :ptr ID3D12Resource1, :UINT, :ptr D3D12_RANGE, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Resource, Unmap)
          STD_METHOD Unmap, :ptr ID3D12Resource1, :UINT, :ptr D3D12_RANGE
          DECLSPEC_XFGVIRT(ID3D12Resource, GetDesc)
          STD_METHOD GetDesc, :ptr ID3D12Resource1, :ptr D3D12_RESOURCE_DESC
          DECLSPEC_XFGVIRT(ID3D12Resource, GetGPUVirtualAddress)
          STD_METHOD GetGPUVirtualAddress, :ptr ID3D12Resource1
          DECLSPEC_XFGVIRT(ID3D12Resource, WriteToSubresource)
          STD_METHOD WriteToSubresource, :ptr ID3D12Resource1, :UINT, :ptr D3D12_BOX, :ptr, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12Resource, ReadFromSubresource)
          STD_METHOD ReadFromSubresource, :ptr ID3D12Resource1, :ptr, :UINT, :UINT, :UINT, :ptr D3D12_BOX
          DECLSPEC_XFGVIRT(ID3D12Resource, GetHeapProperties)
          STD_METHOD GetHeapProperties, :ptr ID3D12Resource1, :ptr D3D12_HEAP_PROPERTIES, :ptr D3D12_HEAP_FLAGS
          DECLSPEC_XFGVIRT(ID3D12Resource1, GetProtectedResourceSession)
          STD_METHOD GetProtectedResourceSession, :ptr ID3D12Resource1, :REFIID, :ptr ptr
          ??Interface equ <>
          END_INTERFACE
        ID3D12Resource1Vtbl ends
        ID3D12Resource1 struct
          lpVtbl POINTER ?
        ID3D12Resource1 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12Resource2_INTERFACE_DEFINED__
      __ID3D12Resource2_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Resource2:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12Resource2Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12Resource2Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Resource2, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Resource2
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Resource2
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Resource2, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Resource2, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Resource2, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Resource2, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12Resource2, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Resource, Map)
          STD_METHOD Map, :ptr ID3D12Resource2, :UINT, :ptr D3D12_RANGE, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Resource, Unmap)
          STD_METHOD Unmap, :ptr ID3D12Resource2, :UINT, :ptr D3D12_RANGE
          DECLSPEC_XFGVIRT(ID3D12Resource, GetDesc)
          STD_METHOD GetDesc, :ptr ID3D12Resource2, :ptr D3D12_RESOURCE_DESC
          DECLSPEC_XFGVIRT(ID3D12Resource, GetGPUVirtualAddress)
          STD_METHOD GetGPUVirtualAddress, :ptr ID3D12Resource2
          DECLSPEC_XFGVIRT(ID3D12Resource, WriteToSubresource)
          STD_METHOD WriteToSubresource, :ptr ID3D12Resource2, :UINT, :ptr D3D12_BOX, :ptr, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12Resource, ReadFromSubresource)
          STD_METHOD ReadFromSubresource, :ptr ID3D12Resource2, :ptr, :UINT, :UINT, :UINT, :ptr D3D12_BOX
          DECLSPEC_XFGVIRT(ID3D12Resource, GetHeapProperties)
          STD_METHOD GetHeapProperties, :ptr ID3D12Resource2, :ptr D3D12_HEAP_PROPERTIES, :ptr D3D12_HEAP_FLAGS
          DECLSPEC_XFGVIRT(ID3D12Resource1, GetProtectedResourceSession)
          STD_METHOD GetProtectedResourceSession, :ptr ID3D12Resource2, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Resource2, GetDesc1)
          STD_METHOD GetDesc1, :ptr ID3D12Resource2, :ptr D3D12_RESOURCE_DESC1
          ??Interface equ <>
          END_INTERFACE
        ID3D12Resource2Vtbl ends
        ID3D12Resource2 struct
          lpVtbl POINTER ?
        ID3D12Resource2 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12Heap1_INTERFACE_DEFINED__
      __ID3D12Heap1_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Heap1:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12Heap1Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12Heap1Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Heap1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Heap1
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Heap1
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Heap1, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Heap1, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Heap1, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Heap1, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12Heap1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Heap, GetDesc)
          STD_METHOD GetDesc, :ptr ID3D12Heap1, :ptr D3D12_HEAP_DESC
          DECLSPEC_XFGVIRT(ID3D12Heap1, GetProtectedResourceSession)
          STD_METHOD GetProtectedResourceSession, :ptr ID3D12Heap1, :REFIID, :ptr ptr
          ??Interface equ <>
          END_INTERFACE
        ID3D12Heap1Vtbl ends
        ID3D12Heap1 struct
          lpVtbl POINTER ?
        ID3D12Heap1 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12GraphicsCommandList3_INTERFACE_DEFINED__
      __ID3D12GraphicsCommandList3_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12GraphicsCommandList3:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12GraphicsCommandList3Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12GraphicsCommandList3Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12GraphicsCommandList3, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12GraphicsCommandList3
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12GraphicsCommandList3
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12GraphicsCommandList3, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12GraphicsCommandList3, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12GraphicsCommandList3, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12GraphicsCommandList3, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12GraphicsCommandList3, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12CommandList, GetType)
          STD_METHOD GetType, :ptr ID3D12GraphicsCommandList3
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Close)
          STD_METHOD Close, :ptr ID3D12GraphicsCommandList3
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Reset)
          STD_METHOD Reset, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearState)
          STD_METHOD ClearState, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawInstanced)
          STD_METHOD DrawInstanced, :ptr ID3D12GraphicsCommandList3, :UINT, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawIndexedInstanced)
          STD_METHOD DrawIndexedInstanced, :ptr ID3D12GraphicsCommandList3, :UINT, :UINT, :UINT, :INT_, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Dispatch)
          STD_METHOD Dispatch, :ptr ID3D12GraphicsCommandList3, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyBufferRegion)
          STD_METHOD CopyBufferRegion, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTextureRegion)
          STD_METHOD CopyTextureRegion, :ptr ID3D12GraphicsCommandList3, :ptr D3D12_TEXTURE_COPY_LOCATION, :UINT, :UINT, :UINT, :ptr D3D12_TEXTURE_COPY_LOCATION, :ptr D3D12_BOX
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyResource)
          STD_METHOD CopyResource, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12Resource, :ptr ID3D12Resource
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTiles)
          STD_METHOD CopyTiles, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12Resource, :ptr D3D12_TILED_RESOURCE_COORDINATE, :ptr D3D12_TILE_REGION_SIZE, :ptr ID3D12Resource, :UINT64, :D3D12_TILE_COPY_FLAGS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveSubresource)
          STD_METHOD ResolveSubresource, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12Resource, :UINT, :ptr ID3D12Resource, :UINT, :DXGI_FORMAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetPrimitiveTopology)
          STD_METHOD IASetPrimitiveTopology, :ptr ID3D12GraphicsCommandList3, :D3D12_PRIMITIVE_TOPOLOGY
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetViewports)
          STD_METHOD RSSetViewports, :ptr ID3D12GraphicsCommandList3, :UINT, :ptr D3D12_VIEWPORT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetScissorRects)
          STD_METHOD RSSetScissorRects, :ptr ID3D12GraphicsCommandList3, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetBlendFactor)
          STD_METHOD OMSetBlendFactor, :ptr ID3D12GraphicsCommandList3, :ptr FLOAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetStencilRef)
          STD_METHOD OMSetStencilRef, :ptr ID3D12GraphicsCommandList3, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPipelineState)
          STD_METHOD SetPipelineState, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResourceBarrier)
          STD_METHOD ResourceBarrier, :ptr ID3D12GraphicsCommandList3, :UINT, :ptr D3D12_RESOURCE_BARRIER
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteBundle)
          STD_METHOD ExecuteBundle, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12GraphicsCommandList
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetDescriptorHeaps)
          STD_METHOD SetDescriptorHeaps, :ptr ID3D12GraphicsCommandList3, :UINT, :ptr ptr ID3D12DescriptorHeap
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootSignature)
          STD_METHOD SetComputeRootSignature, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootSignature)
          STD_METHOD SetGraphicsRootSignature, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootDescriptorTable)
          STD_METHOD SetComputeRootDescriptorTable, :ptr ID3D12GraphicsCommandList3, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootDescriptorTable)
          STD_METHOD SetGraphicsRootDescriptorTable, :ptr ID3D12GraphicsCommandList3, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstant)
          STD_METHOD SetComputeRoot32BitConstant, :ptr ID3D12GraphicsCommandList3, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstant)
          STD_METHOD SetGraphicsRoot32BitConstant, :ptr ID3D12GraphicsCommandList3, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstants)
          STD_METHOD SetComputeRoot32BitConstants, :ptr ID3D12GraphicsCommandList3, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstants)
          STD_METHOD SetGraphicsRoot32BitConstants, :ptr ID3D12GraphicsCommandList3, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootConstantBufferView)
          STD_METHOD SetComputeRootConstantBufferView, :ptr ID3D12GraphicsCommandList3, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootConstantBufferView)
          STD_METHOD SetGraphicsRootConstantBufferView, :ptr ID3D12GraphicsCommandList3, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootShaderResourceView)
          STD_METHOD SetComputeRootShaderResourceView, :ptr ID3D12GraphicsCommandList3, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootShaderResourceView)
          STD_METHOD SetGraphicsRootShaderResourceView, :ptr ID3D12GraphicsCommandList3, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootUnorderedAccessView)
          STD_METHOD SetComputeRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList3, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootUnorderedAccessView)
          STD_METHOD SetGraphicsRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList3, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetIndexBuffer)
          STD_METHOD IASetIndexBuffer, :ptr ID3D12GraphicsCommandList3, :ptr D3D12_INDEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetVertexBuffers)
          STD_METHOD IASetVertexBuffers, :ptr ID3D12GraphicsCommandList3, :UINT, :UINT, :ptr D3D12_VERTEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SOSetTargets)
          STD_METHOD SOSetTargets, :ptr ID3D12GraphicsCommandList3, :UINT, :UINT, :ptr D3D12_STREAM_OUTPUT_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetRenderTargets)
          STD_METHOD OMSetRenderTargets, :ptr ID3D12GraphicsCommandList3, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :BOOL, :ptr D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearDepthStencilView)
          STD_METHOD ClearDepthStencilView, :ptr ID3D12GraphicsCommandList3, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CLEAR_FLAGS, :FLOAT, :UINT8, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearRenderTargetView)
          STD_METHOD ClearRenderTargetView, :ptr ID3D12GraphicsCommandList3, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewUint)
          STD_METHOD ClearUnorderedAccessViewUint, :ptr ID3D12GraphicsCommandList3, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr UINT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewFloat)
          STD_METHOD ClearUnorderedAccessViewFloat, :ptr ID3D12GraphicsCommandList3, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DiscardResource)
          STD_METHOD DiscardResource, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12Resource, :ptr D3D12_DISCARD_REGION
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginQuery)
          STD_METHOD BeginQuery, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndQuery)
          STD_METHOD EndQuery, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveQueryData)
          STD_METHOD ResolveQueryData, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT, :UINT, :ptr ID3D12Resource, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPredication)
          STD_METHOD SetPredication, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12Resource, :UINT64, :D3D12_PREDICATION_OP
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetMarker)
          STD_METHOD SetMarker, :ptr ID3D12GraphicsCommandList3, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginEvent)
          STD_METHOD BeginEvent, :ptr ID3D12GraphicsCommandList3, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndEvent)
          STD_METHOD EndEvent, :ptr ID3D12GraphicsCommandList3
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteIndirect)
          STD_METHOD ExecuteIndirect, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12CommandSignature, :UINT, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, AtomicCopyBufferUINT)
          STD_METHOD AtomicCopyBufferUINT, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT, :ptr ptr ID3D12Resource, :ptr D3D12_SUBRESOURCE_RANGE_UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, AtomicCopyBufferUINT64)
          STD_METHOD AtomicCopyBufferUINT64, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT, :ptr ptr ID3D12Resource, :ptr D3D12_SUBRESOURCE_RANGE_UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, OMSetDepthBounds)
          STD_METHOD OMSetDepthBounds, :ptr ID3D12GraphicsCommandList3, :FLOAT, :FLOAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, SetSamplePositions)
          STD_METHOD SetSamplePositions, :ptr ID3D12GraphicsCommandList3, :UINT, :UINT, :ptr D3D12_SAMPLE_POSITION
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, ResolveSubresourceRegion)
          STD_METHOD ResolveSubresourceRegion, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12Resource, :UINT, :UINT, :UINT, :ptr ID3D12Resource, :UINT, :ptr D3D12_RECT, :DXGI_FORMAT, :D3D12_RESOLVE_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, SetViewInstanceMask)
          STD_METHOD SetViewInstanceMask, :ptr ID3D12GraphicsCommandList3, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList2, WriteBufferImmediate)
          STD_METHOD WriteBufferImmediate, :ptr ID3D12GraphicsCommandList3, :UINT, :ptr D3D12_WRITEBUFFERIMMEDIATE_PARAMETER, :ptr D3D12_WRITEBUFFERIMMEDIATE_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList3, SetProtectedResourceSession)
          STD_METHOD SetProtectedResourceSession, :ptr ID3D12GraphicsCommandList3, :ptr ID3D12ProtectedResourceSession
          ??Interface equ <>
          END_INTERFACE
        ID3D12GraphicsCommandList3Vtbl ends
        ID3D12GraphicsCommandList3 struct
          lpVtbl POINTER ?
        ID3D12GraphicsCommandList3 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE typedef SDWORD
    D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_DISCARD equ 0
    D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_PRESERVE equ
    D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_CLEAR equ
    D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_NO_ACCESS equ

    D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS struct
      ClearValue D3D12_CLEAR_VALUE <>
    D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS ends
    D3D12_RENDER_PASS_BEGINNING_ACCESS struct
      Type_ D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE ?
      union
        Clear D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS <>
      ends
    D3D12_RENDER_PASS_BEGINNING_ACCESS ends
    D3D12_RENDER_PASS_ENDING_ACCESS_TYPE typedef SDWORD
    D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_DISCARD equ 0
    D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_PRESERVE equ
    D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_RESOLVE equ
    D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_NO_ACCESS equ

    D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS struct
      SrcSubresource UINT ?
      DstSubresource UINT ?
      DstX UINT ?
      DstY UINT ?
      SrcRect D3D12_RECT <>
    D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS ends
    D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS struct
      pSrcResource POINTER ?
      pDstResource POINTER ?
      SubresourceCount UINT ?
      pSubresourceParameters POINTER ?
      Format DXGI_FORMAT ?
      ResolveMode D3D12_RESOLVE_MODE ?
      PreserveResolveSource BOOL ?
    D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS ends
    D3D12_RENDER_PASS_ENDING_ACCESS struct
      Type_ D3D12_RENDER_PASS_ENDING_ACCESS_TYPE ?
      union
        Resolve D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS <>
      ends
    D3D12_RENDER_PASS_ENDING_ACCESS ends
    D3D12_RENDER_PASS_RENDER_TARGET_DESC struct
      cpuDescriptor D3D12_CPU_DESCRIPTOR_HANDLE <>
      BeginningAccess D3D12_RENDER_PASS_BEGINNING_ACCESS <>
      EndingAccess D3D12_RENDER_PASS_ENDING_ACCESS <>
    D3D12_RENDER_PASS_RENDER_TARGET_DESC ends
    D3D12_RENDER_PASS_DEPTH_STENCIL_DESC struct
      cpuDescriptor D3D12_CPU_DESCRIPTOR_HANDLE <>
      DepthBeginningAccess D3D12_RENDER_PASS_BEGINNING_ACCESS <>
      StencilBeginningAccess D3D12_RENDER_PASS_BEGINNING_ACCESS <>
      DepthEndingAccess D3D12_RENDER_PASS_ENDING_ACCESS <>
      StencilEndingAccess D3D12_RENDER_PASS_ENDING_ACCESS <>
    D3D12_RENDER_PASS_DEPTH_STENCIL_DESC ends
    D3D12_RENDER_PASS_FLAGS typedef SDWORD
    D3D12_RENDER_PASS_FLAG_NONE equ 0
    D3D12_RENDER_PASS_FLAG_ALLOW_UAV_WRITES equ 1h
    D3D12_RENDER_PASS_FLAG_SUSPENDING_PASS equ 2h
    D3D12_RENDER_PASS_FLAG_RESUMING_PASS equ 4h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_RENDER_PASS_FLAGS)
    externdef __MIDL_itf_d3d12_0000_0048_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0048_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12MetaCommand_INTERFACE_DEFINED__
      __ID3D12MetaCommand_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12MetaCommand:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12MetaCommandVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12MetaCommandVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12MetaCommand, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12MetaCommand
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12MetaCommand
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12MetaCommand, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12MetaCommand, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12MetaCommand, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12MetaCommand, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12MetaCommand, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12MetaCommand, GetRequiredParameterResourceSize)
          STD_METHOD GetRequiredParameterResourceSize, :ptr ID3D12MetaCommand, :D3D12_META_COMMAND_PARAMETER_STAGE, :UINT
          ??Interface equ <>
          END_INTERFACE
        ID3D12MetaCommandVtbl ends
        ID3D12MetaCommand struct
          lpVtbl POINTER ?
        ID3D12MetaCommand ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_DISPATCH_RAYS_DESC struct
      RayGenerationShaderRecord D3D12_GPU_VIRTUAL_ADDRESS_RANGE <>
      MissShaderTable D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE <>
      HitGroupTable D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE <>
      CallableShaderTable D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE <>
      Width_ UINT ?
      Height UINT ?
      Depth UINT ?
    D3D12_DISPATCH_RAYS_DESC ends
    externdef __MIDL_itf_d3d12_0000_0049_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0049_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12GraphicsCommandList4_INTERFACE_DEFINED__
      __ID3D12GraphicsCommandList4_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12GraphicsCommandList4:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12GraphicsCommandList4Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12GraphicsCommandList4Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12GraphicsCommandList4, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12GraphicsCommandList4
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12GraphicsCommandList4
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12GraphicsCommandList4, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12GraphicsCommandList4, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12GraphicsCommandList4, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12GraphicsCommandList4, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12GraphicsCommandList4, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12CommandList, GetType)
          STD_METHOD GetType, :ptr ID3D12GraphicsCommandList4
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Close)
          STD_METHOD Close, :ptr ID3D12GraphicsCommandList4
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Reset)
          STD_METHOD Reset, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearState)
          STD_METHOD ClearState, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawInstanced)
          STD_METHOD DrawInstanced, :ptr ID3D12GraphicsCommandList4, :UINT, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawIndexedInstanced)
          STD_METHOD DrawIndexedInstanced, :ptr ID3D12GraphicsCommandList4, :UINT, :UINT, :UINT, :INT_, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Dispatch)
          STD_METHOD Dispatch, :ptr ID3D12GraphicsCommandList4, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyBufferRegion)
          STD_METHOD CopyBufferRegion, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTextureRegion)
          STD_METHOD CopyTextureRegion, :ptr ID3D12GraphicsCommandList4, :ptr D3D12_TEXTURE_COPY_LOCATION, :UINT, :UINT, :UINT, :ptr D3D12_TEXTURE_COPY_LOCATION, :ptr D3D12_BOX
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyResource)
          STD_METHOD CopyResource, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12Resource, :ptr ID3D12Resource
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTiles)
          STD_METHOD CopyTiles, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12Resource, :ptr D3D12_TILED_RESOURCE_COORDINATE, :ptr D3D12_TILE_REGION_SIZE, :ptr ID3D12Resource, :UINT64, :D3D12_TILE_COPY_FLAGS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveSubresource)
          STD_METHOD ResolveSubresource, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12Resource, :UINT, :ptr ID3D12Resource, :UINT, :DXGI_FORMAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetPrimitiveTopology)
          STD_METHOD IASetPrimitiveTopology, :ptr ID3D12GraphicsCommandList4, :D3D12_PRIMITIVE_TOPOLOGY
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetViewports)
          STD_METHOD RSSetViewports, :ptr ID3D12GraphicsCommandList4, :UINT, :ptr D3D12_VIEWPORT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetScissorRects)
          STD_METHOD RSSetScissorRects, :ptr ID3D12GraphicsCommandList4, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetBlendFactor)
          STD_METHOD OMSetBlendFactor, :ptr ID3D12GraphicsCommandList4, :ptr FLOAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetStencilRef)
          STD_METHOD OMSetStencilRef, :ptr ID3D12GraphicsCommandList4, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPipelineState)
          STD_METHOD SetPipelineState, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResourceBarrier)
          STD_METHOD ResourceBarrier, :ptr ID3D12GraphicsCommandList4, :UINT, :ptr D3D12_RESOURCE_BARRIER
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteBundle)
          STD_METHOD ExecuteBundle, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12GraphicsCommandList
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetDescriptorHeaps)
          STD_METHOD SetDescriptorHeaps, :ptr ID3D12GraphicsCommandList4, :UINT, :ptr ptr ID3D12DescriptorHeap
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootSignature)
          STD_METHOD SetComputeRootSignature, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootSignature)
          STD_METHOD SetGraphicsRootSignature, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootDescriptorTable)
          STD_METHOD SetComputeRootDescriptorTable, :ptr ID3D12GraphicsCommandList4, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootDescriptorTable)
          STD_METHOD SetGraphicsRootDescriptorTable, :ptr ID3D12GraphicsCommandList4, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstant)
          STD_METHOD SetComputeRoot32BitConstant, :ptr ID3D12GraphicsCommandList4, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstant)
          STD_METHOD SetGraphicsRoot32BitConstant, :ptr ID3D12GraphicsCommandList4, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstants)
          STD_METHOD SetComputeRoot32BitConstants, :ptr ID3D12GraphicsCommandList4, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstants)
          STD_METHOD SetGraphicsRoot32BitConstants, :ptr ID3D12GraphicsCommandList4, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootConstantBufferView)
          STD_METHOD SetComputeRootConstantBufferView, :ptr ID3D12GraphicsCommandList4, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootConstantBufferView)
          STD_METHOD SetGraphicsRootConstantBufferView, :ptr ID3D12GraphicsCommandList4, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootShaderResourceView)
          STD_METHOD SetComputeRootShaderResourceView, :ptr ID3D12GraphicsCommandList4, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootShaderResourceView)
          STD_METHOD SetGraphicsRootShaderResourceView, :ptr ID3D12GraphicsCommandList4, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootUnorderedAccessView)
          STD_METHOD SetComputeRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList4, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootUnorderedAccessView)
          STD_METHOD SetGraphicsRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList4, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetIndexBuffer)
          STD_METHOD IASetIndexBuffer, :ptr ID3D12GraphicsCommandList4, :ptr D3D12_INDEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetVertexBuffers)
          STD_METHOD IASetVertexBuffers, :ptr ID3D12GraphicsCommandList4, :UINT, :UINT, :ptr D3D12_VERTEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SOSetTargets)
          STD_METHOD SOSetTargets, :ptr ID3D12GraphicsCommandList4, :UINT, :UINT, :ptr D3D12_STREAM_OUTPUT_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetRenderTargets)
          STD_METHOD OMSetRenderTargets, :ptr ID3D12GraphicsCommandList4, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :BOOL, :ptr D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearDepthStencilView)
          STD_METHOD ClearDepthStencilView, :ptr ID3D12GraphicsCommandList4, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CLEAR_FLAGS, :FLOAT, :UINT8, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearRenderTargetView)
          STD_METHOD ClearRenderTargetView, :ptr ID3D12GraphicsCommandList4, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewUint)
          STD_METHOD ClearUnorderedAccessViewUint, :ptr ID3D12GraphicsCommandList4, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr UINT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewFloat)
          STD_METHOD ClearUnorderedAccessViewFloat, :ptr ID3D12GraphicsCommandList4, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DiscardResource)
          STD_METHOD DiscardResource, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12Resource, :ptr D3D12_DISCARD_REGION
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginQuery)
          STD_METHOD BeginQuery, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndQuery)
          STD_METHOD EndQuery, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveQueryData)
          STD_METHOD ResolveQueryData, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT, :UINT, :ptr ID3D12Resource, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPredication)
          STD_METHOD SetPredication, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12Resource, :UINT64, :D3D12_PREDICATION_OP
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetMarker)
          STD_METHOD SetMarker, :ptr ID3D12GraphicsCommandList4, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginEvent)
          STD_METHOD BeginEvent, :ptr ID3D12GraphicsCommandList4, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndEvent)
          STD_METHOD EndEvent, :ptr ID3D12GraphicsCommandList4
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteIndirect)
          STD_METHOD ExecuteIndirect, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12CommandSignature, :UINT, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, AtomicCopyBufferUINT)
          STD_METHOD AtomicCopyBufferUINT, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT, :ptr ptr ID3D12Resource, :ptr D3D12_SUBRESOURCE_RANGE_UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, AtomicCopyBufferUINT64)
          STD_METHOD AtomicCopyBufferUINT64, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT, :ptr ptr ID3D12Resource, :ptr D3D12_SUBRESOURCE_RANGE_UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, OMSetDepthBounds)
          STD_METHOD OMSetDepthBounds, :ptr ID3D12GraphicsCommandList4, :FLOAT, :FLOAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, SetSamplePositions)
          STD_METHOD SetSamplePositions, :ptr ID3D12GraphicsCommandList4, :UINT, :UINT, :ptr D3D12_SAMPLE_POSITION
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, ResolveSubresourceRegion)
          STD_METHOD ResolveSubresourceRegion, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12Resource, :UINT, :UINT, :UINT, :ptr ID3D12Resource, :UINT, :ptr D3D12_RECT, :DXGI_FORMAT, :D3D12_RESOLVE_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, SetViewInstanceMask)
          STD_METHOD SetViewInstanceMask, :ptr ID3D12GraphicsCommandList4, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList2, WriteBufferImmediate)
          STD_METHOD WriteBufferImmediate, :ptr ID3D12GraphicsCommandList4, :UINT, :ptr D3D12_WRITEBUFFERIMMEDIATE_PARAMETER, :ptr D3D12_WRITEBUFFERIMMEDIATE_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList3, SetProtectedResourceSession)
          STD_METHOD SetProtectedResourceSession, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12ProtectedResourceSession
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, BeginRenderPass)
          STD_METHOD BeginRenderPass, :ptr ID3D12GraphicsCommandList4, :UINT, :ptr D3D12_RENDER_PASS_RENDER_TARGET_DESC, :ptr D3D12_RENDER_PASS_DEPTH_STENCIL_DESC, :D3D12_RENDER_PASS_FLAGS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, EndRenderPass)
          STD_METHOD EndRenderPass, :ptr ID3D12GraphicsCommandList4
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, InitializeMetaCommand)
          STD_METHOD InitializeMetaCommand, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12MetaCommand, :ptr, :SIZE_T
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, ExecuteMetaCommand)
          STD_METHOD ExecuteMetaCommand, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12MetaCommand, :ptr, :SIZE_T
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, BuildRaytracingAccelerationStructure)
          STD_METHOD BuildRaytracingAccelerationStructure, :ptr ID3D12GraphicsCommandList4, :ptr D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC, :UINT, :ptr D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, EmitRaytracingAccelerationStructurePostbuildInfo)
          STD_METHOD EmitRaytracingAccelerationStructurePostbuildInfo, :ptr ID3D12GraphicsCommandList4, :ptr D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC, :UINT, :ptr D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, CopyRaytracingAccelerationStructure)
          STD_METHOD CopyRaytracingAccelerationStructure, :ptr ID3D12GraphicsCommandList4, :D3D12_GPU_VIRTUAL_ADDRESS, :D3D12_GPU_VIRTUAL_ADDRESS, :D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, SetPipelineState1)
          STD_METHOD SetPipelineState1, :ptr ID3D12GraphicsCommandList4, :ptr ID3D12StateObject
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, DispatchRays)
          STD_METHOD DispatchRays, :ptr ID3D12GraphicsCommandList4, :ptr D3D12_DISPATCH_RAYS_DESC
          ??Interface equ <>
          END_INTERFACE
        ID3D12GraphicsCommandList4Vtbl ends
        ID3D12GraphicsCommandList4 struct
          lpVtbl POINTER ?
        ID3D12GraphicsCommandList4 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_SHADER_CACHE_MODE typedef SDWORD
    D3D12_SHADER_CACHE_MODE_MEMORY equ 0
    D3D12_SHADER_CACHE_MODE_DISK equ

    D3D12_SHADER_CACHE_FLAGS typedef SDWORD
    D3D12_SHADER_CACHE_FLAG_NONE equ 0
    D3D12_SHADER_CACHE_FLAG_DRIVER_VERSIONED equ 1h
    D3D12_SHADER_CACHE_FLAG_USE_WORKING_DIR equ 2h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_SHADER_CACHE_FLAGS)
    D3D12_SHADER_CACHE_SESSION_DESC struct
      Identifier GUID <>
      Mode D3D12_SHADER_CACHE_MODE ?
      Flags D3D12_SHADER_CACHE_FLAGS ?
      MaximumInMemoryCacheSizeBytes UINT ?
      MaximumInMemoryCacheEntries UINT ?
      MaximumValueFileSizeBytes UINT ?
      Version UINT64 ?
    D3D12_SHADER_CACHE_SESSION_DESC ends
    D3D12_BARRIER_LAYOUT typedef SDWORD
    D3D12_BARRIER_LAYOUT_UNDEFINED equ 0ffffffffh
    D3D12_BARRIER_LAYOUT_COMMON equ 0
    D3D12_BARRIER_LAYOUT_PRESENT equ 0
    D3D12_BARRIER_LAYOUT_GENERIC_READ equ
    D3D12_BARRIER_LAYOUT_RENDER_TARGET equ
    D3D12_BARRIER_LAYOUT_UNORDERED_ACCESS equ
    D3D12_BARRIER_LAYOUT_DEPTH_STENCIL_WRITE equ
    D3D12_BARRIER_LAYOUT_DEPTH_STENCIL_READ equ
    D3D12_BARRIER_LAYOUT_SHADER_RESOURCE equ
    D3D12_BARRIER_LAYOUT_COPY_SOURCE equ
    D3D12_BARRIER_LAYOUT_COPY_DEST equ
    D3D12_BARRIER_LAYOUT_RESOLVE_SOURCE equ
    D3D12_BARRIER_LAYOUT_RESOLVE_DEST equ
    D3D12_BARRIER_LAYOUT_SHADING_RATE_SOURCE equ
    D3D12_BARRIER_LAYOUT_VIDEO_DECODE_READ equ
    D3D12_BARRIER_LAYOUT_VIDEO_DECODE_WRITE equ
    D3D12_BARRIER_LAYOUT_VIDEO_PROCESS_READ equ
    D3D12_BARRIER_LAYOUT_VIDEO_PROCESS_WRITE equ
    D3D12_BARRIER_LAYOUT_VIDEO_ENCODE_READ equ
    D3D12_BARRIER_LAYOUT_VIDEO_ENCODE_WRITE equ
    D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_COMMON equ
    D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_GENERIC_READ equ
    D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_UNORDERED_ACCESS equ
    D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_SHADER_RESOURCE equ
    D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_COPY_SOURCE equ
    D3D12_BARRIER_LAYOUT_DIRECT_QUEUE_COPY_DEST equ
    D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_COMMON equ
    D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_GENERIC_READ equ
    D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_UNORDERED_ACCESS equ
    D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_SHADER_RESOURCE equ
    D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_COPY_SOURCE equ
    D3D12_BARRIER_LAYOUT_COMPUTE_QUEUE_COPY_DEST equ
    D3D12_BARRIER_LAYOUT_VIDEO_QUEUE_COMMON equ

    D3D12_BARRIER_SYNC typedef SDWORD
    D3D12_BARRIER_SYNC_NONE equ 0
    D3D12_BARRIER_SYNC_ALL equ 1h
    D3D12_BARRIER_SYNC_DRAW equ 2h
    D3D12_BARRIER_SYNC_INPUT_ASSEMBLER equ 4h
    D3D12_BARRIER_SYNC_VERTEX_SHADING equ 8h
    D3D12_BARRIER_SYNC_PIXEL_SHADING equ 10h
    D3D12_BARRIER_SYNC_DEPTH_STENCIL equ 20h
    D3D12_BARRIER_SYNC_RENDER_TARGET equ 40h
    D3D12_BARRIER_SYNC_COMPUTE_SHADING equ 80h
    D3D12_BARRIER_SYNC_RAYTRACING equ 100h
    D3D12_BARRIER_SYNC_COPY equ 200h
    D3D12_BARRIER_SYNC_RESOLVE equ 400h
    D3D12_BARRIER_SYNC_EXECUTE_INDIRECT equ 800h
    D3D12_BARRIER_SYNC_PREDICATION equ 800h
    D3D12_BARRIER_SYNC_ALL_SHADING equ 1000h
    D3D12_BARRIER_SYNC_NON_PIXEL_SHADING equ 2000h
    D3D12_BARRIER_SYNC_EMIT_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO equ 4000h
    D3D12_BARRIER_SYNC_VIDEO_DECODE equ 100000h
    D3D12_BARRIER_SYNC_VIDEO_PROCESS equ 200000h
    D3D12_BARRIER_SYNC_VIDEO_ENCODE equ 400000h
    D3D12_BARRIER_SYNC_BUILD_RAYTRACING_ACCELERATION_STRUCTURE equ 800000h
    D3D12_BARRIER_SYNC_COPY_RAYTRACING_ACCELERATION_STRUCTURE equ 1000000h
    D3D12_BARRIER_SYNC_SPLIT equ 80000000h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_BARRIER_SYNC)
    D3D12_BARRIER_ACCESS typedef SDWORD
    D3D12_BARRIER_ACCESS_COMMON equ 0
    D3D12_BARRIER_ACCESS_VERTEX_BUFFER equ 1h
    D3D12_BARRIER_ACCESS_CONSTANT_BUFFER equ 2h
    D3D12_BARRIER_ACCESS_INDEX_BUFFER equ 4h
    D3D12_BARRIER_ACCESS_RENDER_TARGET equ 8h
    D3D12_BARRIER_ACCESS_UNORDERED_ACCESS equ 10h
    D3D12_BARRIER_ACCESS_DEPTH_STENCIL_WRITE equ 20h
    D3D12_BARRIER_ACCESS_DEPTH_STENCIL_READ equ 40h
    D3D12_BARRIER_ACCESS_SHADER_RESOURCE equ 80h
    D3D12_BARRIER_ACCESS_STREAM_OUTPUT equ 100h
    D3D12_BARRIER_ACCESS_INDIRECT_ARGUMENT equ 200h
    D3D12_BARRIER_ACCESS_PREDICATION equ 200h
    D3D12_BARRIER_ACCESS_COPY_DEST equ 400h
    D3D12_BARRIER_ACCESS_COPY_SOURCE equ 800h
    D3D12_BARRIER_ACCESS_RESOLVE_DEST equ 1000h
    D3D12_BARRIER_ACCESS_RESOLVE_SOURCE equ 2000h
    D3D12_BARRIER_ACCESS_RAYTRACING_ACCELERATION_STRUCTURE_READ equ 4000h
    D3D12_BARRIER_ACCESS_RAYTRACING_ACCELERATION_STRUCTURE_WRITE equ 8000h
    D3D12_BARRIER_ACCESS_SHADING_RATE_SOURCE equ 10000h
    D3D12_BARRIER_ACCESS_VIDEO_DECODE_READ equ 20000h
    D3D12_BARRIER_ACCESS_VIDEO_DECODE_WRITE equ 40000h
    D3D12_BARRIER_ACCESS_VIDEO_PROCESS_READ equ 80000h
    D3D12_BARRIER_ACCESS_VIDEO_PROCESS_WRITE equ 100000h
    D3D12_BARRIER_ACCESS_VIDEO_ENCODE_READ equ 200000h
    D3D12_BARRIER_ACCESS_VIDEO_ENCODE_WRITE equ 400000h
    D3D12_BARRIER_ACCESS_NO_ACCESS equ 80000000h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_BARRIER_ACCESS)
    D3D12_BARRIER_TYPE typedef SDWORD
    D3D12_BARRIER_TYPE_GLOBAL equ 0
    D3D12_BARRIER_TYPE_TEXTURE equ
    D3D12_BARRIER_TYPE_BUFFER equ

    D3D12_TEXTURE_BARRIER_FLAGS typedef SDWORD
    D3D12_TEXTURE_BARRIER_FLAG_NONE equ 0
    D3D12_TEXTURE_BARRIER_FLAG_DISCARD equ 1h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_TEXTURE_BARRIER_FLAGS)
    D3D12_BARRIER_SUBRESOURCE_RANGE struct
      IndexOrFirstMipLevel UINT ?
      NumMipLevels UINT ?
      FirstArraySlice UINT ?
      NumArraySlices UINT ?
      FirstPlane UINT ?
      NumPlanes UINT ?
    D3D12_BARRIER_SUBRESOURCE_RANGE ends
    D3D12_GLOBAL_BARRIER struct
      SyncBefore D3D12_BARRIER_SYNC ?
      SyncAfter D3D12_BARRIER_SYNC ?
      AccessBefore D3D12_BARRIER_ACCESS ?
      AccessAfter D3D12_BARRIER_ACCESS ?
    D3D12_GLOBAL_BARRIER ends
    D3D12_TEXTURE_BARRIER struct
      SyncBefore D3D12_BARRIER_SYNC ?
      SyncAfter D3D12_BARRIER_SYNC ?
      AccessBefore D3D12_BARRIER_ACCESS ?
      AccessAfter D3D12_BARRIER_ACCESS ?
      LayoutBefore D3D12_BARRIER_LAYOUT ?
      LayoutAfter D3D12_BARRIER_LAYOUT ?
      pResource POINTER ?
      Subresources D3D12_BARRIER_SUBRESOURCE_RANGE <>
      Flags D3D12_TEXTURE_BARRIER_FLAGS ?
    D3D12_TEXTURE_BARRIER ends
    D3D12_BUFFER_BARRIER struct
      SyncBefore D3D12_BARRIER_SYNC ?
      SyncAfter D3D12_BARRIER_SYNC ?
      AccessBefore D3D12_BARRIER_ACCESS ?
      AccessAfter D3D12_BARRIER_ACCESS ?
      pResource POINTER ?
      Offset_ UINT64 ?
      Size_ UINT64 ?
    D3D12_BUFFER_BARRIER ends
    D3D12_BARRIER_GROUP struct
      Type_ D3D12_BARRIER_TYPE ?
      NumBarriers UINT32 ?
      union
        pGlobalBarriers POINTER ?
        pTextureBarriers POINTER ?
        pBufferBarriers POINTER ?
      ends
    D3D12_BARRIER_GROUP ends
    externdef __MIDL_itf_d3d12_0000_0050_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0050_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12ShaderCacheSession_INTERFACE_DEFINED__
      __ID3D12ShaderCacheSession_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12ShaderCacheSession:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12ShaderCacheSessionVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12ShaderCacheSessionVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12ShaderCacheSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12ShaderCacheSession
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12ShaderCacheSession
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12ShaderCacheSession, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12ShaderCacheSession, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12ShaderCacheSession, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12ShaderCacheSession, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12ShaderCacheSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12ShaderCacheSession, FindValue)
          STD_METHOD FindValue, :ptr ID3D12ShaderCacheSession, :ptr, :UINT, :ptr, :ptr UINT
          DECLSPEC_XFGVIRT(ID3D12ShaderCacheSession, StoreValue)
          STD_METHOD StoreValue, :ptr ID3D12ShaderCacheSession, :ptr, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12ShaderCacheSession, SetDeleteOnDestroy)
          STD_METHOD SetDeleteOnDestroy, :ptr ID3D12ShaderCacheSession
          DECLSPEC_XFGVIRT(ID3D12ShaderCacheSession, GetDesc)
          STD_METHOD GetDesc, :ptr ID3D12ShaderCacheSession, :ptr D3D12_SHADER_CACHE_SESSION_DESC
          ??Interface equ <>
          END_INTERFACE
        ID3D12ShaderCacheSessionVtbl ends
        ID3D12ShaderCacheSession struct
          lpVtbl POINTER ?
        ID3D12ShaderCacheSession ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_SHADER_CACHE_KIND_FLAGS typedef SDWORD
    D3D12_SHADER_CACHE_KIND_FLAG_IMPLICIT_D3D_CACHE_FOR_DRIVER equ 1h
    D3D12_SHADER_CACHE_KIND_FLAG_IMPLICIT_D3D_CONVERSIONS equ 2h
    D3D12_SHADER_CACHE_KIND_FLAG_IMPLICIT_DRIVER_MANAGED equ 4h
    D3D12_SHADER_CACHE_KIND_FLAG_APPLICATION_MANAGED equ 8h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_SHADER_CACHE_KIND_FLAGS)
    D3D12_SHADER_CACHE_CONTROL_FLAGS typedef SDWORD
    D3D12_SHADER_CACHE_CONTROL_FLAG_DISABLE equ 1h
    D3D12_SHADER_CACHE_CONTROL_FLAG_ENABLE equ 2h
    D3D12_SHADER_CACHE_CONTROL_FLAG_CLEAR equ 4h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_SHADER_CACHE_CONTROL_FLAGS)
    externdef __MIDL_itf_d3d12_0000_0051_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0051_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12Device9_INTERFACE_DEFINED__
      __ID3D12Device9_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Device9:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12Device9Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12Device9Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Device9, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Device9
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Device9
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Device9, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Device9, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Device9, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Device9, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12Device, GetNodeCount)
          STD_METHOD GetNodeCount, :ptr ID3D12Device9
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandQueue)
          STD_METHOD CreateCommandQueue, :ptr ID3D12Device9, :ptr D3D12_COMMAND_QUEUE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandAllocator)
          STD_METHOD CreateCommandAllocator, :ptr ID3D12Device9, :D3D12_COMMAND_LIST_TYPE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateGraphicsPipelineState)
          STD_METHOD CreateGraphicsPipelineState, :ptr ID3D12Device9, :ptr D3D12_GRAPHICS_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateComputePipelineState)
          STD_METHOD CreateComputePipelineState, :ptr ID3D12Device9, :ptr D3D12_COMPUTE_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandList)
          STD_METHOD CreateCommandList, :ptr ID3D12Device9, :UINT, :D3D12_COMMAND_LIST_TYPE, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CheckFeatureSupport)
          STD_METHOD CheckFeatureSupport, :ptr ID3D12Device9, :D3D12_FEATURE, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDescriptorHeap)
          STD_METHOD CreateDescriptorHeap, :ptr ID3D12Device9, :ptr D3D12_DESCRIPTOR_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDescriptorHandleIncrementSize)
          STD_METHOD GetDescriptorHandleIncrementSize, :ptr ID3D12Device9, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRootSignature)
          STD_METHOD CreateRootSignature, :ptr ID3D12Device9, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateConstantBufferView)
          STD_METHOD CreateConstantBufferView, :ptr ID3D12Device9, :ptr D3D12_CONSTANT_BUFFER_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateShaderResourceView)
          STD_METHOD CreateShaderResourceView, :ptr ID3D12Device9, :ptr ID3D12Resource, :ptr D3D12_SHADER_RESOURCE_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateUnorderedAccessView)
          STD_METHOD CreateUnorderedAccessView, :ptr ID3D12Device9, :ptr ID3D12Resource, :ptr ID3D12Resource, :ptr D3D12_UNORDERED_ACCESS_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRenderTargetView)
          STD_METHOD CreateRenderTargetView, :ptr ID3D12Device9, :ptr ID3D12Resource, :ptr D3D12_RENDER_TARGET_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDepthStencilView)
          STD_METHOD CreateDepthStencilView, :ptr ID3D12Device9, :ptr ID3D12Resource, :ptr D3D12_DEPTH_STENCIL_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSampler)
          STD_METHOD CreateSampler, :ptr ID3D12Device9, :ptr D3D12_SAMPLER_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptors)
          STD_METHOD CopyDescriptors, :ptr ID3D12Device9, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptorsSimple)
          STD_METHOD CopyDescriptorsSimple, :ptr ID3D12Device9, :UINT, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceAllocationInfo)
          STD_METHOD GetResourceAllocationInfo, :ptr ID3D12Device9, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC
          DECLSPEC_XFGVIRT(ID3D12Device, GetCustomHeapProperties)
          STD_METHOD GetCustomHeapProperties, :ptr ID3D12Device9, :ptr D3D12_HEAP_PROPERTIES, :UINT, :D3D12_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommittedResource)
          STD_METHOD CreateCommittedResource, :ptr ID3D12Device9, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateHeap)
          STD_METHOD CreateHeap, :ptr ID3D12Device9, :ptr D3D12_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreatePlacedResource)
          STD_METHOD CreatePlacedResource, :ptr ID3D12Device9, :ptr ID3D12Heap, :UINT64, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateReservedResource)
          STD_METHOD CreateReservedResource, :ptr ID3D12Device9, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSharedHandle)
          STD_METHOD CreateSharedHandle, :ptr ID3D12Device9, :ptr ID3D12DeviceChild, :ptr SECURITY_ATTRIBUTES, :DWORD, :LPCWSTR, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandle)
          STD_METHOD OpenSharedHandle, :ptr ID3D12Device9, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandleByName)
          STD_METHOD OpenSharedHandleByName, :ptr ID3D12Device9, :LPCWSTR, :DWORD, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, MakeResident)
          STD_METHOD MakeResident, :ptr ID3D12Device9, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, Evict)
          STD_METHOD Evict, :ptr ID3D12Device9, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, CreateFence)
          STD_METHOD CreateFence, :ptr ID3D12Device9, :UINT64, :D3D12_FENCE_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDeviceRemovedReason)
          STD_METHOD GetDeviceRemovedReason, :ptr ID3D12Device9
          DECLSPEC_XFGVIRT(ID3D12Device, GetCopyableFootprints)
          STD_METHOD GetCopyableFootprints, :ptr ID3D12Device9, :ptr D3D12_RESOURCE_DESC, :UINT, :UINT, :UINT64, :ptr D3D12_PLACED_SUBRESOURCE_FOOTPRINT, :ptr UINT, :ptr UINT64, :ptr UINT64
          DECLSPEC_XFGVIRT(ID3D12Device, CreateQueryHeap)
          STD_METHOD CreateQueryHeap, :ptr ID3D12Device9, :ptr D3D12_QUERY_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, SetStablePowerState)
          STD_METHOD SetStablePowerState, :ptr ID3D12Device9, :BOOL
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandSignature)
          STD_METHOD CreateCommandSignature, :ptr ID3D12Device9, :ptr D3D12_COMMAND_SIGNATURE_DESC, :ptr ID3D12RootSignature, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceTiling)
          STD_METHOD GetResourceTiling, :ptr ID3D12Device9, :ptr ID3D12Resource, :ptr UINT, :ptr D3D12_PACKED_MIP_INFO, :ptr D3D12_TILE_SHAPE, :ptr UINT, :UINT, :ptr D3D12_SUBRESOURCE_TILING
          DECLSPEC_XFGVIRT(ID3D12Device, GetAdapterLuid)
          STD_METHOD GetAdapterLuid, :ptr ID3D12Device9, :ptr LUID
          DECLSPEC_XFGVIRT(ID3D12Device1, CreatePipelineLibrary)
          STD_METHOD CreatePipelineLibrary, :ptr ID3D12Device9, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device1, SetEventOnMultipleFenceCompletion)
          STD_METHOD SetEventOnMultipleFenceCompletion, :ptr ID3D12Device9, :ptr ptr ID3D12Fence, :ptr UINT64, :UINT, :D3D12_MULTIPLE_FENCE_WAIT_FLAGS, :HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device1, SetResidencyPriority)
          STD_METHOD SetResidencyPriority, :ptr ID3D12Device9, :UINT, :ptr ptr ID3D12Pageable, :ptr D3D12_RESIDENCY_PRIORITY
          DECLSPEC_XFGVIRT(ID3D12Device2, CreatePipelineState)
          STD_METHOD CreatePipelineState, :ptr ID3D12Device9, :ptr D3D12_PIPELINE_STATE_STREAM_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromAddress)
          STD_METHOD OpenExistingHeapFromAddress, :ptr ID3D12Device9, :ptr, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromFileMapping)
          STD_METHOD OpenExistingHeapFromFileMapping, :ptr ID3D12Device9, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, EnqueueMakeResident)
          STD_METHOD EnqueueMakeResident, :ptr ID3D12Device9, :D3D12_RESIDENCY_FLAGS, :UINT, :ptr ptr ID3D12Pageable, :ptr ID3D12Fence, :UINT64
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateCommandList1)
          STD_METHOD CreateCommandList1, :ptr ID3D12Device9, :UINT, :D3D12_COMMAND_LIST_TYPE, :D3D12_COMMAND_LIST_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateProtectedResourceSession)
          STD_METHOD CreateProtectedResourceSession, :ptr ID3D12Device9, :ptr D3D12_PROTECTED_RESOURCE_SESSION_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateCommittedResource1)
          STD_METHOD CreateCommittedResource1, :ptr ID3D12Device9, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateHeap1)
          STD_METHOD CreateHeap1, :ptr ID3D12Device9, :ptr D3D12_HEAP_DESC, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateReservedResource1)
          STD_METHOD CreateReservedResource1, :ptr ID3D12Device9, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, GetResourceAllocationInfo1)
          STD_METHOD GetResourceAllocationInfo1, :ptr ID3D12Device9, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC, :ptr D3D12_RESOURCE_ALLOCATION_INFO1
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateLifetimeTracker)
          STD_METHOD CreateLifetimeTracker, :ptr ID3D12Device9, :ptr ID3D12LifetimeOwner, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, RemoveDevice)
          STD_METHOD RemoveDevice, :ptr ID3D12Device9
          DECLSPEC_XFGVIRT(ID3D12Device5, EnumerateMetaCommands)
          STD_METHOD EnumerateMetaCommands, :ptr ID3D12Device9, :ptr UINT, :ptr D3D12_META_COMMAND_DESC
          DECLSPEC_XFGVIRT(ID3D12Device5, EnumerateMetaCommandParameters)
          STD_METHOD EnumerateMetaCommandParameters, :ptr ID3D12Device9, :REFGUID, :D3D12_META_COMMAND_PARAMETER_STAGE, :ptr UINT, :ptr UINT, :ptr D3D12_META_COMMAND_PARAMETER_DESC
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateMetaCommand)
          STD_METHOD CreateMetaCommand, :ptr ID3D12Device9, :REFGUID, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateStateObject)
          STD_METHOD CreateStateObject, :ptr ID3D12Device9, :ptr D3D12_STATE_OBJECT_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, GetRaytracingAccelerationStructurePrebuildInfo)
          STD_METHOD GetRaytracingAccelerationStructurePrebuildInfo, :ptr ID3D12Device9, :ptr D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS, :ptr D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO
          DECLSPEC_XFGVIRT(ID3D12Device5, CheckDriverMatchingIdentifier)
          STD_METHOD CheckDriverMatchingIdentifier, :ptr ID3D12Device9, :D3D12_SERIALIZED_DATA_TYPE, :ptr D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER
          DECLSPEC_XFGVIRT(ID3D12Device6, SetBackgroundProcessingMode)
          STD_METHOD SetBackgroundProcessingMode, :ptr ID3D12Device9, :D3D12_BACKGROUND_PROCESSING_MODE, :D3D12_MEASUREMENTS_ACTION, :HANDLE, :ptr BOOL
          DECLSPEC_XFGVIRT(ID3D12Device7, AddToStateObject)
          STD_METHOD AddToStateObject, :ptr ID3D12Device9, :ptr D3D12_STATE_OBJECT_DESC, :ptr ID3D12StateObject, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device7, CreateProtectedResourceSession1)
          STD_METHOD CreateProtectedResourceSession1, :ptr ID3D12Device9, :ptr D3D12_PROTECTED_RESOURCE_SESSION_DESC1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device8, GetResourceAllocationInfo2)
          STD_METHOD GetResourceAllocationInfo2, :ptr ID3D12Device9, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC1, :ptr D3D12_RESOURCE_ALLOCATION_INFO1
          DECLSPEC_XFGVIRT(ID3D12Device8, CreateCommittedResource2)
          STD_METHOD CreateCommittedResource2, :ptr ID3D12Device9, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC1, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device8, CreatePlacedResource1)
          STD_METHOD CreatePlacedResource1, :ptr ID3D12Device9, :ptr ID3D12Heap, :UINT64, :ptr D3D12_RESOURCE_DESC1, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device8, CreateSamplerFeedbackUnorderedAccessView)
          STD_METHOD CreateSamplerFeedbackUnorderedAccessView, :ptr ID3D12Device9, :ptr ID3D12Resource, :ptr ID3D12Resource, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device8, GetCopyableFootprints1)
          STD_METHOD GetCopyableFootprints1, :ptr ID3D12Device9, :ptr D3D12_RESOURCE_DESC1, :UINT, :UINT, :UINT64, :ptr D3D12_PLACED_SUBRESOURCE_FOOTPRINT, :ptr UINT, :ptr UINT64, :ptr UINT64
          DECLSPEC_XFGVIRT(ID3D12Device9, CreateShaderCacheSession)
          STD_METHOD CreateShaderCacheSession, :ptr ID3D12Device9, :ptr D3D12_SHADER_CACHE_SESSION_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device9, ShaderCacheControl)
          STD_METHOD ShaderCacheControl, :ptr ID3D12Device9, :D3D12_SHADER_CACHE_KIND_FLAGS, :D3D12_SHADER_CACHE_CONTROL_FLAGS
          DECLSPEC_XFGVIRT(ID3D12Device9, CreateCommandQueue1)
          STD_METHOD CreateCommandQueue1, :ptr ID3D12Device9, :ptr D3D12_COMMAND_QUEUE_DESC, :REFIID, :REFIID, :ptr ptr
          ??Interface equ <>
          END_INTERFACE
        ID3D12Device9Vtbl ends
        ID3D12Device9 struct
          lpVtbl POINTER ?
        ID3D12Device9 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12Device10_INTERFACE_DEFINED__
      __ID3D12Device10_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Device10:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12Device10Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12Device10Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Device10, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Device10
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Device10
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12Device10, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12Device10, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12Device10, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12Device10, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12Device, GetNodeCount)
          STD_METHOD GetNodeCount, :ptr ID3D12Device10
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandQueue)
          STD_METHOD CreateCommandQueue, :ptr ID3D12Device10, :ptr D3D12_COMMAND_QUEUE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandAllocator)
          STD_METHOD CreateCommandAllocator, :ptr ID3D12Device10, :D3D12_COMMAND_LIST_TYPE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateGraphicsPipelineState)
          STD_METHOD CreateGraphicsPipelineState, :ptr ID3D12Device10, :ptr D3D12_GRAPHICS_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateComputePipelineState)
          STD_METHOD CreateComputePipelineState, :ptr ID3D12Device10, :ptr D3D12_COMPUTE_PIPELINE_STATE_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandList)
          STD_METHOD CreateCommandList, :ptr ID3D12Device10, :UINT, :D3D12_COMMAND_LIST_TYPE, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CheckFeatureSupport)
          STD_METHOD CheckFeatureSupport, :ptr ID3D12Device10, :D3D12_FEATURE, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDescriptorHeap)
          STD_METHOD CreateDescriptorHeap, :ptr ID3D12Device10, :ptr D3D12_DESCRIPTOR_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDescriptorHandleIncrementSize)
          STD_METHOD GetDescriptorHandleIncrementSize, :ptr ID3D12Device10, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRootSignature)
          STD_METHOD CreateRootSignature, :ptr ID3D12Device10, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateConstantBufferView)
          STD_METHOD CreateConstantBufferView, :ptr ID3D12Device10, :ptr D3D12_CONSTANT_BUFFER_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateShaderResourceView)
          STD_METHOD CreateShaderResourceView, :ptr ID3D12Device10, :ptr ID3D12Resource, :ptr D3D12_SHADER_RESOURCE_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateUnorderedAccessView)
          STD_METHOD CreateUnorderedAccessView, :ptr ID3D12Device10, :ptr ID3D12Resource, :ptr ID3D12Resource, :ptr D3D12_UNORDERED_ACCESS_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateRenderTargetView)
          STD_METHOD CreateRenderTargetView, :ptr ID3D12Device10, :ptr ID3D12Resource, :ptr D3D12_RENDER_TARGET_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateDepthStencilView)
          STD_METHOD CreateDepthStencilView, :ptr ID3D12Device10, :ptr ID3D12Resource, :ptr D3D12_DEPTH_STENCIL_VIEW_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSampler)
          STD_METHOD CreateSampler, :ptr ID3D12Device10, :ptr D3D12_SAMPLER_DESC, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptors)
          STD_METHOD CopyDescriptors, :ptr ID3D12Device10, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :ptr UINT, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CopyDescriptorsSimple)
          STD_METHOD CopyDescriptorsSimple, :ptr ID3D12Device10, :UINT, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_DESCRIPTOR_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceAllocationInfo)
          STD_METHOD GetResourceAllocationInfo, :ptr ID3D12Device10, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC
          DECLSPEC_XFGVIRT(ID3D12Device, GetCustomHeapProperties)
          STD_METHOD GetCustomHeapProperties, :ptr ID3D12Device10, :ptr D3D12_HEAP_PROPERTIES, :UINT, :D3D12_HEAP_TYPE
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommittedResource)
          STD_METHOD CreateCommittedResource, :ptr ID3D12Device10, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateHeap)
          STD_METHOD CreateHeap, :ptr ID3D12Device10, :ptr D3D12_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreatePlacedResource)
          STD_METHOD CreatePlacedResource, :ptr ID3D12Device10, :ptr ID3D12Heap, :UINT64, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateReservedResource)
          STD_METHOD CreateReservedResource, :ptr ID3D12Device10, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, CreateSharedHandle)
          STD_METHOD CreateSharedHandle, :ptr ID3D12Device10, :ptr ID3D12DeviceChild, :ptr SECURITY_ATTRIBUTES, :DWORD, :LPCWSTR, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandle)
          STD_METHOD OpenSharedHandle, :ptr ID3D12Device10, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, OpenSharedHandleByName)
          STD_METHOD OpenSharedHandleByName, :ptr ID3D12Device10, :LPCWSTR, :DWORD, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device, MakeResident)
          STD_METHOD MakeResident, :ptr ID3D12Device10, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, Evict)
          STD_METHOD Evict, :ptr ID3D12Device10, :UINT, :ptr ptr ID3D12Pageable
          DECLSPEC_XFGVIRT(ID3D12Device, CreateFence)
          STD_METHOD CreateFence, :ptr ID3D12Device10, :UINT64, :D3D12_FENCE_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetDeviceRemovedReason)
          STD_METHOD GetDeviceRemovedReason, :ptr ID3D12Device10
          DECLSPEC_XFGVIRT(ID3D12Device, GetCopyableFootprints)
          STD_METHOD GetCopyableFootprints, :ptr ID3D12Device10, :ptr D3D12_RESOURCE_DESC, :UINT, :UINT, :UINT64, :ptr D3D12_PLACED_SUBRESOURCE_FOOTPRINT, :ptr UINT, :ptr UINT64, :ptr UINT64
          DECLSPEC_XFGVIRT(ID3D12Device, CreateQueryHeap)
          STD_METHOD CreateQueryHeap, :ptr ID3D12Device10, :ptr D3D12_QUERY_HEAP_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, SetStablePowerState)
          STD_METHOD SetStablePowerState, :ptr ID3D12Device10, :BOOL
          DECLSPEC_XFGVIRT(ID3D12Device, CreateCommandSignature)
          STD_METHOD CreateCommandSignature, :ptr ID3D12Device10, :ptr D3D12_COMMAND_SIGNATURE_DESC, :ptr ID3D12RootSignature, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device, GetResourceTiling)
          STD_METHOD GetResourceTiling, :ptr ID3D12Device10, :ptr ID3D12Resource, :ptr UINT, :ptr D3D12_PACKED_MIP_INFO, :ptr D3D12_TILE_SHAPE, :ptr UINT, :UINT, :ptr D3D12_SUBRESOURCE_TILING
          DECLSPEC_XFGVIRT(ID3D12Device, GetAdapterLuid)
          STD_METHOD GetAdapterLuid, :ptr ID3D12Device10, :ptr LUID
          DECLSPEC_XFGVIRT(ID3D12Device1, CreatePipelineLibrary)
          STD_METHOD CreatePipelineLibrary, :ptr ID3D12Device10, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device1, SetEventOnMultipleFenceCompletion)
          STD_METHOD SetEventOnMultipleFenceCompletion, :ptr ID3D12Device10, :ptr ptr ID3D12Fence, :ptr UINT64, :UINT, :D3D12_MULTIPLE_FENCE_WAIT_FLAGS, :HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device1, SetResidencyPriority)
          STD_METHOD SetResidencyPriority, :ptr ID3D12Device10, :UINT, :ptr ptr ID3D12Pageable, :ptr D3D12_RESIDENCY_PRIORITY
          DECLSPEC_XFGVIRT(ID3D12Device2, CreatePipelineState)
          STD_METHOD CreatePipelineState, :ptr ID3D12Device10, :ptr D3D12_PIPELINE_STATE_STREAM_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromAddress)
          STD_METHOD OpenExistingHeapFromAddress, :ptr ID3D12Device10, :ptr, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, OpenExistingHeapFromFileMapping)
          STD_METHOD OpenExistingHeapFromFileMapping, :ptr ID3D12Device10, :HANDLE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device3, EnqueueMakeResident)
          STD_METHOD EnqueueMakeResident, :ptr ID3D12Device10, :D3D12_RESIDENCY_FLAGS, :UINT, :ptr ptr ID3D12Pageable, :ptr ID3D12Fence, :UINT64
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateCommandList1)
          STD_METHOD CreateCommandList1, :ptr ID3D12Device10, :UINT, :D3D12_COMMAND_LIST_TYPE, :D3D12_COMMAND_LIST_FLAGS, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateProtectedResourceSession)
          STD_METHOD CreateProtectedResourceSession, :ptr ID3D12Device10, :ptr D3D12_PROTECTED_RESOURCE_SESSION_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateCommittedResource1)
          STD_METHOD CreateCommittedResource1, :ptr ID3D12Device10, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateHeap1)
          STD_METHOD CreateHeap1, :ptr ID3D12Device10, :ptr D3D12_HEAP_DESC, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, CreateReservedResource1)
          STD_METHOD CreateReservedResource1, :ptr ID3D12Device10, :ptr D3D12_RESOURCE_DESC, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device4, GetResourceAllocationInfo1)
          STD_METHOD GetResourceAllocationInfo1, :ptr ID3D12Device10, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC, :ptr D3D12_RESOURCE_ALLOCATION_INFO1
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateLifetimeTracker)
          STD_METHOD CreateLifetimeTracker, :ptr ID3D12Device10, :ptr ID3D12LifetimeOwner, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, RemoveDevice)
          STD_METHOD RemoveDevice, :ptr ID3D12Device10
          DECLSPEC_XFGVIRT(ID3D12Device5, EnumerateMetaCommands)
          STD_METHOD EnumerateMetaCommands, :ptr ID3D12Device10, :ptr UINT, :ptr D3D12_META_COMMAND_DESC
          DECLSPEC_XFGVIRT(ID3D12Device5, EnumerateMetaCommandParameters)
          STD_METHOD EnumerateMetaCommandParameters, :ptr ID3D12Device10, :REFGUID, :D3D12_META_COMMAND_PARAMETER_STAGE, :ptr UINT, :ptr UINT, :ptr D3D12_META_COMMAND_PARAMETER_DESC
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateMetaCommand)
          STD_METHOD CreateMetaCommand, :ptr ID3D12Device10, :REFGUID, :UINT, :ptr, :SIZE_T, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, CreateStateObject)
          STD_METHOD CreateStateObject, :ptr ID3D12Device10, :ptr D3D12_STATE_OBJECT_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device5, GetRaytracingAccelerationStructurePrebuildInfo)
          STD_METHOD GetRaytracingAccelerationStructurePrebuildInfo, :ptr ID3D12Device10, :ptr D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS, :ptr D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO
          DECLSPEC_XFGVIRT(ID3D12Device5, CheckDriverMatchingIdentifier)
          STD_METHOD CheckDriverMatchingIdentifier, :ptr ID3D12Device10, :D3D12_SERIALIZED_DATA_TYPE, :ptr D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER
          DECLSPEC_XFGVIRT(ID3D12Device6, SetBackgroundProcessingMode)
          STD_METHOD SetBackgroundProcessingMode, :ptr ID3D12Device10, :D3D12_BACKGROUND_PROCESSING_MODE, :D3D12_MEASUREMENTS_ACTION, :HANDLE, :ptr BOOL
          DECLSPEC_XFGVIRT(ID3D12Device7, AddToStateObject)
          STD_METHOD AddToStateObject, :ptr ID3D12Device10, :ptr D3D12_STATE_OBJECT_DESC, :ptr ID3D12StateObject, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device7, CreateProtectedResourceSession1)
          STD_METHOD CreateProtectedResourceSession1, :ptr ID3D12Device10, :ptr D3D12_PROTECTED_RESOURCE_SESSION_DESC1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device8, GetResourceAllocationInfo2)
          STD_METHOD GetResourceAllocationInfo2, :ptr ID3D12Device10, :ptr D3D12_RESOURCE_ALLOCATION_INFO, :UINT, :UINT, :ptr D3D12_RESOURCE_DESC1, :ptr D3D12_RESOURCE_ALLOCATION_INFO1
          DECLSPEC_XFGVIRT(ID3D12Device8, CreateCommittedResource2)
          STD_METHOD CreateCommittedResource2, :ptr ID3D12Device10, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC1, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device8, CreatePlacedResource1)
          STD_METHOD CreatePlacedResource1, :ptr ID3D12Device10, :ptr ID3D12Heap, :UINT64, :ptr D3D12_RESOURCE_DESC1, :D3D12_RESOURCE_STATES, :ptr D3D12_CLEAR_VALUE, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device8, CreateSamplerFeedbackUnorderedAccessView)
          STD_METHOD CreateSamplerFeedbackUnorderedAccessView, :ptr ID3D12Device10, :ptr ID3D12Resource, :ptr ID3D12Resource, :D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12Device8, GetCopyableFootprints1)
          STD_METHOD GetCopyableFootprints1, :ptr ID3D12Device10, :ptr D3D12_RESOURCE_DESC1, :UINT, :UINT, :UINT64, :ptr D3D12_PLACED_SUBRESOURCE_FOOTPRINT, :ptr UINT, :ptr UINT64, :ptr UINT64
          DECLSPEC_XFGVIRT(ID3D12Device9, CreateShaderCacheSession)
          STD_METHOD CreateShaderCacheSession, :ptr ID3D12Device10, :ptr D3D12_SHADER_CACHE_SESSION_DESC, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device9, ShaderCacheControl)
          STD_METHOD ShaderCacheControl, :ptr ID3D12Device10, :D3D12_SHADER_CACHE_KIND_FLAGS, :D3D12_SHADER_CACHE_CONTROL_FLAGS
          DECLSPEC_XFGVIRT(ID3D12Device9, CreateCommandQueue1)
          STD_METHOD CreateCommandQueue1, :ptr ID3D12Device10, :ptr D3D12_COMMAND_QUEUE_DESC, :REFIID, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device10, CreateCommittedResource3)
          STD_METHOD CreateCommittedResource3, :ptr ID3D12Device10, :ptr D3D12_HEAP_PROPERTIES, :D3D12_HEAP_FLAGS, :ptr D3D12_RESOURCE_DESC1, :D3D12_BARRIER_LAYOUT, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :UINT32, :ptr DXGI_FORMAT, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device10, CreatePlacedResource2)
          STD_METHOD CreatePlacedResource2, :ptr ID3D12Device10, :ptr ID3D12Heap, :UINT64, :ptr D3D12_RESOURCE_DESC1, :D3D12_BARRIER_LAYOUT, :ptr D3D12_CLEAR_VALUE, :UINT32, :ptr DXGI_FORMAT, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12Device10, CreateReservedResource2)
          STD_METHOD CreateReservedResource2, :ptr ID3D12Device10, :ptr D3D12_RESOURCE_DESC, :D3D12_BARRIER_LAYOUT, :ptr D3D12_CLEAR_VALUE, :ptr ID3D12ProtectedResourceSession, :UINT32, :ptr DXGI_FORMAT, :REFIID, :ptr ptr
          ??Interface equ <>
          END_INTERFACE
        ID3D12Device10Vtbl ends
        ID3D12Device10 struct
          lpVtbl POINTER ?
        ID3D12Device10 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12VirtualizationGuestDevice_INTERFACE_DEFINED__
      __ID3D12VirtualizationGuestDevice_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12VirtualizationGuestDevice:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12VirtualizationGuestDeviceVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12VirtualizationGuestDeviceVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12VirtualizationGuestDevice, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12VirtualizationGuestDevice
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12VirtualizationGuestDevice
          DECLSPEC_XFGVIRT(ID3D12VirtualizationGuestDevice, ShareWithHost)
          STD_METHOD ShareWithHost, :ptr ID3D12VirtualizationGuestDevice, :ptr ID3D12DeviceChild, :ptr HANDLE
          DECLSPEC_XFGVIRT(ID3D12VirtualizationGuestDevice, CreateFenceFd)
          STD_METHOD CreateFenceFd, :ptr ID3D12VirtualizationGuestDevice, :ptr ID3D12Fence, :UINT64, :ptr SDWORD
          ??Interface equ <>
          END_INTERFACE
        ID3D12VirtualizationGuestDeviceVtbl ends
        ID3D12VirtualizationGuestDevice struct
          lpVtbl POINTER ?
        ID3D12VirtualizationGuestDevice ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12Tools_INTERFACE_DEFINED__
      __ID3D12Tools_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12Tools:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12ToolsVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12ToolsVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12Tools, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12Tools
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12Tools
          DECLSPEC_XFGVIRT(ID3D12Tools, EnableShaderInstrumentation)
          STD_METHOD EnableShaderInstrumentation, :ptr ID3D12Tools, :BOOL
          DECLSPEC_XFGVIRT(ID3D12Tools, ShaderInstrumentationEnabled)
          STD_METHOD ShaderInstrumentationEnabled, :ptr ID3D12Tools
          ??Interface equ <>
          END_INTERFACE
        ID3D12ToolsVtbl ends
        ID3D12Tools struct
          lpVtbl POINTER ?
        ID3D12Tools ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_SUBRESOURCE_DATA struct
      pData POINTER ?
      RowPitch LONG_PTR ?
      SlicePitch LONG_PTR ?
    D3D12_SUBRESOURCE_DATA ends
    D3D12_MEMCPY_DEST struct
      pData POINTER ?
      RowPitch SIZE_T ?
      SlicePitch SIZE_T ?
    D3D12_MEMCPY_DEST ends
    if  not Defined(D3D12_IGNORE_SDK_LAYERS)
      include d3d12sdklayers.inc
    endif
    TYPE_PFN_D3D12_CREATE_DEVICE typedef proto WIN_STD_CALL_CONV :ptr IUnknown, :D3D_FEATURE_LEVEL, :REFIID, :ptr ptr
    PFN_D3D12_CREATE_DEVICE typedef ptr TYPE_PFN_D3D12_CREATE_DEVICE

    D3D12CreateDevice proto WIN_STD_CALL_CONV :ptr IUnknown, :D3D_FEATURE_LEVEL, :REFIID, :ptr ptr
    TYPE_PFN_D3D12_GET_DEBUG_INTERFACE typedef proto WIN_STD_CALL_CONV :REFIID, :ptr ptr
    PFN_D3D12_GET_DEBUG_INTERFACE typedef ptr TYPE_PFN_D3D12_GET_DEBUG_INTERFACE

    D3D12GetDebugInterface proto WIN_STD_CALL_CONV :REFIID, :ptr ptr
    D3D12EnableExperimentalFeatures proto WIN_STD_CALL_CONV :UINT, :ptr IID, :ptr, :ptr UINT
    DEFINE_GUID CLSID_D3D12Debug, 0f2352aebh, 0dd84h, 49feh, 0b9h, 7bh, 0a9h, 0dch, 0fdh, 0cch, 1bh, 4fh
    DEFINE_GUID CLSID_D3D12Tools, 0e38216b1h, 3c8ch, 4833h, 0aah, 09h, 0ah, 06h, 0b6h, 5dh, 96h, 0c8h
    DEFINE_GUID CLSID_D3D12DeviceRemovedExtendedData, 4a75bbc4h, 9ff4h, 4ad8h, 9fh, 18h, 0abh, 0aeh, 84h, 0dch, 5fh, 0f2h
    DEFINE_GUID CLSID_D3D12SDKConfiguration, 7cda6acah, 0a03eh, 49c8h, 94h, 58h, 03h, 34h, 0d2h, 0eh, 07h, 0ceh
    DEFINE_GUID CLSID_D3D12DeviceFactory, 114863bfh, 0c386h, 4aeeh, 0b3h, 9dh, 8fh, 0bh, 0bbh, 06h, 29h, 55h
    TYPE_PFN_D3D12_GET_INTERFACE typedef proto WIN_STD_CALL_CONV :REFCLSID, :REFIID, :ptr ptr
    PFN_D3D12_GET_INTERFACE typedef ptr TYPE_PFN_D3D12_GET_INTERFACE

    D3D12GetInterface proto WIN_STD_CALL_CONV :REFCLSID, :REFIID, :ptr ptr
    externdef __MIDL_itf_d3d12_0000_0055_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0055_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12SDKConfiguration_INTERFACE_DEFINED__
      __ID3D12SDKConfiguration_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12SDKConfiguration:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12SDKConfigurationVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12SDKConfigurationVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12SDKConfiguration, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12SDKConfiguration
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12SDKConfiguration
          DECLSPEC_XFGVIRT(ID3D12SDKConfiguration, SetSDKVersion)
          STD_METHOD SetSDKVersion, :ptr ID3D12SDKConfiguration, :UINT, :LPCSTR
          ??Interface equ <>
          END_INTERFACE
        ID3D12SDKConfigurationVtbl ends
        ID3D12SDKConfiguration struct
          lpVtbl POINTER ?
        ID3D12SDKConfiguration ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12SDKConfiguration1_INTERFACE_DEFINED__
      __ID3D12SDKConfiguration1_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12SDKConfiguration1:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12SDKConfiguration1Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12SDKConfiguration1Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12SDKConfiguration1, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12SDKConfiguration1
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12SDKConfiguration1
          DECLSPEC_XFGVIRT(ID3D12SDKConfiguration, SetSDKVersion)
          STD_METHOD SetSDKVersion, :ptr ID3D12SDKConfiguration1, :UINT, :LPCSTR
          DECLSPEC_XFGVIRT(ID3D12SDKConfiguration1, CreateDeviceFactory)
          STD_METHOD CreateDeviceFactory, :ptr ID3D12SDKConfiguration1, :UINT, :LPCSTR, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12SDKConfiguration1, FreeUnusedSDKs)
          STD_METHOD FreeUnusedSDKs, :ptr ID3D12SDKConfiguration1
          ??Interface equ <>
          END_INTERFACE
        ID3D12SDKConfiguration1Vtbl ends
        ID3D12SDKConfiguration1 struct
          lpVtbl POINTER ?
        ID3D12SDKConfiguration1 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_DEVICE_FACTORY_FLAGS typedef SDWORD
    D3D12_DEVICE_FACTORY_FLAG_NONE equ 0
    D3D12_DEVICE_FACTORY_FLAG_ALLOW_RETURNING_EXISTING_DEVICE equ 1h
    D3D12_DEVICE_FACTORY_FLAG_ALLOW_RETURNING_INCOMPATIBLE_EXISTING_DEVICE equ 2h
    D3D12_DEVICE_FACTORY_FLAG_DISALLOW_STORING_NEW_DEVICE_AS_SINGLETON equ 4h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_DEVICE_FACTORY_FLAGS)
    externdef __MIDL_itf_d3d12_0000_0057_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0057_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12DeviceFactory_INTERFACE_DEFINED__
      __ID3D12DeviceFactory_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12DeviceFactory:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12DeviceFactoryVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12DeviceFactoryVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12DeviceFactory, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12DeviceFactory
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12DeviceFactory
          DECLSPEC_XFGVIRT(ID3D12DeviceFactory, InitializeFromGlobalState)
          STD_METHOD InitializeFromGlobalState, :ptr ID3D12DeviceFactory
          DECLSPEC_XFGVIRT(ID3D12DeviceFactory, ApplyToGlobalState)
          STD_METHOD ApplyToGlobalState, :ptr ID3D12DeviceFactory
          DECLSPEC_XFGVIRT(ID3D12DeviceFactory, SetFlags)
          STD_METHOD SetFlags, :ptr ID3D12DeviceFactory, :D3D12_DEVICE_FACTORY_FLAGS
          DECLSPEC_XFGVIRT(ID3D12DeviceFactory, GetFlags)
          STD_METHOD GetFlags, :ptr ID3D12DeviceFactory
          DECLSPEC_XFGVIRT(ID3D12DeviceFactory, GetConfigurationInterface)
          STD_METHOD GetConfigurationInterface, :ptr ID3D12DeviceFactory, :REFCLSID, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12DeviceFactory, EnableExperimentalFeatures)
          STD_METHOD EnableExperimentalFeatures, :ptr ID3D12DeviceFactory, :UINT, :ptr IID, :ptr, :ptr UINT
          DECLSPEC_XFGVIRT(ID3D12DeviceFactory, CreateDevice)
          STD_METHOD CreateDevice, :ptr ID3D12DeviceFactory, :ptr IUnknown, :REFIID, :ptr ptr
          ??Interface equ <>
          END_INTERFACE
        ID3D12DeviceFactoryVtbl ends
        ID3D12DeviceFactory struct
          lpVtbl POINTER ?
        ID3D12DeviceFactory ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_DEVICE_FLAGS typedef SDWORD
    D3D12_DEVICE_FLAG_NONE equ 0
    D3D12_DEVICE_FLAG_DEBUG_LAYER_ENABLED equ 1h
    D3D12_DEVICE_FLAG_GPU_BASED_VALIDATION_ENABLED equ 2h
    D3D12_DEVICE_FLAG_SYNCHRONIZED_COMMAND_QUEUE_VALIDATION_DISABLED equ 4h
    D3D12_DEVICE_FLAG_DRED_AUTO_BREADCRUMBS_ENABLED equ 8h
    D3D12_DEVICE_FLAG_DRED_PAGE_FAULT_REPORTING_ENABLED equ 10h
    D3D12_DEVICE_FLAG_DRED_WATSON_REPORTING_ENABLED equ 20h
    D3D12_DEVICE_FLAG_DRED_BREADCRUMB_CONTEXT_ENABLED equ 40h
    D3D12_DEVICE_FLAG_DRED_USE_MARKERS_ONLY_BREADCRUMBS equ 80h
    D3D12_DEVICE_FLAG_SHADER_INSTRUMENTATION_ENABLED equ 100h
    D3D12_DEVICE_FLAG_AUTO_DEBUG_NAME_ENABLED equ 200h
    D3D12_DEVICE_FLAG_FORCE_LEGACY_STATE_VALIDATION equ 400h

    DEFINE_ENUM_FLAG_OPERATORS(D3D12_DEVICE_FLAGS)
    D3D12_DEVICE_CONFIGURATION_DESC struct
      Flags D3D12_DEVICE_FLAGS ?
      GpuBasedValidationFlags UINT ?
      SDKVersion UINT ?
      NumEnabledExperimentalFeatures UINT ?
    D3D12_DEVICE_CONFIGURATION_DESC ends
    externdef __MIDL_itf_d3d12_0000_0058_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0058_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12DeviceConfiguration_INTERFACE_DEFINED__
      __ID3D12DeviceConfiguration_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12DeviceConfiguration:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12DeviceConfigurationVtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12DeviceConfigurationVtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12DeviceConfiguration, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12DeviceConfiguration
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12DeviceConfiguration
          DECLSPEC_XFGVIRT(ID3D12DeviceConfiguration, GetDesc)
          STD_METHOD GetDesc, :ptr ID3D12DeviceConfiguration, :ptr D3D12_DEVICE_CONFIGURATION_DESC
          DECLSPEC_XFGVIRT(ID3D12DeviceConfiguration, GetEnabledExperimentalFeatures)
          STD_METHOD GetEnabledExperimentalFeatures, :ptr ID3D12DeviceConfiguration, :ptr GUID, :UINT
          DECLSPEC_XFGVIRT(ID3D12DeviceConfiguration, SerializeVersionedRootSignature)
          STD_METHOD SerializeVersionedRootSignature, :ptr ID3D12DeviceConfiguration, :ptr D3D12_VERSIONED_ROOT_SIGNATURE_DESC, :ptr ptr ID3DBlob, :ptr ptr ID3DBlob
          DECLSPEC_XFGVIRT(ID3D12DeviceConfiguration, CreateVersionedRootSignatureDeserializer)
          STD_METHOD CreateVersionedRootSignatureDeserializer, :ptr ID3D12DeviceConfiguration, :ptr, :SIZE_T, :REFIID, :ptr ptr
          ??Interface equ <>
          END_INTERFACE
        ID3D12DeviceConfigurationVtbl ends
        ID3D12DeviceConfiguration struct
          lpVtbl POINTER ?
        ID3D12DeviceConfiguration ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_AXIS_SHADING_RATE typedef SDWORD
    D3D12_AXIS_SHADING_RATE_1X equ 0
    D3D12_AXIS_SHADING_RATE_2X equ 1h
    D3D12_AXIS_SHADING_RATE_4X equ 2h

    D3D12_SHADING_RATE_X_AXIS_SHIFT equ 2
    D3D12_SHADING_RATE_VALID_MASK equ 3
    D3D12_MAKE_COARSE_SHADING_RATE macro x, y
      exitm <((x) shl D3D12_SHADING_RATE_X_AXIS_SHIFT or (y))>
    endm
    D3D12_GET_COARSE_SHADING_RATE_X_AXIS macro x
      exitm <(((x) shr D3D12_SHADING_RATE_X_AXIS_SHIFT) and D3D12_SHADING_RATE_VALID_MASK)>
    endm
    D3D12_GET_COARSE_SHADING_RATE_Y_AXIS macro y
      exitm <((y) and D3D12_SHADING_RATE_VALID_MASK)>
    endm
    D3D12_SHADING_RATE typedef SDWORD
    D3D12_SHADING_RATE_1X1 equ 0
    D3D12_SHADING_RATE_1X2 equ 1h
    D3D12_SHADING_RATE_2X1 equ 4h
    D3D12_SHADING_RATE_2X2 equ 5h
    D3D12_SHADING_RATE_2X4 equ 6h
    D3D12_SHADING_RATE_4X2 equ 9h
    D3D12_SHADING_RATE_4X4 equ 0ah

    D3D12_SHADING_RATE_COMBINER typedef SDWORD
    D3D12_SHADING_RATE_COMBINER_PASSTHROUGH equ 0
    D3D12_SHADING_RATE_COMBINER_OVERRIDE equ 1
    D3D12_SHADING_RATE_COMBINER_MIN equ 2
    D3D12_SHADING_RATE_COMBINER_MAX equ 3
    D3D12_SHADING_RATE_COMBINER_SUM equ 4

    externdef __MIDL_itf_d3d12_0000_0059_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0059_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12GraphicsCommandList5_INTERFACE_DEFINED__
      __ID3D12GraphicsCommandList5_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12GraphicsCommandList5:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12GraphicsCommandList5Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12GraphicsCommandList5Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12GraphicsCommandList5, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12GraphicsCommandList5
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12GraphicsCommandList5
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12GraphicsCommandList5, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12GraphicsCommandList5, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12GraphicsCommandList5, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12GraphicsCommandList5, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12GraphicsCommandList5, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12CommandList, GetType)
          STD_METHOD GetType, :ptr ID3D12GraphicsCommandList5
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Close)
          STD_METHOD Close, :ptr ID3D12GraphicsCommandList5
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Reset)
          STD_METHOD Reset, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearState)
          STD_METHOD ClearState, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawInstanced)
          STD_METHOD DrawInstanced, :ptr ID3D12GraphicsCommandList5, :UINT, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawIndexedInstanced)
          STD_METHOD DrawIndexedInstanced, :ptr ID3D12GraphicsCommandList5, :UINT, :UINT, :UINT, :INT_, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Dispatch)
          STD_METHOD Dispatch, :ptr ID3D12GraphicsCommandList5, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyBufferRegion)
          STD_METHOD CopyBufferRegion, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTextureRegion)
          STD_METHOD CopyTextureRegion, :ptr ID3D12GraphicsCommandList5, :ptr D3D12_TEXTURE_COPY_LOCATION, :UINT, :UINT, :UINT, :ptr D3D12_TEXTURE_COPY_LOCATION, :ptr D3D12_BOX
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyResource)
          STD_METHOD CopyResource, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12Resource, :ptr ID3D12Resource
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTiles)
          STD_METHOD CopyTiles, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12Resource, :ptr D3D12_TILED_RESOURCE_COORDINATE, :ptr D3D12_TILE_REGION_SIZE, :ptr ID3D12Resource, :UINT64, :D3D12_TILE_COPY_FLAGS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveSubresource)
          STD_METHOD ResolveSubresource, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12Resource, :UINT, :ptr ID3D12Resource, :UINT, :DXGI_FORMAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetPrimitiveTopology)
          STD_METHOD IASetPrimitiveTopology, :ptr ID3D12GraphicsCommandList5, :D3D12_PRIMITIVE_TOPOLOGY
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetViewports)
          STD_METHOD RSSetViewports, :ptr ID3D12GraphicsCommandList5, :UINT, :ptr D3D12_VIEWPORT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetScissorRects)
          STD_METHOD RSSetScissorRects, :ptr ID3D12GraphicsCommandList5, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetBlendFactor)
          STD_METHOD OMSetBlendFactor, :ptr ID3D12GraphicsCommandList5, :ptr FLOAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetStencilRef)
          STD_METHOD OMSetStencilRef, :ptr ID3D12GraphicsCommandList5, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPipelineState)
          STD_METHOD SetPipelineState, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResourceBarrier)
          STD_METHOD ResourceBarrier, :ptr ID3D12GraphicsCommandList5, :UINT, :ptr D3D12_RESOURCE_BARRIER
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteBundle)
          STD_METHOD ExecuteBundle, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12GraphicsCommandList
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetDescriptorHeaps)
          STD_METHOD SetDescriptorHeaps, :ptr ID3D12GraphicsCommandList5, :UINT, :ptr ptr ID3D12DescriptorHeap
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootSignature)
          STD_METHOD SetComputeRootSignature, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootSignature)
          STD_METHOD SetGraphicsRootSignature, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootDescriptorTable)
          STD_METHOD SetComputeRootDescriptorTable, :ptr ID3D12GraphicsCommandList5, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootDescriptorTable)
          STD_METHOD SetGraphicsRootDescriptorTable, :ptr ID3D12GraphicsCommandList5, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstant)
          STD_METHOD SetComputeRoot32BitConstant, :ptr ID3D12GraphicsCommandList5, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstant)
          STD_METHOD SetGraphicsRoot32BitConstant, :ptr ID3D12GraphicsCommandList5, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstants)
          STD_METHOD SetComputeRoot32BitConstants, :ptr ID3D12GraphicsCommandList5, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstants)
          STD_METHOD SetGraphicsRoot32BitConstants, :ptr ID3D12GraphicsCommandList5, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootConstantBufferView)
          STD_METHOD SetComputeRootConstantBufferView, :ptr ID3D12GraphicsCommandList5, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootConstantBufferView)
          STD_METHOD SetGraphicsRootConstantBufferView, :ptr ID3D12GraphicsCommandList5, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootShaderResourceView)
          STD_METHOD SetComputeRootShaderResourceView, :ptr ID3D12GraphicsCommandList5, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootShaderResourceView)
          STD_METHOD SetGraphicsRootShaderResourceView, :ptr ID3D12GraphicsCommandList5, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootUnorderedAccessView)
          STD_METHOD SetComputeRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList5, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootUnorderedAccessView)
          STD_METHOD SetGraphicsRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList5, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetIndexBuffer)
          STD_METHOD IASetIndexBuffer, :ptr ID3D12GraphicsCommandList5, :ptr D3D12_INDEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetVertexBuffers)
          STD_METHOD IASetVertexBuffers, :ptr ID3D12GraphicsCommandList5, :UINT, :UINT, :ptr D3D12_VERTEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SOSetTargets)
          STD_METHOD SOSetTargets, :ptr ID3D12GraphicsCommandList5, :UINT, :UINT, :ptr D3D12_STREAM_OUTPUT_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetRenderTargets)
          STD_METHOD OMSetRenderTargets, :ptr ID3D12GraphicsCommandList5, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :BOOL, :ptr D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearDepthStencilView)
          STD_METHOD ClearDepthStencilView, :ptr ID3D12GraphicsCommandList5, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CLEAR_FLAGS, :FLOAT, :UINT8, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearRenderTargetView)
          STD_METHOD ClearRenderTargetView, :ptr ID3D12GraphicsCommandList5, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewUint)
          STD_METHOD ClearUnorderedAccessViewUint, :ptr ID3D12GraphicsCommandList5, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr UINT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewFloat)
          STD_METHOD ClearUnorderedAccessViewFloat, :ptr ID3D12GraphicsCommandList5, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DiscardResource)
          STD_METHOD DiscardResource, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12Resource, :ptr D3D12_DISCARD_REGION
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginQuery)
          STD_METHOD BeginQuery, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndQuery)
          STD_METHOD EndQuery, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveQueryData)
          STD_METHOD ResolveQueryData, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT, :UINT, :ptr ID3D12Resource, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPredication)
          STD_METHOD SetPredication, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12Resource, :UINT64, :D3D12_PREDICATION_OP
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetMarker)
          STD_METHOD SetMarker, :ptr ID3D12GraphicsCommandList5, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginEvent)
          STD_METHOD BeginEvent, :ptr ID3D12GraphicsCommandList5, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndEvent)
          STD_METHOD EndEvent, :ptr ID3D12GraphicsCommandList5
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteIndirect)
          STD_METHOD ExecuteIndirect, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12CommandSignature, :UINT, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, AtomicCopyBufferUINT)
          STD_METHOD AtomicCopyBufferUINT, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT, :ptr ptr ID3D12Resource, :ptr D3D12_SUBRESOURCE_RANGE_UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, AtomicCopyBufferUINT64)
          STD_METHOD AtomicCopyBufferUINT64, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT, :ptr ptr ID3D12Resource, :ptr D3D12_SUBRESOURCE_RANGE_UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, OMSetDepthBounds)
          STD_METHOD OMSetDepthBounds, :ptr ID3D12GraphicsCommandList5, :FLOAT, :FLOAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, SetSamplePositions)
          STD_METHOD SetSamplePositions, :ptr ID3D12GraphicsCommandList5, :UINT, :UINT, :ptr D3D12_SAMPLE_POSITION
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, ResolveSubresourceRegion)
          STD_METHOD ResolveSubresourceRegion, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12Resource, :UINT, :UINT, :UINT, :ptr ID3D12Resource, :UINT, :ptr D3D12_RECT, :DXGI_FORMAT, :D3D12_RESOLVE_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, SetViewInstanceMask)
          STD_METHOD SetViewInstanceMask, :ptr ID3D12GraphicsCommandList5, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList2, WriteBufferImmediate)
          STD_METHOD WriteBufferImmediate, :ptr ID3D12GraphicsCommandList5, :UINT, :ptr D3D12_WRITEBUFFERIMMEDIATE_PARAMETER, :ptr D3D12_WRITEBUFFERIMMEDIATE_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList3, SetProtectedResourceSession)
          STD_METHOD SetProtectedResourceSession, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12ProtectedResourceSession
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, BeginRenderPass)
          STD_METHOD BeginRenderPass, :ptr ID3D12GraphicsCommandList5, :UINT, :ptr D3D12_RENDER_PASS_RENDER_TARGET_DESC, :ptr D3D12_RENDER_PASS_DEPTH_STENCIL_DESC, :D3D12_RENDER_PASS_FLAGS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, EndRenderPass)
          STD_METHOD EndRenderPass, :ptr ID3D12GraphicsCommandList5
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, InitializeMetaCommand)
          STD_METHOD InitializeMetaCommand, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12MetaCommand, :ptr, :SIZE_T
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, ExecuteMetaCommand)
          STD_METHOD ExecuteMetaCommand, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12MetaCommand, :ptr, :SIZE_T
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, BuildRaytracingAccelerationStructure)
          STD_METHOD BuildRaytracingAccelerationStructure, :ptr ID3D12GraphicsCommandList5, :ptr D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC, :UINT, :ptr D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, EmitRaytracingAccelerationStructurePostbuildInfo)
          STD_METHOD EmitRaytracingAccelerationStructurePostbuildInfo, :ptr ID3D12GraphicsCommandList5, :ptr D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC, :UINT, :ptr D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, CopyRaytracingAccelerationStructure)
          STD_METHOD CopyRaytracingAccelerationStructure, :ptr ID3D12GraphicsCommandList5, :D3D12_GPU_VIRTUAL_ADDRESS, :D3D12_GPU_VIRTUAL_ADDRESS, :D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, SetPipelineState1)
          STD_METHOD SetPipelineState1, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12StateObject
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, DispatchRays)
          STD_METHOD DispatchRays, :ptr ID3D12GraphicsCommandList5, :ptr D3D12_DISPATCH_RAYS_DESC
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList5, RSSetShadingRate)
          STD_METHOD RSSetShadingRate, :ptr ID3D12GraphicsCommandList5, :D3D12_SHADING_RATE, :ptr D3D12_SHADING_RATE_COMBINER
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList5, RSSetShadingRateImage)
          STD_METHOD RSSetShadingRateImage, :ptr ID3D12GraphicsCommandList5, :ptr ID3D12Resource
          ??Interface equ <>
          END_INTERFACE
        ID3D12GraphicsCommandList5Vtbl ends
        ID3D12GraphicsCommandList5 struct
          lpVtbl POINTER ?
        ID3D12GraphicsCommandList5 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    D3D12_DISPATCH_MESH_ARGUMENTS struct
      ThreadGroupCountX UINT ?
      ThreadGroupCountY UINT ?
      ThreadGroupCountZ UINT ?
    D3D12_DISPATCH_MESH_ARGUMENTS ends
    externdef __MIDL_itf_d3d12_0000_0060_v0_0_c_ifspec:RPC_IF_HANDLE
    externdef __MIDL_itf_d3d12_0000_0060_v0_0_s_ifspec:RPC_IF_HANDLE
    ifndef __ID3D12GraphicsCommandList6_INTERFACE_DEFINED__
      __ID3D12GraphicsCommandList6_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12GraphicsCommandList6:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12GraphicsCommandList6Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12GraphicsCommandList6Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12GraphicsCommandList6, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12GraphicsCommandList6
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12GraphicsCommandList6
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12GraphicsCommandList6, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12GraphicsCommandList6, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12GraphicsCommandList6, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12GraphicsCommandList6, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12GraphicsCommandList6, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12CommandList, GetType)
          STD_METHOD GetType, :ptr ID3D12GraphicsCommandList6
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Close)
          STD_METHOD Close, :ptr ID3D12GraphicsCommandList6
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Reset)
          STD_METHOD Reset, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearState)
          STD_METHOD ClearState, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawInstanced)
          STD_METHOD DrawInstanced, :ptr ID3D12GraphicsCommandList6, :UINT, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawIndexedInstanced)
          STD_METHOD DrawIndexedInstanced, :ptr ID3D12GraphicsCommandList6, :UINT, :UINT, :UINT, :INT_, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Dispatch)
          STD_METHOD Dispatch, :ptr ID3D12GraphicsCommandList6, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyBufferRegion)
          STD_METHOD CopyBufferRegion, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTextureRegion)
          STD_METHOD CopyTextureRegion, :ptr ID3D12GraphicsCommandList6, :ptr D3D12_TEXTURE_COPY_LOCATION, :UINT, :UINT, :UINT, :ptr D3D12_TEXTURE_COPY_LOCATION, :ptr D3D12_BOX
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyResource)
          STD_METHOD CopyResource, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12Resource, :ptr ID3D12Resource
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTiles)
          STD_METHOD CopyTiles, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12Resource, :ptr D3D12_TILED_RESOURCE_COORDINATE, :ptr D3D12_TILE_REGION_SIZE, :ptr ID3D12Resource, :UINT64, :D3D12_TILE_COPY_FLAGS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveSubresource)
          STD_METHOD ResolveSubresource, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12Resource, :UINT, :ptr ID3D12Resource, :UINT, :DXGI_FORMAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetPrimitiveTopology)
          STD_METHOD IASetPrimitiveTopology, :ptr ID3D12GraphicsCommandList6, :D3D12_PRIMITIVE_TOPOLOGY
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetViewports)
          STD_METHOD RSSetViewports, :ptr ID3D12GraphicsCommandList6, :UINT, :ptr D3D12_VIEWPORT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetScissorRects)
          STD_METHOD RSSetScissorRects, :ptr ID3D12GraphicsCommandList6, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetBlendFactor)
          STD_METHOD OMSetBlendFactor, :ptr ID3D12GraphicsCommandList6, :ptr FLOAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetStencilRef)
          STD_METHOD OMSetStencilRef, :ptr ID3D12GraphicsCommandList6, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPipelineState)
          STD_METHOD SetPipelineState, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResourceBarrier)
          STD_METHOD ResourceBarrier, :ptr ID3D12GraphicsCommandList6, :UINT, :ptr D3D12_RESOURCE_BARRIER
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteBundle)
          STD_METHOD ExecuteBundle, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12GraphicsCommandList
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetDescriptorHeaps)
          STD_METHOD SetDescriptorHeaps, :ptr ID3D12GraphicsCommandList6, :UINT, :ptr ptr ID3D12DescriptorHeap
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootSignature)
          STD_METHOD SetComputeRootSignature, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootSignature)
          STD_METHOD SetGraphicsRootSignature, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootDescriptorTable)
          STD_METHOD SetComputeRootDescriptorTable, :ptr ID3D12GraphicsCommandList6, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootDescriptorTable)
          STD_METHOD SetGraphicsRootDescriptorTable, :ptr ID3D12GraphicsCommandList6, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstant)
          STD_METHOD SetComputeRoot32BitConstant, :ptr ID3D12GraphicsCommandList6, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstant)
          STD_METHOD SetGraphicsRoot32BitConstant, :ptr ID3D12GraphicsCommandList6, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstants)
          STD_METHOD SetComputeRoot32BitConstants, :ptr ID3D12GraphicsCommandList6, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstants)
          STD_METHOD SetGraphicsRoot32BitConstants, :ptr ID3D12GraphicsCommandList6, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootConstantBufferView)
          STD_METHOD SetComputeRootConstantBufferView, :ptr ID3D12GraphicsCommandList6, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootConstantBufferView)
          STD_METHOD SetGraphicsRootConstantBufferView, :ptr ID3D12GraphicsCommandList6, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootShaderResourceView)
          STD_METHOD SetComputeRootShaderResourceView, :ptr ID3D12GraphicsCommandList6, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootShaderResourceView)
          STD_METHOD SetGraphicsRootShaderResourceView, :ptr ID3D12GraphicsCommandList6, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootUnorderedAccessView)
          STD_METHOD SetComputeRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList6, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootUnorderedAccessView)
          STD_METHOD SetGraphicsRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList6, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetIndexBuffer)
          STD_METHOD IASetIndexBuffer, :ptr ID3D12GraphicsCommandList6, :ptr D3D12_INDEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetVertexBuffers)
          STD_METHOD IASetVertexBuffers, :ptr ID3D12GraphicsCommandList6, :UINT, :UINT, :ptr D3D12_VERTEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SOSetTargets)
          STD_METHOD SOSetTargets, :ptr ID3D12GraphicsCommandList6, :UINT, :UINT, :ptr D3D12_STREAM_OUTPUT_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetRenderTargets)
          STD_METHOD OMSetRenderTargets, :ptr ID3D12GraphicsCommandList6, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :BOOL, :ptr D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearDepthStencilView)
          STD_METHOD ClearDepthStencilView, :ptr ID3D12GraphicsCommandList6, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CLEAR_FLAGS, :FLOAT, :UINT8, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearRenderTargetView)
          STD_METHOD ClearRenderTargetView, :ptr ID3D12GraphicsCommandList6, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewUint)
          STD_METHOD ClearUnorderedAccessViewUint, :ptr ID3D12GraphicsCommandList6, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr UINT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewFloat)
          STD_METHOD ClearUnorderedAccessViewFloat, :ptr ID3D12GraphicsCommandList6, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DiscardResource)
          STD_METHOD DiscardResource, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12Resource, :ptr D3D12_DISCARD_REGION
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginQuery)
          STD_METHOD BeginQuery, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndQuery)
          STD_METHOD EndQuery, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveQueryData)
          STD_METHOD ResolveQueryData, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT, :UINT, :ptr ID3D12Resource, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPredication)
          STD_METHOD SetPredication, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12Resource, :UINT64, :D3D12_PREDICATION_OP
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetMarker)
          STD_METHOD SetMarker, :ptr ID3D12GraphicsCommandList6, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginEvent)
          STD_METHOD BeginEvent, :ptr ID3D12GraphicsCommandList6, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndEvent)
          STD_METHOD EndEvent, :ptr ID3D12GraphicsCommandList6
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteIndirect)
          STD_METHOD ExecuteIndirect, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12CommandSignature, :UINT, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, AtomicCopyBufferUINT)
          STD_METHOD AtomicCopyBufferUINT, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT, :ptr ptr ID3D12Resource, :ptr D3D12_SUBRESOURCE_RANGE_UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, AtomicCopyBufferUINT64)
          STD_METHOD AtomicCopyBufferUINT64, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT, :ptr ptr ID3D12Resource, :ptr D3D12_SUBRESOURCE_RANGE_UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, OMSetDepthBounds)
          STD_METHOD OMSetDepthBounds, :ptr ID3D12GraphicsCommandList6, :FLOAT, :FLOAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, SetSamplePositions)
          STD_METHOD SetSamplePositions, :ptr ID3D12GraphicsCommandList6, :UINT, :UINT, :ptr D3D12_SAMPLE_POSITION
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, ResolveSubresourceRegion)
          STD_METHOD ResolveSubresourceRegion, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12Resource, :UINT, :UINT, :UINT, :ptr ID3D12Resource, :UINT, :ptr D3D12_RECT, :DXGI_FORMAT, :D3D12_RESOLVE_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, SetViewInstanceMask)
          STD_METHOD SetViewInstanceMask, :ptr ID3D12GraphicsCommandList6, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList2, WriteBufferImmediate)
          STD_METHOD WriteBufferImmediate, :ptr ID3D12GraphicsCommandList6, :UINT, :ptr D3D12_WRITEBUFFERIMMEDIATE_PARAMETER, :ptr D3D12_WRITEBUFFERIMMEDIATE_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList3, SetProtectedResourceSession)
          STD_METHOD SetProtectedResourceSession, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12ProtectedResourceSession
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, BeginRenderPass)
          STD_METHOD BeginRenderPass, :ptr ID3D12GraphicsCommandList6, :UINT, :ptr D3D12_RENDER_PASS_RENDER_TARGET_DESC, :ptr D3D12_RENDER_PASS_DEPTH_STENCIL_DESC, :D3D12_RENDER_PASS_FLAGS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, EndRenderPass)
          STD_METHOD EndRenderPass, :ptr ID3D12GraphicsCommandList6
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, InitializeMetaCommand)
          STD_METHOD InitializeMetaCommand, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12MetaCommand, :ptr, :SIZE_T
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, ExecuteMetaCommand)
          STD_METHOD ExecuteMetaCommand, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12MetaCommand, :ptr, :SIZE_T
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, BuildRaytracingAccelerationStructure)
          STD_METHOD BuildRaytracingAccelerationStructure, :ptr ID3D12GraphicsCommandList6, :ptr D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC, :UINT, :ptr D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, EmitRaytracingAccelerationStructurePostbuildInfo)
          STD_METHOD EmitRaytracingAccelerationStructurePostbuildInfo, :ptr ID3D12GraphicsCommandList6, :ptr D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC, :UINT, :ptr D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, CopyRaytracingAccelerationStructure)
          STD_METHOD CopyRaytracingAccelerationStructure, :ptr ID3D12GraphicsCommandList6, :D3D12_GPU_VIRTUAL_ADDRESS, :D3D12_GPU_VIRTUAL_ADDRESS, :D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, SetPipelineState1)
          STD_METHOD SetPipelineState1, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12StateObject
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, DispatchRays)
          STD_METHOD DispatchRays, :ptr ID3D12GraphicsCommandList6, :ptr D3D12_DISPATCH_RAYS_DESC
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList5, RSSetShadingRate)
          STD_METHOD RSSetShadingRate, :ptr ID3D12GraphicsCommandList6, :D3D12_SHADING_RATE, :ptr D3D12_SHADING_RATE_COMBINER
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList5, RSSetShadingRateImage)
          STD_METHOD RSSetShadingRateImage, :ptr ID3D12GraphicsCommandList6, :ptr ID3D12Resource
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList6, DispatchMesh)
          STD_METHOD DispatchMesh, :ptr ID3D12GraphicsCommandList6, :UINT, :UINT, :UINT
          ??Interface equ <>
          END_INTERFACE
        ID3D12GraphicsCommandList6Vtbl ends
        ID3D12GraphicsCommandList6 struct
          lpVtbl POINTER ?
        ID3D12GraphicsCommandList6 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
    ifndef __ID3D12GraphicsCommandList7_INTERFACE_DEFINED__
      __ID3D12GraphicsCommandList7_INTERFACE_DEFINED__ equ <>
      externdef IID_ID3D12GraphicsCommandList7:IID
      if Defined(__cplusplus) and  not Defined(CINTERFACE)
        ;[...]
      else
        ID3D12GraphicsCommandList7Vtbl struct
          BEGIN_INTERFACE
          ??Interface equ <ID3D12GraphicsCommandList7Vtbl>
          DECLSPEC_XFGVIRT(IUnknown, QueryInterface)
          STD_METHOD QueryInterface, :ptr ID3D12GraphicsCommandList7, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(IUnknown, AddRef)
          STD_METHOD AddRef, :ptr ID3D12GraphicsCommandList7
          DECLSPEC_XFGVIRT(IUnknown, Release)
          STD_METHOD Release, :ptr ID3D12GraphicsCommandList7
          DECLSPEC_XFGVIRT(ID3D12Object, GetPrivateData)
          STD_METHOD GetPrivateData, :ptr ID3D12GraphicsCommandList7, :REFGUID, :ptr UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateData)
          STD_METHOD SetPrivateData, :ptr ID3D12GraphicsCommandList7, :REFGUID, :UINT, :ptr
          DECLSPEC_XFGVIRT(ID3D12Object, SetPrivateDataInterface)
          STD_METHOD SetPrivateDataInterface, :ptr ID3D12GraphicsCommandList7, :REFGUID, :ptr IUnknown
          DECLSPEC_XFGVIRT(ID3D12Object, SetName)
          STD_METHOD SetName, :ptr ID3D12GraphicsCommandList7, :LPCWSTR
          DECLSPEC_XFGVIRT(ID3D12DeviceChild, GetDevice)
          STD_METHOD GetDevice, :ptr ID3D12GraphicsCommandList7, :REFIID, :ptr ptr
          DECLSPEC_XFGVIRT(ID3D12CommandList, GetType)
          STD_METHOD GetType, :ptr ID3D12GraphicsCommandList7
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Close)
          STD_METHOD Close, :ptr ID3D12GraphicsCommandList7
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Reset)
          STD_METHOD Reset, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12CommandAllocator, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearState)
          STD_METHOD ClearState, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawInstanced)
          STD_METHOD DrawInstanced, :ptr ID3D12GraphicsCommandList7, :UINT, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DrawIndexedInstanced)
          STD_METHOD DrawIndexedInstanced, :ptr ID3D12GraphicsCommandList7, :UINT, :UINT, :UINT, :INT_, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, Dispatch)
          STD_METHOD Dispatch, :ptr ID3D12GraphicsCommandList7, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyBufferRegion)
          STD_METHOD CopyBufferRegion, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTextureRegion)
          STD_METHOD CopyTextureRegion, :ptr ID3D12GraphicsCommandList7, :ptr D3D12_TEXTURE_COPY_LOCATION, :UINT, :UINT, :UINT, :ptr D3D12_TEXTURE_COPY_LOCATION, :ptr D3D12_BOX
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyResource)
          STD_METHOD CopyResource, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12Resource, :ptr ID3D12Resource
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, CopyTiles)
          STD_METHOD CopyTiles, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12Resource, :ptr D3D12_TILED_RESOURCE_COORDINATE, :ptr D3D12_TILE_REGION_SIZE, :ptr ID3D12Resource, :UINT64, :D3D12_TILE_COPY_FLAGS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveSubresource)
          STD_METHOD ResolveSubresource, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12Resource, :UINT, :ptr ID3D12Resource, :UINT, :DXGI_FORMAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetPrimitiveTopology)
          STD_METHOD IASetPrimitiveTopology, :ptr ID3D12GraphicsCommandList7, :D3D12_PRIMITIVE_TOPOLOGY
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetViewports)
          STD_METHOD RSSetViewports, :ptr ID3D12GraphicsCommandList7, :UINT, :ptr D3D12_VIEWPORT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, RSSetScissorRects)
          STD_METHOD RSSetScissorRects, :ptr ID3D12GraphicsCommandList7, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetBlendFactor)
          STD_METHOD OMSetBlendFactor, :ptr ID3D12GraphicsCommandList7, :ptr FLOAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetStencilRef)
          STD_METHOD OMSetStencilRef, :ptr ID3D12GraphicsCommandList7, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPipelineState)
          STD_METHOD SetPipelineState, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12PipelineState
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResourceBarrier)
          STD_METHOD ResourceBarrier, :ptr ID3D12GraphicsCommandList7, :UINT, :ptr D3D12_RESOURCE_BARRIER
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteBundle)
          STD_METHOD ExecuteBundle, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12GraphicsCommandList
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetDescriptorHeaps)
          STD_METHOD SetDescriptorHeaps, :ptr ID3D12GraphicsCommandList7, :UINT, :ptr ptr ID3D12DescriptorHeap
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootSignature)
          STD_METHOD SetComputeRootSignature, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootSignature)
          STD_METHOD SetGraphicsRootSignature, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12RootSignature
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootDescriptorTable)
          STD_METHOD SetComputeRootDescriptorTable, :ptr ID3D12GraphicsCommandList7, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootDescriptorTable)
          STD_METHOD SetGraphicsRootDescriptorTable, :ptr ID3D12GraphicsCommandList7, :UINT, :D3D12_GPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstant)
          STD_METHOD SetComputeRoot32BitConstant, :ptr ID3D12GraphicsCommandList7, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstant)
          STD_METHOD SetGraphicsRoot32BitConstant, :ptr ID3D12GraphicsCommandList7, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRoot32BitConstants)
          STD_METHOD SetComputeRoot32BitConstants, :ptr ID3D12GraphicsCommandList7, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRoot32BitConstants)
          STD_METHOD SetGraphicsRoot32BitConstants, :ptr ID3D12GraphicsCommandList7, :UINT, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootConstantBufferView)
          STD_METHOD SetComputeRootConstantBufferView, :ptr ID3D12GraphicsCommandList7, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootConstantBufferView)
          STD_METHOD SetGraphicsRootConstantBufferView, :ptr ID3D12GraphicsCommandList7, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootShaderResourceView)
          STD_METHOD SetComputeRootShaderResourceView, :ptr ID3D12GraphicsCommandList7, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootShaderResourceView)
          STD_METHOD SetGraphicsRootShaderResourceView, :ptr ID3D12GraphicsCommandList7, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetComputeRootUnorderedAccessView)
          STD_METHOD SetComputeRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList7, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetGraphicsRootUnorderedAccessView)
          STD_METHOD SetGraphicsRootUnorderedAccessView, :ptr ID3D12GraphicsCommandList7, :UINT, :D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetIndexBuffer)
          STD_METHOD IASetIndexBuffer, :ptr ID3D12GraphicsCommandList7, :ptr D3D12_INDEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, IASetVertexBuffers)
          STD_METHOD IASetVertexBuffers, :ptr ID3D12GraphicsCommandList7, :UINT, :UINT, :ptr D3D12_VERTEX_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SOSetTargets)
          STD_METHOD SOSetTargets, :ptr ID3D12GraphicsCommandList7, :UINT, :UINT, :ptr D3D12_STREAM_OUTPUT_BUFFER_VIEW
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, OMSetRenderTargets)
          STD_METHOD OMSetRenderTargets, :ptr ID3D12GraphicsCommandList7, :UINT, :ptr D3D12_CPU_DESCRIPTOR_HANDLE, :BOOL, :ptr D3D12_CPU_DESCRIPTOR_HANDLE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearDepthStencilView)
          STD_METHOD ClearDepthStencilView, :ptr ID3D12GraphicsCommandList7, :D3D12_CPU_DESCRIPTOR_HANDLE, :D3D12_CLEAR_FLAGS, :FLOAT, :UINT8, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearRenderTargetView)
          STD_METHOD ClearRenderTargetView, :ptr ID3D12GraphicsCommandList7, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewUint)
          STD_METHOD ClearUnorderedAccessViewUint, :ptr ID3D12GraphicsCommandList7, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr UINT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ClearUnorderedAccessViewFloat)
          STD_METHOD ClearUnorderedAccessViewFloat, :ptr ID3D12GraphicsCommandList7, :D3D12_GPU_DESCRIPTOR_HANDLE, :D3D12_CPU_DESCRIPTOR_HANDLE, :ptr ID3D12Resource, :ptr FLOAT, :UINT, :ptr D3D12_RECT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, DiscardResource)
          STD_METHOD DiscardResource, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12Resource, :ptr D3D12_DISCARD_REGION
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginQuery)
          STD_METHOD BeginQuery, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndQuery)
          STD_METHOD EndQuery, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ResolveQueryData)
          STD_METHOD ResolveQueryData, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12QueryHeap, :D3D12_QUERY_TYPE, :UINT, :UINT, :ptr ID3D12Resource, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetPredication)
          STD_METHOD SetPredication, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12Resource, :UINT64, :D3D12_PREDICATION_OP
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, SetMarker)
          STD_METHOD SetMarker, :ptr ID3D12GraphicsCommandList7, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, BeginEvent)
          STD_METHOD BeginEvent, :ptr ID3D12GraphicsCommandList7, :UINT, :ptr, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, EndEvent)
          STD_METHOD EndEvent, :ptr ID3D12GraphicsCommandList7
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList, ExecuteIndirect)
          STD_METHOD ExecuteIndirect, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12CommandSignature, :UINT, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, AtomicCopyBufferUINT)
          STD_METHOD AtomicCopyBufferUINT, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT, :ptr ptr ID3D12Resource, :ptr D3D12_SUBRESOURCE_RANGE_UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, AtomicCopyBufferUINT64)
          STD_METHOD AtomicCopyBufferUINT64, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12Resource, :UINT64, :ptr ID3D12Resource, :UINT64, :UINT, :ptr ptr ID3D12Resource, :ptr D3D12_SUBRESOURCE_RANGE_UINT64
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, OMSetDepthBounds)
          STD_METHOD OMSetDepthBounds, :ptr ID3D12GraphicsCommandList7, :FLOAT, :FLOAT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, SetSamplePositions)
          STD_METHOD SetSamplePositions, :ptr ID3D12GraphicsCommandList7, :UINT, :UINT, :ptr D3D12_SAMPLE_POSITION
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, ResolveSubresourceRegion)
          STD_METHOD ResolveSubresourceRegion, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12Resource, :UINT, :UINT, :UINT, :ptr ID3D12Resource, :UINT, :ptr D3D12_RECT, :DXGI_FORMAT, :D3D12_RESOLVE_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList1, SetViewInstanceMask)
          STD_METHOD SetViewInstanceMask, :ptr ID3D12GraphicsCommandList7, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList2, WriteBufferImmediate)
          STD_METHOD WriteBufferImmediate, :ptr ID3D12GraphicsCommandList7, :UINT, :ptr D3D12_WRITEBUFFERIMMEDIATE_PARAMETER, :ptr D3D12_WRITEBUFFERIMMEDIATE_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList3, SetProtectedResourceSession)
          STD_METHOD SetProtectedResourceSession, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12ProtectedResourceSession
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, BeginRenderPass)
          STD_METHOD BeginRenderPass, :ptr ID3D12GraphicsCommandList7, :UINT, :ptr D3D12_RENDER_PASS_RENDER_TARGET_DESC, :ptr D3D12_RENDER_PASS_DEPTH_STENCIL_DESC, :D3D12_RENDER_PASS_FLAGS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, EndRenderPass)
          STD_METHOD EndRenderPass, :ptr ID3D12GraphicsCommandList7
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, InitializeMetaCommand)
          STD_METHOD InitializeMetaCommand, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12MetaCommand, :ptr, :SIZE_T
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, ExecuteMetaCommand)
          STD_METHOD ExecuteMetaCommand, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12MetaCommand, :ptr, :SIZE_T
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, BuildRaytracingAccelerationStructure)
          STD_METHOD BuildRaytracingAccelerationStructure, :ptr ID3D12GraphicsCommandList7, :ptr D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC, :UINT, :ptr D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, EmitRaytracingAccelerationStructurePostbuildInfo)
          STD_METHOD EmitRaytracingAccelerationStructurePostbuildInfo, :ptr ID3D12GraphicsCommandList7, :ptr D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC, :UINT, :ptr D3D12_GPU_VIRTUAL_ADDRESS
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, CopyRaytracingAccelerationStructure)
          STD_METHOD CopyRaytracingAccelerationStructure, :ptr ID3D12GraphicsCommandList7, :D3D12_GPU_VIRTUAL_ADDRESS, :D3D12_GPU_VIRTUAL_ADDRESS, :D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, SetPipelineState1)
          STD_METHOD SetPipelineState1, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12StateObject
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList4, DispatchRays)
          STD_METHOD DispatchRays, :ptr ID3D12GraphicsCommandList7, :ptr D3D12_DISPATCH_RAYS_DESC
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList5, RSSetShadingRate)
          STD_METHOD RSSetShadingRate, :ptr ID3D12GraphicsCommandList7, :D3D12_SHADING_RATE, :ptr D3D12_SHADING_RATE_COMBINER
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList5, RSSetShadingRateImage)
          STD_METHOD RSSetShadingRateImage, :ptr ID3D12GraphicsCommandList7, :ptr ID3D12Resource
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList6, DispatchMesh)
          STD_METHOD DispatchMesh, :ptr ID3D12GraphicsCommandList7, :UINT, :UINT, :UINT
          DECLSPEC_XFGVIRT(ID3D12GraphicsCommandList7, Barrier)
          STD_METHOD Barrier, :ptr ID3D12GraphicsCommandList7, :UINT32, :ptr D3D12_BARRIER_GROUP
          ??Interface equ <>
          END_INTERFACE
        ID3D12GraphicsCommandList7Vtbl ends
        ID3D12GraphicsCommandList7 struct
          lpVtbl POINTER ?
        ID3D12GraphicsCommandList7 ends
        ifdef COBJMACROS
          ;[...]
        endif
      endif
    endif
  endif
  DEFINE_GUID IID_ID3D12Object, 0c4fec28fh, 7966h, 4e95h, 9fh, 94h, 0f4h, 31h, 0cbh, 56h, 0c3h, 0b8h
  DEFINE_GUID IID_ID3D12DeviceChild, 905db94bh, 0a00ch, 4140h, 9dh, 0f5h, 2bh, 64h, 0cah, 9eh, 0a3h, 57h
  DEFINE_GUID IID_ID3D12RootSignature, 0c54a6b66h, 72dfh, 4ee8h, 8bh, 0e5h, 0a9h, 46h, 0a1h, 42h, 92h, 14h
  DEFINE_GUID IID_ID3D12RootSignatureDeserializer, 34AB647Bh, 3CC8h, 46ACh, 84h, 1Bh, 0C0h, 96h, 56h, 45h, 0C0h, 46h
  DEFINE_GUID IID_ID3D12VersionedRootSignatureDeserializer, 7F91CE67h, 090Ch, 4BB7h, 0B7h, 8Eh, 0EDh, 8Fh, 0F2h, 0E3h, 1Dh, 0A0h
  DEFINE_GUID IID_ID3D12Pageable, 63ee58fbh, 1268h, 4835h, 86h, 0dah, 0f0h, 08h, 0ceh, 62h, 0f0h, 0d6h
  DEFINE_GUID IID_ID3D12Heap, 6b3b2502h, 6e51h, 45b3h, 90h, 0eeh, 98h, 84h, 26h, 5eh, 8dh, 0f3h
  DEFINE_GUID IID_ID3D12Resource, 696442beh, 0a72eh, 4059h, 0bch, 79h, 5bh, 5ch, 98h, 04h, 0fh, 0adh
  DEFINE_GUID IID_ID3D12CommandAllocator, 6102dee4h, 0af59h, 4b09h, 0b9h, 99h, 0b4h, 4dh, 73h, 0f0h, 9bh, 24h
  DEFINE_GUID IID_ID3D12Fence, 0a753dcfh, 0c4d8h, 4b91h, 0adh, 0f6h, 0beh, 5ah, 60h, 0d9h, 5ah, 76h
  DEFINE_GUID IID_ID3D12Fence1, 433685feh, 0e22bh, 4ca0h, 0a8h, 0dbh, 0b5h, 0b4h, 0f4h, 0ddh, 0eh, 4ah
  DEFINE_GUID IID_ID3D12PipelineState, 765a30f3h, 0f624h, 4c6fh, 0a8h, 28h, 0ach, 0e9h, 48h, 62h, 24h, 45h
  DEFINE_GUID IID_ID3D12DescriptorHeap, 8efb471dh, 616ch, 4f49h, 90h, 0f7h, 12h, 7bh, 0b7h, 63h, 0fah, 51h
  DEFINE_GUID IID_ID3D12QueryHeap, 0d9658aeh, 0ed45h, 469eh, 0a6h, 1dh, 97h, 0eh, 0c5h, 83h, 0cah, 0b4h
  DEFINE_GUID IID_ID3D12CommandSignature, 0c36a797ch, 0ec80h, 4f0ah, 89h, 85h, 0a7h, 0b2h, 47h, 50h, 82h, 0d1h
  DEFINE_GUID IID_ID3D12CommandList, 7116d91ch, 0e7e4h, 47ceh, 0b8h, 0c6h, 0ech, 81h, 68h, 0f4h, 37h, 0e5h
  DEFINE_GUID IID_ID3D12GraphicsCommandList, 5b160d0fh, 0ac1bh, 4185h, 8bh, 0a8h, 0b3h, 0aeh, 42h, 0a5h, 0a4h, 55h
  DEFINE_GUID IID_ID3D12GraphicsCommandList1, 553103fbh, 1fe7h, 4557h, 0bbh, 38h, 94h, 6dh, 7dh, 0eh, 7ch, 0a7h
  DEFINE_GUID IID_ID3D12GraphicsCommandList2, 38C3E585h, 0FF17h, 412Ch, 91h, 50h, 4Fh, 0C6h, 0F9h, 0D7h, 2Ah, 28h
  DEFINE_GUID IID_ID3D12CommandQueue, 0ec870a6h, 5d7eh, 4c22h, 8ch, 0fch, 5bh, 0aah, 0e0h, 76h, 16h, 0edh
  DEFINE_GUID IID_ID3D12Device, 189819f1h, 1db6h, 4b57h, 0beh, 54h, 18h, 21h, 33h, 9bh, 85h, 0f7h
  DEFINE_GUID IID_ID3D12PipelineLibrary, 0c64226a8h, 9201h, 46afh, 0b4h, 0cch, 53h, 0fbh, 9fh, 0f7h, 41h, 4fh
  DEFINE_GUID IID_ID3D12PipelineLibrary1, 80eabf42h, 2568h, 4e5eh, 0bdh, 82h, 0c3h, 7fh, 86h, 96h, 1dh, 0c3h
  DEFINE_GUID IID_ID3D12Device1, 77acce80h, 638eh, 4e65h, 88h, 95h, 0c1h, 0f2h, 33h, 86h, 86h, 3eh
  DEFINE_GUID IID_ID3D12Device2, 30baa41eh, 0b15bh, 475ch, 0a0h, 0bbh, 1ah, 0f5h, 0c5h, 0b6h, 43h, 28h
  DEFINE_GUID IID_ID3D12Device3, 81dadc15h, 2badh, 4392h, 93h, 0c5h, 10h, 13h, 45h, 0c4h, 0aah, 98h
  DEFINE_GUID IID_ID3D12ProtectedSession, 0A1533D18h, 0AC1h, 4084h, 85h, 0B9h, 89h, 0A9h, 61h, 16h, 80h, 6Bh
  DEFINE_GUID IID_ID3D12ProtectedResourceSession, 6CD696F4h, 0F289h, 40CCh, 80h, 91h, 5Ah, 6Ch, 0Ah, 09h, 9Ch, 3Dh
  DEFINE_GUID IID_ID3D12Device4, 0e865df17h, 0a9eeh, 46f9h, 0a4h, 63h, 30h, 98h, 31h, 5ah, 0a2h, 0e5h
  DEFINE_GUID IID_ID3D12LifetimeOwner, 0e667af9fh, 0cd56h, 4f46h, 83h, 0ceh, 03h, 2eh, 59h, 5dh, 70h, 0a8h
  DEFINE_GUID IID_ID3D12SwapChainAssistant, 0f1df64b6h, 57fdh, 49cdh, 88h, 07h, 0c0h, 0ebh, 88h, 0b4h, 5ch, 8fh
  DEFINE_GUID IID_ID3D12LifetimeTracker, 3fd03d36h, 4eb1h, 424ah, 0a5h, 82h, 49h, 4eh, 0cbh, 8bh, 0a8h, 13h
  DEFINE_GUID IID_ID3D12StateObject, 47016943h, 0fca8h, 4594h, 93h, 0eah, 0afh, 25h, 8bh, 55h, 34h, 6dh
  DEFINE_GUID IID_ID3D12StateObjectProperties, 0de5fa827h, 9bf9h, 4f26h, 89h, 0ffh, 0d7h, 0f5h, 6fh, 0deh, 38h, 60h
  DEFINE_GUID IID_ID3D12Device5, 8b4f173bh, 2feah, 4b80h, 8fh, 58h, 43h, 07h, 19h, 1ah, 0b9h, 5dh
  DEFINE_GUID IID_ID3D12DeviceRemovedExtendedDataSettings, 82BC481Ch, 6B9Bh, 4030h, 0AEh, 0DBh, 7Eh, 0E3h, 0D1h, 0DFh, 1Eh, 63h
  DEFINE_GUID IID_ID3D12DeviceRemovedExtendedDataSettings1, 0DBD5AE51h, 3317h, 4F0Ah, 0ADh, 0F9h, 1Dh, 7Ch, 0EDh, 0CAh, 0AEh, 0Bh
  DEFINE_GUID IID_ID3D12DeviceRemovedExtendedData, 98931D33h, 5AE8h, 4791h, 0AAh, 3Ch, 1Ah, 73h, 0A2h, 93h, 4Eh, 71h
  DEFINE_GUID IID_ID3D12DeviceRemovedExtendedData1, 9727A022h, 0CF1Dh, 4DDAh, 9Eh, 0BAh, 0EFh, 0FAh, 65h, 3Fh, 0C5h, 06h
  DEFINE_GUID IID_ID3D12DeviceRemovedExtendedData2, 67FC5816h, 0E4CAh, 4915h, 0BFh, 18h, 42h, 54h, 12h, 72h, 0DAh, 54h
  DEFINE_GUID IID_ID3D12Device6, 0c70b221bh, 40e4h, 4a17h, 89h, 0afh, 02h, 5ah, 07h, 27h, 0a6h, 0dch
  DEFINE_GUID IID_ID3D12ProtectedResourceSession1, 0D6F12DD6h, 76FBh, 406Eh, 89h, 61h, 42h, 96h, 0EEh, 0FCh, 04h, 09h
  DEFINE_GUID IID_ID3D12Device7, 5c014b53h, 68a1h, 4b9bh, 8bh, 0d1h, 0ddh, 60h, 46h, 0b9h, 35h, 8bh
  DEFINE_GUID IID_ID3D12Device8, 9218E6BBh, 0F944h, 4F7Eh, 0A7h, 5Ch, 0B1h, 0B2h, 0C7h, 0B7h, 01h, 0F3h
  DEFINE_GUID IID_ID3D12Resource1, 9D5E227Ah, 4430h, 4161h, 88h, 0B3h, 3Eh, 0CAh, 6Bh, 0B1h, 6Eh, 19h
  DEFINE_GUID IID_ID3D12Resource2, 0BE36EC3Bh, 0EA85h, 4AEBh, 0A4h, 5Ah, 0E9h, 0D7h, 64h, 04h, 0A4h, 95h
  DEFINE_GUID IID_ID3D12Heap1, 572F7389h, 2168h, 49E3h, 96h, 93h, 0D6h, 0DFh, 58h, 71h, 0BFh, 6Dh
  DEFINE_GUID IID_ID3D12GraphicsCommandList3, 6FDA83A7h, 0B84Ch, 4E38h, 9Ah, 0C8h, 0C7h, 0BDh, 22h, 01h, 6Bh, 3Dh
  DEFINE_GUID IID_ID3D12MetaCommand, 0DBB84C27h, 36CEh, 4FC9h, 0B8h, 01h, 0F0h, 48h, 0C4h, 6Ah, 0C5h, 70h
  DEFINE_GUID IID_ID3D12GraphicsCommandList4, 8754318eh, 0d3a9h, 4541h, 98h, 0cfh, 64h, 5bh, 50h, 0dch, 48h, 74h
  DEFINE_GUID IID_ID3D12ShaderCacheSession, 28e2495dh, 0f64h, 4ae4h, 0a6h, 0ech, 12h, 92h, 55h, 0dch, 49h, 0a8h
  DEFINE_GUID IID_ID3D12Device9, 4c80e962h, 0f032h, 4f60h, 0bch, 9eh, 0ebh, 0c2h, 0cfh, 0a1h, 0d8h, 3ch
  DEFINE_GUID IID_ID3D12Device10, 517f8718h, 0aa66h, 49f9h, 0b0h, 2bh, 0a7h, 0abh, 89h, 0c0h, 60h, 31h
  DEFINE_GUID IID_ID3D12VirtualizationGuestDevice, 0bc66d368h, 7373h, 4943h, 87h, 57h, 0fch, 87h, 0dch, 79h, 0e4h, 76h
  DEFINE_GUID IID_ID3D12Tools, 7071e1f0h, 0e84bh, 4b33h, 97h, 4fh, 12h, 0fah, 49h, 0deh, 65h, 0c5h
  DEFINE_GUID IID_ID3D12SDKConfiguration, 0e9eb5314h, 33aah, 42b2h, 0a7h, 18h, 0d7h, 7fh, 58h, 0b1h, 0f1h, 0c7h
  DEFINE_GUID IID_ID3D12SDKConfiguration1, 8aaf9303h, 0ad25h, 48b9h, 9ah, 57h, 0d9h, 0c3h, 7eh, 00h, 9dh, 9fh
  DEFINE_GUID IID_ID3D12DeviceFactory, 0cd310fach, 0c78ch, 413dh, 0a7h, 99h, 3dh, 0a4h, 6ah, 95h, 2ch, 0b7h
  DEFINE_GUID IID_ID3D12DeviceConfiguration, 78dbf87bh, 0f766h, 422bh, 0a6h, 1ch, 0c8h, 0c4h, 46h, 0bdh, 0b9h, 0adh
  DEFINE_GUID IID_ID3D12GraphicsCommandList5, 55050859h, 4024h, 474ch, 87h, 0f5h, 64h, 72h, 0eah, 0eeh, 44h, 0eah
  DEFINE_GUID IID_ID3D12GraphicsCommandList6, 0c3827890h, 0e548h, 4cfah, 96h, 0cfh, 56h, 89h, 0a9h, 37h, 0fh, 80h
  DEFINE_GUID IID_ID3D12GraphicsCommandList7, 0dd171223h, 8b61h, 4769h, 90h, 0e3h, 16h, 0ch, 0cdh, 0e4h, 0e2h, 0c1h
  externdef __MIDL_itf_d3d12_0000_0062_v0_0_c_ifspec:RPC_IF_HANDLE
  externdef __MIDL_itf_d3d12_0000_0062_v0_0_s_ifspec:RPC_IF_HANDLE
  ifdef __cplusplus
    ;[...]
  endif
endif
